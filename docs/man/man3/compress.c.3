.TH "src/compress.c" 3 "Sun Mar 19 2023" "Version 1.0.0-alpha" "Libembroidery" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/compress.c
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include 'embroidery_internal\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBhus_compress\fP (char *data, int length, char *output, int *output_length)"
.br
.ti -1c
.RI "void \fBhuffman_build_table\fP (\fBhuffman\fP *h)"
.br
.ti -1c
.RI "int * \fBhuffman_lookup\fP (\fBhuffman\fP h, int byte_lookup)"
.br
.ti -1c
.RI "void \fBcompress_init\fP ()"
.br
.ti -1c
.RI "int \fBcompress_get_bits\fP (\fBcompress\fP *c, int length)"
.br
.ti -1c
.RI "int \fBcompress_pop\fP (\fBcompress\fP *c, int bit_count)"
.br
.ti -1c
.RI "int \fBcompress_peek\fP (\fBcompress\fP *c, int bit_count)"
.br
.ti -1c
.RI "int \fBcompress_read_variable_length\fP (\fBcompress\fP *c)"
.br
.ti -1c
.RI "void \fBcompress_load_character_length_huffman\fP (\fBcompress\fP *c)"
.br
.ti -1c
.RI "void \fBcompress_load_character_huffman\fP (\fBcompress\fP *c)"
.br
.ti -1c
.RI "void \fBcompress_load_distance_huffman\fP (\fBcompress\fP *c)"
.br
.ti -1c
.RI "void \fBcompress_load_block\fP (\fBcompress\fP *c)"
.br
.ti -1c
.RI "int \fBcompress_get_token\fP (\fBcompress\fP *c)"
.br
.ti -1c
.RI "int \fBcompress_get_position\fP (\fBcompress\fP *c)"
.br
.ti -1c
.RI "int \fBhus_decompress\fP (char *data, int length, char *output, int *output_length)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "int \fBhuffman_lookup_data\fP [2]"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "int compress_get_bits (\fBcompress\fP * c, int length)"

.PP
Definition at line \fB106\fP of file \fBcompress\&.c\fP\&.
.SS "int compress_get_position (\fBcompress\fP * c)"

.PP
Definition at line \fB251\fP of file \fBcompress\&.c\fP\&.
.SS "int compress_get_token (\fBcompress\fP * c)"

.PP
Definition at line \fB239\fP of file \fBcompress\&.c\fP\&.
.SS "void compress_init ()"

.PP
Definition at line \fB101\fP of file \fBcompress\&.c\fP\&.
.SS "void compress_load_block (\fBcompress\fP * c)"

.PP
Definition at line \fB231\fP of file \fBcompress\&.c\fP\&.
.SS "void compress_load_character_huffman (\fBcompress\fP * c)"

.PP
Definition at line \fB184\fP of file \fBcompress\&.c\fP\&.
.SS "void compress_load_character_length_huffman (\fBcompress\fP * c)"

.PP
Definition at line \fB162\fP of file \fBcompress\&.c\fP\&.
.SS "void compress_load_distance_huffman (\fBcompress\fP * c)"

.PP
Definition at line \fB215\fP of file \fBcompress\&.c\fP\&.
.SS "int compress_peek (\fBcompress\fP * c, int bit_count)"

.PP
Definition at line \fB138\fP of file \fBcompress\&.c\fP\&.
.SS "int compress_pop (\fBcompress\fP * c, int bit_count)"

.PP
Definition at line \fB131\fP of file \fBcompress\&.c\fP\&.
.SS "int compress_read_variable_length (\fBcompress\fP * c)"

.PP
Definition at line \fB143\fP of file \fBcompress\&.c\fP\&.
.SS "void huffman_build_table (\fBhuffman\fP * h)"

.PP
Definition at line \fB60\fP of file \fBcompress\&.c\fP\&.
.SS "int * huffman_lookup (\fBhuffman\fP h, int byte_lookup)"

.PP
Definition at line \fB87\fP of file \fBcompress\&.c\fP\&.
.SS "int hus_compress (char * data, int length, char * output, int * output_length)"

.PP
Definition at line \fB44\fP of file \fBcompress\&.c\fP\&.
.SS "int hus_decompress (char * data, int length, char * output, int * output_length)"

.PP
Definition at line \fB264\fP of file \fBcompress\&.c\fP\&.
.SH "Variable Documentation"
.PP 
.SS "int huffman_lookup_data[2]"

.PP
Definition at line \fB85\fP of file \fBcompress\&.c\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Libembroidery from the source code\&.
