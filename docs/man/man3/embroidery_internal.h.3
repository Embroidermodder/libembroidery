.TH "src/embroidery_internal.h" 3 "Sun Mar 19 2023" "Version 1.0.0-alpha" "Libembroidery" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/embroidery_internal.h
.SH SYNOPSIS
.br
.PP
\fC#include 'embroidery\&.h'\fP
.br
\fC#include <stdio\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fB_bcf_file_difat\fP"
.br
.ti -1c
.RI "struct \fB_bcf_file_fat\fP"
.br
.ti -1c
.RI "struct \fB_bcf_directory_entry\fP"
.br
.ti -1c
.RI "struct \fB_bcf_directory\fP"
.br
.ti -1c
.RI "struct \fB_bcf_file_header\fP"
.br
.ti -1c
.RI "struct \fB_bcf_file\fP"
.br
.ti -1c
.RI "struct \fB_vp3Hoop\fP"
.br
.ti -1c
.RI "struct \fBThredHeader_\fP"
.br
.ti -1c
.RI "struct \fBThredExtension_\fP"
.br
.ti -1c
.RI "struct \fBSubDescriptor_\fP"
.br
.ti -1c
.RI "struct \fBStxThread_\fP"
.br
.ti -1c
.RI "struct \fBVipHeader_\fP"
.br
.ti -1c
.RI "struct \fBSvgAttribute_\fP"
.br
.ti -1c
.RI "struct \fBHuffman\fP"
.br
.ti -1c
.RI "struct \fBCompress\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBCompoundFileSector_MaxRegSector\fP   0xFFFFFFFA"
.br
.ti -1c
.RI "#define \fBCompoundFileSector_DIFAT_Sector\fP   0xFFFFFFFC"
.br
.ti -1c
.RI "#define \fBCompoundFileSector_FAT_Sector\fP   0xFFFFFFFD"
.br
.ti -1c
.RI "#define \fBCompoundFileSector_EndOfChain\fP   0xFFFFFFFE"
.br
.ti -1c
.RI "#define \fBCompoundFileSector_FreeSector\fP   0xFFFFFFFF"
.br
.ti -1c
.RI "#define \fBObjectTypeUnknown\fP   0x00"
.br
.ti -1c
.RI "#define \fBObjectTypeStorage\fP   0x01"
.br
.ti -1c
.RI "#define \fBObjectTypeStream\fP   0x02"
.br
.ti -1c
.RI "#define \fBObjectTypeRootEntry\fP   0x05"
.br
.ti -1c
.RI "#define \fBCompoundFileStreamId_MaxRegularStreamId\fP   0xFFFFFFFA"
.br
.ti -1c
.RI "#define \fBCompoundFileStreamId_NoStream\fP   0xFFFFFFFF"
.br
.ti -1c
.RI "#define \fBELEMENT_XML\fP   0"
.br
.ti -1c
.RI "#define \fBELEMENT_A\fP   1"
.br
.ti -1c
.RI "#define \fBELEMENT_ANIMATE\fP   2"
.br
.ti -1c
.RI "#define \fBELEMENT_ANIMATECOLOR\fP   3"
.br
.ti -1c
.RI "#define \fBELEMENT_ANIMATEMOTION\fP   4"
.br
.ti -1c
.RI "#define \fBELEMENT_ANIMATETRANSFORM\fP   5"
.br
.ti -1c
.RI "#define \fBELEMENT_ANIMATION\fP   6"
.br
.ti -1c
.RI "#define \fBELEMENT_AUDIO\fP   7"
.br
.ti -1c
.RI "#define \fBELEMENT_CIRCLE\fP   8"
.br
.ti -1c
.RI "#define \fBELEMENT_DEFS\fP   9"
.br
.ti -1c
.RI "#define \fBELEMENT_DESC\fP   10"
.br
.ti -1c
.RI "#define \fBELEMENT_DISCARD\fP   11"
.br
.ti -1c
.RI "#define \fBELEMENT_ELLIPSE\fP   12"
.br
.ti -1c
.RI "#define \fBELEMENT_FONT\fP   13"
.br
.ti -1c
.RI "#define \fBELEMENT_FONT_FACE\fP   14"
.br
.ti -1c
.RI "#define \fBELEMENT_FONT_FACE_SRC\fP   15"
.br
.ti -1c
.RI "#define \fBELEMENT_FONT_FACE_URI\fP   16"
.br
.ti -1c
.RI "#define \fBELEMENT_FOREIGN_OBJECT\fP   17"
.br
.ti -1c
.RI "#define \fBELEMENT_G\fP   18"
.br
.ti -1c
.RI "#define \fBELEMENT_GLYPH\fP   19"
.br
.ti -1c
.RI "#define \fBELEMENT_HANDLER\fP   20"
.br
.ti -1c
.RI "#define \fBELEMENT_HKERN\fP   21"
.br
.ti -1c
.RI "#define \fBELEMENT_IMAGE\fP   22"
.br
.ti -1c
.RI "#define \fBELEMENT_LINE\fP   23"
.br
.ti -1c
.RI "#define \fBELEMENT_LINEAR_GRADIENT\fP   24"
.br
.ti -1c
.RI "#define \fBELEMENT_LISTENER\fP   25"
.br
.ti -1c
.RI "#define \fBELEMENT_METADATA\fP   26"
.br
.ti -1c
.RI "#define \fBELEMENT_MISSING_GLYPH\fP   27"
.br
.ti -1c
.RI "#define \fBELEMENT_MPATH\fP   28"
.br
.ti -1c
.RI "#define \fBELEMENT_PATH\fP   29"
.br
.ti -1c
.RI "#define \fBELEMENT_POLYGON\fP   30"
.br
.ti -1c
.RI "#define \fBELEMENT_POLYLINE\fP   31"
.br
.ti -1c
.RI "#define \fBELEMENT_PREFETCH\fP   32"
.br
.ti -1c
.RI "#define \fBELEMENT_RADIAL_GRADIENT\fP   33"
.br
.ti -1c
.RI "#define \fBELEMENT_RECT\fP   34"
.br
.ti -1c
.RI "#define \fBELEMENT_SCRIPT\fP   35"
.br
.ti -1c
.RI "#define \fBELEMENT_SET\fP   36"
.br
.ti -1c
.RI "#define \fBELEMENT_SOLID_COLOR\fP   37"
.br
.ti -1c
.RI "#define \fBELEMENT_STOP\fP   38"
.br
.ti -1c
.RI "#define \fBELEMENT_SVG\fP   39"
.br
.ti -1c
.RI "#define \fBELEMENT_SWITCH\fP   40"
.br
.ti -1c
.RI "#define \fBELEMENT_TBREAK\fP   41"
.br
.ti -1c
.RI "#define \fBELEMENT_TEXT\fP   42"
.br
.ti -1c
.RI "#define \fBELEMENT_TEXT_AREA\fP   43"
.br
.ti -1c
.RI "#define \fBELEMENT_TITLE\fP   44"
.br
.ti -1c
.RI "#define \fBELEMENT_TSPAN\fP   45"
.br
.ti -1c
.RI "#define \fBELEMENT_USE\fP   46"
.br
.ti -1c
.RI "#define \fBELEMENT_VIDEO\fP   47"
.br
.ti -1c
.RI "#define \fBRED_TERM_COLOR\fP   '\\x1B[0;31m'"
.br
.ti -1c
.RI "#define \fBGREEN_TERM_COLOR\fP   '\\x1B[0;32m'"
.br
.ti -1c
.RI "#define \fBYELLOW_TERM_COLOR\fP   '\\x1B[1;33m'"
.br
.ti -1c
.RI "#define \fBRESET_TERM_COLOR\fP   '\\033[0m'"
.br
.ti -1c
.RI "#define \fBHOOP_126X110\fP   0"
.br
.ti -1c
.RI "#define \fBHOOP_110X110\fP   1"
.br
.ti -1c
.RI "#define \fBHOOP_50X50\fP   2"
.br
.ti -1c
.RI "#define \fBHOOP_140X200\fP   3"
.br
.ti -1c
.RI "#define \fBHOOP_230X200\fP   4"
.br
.ti -1c
.RI "#define \fBEMB_MIN\fP(A,  B)   (((A) < (B)) ? (A) : (B))"
.br
.ti -1c
.RI "#define \fBEMB_MAX\fP(A,  B)   (((A) > (B)) ? (A) : (B))"
.br
.ti -1c
.RI "#define \fBEMB_BIG_ENDIAN\fP   0"
.br
.ti -1c
.RI "#define \fBEMB_LITTLE_ENDIAN\fP   1"
.br
.ti -1c
.RI "#define \fBENDIAN_HOST\fP   \fBEMB_LITTLE_ENDIAN\fP"
.br
.ti -1c
.RI "#define \fBEMB_INT16_BIG\fP   2"
.br
.ti -1c
.RI "#define \fBEMB_INT16_LITTLE\fP   3"
.br
.ti -1c
.RI "#define \fBEMB_INT32_BIG\fP   4"
.br
.ti -1c
.RI "#define \fBEMB_INT32_LITTLE\fP   5"
.br
.ti -1c
.RI "#define \fBPES0001\fP   0"
.br
.ti -1c
.RI "#define \fBPES0020\fP   1"
.br
.ti -1c
.RI "#define \fBPES0022\fP   2"
.br
.ti -1c
.RI "#define \fBPES0030\fP   3"
.br
.ti -1c
.RI "#define \fBPES0040\fP   4"
.br
.ti -1c
.RI "#define \fBPES0050\fP   5"
.br
.ti -1c
.RI "#define \fBPES0055\fP   6"
.br
.ti -1c
.RI "#define \fBPES0056\fP   7"
.br
.ti -1c
.RI "#define \fBPES0060\fP   8"
.br
.ti -1c
.RI "#define \fBPES0070\fP   9"
.br
.ti -1c
.RI "#define \fBPES0080\fP   10"
.br
.ti -1c
.RI "#define \fBPES0090\fP   11"
.br
.ti -1c
.RI "#define \fBPES0100\fP   12"
.br
.ti -1c
.RI "#define \fBN_PES_VERSIONS\fP   13"
.br
.ti -1c
.RI "#define \fBDXF_VERSION_R10\fP   'AC1006'"
.br
.ti -1c
.RI "#define \fBDXF_VERSION_R11\fP   'AC1009'"
.br
.ti -1c
.RI "#define \fBDXF_VERSION_R12\fP   'AC1009'"
.br
.ti -1c
.RI "#define \fBDXF_VERSION_R13\fP   'AC1012'"
.br
.ti -1c
.RI "#define \fBDXF_VERSION_R14\fP   'AC1014'"
.br
.ti -1c
.RI "#define \fBDXF_VERSION_R15\fP   'AC1015'"
.br
.ti -1c
.RI "#define \fBDXF_VERSION_R18\fP   'AC1018'"
.br
.ti -1c
.RI "#define \fBDXF_VERSION_R21\fP   'AC1021'"
.br
.ti -1c
.RI "#define \fBDXF_VERSION_R24\fP   'AC1024'"
.br
.ti -1c
.RI "#define \fBDXF_VERSION_R27\fP   'AC1027'"
.br
.ti -1c
.RI "#define \fBDXF_VERSION_2000\fP   'AC1015'"
.br
.ti -1c
.RI "#define \fBDXF_VERSION_2002\fP   'AC1015'"
.br
.ti -1c
.RI "#define \fBDXF_VERSION_2004\fP   'AC1018'"
.br
.ti -1c
.RI "#define \fBDXF_VERSION_2006\fP   'AC1018'"
.br
.ti -1c
.RI "#define \fBDXF_VERSION_2007\fP   'AC1021'"
.br
.ti -1c
.RI "#define \fBDXF_VERSION_2009\fP   'AC1021'"
.br
.ti -1c
.RI "#define \fBDXF_VERSION_2010\fP   'AC1024'"
.br
.ti -1c
.RI "#define \fBDXF_VERSION_2013\fP   'AC1027'"
.br
.ti -1c
.RI "#define \fBSVG_CREATOR_NULL\fP   0"
.br
.ti -1c
.RI "#define \fBSVG_CREATOR_EMBROIDERMODDER\fP   1"
.br
.ti -1c
.RI "#define \fBSVG_CREATOR_ILLUSTRATOR\fP   2"
.br
.ti -1c
.RI "#define \fBSVG_CREATOR_INKSCAPE\fP   3"
.br
.ti -1c
.RI "#define \fBSVG_EXPECT_NULL\fP   0"
.br
.ti -1c
.RI "#define \fBSVG_EXPECT_ELEMENT\fP   1"
.br
.ti -1c
.RI "#define \fBSVG_EXPECT_ATTRIBUTE\fP   2"
.br
.ti -1c
.RI "#define \fBSVG_EXPECT_VALUE\fP   3"
.br
.ti -1c
.RI "#define \fBSVG_NULL\fP   0"
.br
.ti -1c
.RI "#define \fBSVG_ELEMENT\fP   1"
.br
.ti -1c
.RI "#define \fBSVG_PROPERTY\fP   2"
.br
.ti -1c
.RI "#define \fBSVG_MEDIA_PROPERTY\fP   3"
.br
.ti -1c
.RI "#define \fBSVG_ATTRIBUTE\fP   4"
.br
.ti -1c
.RI "#define \fBSVG_CATCH_ALL\fP   5"
.br
.ti -1c
.RI "#define \fBLINETO\fP   0"
.br
.ti -1c
.RI "#define \fBMOVETO\fP   1"
.br
.ti -1c
.RI "#define \fBBULGETOCONTROL\fP   2"
.br
.ti -1c
.RI "#define \fBBULGETOEND\fP   4"
.br
.ti -1c
.RI "#define \fBELLIPSETORAD\fP   8"
.br
.ti -1c
.RI "#define \fBELLIPSETOEND\fP   16"
.br
.ti -1c
.RI "#define \fBCUBICTOCONTROL1\fP   32"
.br
.ti -1c
.RI "#define \fBCUBICTOCONTROL2\fP   64"
.br
.ti -1c
.RI "#define \fBCUBICTOEND\fP   128"
.br
.ti -1c
.RI "#define \fBQUADTOCONTROL\fP   256"
.br
.ti -1c
.RI "#define \fBQUADTOEND\fP   512"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef struct \fB_bcf_file_difat\fP \fBbcf_file_difat\fP"
.br
.ti -1c
.RI "typedef struct \fB_bcf_file_fat\fP \fBbcf_file_fat\fP"
.br
.ti -1c
.RI "typedef struct \fB_bcf_directory_entry\fP \fBbcf_directory_entry\fP"
.br
.ti -1c
.RI "typedef struct \fB_bcf_directory\fP \fBbcf_directory\fP"
.br
.ti -1c
.RI "typedef struct \fB_bcf_file_header\fP \fBbcf_file_header\fP"
.br
.ti -1c
.RI "typedef struct \fB_bcf_file\fP \fBbcf_file\fP"
.br
.ti -1c
.RI "typedef struct \fB_vp3Hoop\fP \fBvp3Hoop\fP"
.br
.ti -1c
.RI "typedef struct \fBThredHeader_\fP \fBThredHeader\fP"
.br
.ti -1c
.RI "typedef struct \fBThredExtension_\fP \fBThredExtension\fP"
.br
.ti -1c
.RI "typedef struct \fBSubDescriptor_\fP \fBSubDescriptor\fP"
.br
.ti -1c
.RI "typedef struct \fBStxThread_\fP \fBStxThread\fP"
.br
.ti -1c
.RI "typedef struct \fBVipHeader_\fP \fBVipHeader\fP"
.br
.ti -1c
.RI "typedef struct \fBSvgAttribute_\fP \fBSvgAttribute\fP"
.br
.ti -1c
.RI "typedef struct \fBHuffman\fP \fBhuffman\fP"
.br
.ti -1c
.RI "typedef struct \fBCompress\fP \fBcompress\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBCSV_EXPECT\fP { \fBCSV_EXPECT_NULL\fP, \fBCSV_EXPECT_QUOTE1\fP, \fBCSV_EXPECT_QUOTE2\fP, \fBCSV_EXPECT_COMMA\fP }"
.br
.ti -1c
.RI "enum \fBCSV_MODE\fP { \fBCSV_MODE_NULL\fP, \fBCSV_MODE_COMMENT\fP, \fBCSV_MODE_VARIABLE\fP, \fBCSV_MODE_THREAD\fP, \fBCSV_MODE_STITCH\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBhuffman_build_table\fP (\fBhuffman\fP *h)"
.br
.ti -1c
.RI "int * \fBhuffman_table_lookup\fP (\fBhuffman\fP *h, int byte_lookup, int *lengths)"
.br
.ti -1c
.RI "int \fBcompress_get_bits\fP (\fBcompress\fP *c, int length)"
.br
.ti -1c
.RI "int \fBcompress_pop\fP (\fBcompress\fP *c, int bit_count)"
.br
.ti -1c
.RI "int \fBcompress_read_variable_length\fP (\fBcompress\fP *c)"
.br
.ti -1c
.RI "void \fBcompress_load_character_length_huffman\fP (\fBcompress\fP *c)"
.br
.ti -1c
.RI "void \fBcompress_load_character_huffman\fP (\fBcompress\fP *c)"
.br
.ti -1c
.RI "void \fBcompress_load_distance_huffman\fP (\fBcompress\fP *c)"
.br
.ti -1c
.RI "void \fBcompress_load_block\fP (\fBcompress\fP *c)"
.br
.ti -1c
.RI "int \fBcompress_get_token\fP (\fBcompress\fP *c)"
.br
.ti -1c
.RI "int \fBcompress_get_position\fP (\fBcompress\fP *c)"
.br
.ti -1c
.RI "void \fBreadPecStitches\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "void \fBwritePecStitches\fP (\fBEmbPattern\fP *pattern, FILE *file, const char *filename)"
.br
.ti -1c
.RI "int \fBdecodeNewStitch\fP (unsigned char value)"
.br
.ti -1c
.RI "void \fBpfaffEncode\fP (FILE *file, int x, int y, int flags)"
.br
.ti -1c
.RI "\fBEmbReal\fP \fBpfaffDecode\fP (unsigned char a1, unsigned char a2, unsigned char a3)"
.br
.ti -1c
.RI "unsigned char \fBmitEncodeStitch\fP (\fBEmbReal\fP value)"
.br
.ti -1c
.RI "int \fBmitDecodeStitch\fP (unsigned char value)"
.br
.ti -1c
.RI "int \fBencode_tajima_ternary\fP (unsigned char b[3], int x, int y)"
.br
.ti -1c
.RI "void \fBdecode_tajima_ternary\fP (unsigned char b[3], int *x, int *y)"
.br
.ti -1c
.RI "void \fBencode_t01_record\fP (unsigned char b[3], int x, int y, int flags)"
.br
.ti -1c
.RI "int \fBdecode_t01_record\fP (unsigned char b[3], int *x, int *y, int *flags)"
.br
.ti -1c
.RI "void \fBreadPESHeaderV5\fP (FILE *file, \fBEmbPattern\fP *pattern)"
.br
.ti -1c
.RI "void \fBreadPESHeaderV6\fP (FILE *file, \fBEmbPattern\fP *pattern)"
.br
.ti -1c
.RI "void \fBreadPESHeaderV7\fP (FILE *file, \fBEmbPattern\fP *pattern)"
.br
.ti -1c
.RI "void \fBreadPESHeaderV8\fP (FILE *file, \fBEmbPattern\fP *pattern)"
.br
.ti -1c
.RI "void \fBreadPESHeaderV9\fP (FILE *file, \fBEmbPattern\fP *pattern)"
.br
.ti -1c
.RI "void \fBreadPESHeaderV10\fP (FILE *file, \fBEmbPattern\fP *pattern)"
.br
.ti -1c
.RI "void \fBreadDescriptions\fP (FILE *file, \fBEmbPattern\fP *pattern)"
.br
.ti -1c
.RI "void \fBreadHoopName\fP (FILE *file, \fBEmbPattern\fP *pattern)"
.br
.ti -1c
.RI "void \fBreadImageString\fP (FILE *file, \fBEmbPattern\fP *pattern)"
.br
.ti -1c
.RI "void \fBreadProgrammableFills\fP (FILE *file, \fBEmbPattern\fP *pattern)"
.br
.ti -1c
.RI "void \fBreadMotifPatterns\fP (FILE *file, \fBEmbPattern\fP *pattern)"
.br
.ti -1c
.RI "void \fBreadFeatherPatterns\fP (FILE *file, \fBEmbPattern\fP *pattern)"
.br
.ti -1c
.RI "void \fBreadThreads\fP (FILE *file, \fBEmbPattern\fP *pattern)"
.br
.ti -1c
.RI "void \fBembInt_read\fP (FILE *f, char *label, void *b, int mode)"
.br
.ti -1c
.RI "void \fBembInt_write\fP (FILE *f, char *label, void *b, int mode)"
.br
.ti -1c
.RI "int \fBemb_readline\fP (FILE *file, char *line, int maxLength)"
.br
.ti -1c
.RI "int \fBbcfFile_read\fP (FILE *file, \fBbcf_file\fP *bcfFile)"
.br
.ti -1c
.RI "FILE * \fBGetFile\fP (\fBbcf_file\fP *bcfFile, FILE *file, char *fileToFind)"
.br
.ti -1c
.RI "void \fBbcf_file_free\fP (\fBbcf_file\fP *bcfFile)"
.br
.ti -1c
.RI "void \fBbinaryReadString\fP (FILE *file, char *buffer, int maxLength)"
.br
.ti -1c
.RI "void \fBbinaryReadUnicodeString\fP (FILE *file, char *buffer, const int stringLength)"
.br
.ti -1c
.RI "int \fBstringInArray\fP (const char *s, const char **array)"
.br
.ti -1c
.RI "void \fBfpad\fP (FILE *f, char c, int n)"
.br
.ti -1c
.RI "char * \fBcopy_trim\fP (char const *s)"
.br
.ti -1c
.RI "char * \fBemb_optOut\fP (\fBEmbReal\fP num, char *str)"
.br
.ti -1c
.RI "void \fBwrite_24bit\fP (FILE *file, int)"
.br
.ti -1c
.RI "int \fBcheck_header_present\fP (FILE *file, int minimum_header_length)"
.br
.ti -1c
.RI "unsigned short \fBfread_uint16\fP (FILE *file)"
.br
.ti -1c
.RI "short \fBfread_int16\fP (FILE *f)"
.br
.ti -1c
.RI "void \fBsafe_free\fP (void *data)"
.br
.ti -1c
.RI "void \fBbinaryWriteUInt\fP (FILE *f, unsigned int data)"
.br
.ti -1c
.RI "\fBbcf_file_difat\fP * \fBbcf_difat_create\fP (FILE *file, unsigned int fatSectors, const unsigned int \fBsectorSize\fP)"
.br
.ti -1c
.RI "unsigned int \fBreadFullSector\fP (FILE *file, \fBbcf_file_difat\fP *bcfFile, unsigned int *numberOfDifatEntriesStillToRead)"
.br
.ti -1c
.RI "unsigned int \fBnumberOfEntriesInDifatSector\fP (\fBbcf_file_difat\fP *fat)"
.br
.ti -1c
.RI "void \fBbcf_file_difat_free\fP (\fBbcf_file_difat\fP *difat)"
.br
.ti -1c
.RI "unsigned int \fBentriesInDifatSector\fP (\fBbcf_file_difat\fP *fat)"
.br
.ti -1c
.RI "\fBbcf_file_fat\fP * \fBbcfFileFat_create\fP (const unsigned int \fBsectorSize\fP)"
.br
.ti -1c
.RI "void \fBloadFatFromSector\fP (\fBbcf_file_fat\fP *fat, FILE *file)"
.br
.ti -1c
.RI "void \fBbcf_file_fat_free\fP (\fBbcf_file_fat\fP **fat)"
.br
.ti -1c
.RI "\fBbcf_directory_entry\fP * \fBCompoundFileDirectoryEntry\fP (FILE *file)"
.br
.ti -1c
.RI "\fBbcf_directory\fP * \fBCompoundFileDirectory\fP (const unsigned int maxNumberOfDirectoryEntries)"
.br
.ti -1c
.RI "void \fBreadNextSector\fP (FILE *file, \fBbcf_directory\fP *dir)"
.br
.ti -1c
.RI "void \fBbcf_directory_free\fP (\fBbcf_directory\fP **dir)"
.br
.ti -1c
.RI "\fBbcf_file_header\fP \fBbcfFileHeader_read\fP (FILE *file)"
.br
.ti -1c
.RI "int \fBbcfFileHeader_isValid\fP (\fBbcf_file_header\fP header)"
.br
.ti -1c
.RI "int \fBhus_compress\fP (char *input, int size, char *output, int *out_size)"
.br
.ti -1c
.RI "int \fBhus_decompress\fP (char *input, int size, char *output, int *out_size)"
.br
.ti -1c
.RI "void \fBtestTangentPoints\fP (\fBEmbCircle\fP c, \fBEmbVector\fP p, \fBEmbVector\fP *t0, \fBEmbVector\fP *t1)"
.br
.ti -1c
.RI "void \fBprintArcResults\fP (\fBEmbReal\fP bulge, \fBEmbArc\fP arc, \fBEmbReal\fP centerX, \fBEmbReal\fP centerY, \fBEmbReal\fP radius, \fBEmbReal\fP diameter, \fBEmbReal\fP chord, \fBEmbReal\fP chordMidX, \fBEmbReal\fP chordMidY, \fBEmbReal\fP sagitta, \fBEmbReal\fP apothem, \fBEmbReal\fP incAngle, char clockwise)"
.br
.ti -1c
.RI "int \fBcreate_test_file_1\fP (const char *outf)"
.br
.ti -1c
.RI "int \fBcreate_test_file_2\fP (const char *outf)"
.br
.ti -1c
.RI "int \fBcreate_test_file_3\fP (const char *outf)"
.br
.ti -1c
.RI "int \fBtestEmbCircle\fP (void)"
.br
.ti -1c
.RI "int \fBtestEmbCircle_2\fP (void)"
.br
.ti -1c
.RI "int \fBtestGeomArc\fP (void)"
.br
.ti -1c
.RI "int \fBtestThreadColor\fP (void)"
.br
.ti -1c
.RI "int \fBtestEmbFormat\fP (void)"
.br
.ti -1c
.RI "void \fBembColor_read\fP (FILE *f, \fBEmbColor\fP *c, int toRead)"
.br
.ti -1c
.RI "void \fBembColor_write\fP (FILE *f, \fBEmbColor\fP c, int toWrite)"
.br
.ti -1c
.RI "char \fBread100\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwrite100\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBread10o\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwrite10o\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadArt\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteArt\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadBmc\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteBmc\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadBro\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteBro\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadCnd\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteCnd\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadCol\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteCol\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadCsd\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteCsd\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadCsv\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteCsv\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadDat\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteDat\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadDem\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteDem\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadDsb\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteDsb\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadDst\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteDst\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadDsz\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteDsz\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadDxf\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteDxf\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadEdr\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteEdr\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadEmd\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteEmd\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadExp\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteExp\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadExy\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteExy\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadEys\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteEys\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadFxy\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteFxy\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadGc\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteGc\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadGnc\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteGnc\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadGt\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteGt\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadHus\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteHus\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadInb\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteInb\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadInf\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteInf\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadJef\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteJef\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadKsm\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteKsm\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadMax\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteMax\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadMit\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteMit\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadNew\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteNew\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadOfm\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteOfm\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadPcd\fP (\fBEmbPattern\fP *pattern, const char *fileName, FILE *file)"
.br
.ti -1c
.RI "char \fBwritePcd\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadPcm\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwritePcm\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadPcq\fP (\fBEmbPattern\fP *pattern, const char *fileName, FILE *file)"
.br
.ti -1c
.RI "char \fBwritePcq\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadPcs\fP (\fBEmbPattern\fP *pattern, const char *fileName, FILE *file)"
.br
.ti -1c
.RI "char \fBwritePcs\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadPec\fP (\fBEmbPattern\fP *pattern, const char *fileName, FILE *file)"
.br
.ti -1c
.RI "char \fBwritePec\fP (\fBEmbPattern\fP *pattern, const char *fileName, FILE *file)"
.br
.ti -1c
.RI "char \fBreadPel\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwritePel\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadPem\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwritePem\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadPes\fP (\fBEmbPattern\fP *pattern, const char *fileName, FILE *file)"
.br
.ti -1c
.RI "char \fBwritePes\fP (\fBEmbPattern\fP *pattern, const char *fileName, FILE *file)"
.br
.ti -1c
.RI "char \fBreadPhb\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwritePhb\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadPhc\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwritePhc\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadPlt\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwritePlt\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadRgb\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteRgb\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadSew\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteSew\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadShv\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteShv\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadSst\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteSst\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadStx\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteStx\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadSvg\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteSvg\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadT01\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteT01\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadT09\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteT09\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadTap\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteTap\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadThr\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteThr\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadTxt\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteTxt\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadU00\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteU00\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadU01\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteU01\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadVip\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteVip\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadVp3\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteVp3\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadXxx\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteXxx\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBreadZsk\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.ti -1c
.RI "char \fBwriteZsk\fP (\fBEmbPattern\fP *pattern, FILE *file)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const char \fBimageWithFrame\fP [38][48]"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define BULGETOCONTROL   2"

.PP
Definition at line \fB167\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define BULGETOEND   4"

.PP
Definition at line \fB168\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define CompoundFileSector_DIFAT_Sector   0xFFFFFFFC"

.PP
Definition at line \fB13\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define CompoundFileSector_EndOfChain   0xFFFFFFFE"

.PP
Definition at line \fB15\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define CompoundFileSector_FAT_Sector   0xFFFFFFFD"

.PP
Definition at line \fB14\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define CompoundFileSector_FreeSector   0xFFFFFFFF"

.PP
Definition at line \fB16\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define CompoundFileSector_MaxRegSector   0xFFFFFFFA"
Type of sector 
.PP
Definition at line \fB12\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define CompoundFileStreamId_MaxRegularStreamId   0xFFFFFFFA"
Special values for Stream Identifiers All real stream Ids are less than this 
.PP
Definition at line \fB29\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define CompoundFileStreamId_NoStream   0xFFFFFFFF"
There is no valid stream Id 
.br
 
.PP
Definition at line \fB30\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define CUBICTOCONTROL1   32"

.PP
Definition at line \fB171\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define CUBICTOCONTROL2   64"

.PP
Definition at line \fB172\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define CUBICTOEND   128"

.PP
Definition at line \fB173\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define DXF_VERSION_2000   'AC1015'"

.PP
Definition at line \fB135\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define DXF_VERSION_2002   'AC1015'"

.PP
Definition at line \fB136\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define DXF_VERSION_2004   'AC1018'"

.PP
Definition at line \fB137\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define DXF_VERSION_2006   'AC1018'"

.PP
Definition at line \fB138\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define DXF_VERSION_2007   'AC1021'"

.PP
Definition at line \fB139\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define DXF_VERSION_2009   'AC1021'"

.PP
Definition at line \fB140\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define DXF_VERSION_2010   'AC1024'"

.PP
Definition at line \fB141\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define DXF_VERSION_2013   'AC1027'"

.PP
Definition at line \fB142\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define DXF_VERSION_R10   'AC1006'"

.PP
Definition at line \fB124\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define DXF_VERSION_R11   'AC1009'"

.PP
Definition at line \fB125\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define DXF_VERSION_R12   'AC1009'"

.PP
Definition at line \fB126\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define DXF_VERSION_R13   'AC1012'"

.PP
Definition at line \fB127\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define DXF_VERSION_R14   'AC1014'"

.PP
Definition at line \fB128\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define DXF_VERSION_R15   'AC1015'"

.PP
Definition at line \fB129\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define DXF_VERSION_R18   'AC1018'"

.PP
Definition at line \fB130\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define DXF_VERSION_R21   'AC1021'"

.PP
Definition at line \fB131\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define DXF_VERSION_R24   'AC1024'"

.PP
Definition at line \fB132\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define DXF_VERSION_R27   'AC1027'"

.PP
Definition at line \fB133\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_A   1"

.PP
Definition at line \fB33\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_ANIMATE   2"

.PP
Definition at line \fB34\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_ANIMATECOLOR   3"

.PP
Definition at line \fB35\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_ANIMATEMOTION   4"

.PP
Definition at line \fB36\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_ANIMATETRANSFORM   5"

.PP
Definition at line \fB37\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_ANIMATION   6"

.PP
Definition at line \fB38\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_AUDIO   7"

.PP
Definition at line \fB39\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_CIRCLE   8"

.PP
Definition at line \fB40\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_DEFS   9"

.PP
Definition at line \fB41\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_DESC   10"

.PP
Definition at line \fB42\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_DISCARD   11"

.PP
Definition at line \fB43\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_ELLIPSE   12"

.PP
Definition at line \fB44\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_FONT   13"

.PP
Definition at line \fB45\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_FONT_FACE   14"

.PP
Definition at line \fB46\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_FONT_FACE_SRC   15"

.PP
Definition at line \fB47\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_FONT_FACE_URI   16"

.PP
Definition at line \fB48\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_FOREIGN_OBJECT   17"

.PP
Definition at line \fB49\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_G   18"

.PP
Definition at line \fB50\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_GLYPH   19"

.PP
Definition at line \fB51\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_HANDLER   20"

.PP
Definition at line \fB52\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_HKERN   21"

.PP
Definition at line \fB53\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_IMAGE   22"

.PP
Definition at line \fB54\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_LINE   23"

.PP
Definition at line \fB55\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_LINEAR_GRADIENT   24"

.PP
Definition at line \fB56\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_LISTENER   25"

.PP
Definition at line \fB57\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_METADATA   26"

.PP
Definition at line \fB58\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_MISSING_GLYPH   27"

.PP
Definition at line \fB59\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_MPATH   28"

.PP
Definition at line \fB60\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_PATH   29"

.PP
Definition at line \fB61\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_POLYGON   30"

.PP
Definition at line \fB62\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_POLYLINE   31"

.PP
Definition at line \fB63\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_PREFETCH   32"

.PP
Definition at line \fB64\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_RADIAL_GRADIENT   33"

.PP
Definition at line \fB65\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_RECT   34"

.PP
Definition at line \fB66\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_SCRIPT   35"

.PP
Definition at line \fB67\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_SET   36"

.PP
Definition at line \fB68\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_SOLID_COLOR   37"

.PP
Definition at line \fB69\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_STOP   38"

.PP
Definition at line \fB70\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_SVG   39"

.PP
Definition at line \fB71\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_SWITCH   40"

.PP
Definition at line \fB72\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_TBREAK   41"

.PP
Definition at line \fB73\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_TEXT   42"

.PP
Definition at line \fB74\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_TEXT_AREA   43"

.PP
Definition at line \fB75\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_TITLE   44"

.PP
Definition at line \fB76\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_TSPAN   45"

.PP
Definition at line \fB77\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_USE   46"

.PP
Definition at line \fB78\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_VIDEO   47"

.PP
Definition at line \fB79\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELEMENT_XML   0"

.PP
Definition at line \fB32\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELLIPSETOEND   16"

.PP
Definition at line \fB170\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ELLIPSETORAD   8"

.PP
Definition at line \fB169\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define EMB_BIG_ENDIAN   0"

.PP
Definition at line \fB98\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define EMB_INT16_BIG   2"

.PP
Definition at line \fB103\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define EMB_INT16_LITTLE   3"

.PP
Definition at line \fB104\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define EMB_INT32_BIG   4"

.PP
Definition at line \fB105\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define EMB_INT32_LITTLE   5"

.PP
Definition at line \fB106\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define EMB_LITTLE_ENDIAN   1"

.PP
Definition at line \fB99\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define EMB_MAX(A, B)   (((A) > (B)) ? (A) : (B))"

.PP
Definition at line \fB94\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define EMB_MIN(A, B)   (((A) < (B)) ? (A) : (B))"

.PP
Definition at line \fB93\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ENDIAN_HOST   \fBEMB_LITTLE_ENDIAN\fP"

.PP
Definition at line \fB101\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define GREEN_TERM_COLOR   '\\x1B[0;32m'"

.PP
Definition at line \fB83\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define HOOP_110X110   1"

.PP
Definition at line \fB88\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define HOOP_126X110   0"

.PP
Definition at line \fB87\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define HOOP_140X200   3"

.PP
Definition at line \fB90\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define HOOP_230X200   4"

.PP
Definition at line \fB91\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define HOOP_50X50   2"

.PP
Definition at line \fB89\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define LINETO   0"

.PP
Definition at line \fB165\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define MOVETO   1"

.PP
Definition at line \fB166\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define N_PES_VERSIONS   13"

.PP
Definition at line \fB121\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ObjectTypeRootEntry   0x05"
the root entry 
.br
 
.PP
Definition at line \fB24\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ObjectTypeStorage   0x01"
a directory type object 
.PP
Definition at line \fB22\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ObjectTypeStream   0x02"
a file type object 
.br
 
.PP
Definition at line \fB23\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define ObjectTypeUnknown   0x00"
Type of directory object Probably unallocated 
.br
 
.PP
Definition at line \fB21\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define PES0001   0"

.PP
Definition at line \fB108\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define PES0020   1"

.PP
Definition at line \fB109\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define PES0022   2"

.PP
Definition at line \fB110\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define PES0030   3"

.PP
Definition at line \fB111\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define PES0040   4"

.PP
Definition at line \fB112\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define PES0050   5"

.PP
Definition at line \fB113\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define PES0055   6"

.PP
Definition at line \fB114\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define PES0056   7"

.PP
Definition at line \fB115\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define PES0060   8"

.PP
Definition at line \fB116\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define PES0070   9"

.PP
Definition at line \fB117\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define PES0080   10"

.PP
Definition at line \fB118\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define PES0090   11"

.PP
Definition at line \fB119\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define PES0100   12"

.PP
Definition at line \fB120\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define QUADTOCONTROL   256"

.PP
Definition at line \fB174\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define QUADTOEND   512"

.PP
Definition at line \fB175\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define RED_TERM_COLOR   '\\x1B[0;31m'"

.PP
Definition at line \fB82\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define RESET_TERM_COLOR   '\\033[0m'"

.PP
Definition at line \fB85\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define SVG_ATTRIBUTE   4"

.PP
Definition at line \fB161\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define SVG_CATCH_ALL   5"

.PP
Definition at line \fB162\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define SVG_CREATOR_EMBROIDERMODDER   1"

.PP
Definition at line \fB145\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define SVG_CREATOR_ILLUSTRATOR   2"

.PP
Definition at line \fB146\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define SVG_CREATOR_INKSCAPE   3"

.PP
Definition at line \fB147\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define SVG_CREATOR_NULL   0"

.PP
Definition at line \fB144\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define SVG_ELEMENT   1"

.PP
Definition at line \fB158\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define SVG_EXPECT_ATTRIBUTE   2"

.PP
Definition at line \fB151\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define SVG_EXPECT_ELEMENT   1"

.PP
Definition at line \fB150\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define SVG_EXPECT_NULL   0"

.PP
Definition at line \fB149\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define SVG_EXPECT_VALUE   3"

.PP
Definition at line \fB152\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define SVG_MEDIA_PROPERTY   3"

.PP
Definition at line \fB160\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define SVG_NULL   0"

.PP
Definition at line \fB157\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define SVG_PROPERTY   2"

.PP
Definition at line \fB159\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "#define YELLOW_TERM_COLOR   '\\x1B[1;33m'"

.PP
Definition at line \fB84\fP of file \fBembroidery_internal\&.h\fP\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef struct \fB_bcf_directory\fP \fBbcf_directory\fP"

.SS "typedef struct \fB_bcf_directory_entry\fP \fBbcf_directory_entry\fP"

.SS "typedef struct \fB_bcf_file\fP \fBbcf_file\fP"

.SS "typedef struct \fB_bcf_file_difat\fP \fBbcf_file_difat\fP"

.SS "typedef struct \fB_bcf_file_fat\fP \fBbcf_file_fat\fP"

.SS "typedef struct \fB_bcf_file_header\fP \fBbcf_file_header\fP"

.SS "typedef struct \fBCompress\fP \fBcompress\fP"

.SS "typedef struct \fBHuffman\fP \fBhuffman\fP"

.SS "typedef struct \fBStxThread_\fP \fBStxThread\fP"

.SS "typedef struct \fBSubDescriptor_\fP \fBSubDescriptor\fP"

.SS "typedef struct \fBSvgAttribute_\fP \fBSvgAttribute\fP"

.SS "typedef struct \fBThredExtension_\fP \fBThredExtension\fP"

.SS "typedef struct \fBThredHeader_\fP \fBThredHeader\fP"

.SS "typedef struct \fBVipHeader_\fP \fBVipHeader\fP"

.SS "typedef struct \fB_vp3Hoop\fP \fBvp3Hoop\fP"

.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBCSV_EXPECT\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fICSV_EXPECT_NULL \fP\fP
.TP
\fB\fICSV_EXPECT_QUOTE1 \fP\fP
.TP
\fB\fICSV_EXPECT_QUOTE2 \fP\fP
.TP
\fB\fICSV_EXPECT_COMMA \fP\fP
.PP
Definition at line \fB336\fP of file \fBembroidery_internal\&.h\fP\&.
.SS "enum \fBCSV_MODE\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fICSV_MODE_NULL \fP\fP
.TP
\fB\fICSV_MODE_COMMENT \fP\fP
.TP
\fB\fICSV_MODE_VARIABLE \fP\fP
.TP
\fB\fICSV_MODE_THREAD \fP\fP
.TP
\fB\fICSV_MODE_STITCH \fP\fP
.PP
Definition at line \fB344\fP of file \fBembroidery_internal\&.h\fP\&.
.SH "Function Documentation"
.PP 
.SS "\fBbcf_file_difat\fP * bcf_difat_create (FILE * file, unsigned int fatSectors, const unsigned int sectorSize)"

.PP
Definition at line \fB276\fP of file \fBmain\&.c\fP\&.
.SS "void bcf_directory_free (\fBbcf_directory\fP ** dir)"

.PP
Definition at line \fB448\fP of file \fBmain\&.c\fP\&.
.SS "void bcf_file_difat_free (\fBbcf_file_difat\fP * difat)"

.SS "void bcf_file_fat_free (\fBbcf_file_fat\fP ** fat)"

.SS "void bcf_file_free (\fBbcf_file\fP * bcfFile)"

.PP
Definition at line \fB267\fP of file \fBmain\&.c\fP\&.
.SS "int bcfFile_read (FILE * file, \fBbcf_file\fP * bcfFile)"

.PP
Definition at line \fB196\fP of file \fBmain\&.c\fP\&.
.SS "\fBbcf_file_fat\fP * bcfFileFat_create (const unsigned int sectorSize)"

.PP
Definition at line \fB467\fP of file \fBmain\&.c\fP\&.
.SS "int bcfFileHeader_isValid (\fBbcf_file_header\fP header)"

.SS "\fBbcf_file_header\fP bcfFileHeader_read (FILE * file)"

.PP
Definition at line \fB495\fP of file \fBmain\&.c\fP\&.
.SS "void binaryReadString (FILE * file, char * buffer, int maxLength)"

.PP
Definition at line \fB766\fP of file \fBmain\&.c\fP\&.
.SS "void binaryReadUnicodeString (FILE * file, char * buffer, const int stringLength)"

.PP
Definition at line \fB777\fP of file \fBmain\&.c\fP\&.
.SS "void binaryWriteUInt (FILE * f, unsigned int data)"

.PP
Definition at line \fB247\fP of file \fBformats\&.c\fP\&.
.SS "int check_header_present (FILE * file, int minimum_header_length)"

.PP
Definition at line \fB149\fP of file \fBmain\&.c\fP\&.
.SS "\fBbcf_directory\fP * CompoundFileDirectory (const unsigned int maxNumberOfDirectoryEntries)"

.PP
Definition at line \fB360\fP of file \fBmain\&.c\fP\&.
.SS "\fBbcf_directory_entry\fP * CompoundFileDirectoryEntry (FILE * file)"

.PP
Definition at line \fB390\fP of file \fBmain\&.c\fP\&.
.SS "int compress_get_bits (\fBcompress\fP * c, int length)"

.PP
Definition at line \fB106\fP of file \fBcompress\&.c\fP\&.
.SS "int compress_get_position (\fBcompress\fP * c)"

.PP
Definition at line \fB251\fP of file \fBcompress\&.c\fP\&.
.SS "int compress_get_token (\fBcompress\fP * c)"

.PP
Definition at line \fB239\fP of file \fBcompress\&.c\fP\&.
.SS "void compress_load_block (\fBcompress\fP * c)"

.PP
Definition at line \fB231\fP of file \fBcompress\&.c\fP\&.
.SS "void compress_load_character_huffman (\fBcompress\fP * c)"

.PP
Definition at line \fB184\fP of file \fBcompress\&.c\fP\&.
.SS "void compress_load_character_length_huffman (\fBcompress\fP * c)"

.PP
Definition at line \fB162\fP of file \fBcompress\&.c\fP\&.
.SS "void compress_load_distance_huffman (\fBcompress\fP * c)"

.PP
Definition at line \fB215\fP of file \fBcompress\&.c\fP\&.
.SS "int compress_pop (\fBcompress\fP * c, int bit_count)"

.PP
Definition at line \fB131\fP of file \fBcompress\&.c\fP\&.
.SS "int compress_read_variable_length (\fBcompress\fP * c)"

.PP
Definition at line \fB143\fP of file \fBcompress\&.c\fP\&.
.SS "char * copy_trim (char const * s)"

.PP
Definition at line \fB851\fP of file \fBmain\&.c\fP\&.
.SS "int create_test_file_1 (const char * outf)"

.SS "int create_test_file_2 (const char * outf)"

.SS "int create_test_file_3 (const char * outf)"

.SS "int decode_t01_record (unsigned char b[3], int * x, int * y, int * flags)"

.PP
Definition at line \fB74\fP of file \fBencoding\&.c\fP\&.
.SS "void decode_tajima_ternary (unsigned char b[3], int * x, int * y)"

.PP
Definition at line \fB229\fP of file \fBencoding\&.c\fP\&.
.SS "int decodeNewStitch (unsigned char value)"

.PP
Definition at line \fB337\fP of file \fBencoding\&.c\fP\&.
.SS "char * emb_optOut (\fBEmbReal\fP num, char * str)"
Optimizes the number (\fInum\fP) for output to a text file and returns it as a string (\fIstr\fP)\&. 
.PP
Definition at line \fB868\fP of file \fBmain\&.c\fP\&.
.SS "int emb_readline (FILE * file, char * line, int maxLength)"

.PP
Definition at line \fB809\fP of file \fBmain\&.c\fP\&.
.SS "void embColor_read (FILE * f, \fBEmbColor\fP * c, int toRead)"

.PP
Definition at line \fB681\fP of file \fBmain\&.c\fP\&.
.SS "void embColor_write (FILE * f, \fBEmbColor\fP c, int toWrite)"

.PP
Definition at line \fB691\fP of file \fBmain\&.c\fP\&.
.SS "void embInt_read (FILE * f, char * label, void * b, int mode)"

.PP
Definition at line \fB350\fP of file \fBencoding\&.c\fP\&.
.SS "void embInt_write (FILE * f, char * label, void * b, int mode)"

.PP
Definition at line \fB381\fP of file \fBencoding\&.c\fP\&.
.SS "void encode_t01_record (unsigned char b[3], int x, int y, int flags)"

.PP
Definition at line \fB99\fP of file \fBencoding\&.c\fP\&.
.SS "int encode_tajima_ternary (unsigned char b[3], int x, int y)"

.PP
Definition at line \fB118\fP of file \fBencoding\&.c\fP\&.
.SS "unsigned int entriesInDifatSector (\fBbcf_file_difat\fP * fat)"

.PP
Definition at line \fB308\fP of file \fBmain\&.c\fP\&.
.SS "void fpad (FILE * f, char c, int n)"

.PP
Definition at line \fB207\fP of file \fBformats\&.c\fP\&.
.SS "short fread_int16 (FILE * f)"

.PP
Definition at line \fB183\fP of file \fBformats\&.c\fP\&.
.SS "unsigned short fread_uint16 (FILE * file)"

.PP
Definition at line \fB191\fP of file \fBformats\&.c\fP\&.
.SS "FILE * GetFile (\fBbcf_file\fP * bcfFile, FILE * file, char * fileToFind)"

.PP
Definition at line \fB233\fP of file \fBmain\&.c\fP\&.
.SS "void huffman_build_table (\fBhuffman\fP * h)"

.PP
Definition at line \fB60\fP of file \fBcompress\&.c\fP\&.
.SS "int * huffman_table_lookup (\fBhuffman\fP * h, int byte_lookup, int * lengths)"

.SS "int hus_compress (char * input, int size, char * output, int * out_size)"

.PP
Definition at line \fB44\fP of file \fBcompress\&.c\fP\&.
.SS "int hus_decompress (char * input, int size, char * output, int * out_size)"

.PP
Definition at line \fB264\fP of file \fBcompress\&.c\fP\&.
.SS "void loadFatFromSector (\fBbcf_file_fat\fP * fat, FILE * file)"

.PP
Definition at line \fB481\fP of file \fBmain\&.c\fP\&.
.SS "int mitDecodeStitch (unsigned char value)"

.PP
Definition at line \fB330\fP of file \fBencoding\&.c\fP\&.
.SS "unsigned char mitEncodeStitch (\fBEmbReal\fP value)"

.PP
Definition at line \fB323\fP of file \fBencoding\&.c\fP\&.
.SS "unsigned int numberOfEntriesInDifatSector (\fBbcf_file_difat\fP * fat)"

.SS "\fBEmbReal\fP pfaffDecode (unsigned char a1, unsigned char a2, unsigned char a3)"

.PP
Definition at line \fB315\fP of file \fBencoding\&.c\fP\&.
.SS "void pfaffEncode (FILE * file, int x, int y, int flags)"

.PP
Definition at line \fB295\fP of file \fBencoding\&.c\fP\&.
.SS "void printArcResults (\fBEmbReal\fP bulge, \fBEmbArc\fP arc, \fBEmbReal\fP centerX, \fBEmbReal\fP centerY, \fBEmbReal\fP radius, \fBEmbReal\fP diameter, \fBEmbReal\fP chord, \fBEmbReal\fP chordMidX, \fBEmbReal\fP chordMidY, \fBEmbReal\fP sagitta, \fBEmbReal\fP apothem, \fBEmbReal\fP incAngle, char clockwise)"

.SS "char read100 (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char read10o (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readArt (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readBmc (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readBro (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readCnd (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readCol (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readCsd (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readCsv (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readDat (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readDem (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "void readDescriptions (FILE * file, \fBEmbPattern\fP * pattern)"

.SS "char readDsb (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readDst (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readDsz (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readDxf (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readEdr (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readEmd (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readExp (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readExy (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readEys (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "void readFeatherPatterns (FILE * file, \fBEmbPattern\fP * pattern)"

.SS "unsigned int readFullSector (FILE * file, \fBbcf_file_difat\fP * bcfFile, unsigned int * numberOfDifatEntriesStillToRead)"

.PP
Definition at line \fB314\fP of file \fBmain\&.c\fP\&.
.SS "char readFxy (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readGc (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readGnc (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readGt (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "void readHoopName (FILE * file, \fBEmbPattern\fP * pattern)"

.SS "char readHus (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "void readImageString (FILE * file, \fBEmbPattern\fP * pattern)"

.SS "char readInb (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readInf (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readJef (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readKsm (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readMax (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readMit (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "void readMotifPatterns (FILE * file, \fBEmbPattern\fP * pattern)"

.SS "char readNew (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "void readNextSector (FILE * file, \fBbcf_directory\fP * dir)"

.PP
Definition at line \fB426\fP of file \fBmain\&.c\fP\&.
.SS "char readOfm (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readPcd (\fBEmbPattern\fP * pattern, const char * fileName, FILE * file)"

.SS "char readPcm (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readPcq (\fBEmbPattern\fP * pattern, const char * fileName, FILE * file)"

.SS "char readPcs (\fBEmbPattern\fP * pattern, const char * fileName, FILE * file)"

.SS "char readPec (\fBEmbPattern\fP * pattern, const char * fileName, FILE * file)"

.SS "void readPecStitches (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readPel (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readPem (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readPes (\fBEmbPattern\fP * pattern, const char * fileName, FILE * file)"

.SS "void readPESHeaderV10 (FILE * file, \fBEmbPattern\fP * pattern)"

.SS "void readPESHeaderV5 (FILE * file, \fBEmbPattern\fP * pattern)"

.SS "void readPESHeaderV6 (FILE * file, \fBEmbPattern\fP * pattern)"

.SS "void readPESHeaderV7 (FILE * file, \fBEmbPattern\fP * pattern)"

.SS "void readPESHeaderV8 (FILE * file, \fBEmbPattern\fP * pattern)"

.SS "void readPESHeaderV9 (FILE * file, \fBEmbPattern\fP * pattern)"

.SS "char readPhb (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readPhc (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readPlt (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "void readProgrammableFills (FILE * file, \fBEmbPattern\fP * pattern)"

.SS "char readRgb (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readSew (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readShv (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readSst (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readStx (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readSvg (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readT01 (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readT09 (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readTap (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readThr (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "void readThreads (FILE * file, \fBEmbPattern\fP * pattern)"

.SS "char readTxt (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readU00 (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readU01 (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readVip (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readVp3 (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readXxx (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char readZsk (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "void safe_free (void * data)"

.PP
Definition at line \fB129\fP of file \fBformats\&.c\fP\&.
.SS "int stringInArray (const char * s, const char ** array)"
Tests for the presence of a string \fIs\fP in the supplied \fIarray\fP\&.
.PP
The end of the array is marked by an empty string\&.
.PP
\fBReturns\fP
.RS 4
0 if not present 1 if present\&. 
.RE
.PP

.PP
Definition at line \fB797\fP of file \fBmain\&.c\fP\&.
.SS "int testEmbCircle (void)"

.SS "int testEmbCircle_2 (void)"

.SS "int testEmbFormat (void)"

.SS "int testGeomArc (void)"

.SS "void testTangentPoints (\fBEmbCircle\fP c, \fBEmbVector\fP p, \fBEmbVector\fP * t0, \fBEmbVector\fP * t1)"

.SS "int testThreadColor (void)"

.SS "char write100 (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char write10o (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "void write_24bit (FILE * file, int x)"

.PP
Definition at line \fB660\fP of file \fBmain\&.c\fP\&.
.SS "char writeArt (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeBmc (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeBro (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeCnd (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeCol (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeCsd (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeCsv (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeDat (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeDem (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeDsb (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeDst (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeDsz (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeDxf (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeEdr (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeEmd (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeExp (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeExy (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeEys (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeFxy (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeGc (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeGnc (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeGt (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeHus (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeInb (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeInf (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeJef (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeKsm (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeMax (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeMit (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeNew (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeOfm (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writePcd (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writePcm (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writePcq (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writePcs (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writePec (\fBEmbPattern\fP * pattern, const char * fileName, FILE * file)"

.SS "void writePecStitches (\fBEmbPattern\fP * pattern, FILE * file, const char * filename)"

.SS "char writePel (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writePem (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writePes (\fBEmbPattern\fP * pattern, const char * fileName, FILE * file)"

.SS "char writePhb (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writePhc (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writePlt (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeRgb (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeSew (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeShv (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeSst (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeStx (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeSvg (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeT01 (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeT09 (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeTap (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeThr (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeTxt (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeU00 (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeU01 (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeVip (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeVp3 (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeXxx (\fBEmbPattern\fP * pattern, FILE * file)"

.SS "char writeZsk (\fBEmbPattern\fP * pattern, FILE * file)"

.SH "Variable Documentation"
.PP 
.SS "const char imageWithFrame[38][48]\fC [extern]\fP"

.PP
Definition at line \fB87\fP of file \fBformats\&.c\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Libembroidery from the source code\&.
