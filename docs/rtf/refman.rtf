{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Libembroidery  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.0.0-alpha \par
}}Libembroidery}
{\comment Generated by doxygen 1.9.6.}
{\creatim \yr2023\mo3\dy19\hr19\min16\sec2}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Libembroidery}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version 1.0.0-alpha\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Sun Mar 19 2023 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Index\par \pard\plain 
{\tc \v Data Structure Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Data Structures\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the data structures with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b _bcf_directory} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b _bcf_directory_entry} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b _bcf_file} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABKW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b _bcf_file_difat} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b _bcf_file_fat} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b _bcf_file_header} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABLJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b _vp3Hoop} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Compress} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABMY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbAlignedDim_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbAngularDim_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbArc_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbArcLengthDim_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbArray_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbBezier_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABNY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbBlock_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbCircle_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbColor_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbDiameterDim_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbEllipse_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbFormatList_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABOS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbGeometry_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbImage_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABPU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbInfiniteLine_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbLayer_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbLeaderDim_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbLine_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbLinearDim_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbOrdinateDim_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbPath_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbPattern_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABQX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbPoint_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbRadiusDim_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbRay_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbRect_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbSatinOutline_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABRW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbSpline_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbStitch_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbTextMulti_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbTextSingle_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbThread_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbTime_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b EmbVector_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABSY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Huffman} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b LSYSTEM} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b StxThread_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SubDescriptor_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b SvgAttribute_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABTZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b thread_color_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ThredExtension_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ThredHeader_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b VipHeader_} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABUU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b src/{\b array.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/{\b compress.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/{\b embroidery.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/{\b embroidery_internal.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/{\b encoding.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/{\b fill.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/{\b formats.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/{\b geometry.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/{\b image.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/{\b main.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/{\b pattern.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABIA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b src/{\b thread-color.c} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABJP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Data Structure Documentation{\tc \v Data Structure Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
_bcf_directory Struct Reference\par \pard\plain 
{\tc\tcl2 \v _bcf_directory}
{\xe \v _bcf_directory}
{\bkmkstart AAAAAAABKD}
{\bkmkend AAAAAAABKD}
\par
{
{\f2 #include <embroidery_internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bcf_directory_entry} * {\b dirEntries}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b maxNumberOfDirectoryEntries}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 214} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v dirEntries\:_bcf_directory}
{\xe \v _bcf_directory\:dirEntries}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bcf_directory_entry}* dirEntries}}
\par
{\bkmkstart AAAAAAABKE}
{\bkmkend AAAAAAABKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 216} of file {\b embroidery_internal.h}.}\par
}
{\xe \v maxNumberOfDirectoryEntries\:_bcf_directory}
{\xe \v _bcf_directory\:maxNumberOfDirectoryEntries}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int maxNumberOfDirectoryEntries}}
\par
{\bkmkstart AAAAAAABKF}
{\bkmkend AAAAAAABKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 217} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery_internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
_bcf_directory_entry Struct Reference\par \pard\plain 
{\tc\tcl2 \v _bcf_directory_entry}
{\xe \v _bcf_directory_entry}
{\bkmkstart AAAAAAABKG}
{\bkmkend AAAAAAABKG}
\par
{
{\f2 #include <embroidery_internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b directoryEntryName} [32]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned short {\b directoryEntryNameLength}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b objectType}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b colorFlag}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b leftSiblingId}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b rightSiblingId}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b childId}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b CLSID} [16]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b stateBits}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbTime} {\b creationTime}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbTime} {\b modifiedTime}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b startingSectorLocation}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned long {\b streamSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b streamSizeHigh}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b _bcf_directory_entry} * {\b next}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 195} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v childId\:_bcf_directory_entry}
{\xe \v _bcf_directory_entry\:childId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int childId}}
\par
{\bkmkstart AAAAAAABKH}
{\bkmkend AAAAAAABKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 203} of file {\b embroidery_internal.h}.}\par
}
{\xe \v CLSID\:_bcf_directory_entry}
{\xe \v _bcf_directory_entry\:CLSID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char CLSID[16]}}
\par
{\bkmkstart AAAAAAABKI}
{\bkmkend AAAAAAABKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 204} of file {\b embroidery_internal.h}.}\par
}
{\xe \v colorFlag\:_bcf_directory_entry}
{\xe \v _bcf_directory_entry\:colorFlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char colorFlag}}
\par
{\bkmkstart AAAAAAABKJ}
{\bkmkend AAAAAAABKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 200} of file {\b embroidery_internal.h}.}\par
}
{\xe \v creationTime\:_bcf_directory_entry}
{\xe \v _bcf_directory_entry\:creationTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbTime} creationTime}}
\par
{\bkmkstart AAAAAAABKK}
{\bkmkend AAAAAAABKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 206} of file {\b embroidery_internal.h}.}\par
}
{\xe \v directoryEntryName\:_bcf_directory_entry}
{\xe \v _bcf_directory_entry\:directoryEntryName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char directoryEntryName[32]}}
\par
{\bkmkstart AAAAAAABKL}
{\bkmkend AAAAAAABKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 197} of file {\b embroidery_internal.h}.}\par
}
{\xe \v directoryEntryNameLength\:_bcf_directory_entry}
{\xe \v _bcf_directory_entry\:directoryEntryNameLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short directoryEntryNameLength}}
\par
{\bkmkstart AAAAAAABKM}
{\bkmkend AAAAAAABKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 198} of file {\b embroidery_internal.h}.}\par
}
{\xe \v leftSiblingId\:_bcf_directory_entry}
{\xe \v _bcf_directory_entry\:leftSiblingId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int leftSiblingId}}
\par
{\bkmkstart AAAAAAABKN}
{\bkmkend AAAAAAABKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 201} of file {\b embroidery_internal.h}.}\par
}
{\xe \v modifiedTime\:_bcf_directory_entry}
{\xe \v _bcf_directory_entry\:modifiedTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbTime} modifiedTime}}
\par
{\bkmkstart AAAAAAABKO}
{\bkmkend AAAAAAABKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 207} of file {\b embroidery_internal.h}.}\par
}
{\xe \v next\:_bcf_directory_entry}
{\xe \v _bcf_directory_entry\:next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b _bcf_directory_entry}* next}}
\par
{\bkmkstart AAAAAAABKP}
{\bkmkend AAAAAAABKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 211} of file {\b embroidery_internal.h}.}\par
}
{\xe \v objectType\:_bcf_directory_entry}
{\xe \v _bcf_directory_entry\:objectType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char objectType}}
\par
{\bkmkstart AAAAAAABKQ}
{\bkmkend AAAAAAABKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 199} of file {\b embroidery_internal.h}.}\par
}
{\xe \v rightSiblingId\:_bcf_directory_entry}
{\xe \v _bcf_directory_entry\:rightSiblingId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int rightSiblingId}}
\par
{\bkmkstart AAAAAAABKR}
{\bkmkend AAAAAAABKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 202} of file {\b embroidery_internal.h}.}\par
}
{\xe \v startingSectorLocation\:_bcf_directory_entry}
{\xe \v _bcf_directory_entry\:startingSectorLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int startingSectorLocation}}
\par
{\bkmkstart AAAAAAABKS}
{\bkmkend AAAAAAABKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 208} of file {\b embroidery_internal.h}.}\par
}
{\xe \v stateBits\:_bcf_directory_entry}
{\xe \v _bcf_directory_entry\:stateBits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int stateBits}}
\par
{\bkmkstart AAAAAAABKT}
{\bkmkend AAAAAAABKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 205} of file {\b embroidery_internal.h}.}\par
}
{\xe \v streamSize\:_bcf_directory_entry}
{\xe \v _bcf_directory_entry\:streamSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned long streamSize}}
\par
{\bkmkstart AAAAAAABKU}
{\bkmkend AAAAAAABKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 209} of file {\b embroidery_internal.h}.}\par
}
{\xe \v streamSizeHigh\:_bcf_directory_entry}
{\xe \v _bcf_directory_entry\:streamSizeHigh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int streamSizeHigh}}
\par
{\bkmkstart AAAAAAABKV}
{\bkmkend AAAAAAABKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 210} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery_internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
_bcf_file Struct Reference\par \pard\plain 
{\tc\tcl2 \v _bcf_file}
{\xe \v _bcf_file}
{\bkmkstart AAAAAAABKW}
{\bkmkend AAAAAAABKW}
\par
{
{\f2 #include <embroidery_internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bcf_file_header} {\b header}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bcf_file_difat} * {\b difat}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bcf_file_fat} * {\b fat}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bcf_directory} * {\b directory}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 244} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v difat\:_bcf_file}
{\xe \v _bcf_file\:difat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bcf_file_difat}* difat}}
\par
{\bkmkstart AAAAAAABKX}
{\bkmkend AAAAAAABKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The header for the CompoundFile \par
}{
Definition at line {\b 247} of file {\b embroidery_internal.h}.}\par
}
{\xe \v directory\:_bcf_file}
{\xe \v _bcf_file\:directory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bcf_directory}* directory}}
\par
{\bkmkstart AAAAAAABKY}
{\bkmkend AAAAAAABKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The File Allocation Table for the Compound File \par
}{
Definition at line {\b 249} of file {\b embroidery_internal.h}.}\par
}
{\xe \v fat\:_bcf_file}
{\xe \v _bcf_file\:fat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bcf_file_fat}* fat}}
\par
{\bkmkstart AAAAAAABKZ}
{\bkmkend AAAAAAABKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The "Double Indirect FAT" for the CompoundFile \par
}{
Definition at line {\b 248} of file {\b embroidery_internal.h}.}\par
}
{\xe \v header\:_bcf_file}
{\xe \v _bcf_file\:header}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bcf_file_header} header}}
\par
{\bkmkstart AAAAAAABLA}
{\bkmkend AAAAAAABLA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 246} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery_internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
_bcf_file_difat Struct Reference\par \pard\plain 
{\tc\tcl2 \v _bcf_file_difat}
{\xe \v _bcf_file_difat}
{\bkmkstart AAAAAAABLB}
{\bkmkend AAAAAAABLB}
\par
{
{\f2 #include <embroidery_internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b fatSectorCount}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b fatSectorEntries} [109]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b sectorSize}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 181} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v fatSectorCount\:_bcf_file_difat}
{\xe \v _bcf_file_difat\:fatSectorCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int fatSectorCount}}
\par
{\bkmkstart AAAAAAABLC}
{\bkmkend AAAAAAABLC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 183} of file {\b embroidery_internal.h}.}\par
}
{\xe \v fatSectorEntries\:_bcf_file_difat}
{\xe \v _bcf_file_difat\:fatSectorEntries}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int fatSectorEntries[109]}}
\par
{\bkmkstart AAAAAAABLD}
{\bkmkend AAAAAAABLD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 184} of file {\b embroidery_internal.h}.}\par
}
{\xe \v sectorSize\:_bcf_file_difat}
{\xe \v _bcf_file_difat\:sectorSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int sectorSize}}
\par
{\bkmkstart AAAAAAABLE}
{\bkmkend AAAAAAABLE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 185} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery_internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
_bcf_file_fat Struct Reference\par \pard\plain 
{\tc\tcl2 \v _bcf_file_fat}
{\xe \v _bcf_file_fat}
{\bkmkstart AAAAAAABLF}
{\bkmkend AAAAAAABLF}
\par
{
{\f2 #include <embroidery_internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b fatEntryCount}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b fatEntries} [255]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b numberOfEntriesInFatSector}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 188} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v fatEntries\:_bcf_file_fat}
{\xe \v _bcf_file_fat\:fatEntries}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int fatEntries[255]}}
\par
{\bkmkstart AAAAAAABLG}
{\bkmkend AAAAAAABLG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 191} of file {\b embroidery_internal.h}.}\par
}
{\xe \v fatEntryCount\:_bcf_file_fat}
{\xe \v _bcf_file_fat\:fatEntryCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int fatEntryCount}}
\par
{\bkmkstart AAAAAAABLH}
{\bkmkend AAAAAAABLH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 190} of file {\b embroidery_internal.h}.}\par
}
{\xe \v numberOfEntriesInFatSector\:_bcf_file_fat}
{\xe \v _bcf_file_fat\:numberOfEntriesInFatSector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int numberOfEntriesInFatSector}}
\par
{\bkmkstart AAAAAAABLI}
{\bkmkend AAAAAAABLI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 192} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery_internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
_bcf_file_header Struct Reference\par \pard\plain 
{\tc\tcl2 \v _bcf_file_header}
{\xe \v _bcf_file_header}
{\bkmkstart AAAAAAABLJ}
{\bkmkend AAAAAAABLJ}
\par
{
{\f2 #include <embroidery_internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b signature} [8]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b CLSID} [16]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned short {\b minorVersion}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned short {\b majorVersion}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned short {\b byteOrder}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned short {\b sectorShift}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned short {\b miniSectorShift}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned short {\b reserved1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b reserved2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b numberOfDirectorySectors}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b numberOfFATSectors}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b firstDirectorySectorLocation}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b transactionSignatureNumber}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b miniStreamCutoffSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b firstMiniFATSectorLocation}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b numberOfMiniFatSectors}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b firstDifatSectorLocation}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b numberOfDifatSectors}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 222} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v byteOrder\:_bcf_file_header}
{\xe \v _bcf_file_header\:byteOrder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short byteOrder}}
\par
{\bkmkstart AAAAAAABLK}
{\bkmkend AAAAAAABLK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 228} of file {\b embroidery_internal.h}.}\par
}
{\xe \v CLSID\:_bcf_file_header}
{\xe \v _bcf_file_header\:CLSID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char CLSID[16]}}
\par
{\bkmkstart AAAAAAABLL}
{\bkmkend AAAAAAABLL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 225} of file {\b embroidery_internal.h}.}\par
}
{\xe \v firstDifatSectorLocation\:_bcf_file_header}
{\xe \v _bcf_file_header\:firstDifatSectorLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int firstDifatSectorLocation}}
\par
{\bkmkstart AAAAAAABLM}
{\bkmkend AAAAAAABLM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 240} of file {\b embroidery_internal.h}.}\par
}
{\xe \v firstDirectorySectorLocation\:_bcf_file_header}
{\xe \v _bcf_file_header\:firstDirectorySectorLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int firstDirectorySectorLocation}}
\par
{\bkmkstart AAAAAAABLN}
{\bkmkend AAAAAAABLN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 235} of file {\b embroidery_internal.h}.}\par
}
{\xe \v firstMiniFATSectorLocation\:_bcf_file_header}
{\xe \v _bcf_file_header\:firstMiniFATSectorLocation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int firstMiniFATSectorLocation}}
\par
{\bkmkstart AAAAAAABLO}
{\bkmkend AAAAAAABLO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 238} of file {\b embroidery_internal.h}.}\par
}
{\xe \v majorVersion\:_bcf_file_header}
{\xe \v _bcf_file_header\:majorVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short majorVersion}}
\par
{\bkmkstart AAAAAAABLP}
{\bkmkend AAAAAAABLP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 227} of file {\b embroidery_internal.h}.}\par
}
{\xe \v miniSectorShift\:_bcf_file_header}
{\xe \v _bcf_file_header\:miniSectorShift}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short miniSectorShift}}
\par
{\bkmkstart AAAAAAABLQ}
{\bkmkend AAAAAAABLQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 230} of file {\b embroidery_internal.h}.}\par
}
{\xe \v miniStreamCutoffSize\:_bcf_file_header}
{\xe \v _bcf_file_header\:miniStreamCutoffSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int miniStreamCutoffSize}}
\par
{\bkmkstart AAAAAAABLR}
{\bkmkend AAAAAAABLR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 237} of file {\b embroidery_internal.h}.}\par
}
{\xe \v minorVersion\:_bcf_file_header}
{\xe \v _bcf_file_header\:minorVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short minorVersion}}
\par
{\bkmkstart AAAAAAABLS}
{\bkmkend AAAAAAABLS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 226} of file {\b embroidery_internal.h}.}\par
}
{\xe \v numberOfDifatSectors\:_bcf_file_header}
{\xe \v _bcf_file_header\:numberOfDifatSectors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int numberOfDifatSectors}}
\par
{\bkmkstart AAAAAAABLT}
{\bkmkend AAAAAAABLT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 241} of file {\b embroidery_internal.h}.}\par
}
{\xe \v numberOfDirectorySectors\:_bcf_file_header}
{\xe \v _bcf_file_header\:numberOfDirectorySectors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int numberOfDirectorySectors}}
\par
{\bkmkstart AAAAAAABLU}
{\bkmkend AAAAAAABLU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 233} of file {\b embroidery_internal.h}.}\par
}
{\xe \v numberOfFATSectors\:_bcf_file_header}
{\xe \v _bcf_file_header\:numberOfFATSectors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int numberOfFATSectors}}
\par
{\bkmkstart AAAAAAABLV}
{\bkmkend AAAAAAABLV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 234} of file {\b embroidery_internal.h}.}\par
}
{\xe \v numberOfMiniFatSectors\:_bcf_file_header}
{\xe \v _bcf_file_header\:numberOfMiniFatSectors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int numberOfMiniFatSectors}}
\par
{\bkmkstart AAAAAAABLW}
{\bkmkend AAAAAAABLW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 239} of file {\b embroidery_internal.h}.}\par
}
{\xe \v reserved1\:_bcf_file_header}
{\xe \v _bcf_file_header\:reserved1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short reserved1}}
\par
{\bkmkstart AAAAAAABLX}
{\bkmkend AAAAAAABLX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 231} of file {\b embroidery_internal.h}.}\par
}
{\xe \v reserved2\:_bcf_file_header}
{\xe \v _bcf_file_header\:reserved2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int reserved2}}
\par
{\bkmkstart AAAAAAABLY}
{\bkmkend AAAAAAABLY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 232} of file {\b embroidery_internal.h}.}\par
}
{\xe \v sectorShift\:_bcf_file_header}
{\xe \v _bcf_file_header\:sectorShift}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short sectorShift}}
\par
{\bkmkstart AAAAAAABLZ}
{\bkmkend AAAAAAABLZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 229} of file {\b embroidery_internal.h}.}\par
}
{\xe \v signature\:_bcf_file_header}
{\xe \v _bcf_file_header\:signature}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char signature[8]}}
\par
{\bkmkstart AAAAAAABMA}
{\bkmkend AAAAAAABMA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 224} of file {\b embroidery_internal.h}.}\par
}
{\xe \v transactionSignatureNumber\:_bcf_file_header}
{\xe \v _bcf_file_header\:transactionSignatureNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int transactionSignatureNumber}}
\par
{\bkmkstart AAAAAAABMB}
{\bkmkend AAAAAAABMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 236} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery_internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
_vp3Hoop Struct Reference\par \pard\plain 
{\tc\tcl2 \v _vp3Hoop}
{\xe \v _vp3Hoop}
{\bkmkstart AAAAAAABMC}
{\bkmkend AAAAAAABMC}
\par
{
{\f2 #include <embroidery_internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b right}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b bottom}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b left}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b top}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b threadLength}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b unknown2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b numberOfColors}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned short {\b unknown3}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b unknown4}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b numberOfBytesRemaining}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b xOffset}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b yOffset}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b byte1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b byte2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b byte3}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b right2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b left2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b bottom2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b top2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b width}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b height}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 252} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v bottom\:_vp3Hoop}
{\xe \v _vp3Hoop\:bottom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int bottom}}
\par
{\bkmkstart AAAAAAABMD}
{\bkmkend AAAAAAABMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 255} of file {\b embroidery_internal.h}.}\par
}
{\xe \v bottom2\:_vp3Hoop}
{\xe \v _vp3Hoop\:bottom2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int bottom2}}
\par
{\bkmkstart AAAAAAABME}
{\bkmkend AAAAAAABME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 275} of file {\b embroidery_internal.h}.}\par
}
{\xe \v byte1\:_vp3Hoop}
{\xe \v _vp3Hoop\:byte1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char byte1}}
\par
{\bkmkstart AAAAAAABMF}
{\bkmkend AAAAAAABMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 268} of file {\b embroidery_internal.h}.}\par
}
{\xe \v byte2\:_vp3Hoop}
{\xe \v _vp3Hoop\:byte2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char byte2}}
\par
{\bkmkstart AAAAAAABMG}
{\bkmkend AAAAAAABMG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 269} of file {\b embroidery_internal.h}.}\par
}
{\xe \v byte3\:_vp3Hoop}
{\xe \v _vp3Hoop\:byte3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char byte3}}
\par
{\bkmkstart AAAAAAABMH}
{\bkmkend AAAAAAABMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 270} of file {\b embroidery_internal.h}.}\par
}
{\xe \v height\:_vp3Hoop}
{\xe \v _vp3Hoop\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int height}}
\par
{\bkmkstart AAAAAAABMI}
{\bkmkend AAAAAAABMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 279} of file {\b embroidery_internal.h}.}\par
}
{\xe \v left\:_vp3Hoop}
{\xe \v _vp3Hoop\:left}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int left}}
\par
{\bkmkstart AAAAAAABMJ}
{\bkmkend AAAAAAABMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 256} of file {\b embroidery_internal.h}.}\par
}
{\xe \v left2\:_vp3Hoop}
{\xe \v _vp3Hoop\:left2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int left2}}
\par
{\bkmkstart AAAAAAABMK}
{\bkmkend AAAAAAABMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 274} of file {\b embroidery_internal.h}.}\par
}
{\xe \v numberOfBytesRemaining\:_vp3Hoop}
{\xe \v _vp3Hoop\:numberOfBytesRemaining}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int numberOfBytesRemaining}}
\par
{\bkmkstart AAAAAAABML}
{\bkmkend AAAAAAABML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 263} of file {\b embroidery_internal.h}.}\par
}
{\xe \v numberOfColors\:_vp3Hoop}
{\xe \v _vp3Hoop\:numberOfColors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char numberOfColors}}
\par
{\bkmkstart AAAAAAABMM}
{\bkmkend AAAAAAABMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 260} of file {\b embroidery_internal.h}.}\par
}
{\xe \v right\:_vp3Hoop}
{\xe \v _vp3Hoop\:right}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int right}}
\par
{\bkmkstart AAAAAAABMN}
{\bkmkend AAAAAAABMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 254} of file {\b embroidery_internal.h}.}\par
}
{\xe \v right2\:_vp3Hoop}
{\xe \v _vp3Hoop\:right2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int right2}}
\par
{\bkmkstart AAAAAAABMO}
{\bkmkend AAAAAAABMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 273} of file {\b embroidery_internal.h}.}\par
}
{\xe \v threadLength\:_vp3Hoop}
{\xe \v _vp3Hoop\:threadLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int threadLength}}
\par
{\bkmkstart AAAAAAABMP}
{\bkmkend AAAAAAABMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 258} of file {\b embroidery_internal.h}.}\par
}
{\xe \v top\:_vp3Hoop}
{\xe \v _vp3Hoop\:top}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int top}}
\par
{\bkmkstart AAAAAAABMQ}
{\bkmkend AAAAAAABMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 257} of file {\b embroidery_internal.h}.}\par
}
{\xe \v top2\:_vp3Hoop}
{\xe \v _vp3Hoop\:top2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int top2}}
\par
{\bkmkstart AAAAAAABMR}
{\bkmkend AAAAAAABMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 276} of file {\b embroidery_internal.h}.}\par
}
{\xe \v unknown2\:_vp3Hoop}
{\xe \v _vp3Hoop\:unknown2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char unknown2}}
\par
{\bkmkstart AAAAAAABMS}
{\bkmkend AAAAAAABMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 259} of file {\b embroidery_internal.h}.}\par
}
{\xe \v unknown3\:_vp3Hoop}
{\xe \v _vp3Hoop\:unknown3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short unknown3}}
\par
{\bkmkstart AAAAAAABMT}
{\bkmkend AAAAAAABMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 261} of file {\b embroidery_internal.h}.}\par
}
{\xe \v unknown4\:_vp3Hoop}
{\xe \v _vp3Hoop\:unknown4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int unknown4}}
\par
{\bkmkstart AAAAAAABMU}
{\bkmkend AAAAAAABMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 262} of file {\b embroidery_internal.h}.}\par
}
{\xe \v width\:_vp3Hoop}
{\xe \v _vp3Hoop\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int width}}
\par
{\bkmkstart AAAAAAABMV}
{\bkmkend AAAAAAABMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 278} of file {\b embroidery_internal.h}.}\par
}
{\xe \v xOffset\:_vp3Hoop}
{\xe \v _vp3Hoop\:xOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int xOffset}}
\par
{\bkmkstart AAAAAAABMW}
{\bkmkend AAAAAAABMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 265} of file {\b embroidery_internal.h}.}\par
}
{\xe \v yOffset\:_vp3Hoop}
{\xe \v _vp3Hoop\:yOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int yOffset}}
\par
{\bkmkstart AAAAAAABMX}
{\bkmkend AAAAAAABMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 266} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery_internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Compress Struct Reference\par \pard\plain 
{\tc\tcl2 \v Compress}
{\xe \v Compress}
{\bkmkstart AAAAAAABMY}
{\bkmkend AAAAAAABMY}
\par
{
{\f2 #include <embroidery_internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b bit_position}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b input_data}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b input_length}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b bits_total}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b block_elements}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b huffman} {\b character_length_huffman}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b huffman} {\b character_huffman}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b huffman} {\b distance_huffman}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 368} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v bit_position\:Compress}
{\xe \v Compress\:bit_position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int bit_position}}
\par
{\bkmkstart AAAAAAABMZ}
{\bkmkend AAAAAAABMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 369} of file {\b embroidery_internal.h}.}\par
}
{\xe \v bits_total\:Compress}
{\xe \v Compress\:bits_total}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int bits_total}}
\par
{\bkmkstart AAAAAAABNA}
{\bkmkend AAAAAAABNA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 372} of file {\b embroidery_internal.h}.}\par
}
{\xe \v block_elements\:Compress}
{\xe \v Compress\:block_elements}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int block_elements}}
\par
{\bkmkstart AAAAAAABNB}
{\bkmkend AAAAAAABNB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 373} of file {\b embroidery_internal.h}.}\par
}
{\xe \v character_huffman\:Compress}
{\xe \v Compress\:character_huffman}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b huffman} character_huffman}}
\par
{\bkmkstart AAAAAAABNC}
{\bkmkend AAAAAAABNC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 375} of file {\b embroidery_internal.h}.}\par
}
{\xe \v character_length_huffman\:Compress}
{\xe \v Compress\:character_length_huffman}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b huffman} character_length_huffman}}
\par
{\bkmkstart AAAAAAABND}
{\bkmkend AAAAAAABND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 374} of file {\b embroidery_internal.h}.}\par
}
{\xe \v distance_huffman\:Compress}
{\xe \v Compress\:distance_huffman}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b huffman} distance_huffman}}
\par
{\bkmkstart AAAAAAABNE}
{\bkmkend AAAAAAABNE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 376} of file {\b embroidery_internal.h}.}\par
}
{\xe \v input_data\:Compress}
{\xe \v Compress\:input_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* input_data}}
\par
{\bkmkstart AAAAAAABNF}
{\bkmkend AAAAAAABNF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 370} of file {\b embroidery_internal.h}.}\par
}
{\xe \v input_length\:Compress}
{\xe \v Compress\:input_length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int input_length}}
\par
{\bkmkstart AAAAAAABNG}
{\bkmkend AAAAAAABNG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 371} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery_internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbAlignedDim_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbAlignedDim_}
{\xe \v EmbAlignedDim_}
{\bkmkstart AAAAAAABNH}
{\bkmkend AAAAAAABNH}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbVector} {\b position}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 219} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v position\:EmbAlignedDim_}
{\xe \v EmbAlignedDim_\:position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} position}}
\par
{\bkmkstart AAAAAAABNI}
{\bkmkend AAAAAAABNI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 220} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbAngularDim_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbAngularDim_}
{\xe \v EmbAngularDim_}
{\bkmkstart AAAAAAABNJ}
{\bkmkend AAAAAAABNJ}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbVector} {\b position}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 223} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v position\:EmbAngularDim_}
{\xe \v EmbAngularDim_\:position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} position}}
\par
{\bkmkstart AAAAAAABNK}
{\bkmkend AAAAAAABNK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 224} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbArc_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbArc_}
{\xe \v EmbArc_}
{\bkmkstart AAAAAAABNL}
{\bkmkend AAAAAAABNL}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbVector} {\b start}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbVector} {\b mid}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbVector} {\b end}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 326} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v end\:EmbArc_}
{\xe \v EmbArc_\:end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} end}}
\par
{\bkmkstart AAAAAAABNM}
{\bkmkend AAAAAAABNM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 330} of file {\b embroidery.h}.}\par
}
{\xe \v mid\:EmbArc_}
{\xe \v EmbArc_\:mid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} mid}}
\par
{\bkmkstart AAAAAAABNN}
{\bkmkend AAAAAAABNN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 329} of file {\b embroidery.h}.}\par
}
{\xe \v start\:EmbArc_}
{\xe \v EmbArc_\:start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} start}}
\par
{\bkmkstart AAAAAAABNO}
{\bkmkend AAAAAAABNO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 328} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbArcLengthDim_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbArcLengthDim_}
{\xe \v EmbArcLengthDim_}
{\bkmkstart AAAAAAABNP}
{\bkmkend AAAAAAABNP}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbVector} {\b position}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 227} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v position\:EmbArcLengthDim_}
{\xe \v EmbArcLengthDim_\:position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} position}}
\par
{\bkmkstart AAAAAAABNQ}
{\bkmkend AAAAAAABNQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 228} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbArray_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbArray_}
{\xe \v EmbArray_}
{\bkmkstart AAAAAAABNR}
{\bkmkend AAAAAAABNR}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbGeometry} * {\b geometry}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbStitch} * {\b stitch}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbThread} * {\b thread}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b count}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b length}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b type}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 408} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v count\:EmbArray_}
{\xe \v EmbArray_\:count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int count}}
\par
{\bkmkstart AAAAAAABNS}
{\bkmkend AAAAAAABNS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 412} of file {\b embroidery.h}.}\par
}
{\xe \v geometry\:EmbArray_}
{\xe \v EmbArray_\:geometry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbGeometry}* geometry}}
\par
{\bkmkstart AAAAAAABNT}
{\bkmkend AAAAAAABNT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 409} of file {\b embroidery.h}.}\par
}
{\xe \v length\:EmbArray_}
{\xe \v EmbArray_\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int length}}
\par
{\bkmkstart AAAAAAABNU}
{\bkmkend AAAAAAABNU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 413} of file {\b embroidery.h}.}\par
}
{\xe \v stitch\:EmbArray_}
{\xe \v EmbArray_\:stitch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbStitch}* stitch}}
\par
{\bkmkstart AAAAAAABNV}
{\bkmkend AAAAAAABNV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 410} of file {\b embroidery.h}.}\par
}
{\xe \v thread\:EmbArray_}
{\xe \v EmbArray_\:thread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbThread}* thread}}
\par
{\bkmkstart AAAAAAABNW}
{\bkmkend AAAAAAABNW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 411} of file {\b embroidery.h}.}\par
}
{\xe \v type\:EmbArray_}
{\xe \v EmbArray_\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int type}}
\par
{\bkmkstart AAAAAAABNX}
{\bkmkend AAAAAAABNX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 414} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbBezier_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbBezier_}
{\xe \v EmbBezier_}
{\bkmkstart AAAAAAABNY}
{\bkmkend AAAAAAABNY}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbVector} {\b start}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbVector} {\b control1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbVector} {\b control2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbVector} {\b end}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 367} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v control1\:EmbBezier_}
{\xe \v EmbBezier_\:control1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} control1}}
\par
{\bkmkstart AAAAAAABNZ}
{\bkmkend AAAAAAABNZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 369} of file {\b embroidery.h}.}\par
}
{\xe \v control2\:EmbBezier_}
{\xe \v EmbBezier_\:control2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} control2}}
\par
{\bkmkstart AAAAAAABOA}
{\bkmkend AAAAAAABOA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 370} of file {\b embroidery.h}.}\par
}
{\xe \v end\:EmbBezier_}
{\xe \v EmbBezier_\:end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} end}}
\par
{\bkmkstart AAAAAAABOB}
{\bkmkend AAAAAAABOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 371} of file {\b embroidery.h}.}\par
}
{\xe \v start\:EmbBezier_}
{\xe \v EmbBezier_\:start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} start}}
\par
{\bkmkstart AAAAAAABOC}
{\bkmkend AAAAAAABOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 368} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbBlock_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbBlock_}
{\xe \v EmbBlock_}
{\bkmkstart AAAAAAABOD}
{\bkmkend AAAAAAABOD}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbVector} {\b position}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 215} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v position\:EmbBlock_}
{\xe \v EmbBlock_\:position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} position}}
\par
{\bkmkstart AAAAAAABOE}
{\bkmkend AAAAAAABOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 216} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbCircle_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbCircle_}
{\xe \v EmbCircle_}
{\bkmkstart AAAAAAABOF}
{\bkmkend AAAAAAABOF}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbVector} {\b center}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbReal} {\b radius}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 343} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v center\:EmbCircle_}
{\xe \v EmbCircle_\:center}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} center}}
\par
{\bkmkstart AAAAAAABOG}
{\bkmkend AAAAAAABOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 345} of file {\b embroidery.h}.}\par
}
{\xe \v radius\:EmbCircle_}
{\xe \v EmbCircle_\:radius}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbReal} radius}}
\par
{\bkmkstart AAAAAAABOH}
{\bkmkend AAAAAAABOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 346} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbColor_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbColor_}
{\xe \v EmbColor_}
{\bkmkstart AAAAAAABOI}
{\bkmkend AAAAAAABOI}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b r}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b g}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b b}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EmbColor uses the light primaries: red, green, blue in that order. \par
}{
Definition at line {\b 182} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v b\:EmbColor_}
{\xe \v EmbColor_\:b}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char b}}
\par
{\bkmkstart AAAAAAABOJ}
{\bkmkend AAAAAAABOJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 186} of file {\b embroidery.h}.}\par
}
{\xe \v g\:EmbColor_}
{\xe \v EmbColor_\:g}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char g}}
\par
{\bkmkstart AAAAAAABOK}
{\bkmkend AAAAAAABOK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 185} of file {\b embroidery.h}.}\par
}
{\xe \v r\:EmbColor_}
{\xe \v EmbColor_\:r}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char r}}
\par
{\bkmkstart AAAAAAABOL}
{\bkmkend AAAAAAABOL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 184} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbDiameterDim_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbDiameterDim_}
{\xe \v EmbDiameterDim_}
{\bkmkstart AAAAAAABOM}
{\bkmkend AAAAAAABOM}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbVector} {\b position}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 231} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v position\:EmbDiameterDim_}
{\xe \v EmbDiameterDim_\:position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} position}}
\par
{\bkmkstart AAAAAAABON}
{\bkmkend AAAAAAABON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 232} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbEllipse_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbEllipse_}
{\xe \v EmbEllipse_}
{\bkmkstart AAAAAAABOO}
{\bkmkend AAAAAAABOO}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbVector} {\b center}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbVector} {\b radius}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbReal} {\b rotation}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 360} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v center\:EmbEllipse_}
{\xe \v EmbEllipse_\:center}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} center}}
\par
{\bkmkstart AAAAAAABOP}
{\bkmkend AAAAAAABOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 362} of file {\b embroidery.h}.}\par
}
{\xe \v radius\:EmbEllipse_}
{\xe \v EmbEllipse_\:radius}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} radius}}
\par
{\bkmkstart AAAAAAABOQ}
{\bkmkend AAAAAAABOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 363} of file {\b embroidery.h}.}\par
}
{\xe \v rotation\:EmbEllipse_}
{\xe \v EmbEllipse_\:rotation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbReal} rotation}}
\par
{\bkmkstart AAAAAAABOR}
{\bkmkend AAAAAAABOR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 364} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbFormatList_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbFormatList_}
{\xe \v EmbFormatList_}
{\bkmkstart AAAAAAABOS}
{\bkmkend AAAAAAABOS}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b extension} [2+{\b EMBFORMAT_MAXEXT}]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b description} [{\b EMBFORMAT_MAXDESC}]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b reader_state}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writer_state}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b color_only}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b check_for_color_file}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b write_external_color_file}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 436} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v check_for_color_file\:EmbFormatList_}
{\xe \v EmbFormatList_\:check_for_color_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int check_for_color_file}}
\par
{\bkmkstart AAAAAAABOT}
{\bkmkend AAAAAAABOT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 444} of file {\b embroidery.h}.}\par
}
{\xe \v color_only\:EmbFormatList_}
{\xe \v EmbFormatList_\:color_only}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int color_only}}
\par
{\bkmkstart AAAAAAABOU}
{\bkmkend AAAAAAABOU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 443} of file {\b embroidery.h}.}\par
}
{\xe \v description\:EmbFormatList_}
{\xe \v EmbFormatList_\:description}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char description[{\b EMBFORMAT_MAXDESC}]}}
\par
{\bkmkstart AAAAAAABOV}
{\bkmkend AAAAAAABOV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 439} of file {\b embroidery.h}.}\par
}
{\xe \v extension\:EmbFormatList_}
{\xe \v EmbFormatList_\:extension}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char extension[2+{\b EMBFORMAT_MAXEXT}]}}
\par
{\bkmkstart AAAAAAABOW}
{\bkmkend AAAAAAABOW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 438} of file {\b embroidery.h}.}\par
}
{\xe \v reader_state\:EmbFormatList_}
{\xe \v EmbFormatList_\:reader_state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char reader_state}}
\par
{\bkmkstart AAAAAAABOX}
{\bkmkend AAAAAAABOX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 440} of file {\b embroidery.h}.}\par
}
{\xe \v type\:EmbFormatList_}
{\xe \v EmbFormatList_\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int type}}
\par
{\bkmkstart AAAAAAABOY}
{\bkmkend AAAAAAABOY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 442} of file {\b embroidery.h}.}\par
}
{\xe \v write_external_color_file\:EmbFormatList_}
{\xe \v EmbFormatList_\:write_external_color_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int write_external_color_file}}
\par
{\bkmkstart AAAAAAABOZ}
{\bkmkend AAAAAAABOZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 445} of file {\b embroidery.h}.}\par
}
{\xe \v writer_state\:EmbFormatList_}
{\xe \v EmbFormatList_\:writer_state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writer_state}}
\par
{\bkmkstart AAAAAAABPA}
{\bkmkend AAAAAAABPA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 441} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbGeometry_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbGeometry_}
{\xe \v EmbGeometry_}
{\bkmkstart AAAAAAABPB}
{\bkmkend AAAAAAABPB}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
union \{\par

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b EmbArc} {\b arc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b EmbCircle} {\b circle}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b EmbColor} {\b color}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b EmbEllipse} {\b ellipse}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b EmbLine} {\b line}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b EmbPath} {\b path}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b EmbPoint} {\b point}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b EmbPolygon} {\b polygon}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b EmbPolyline} {\b polyline}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b EmbRect} {\b rect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b EmbSpline} {\b spline}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\~ {\b EmbVector} {\b vector}\par
}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
\} {\b object}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbStitch} {\b stitch}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbThread} {\b thread}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b flag}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b type}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lineType}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 385} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v arc\:EmbGeometry_}
{\xe \v EmbGeometry_\:arc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbArc} arc}}
\par
{\bkmkstart AAAAAAABPC}
{\bkmkend AAAAAAABPC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 387} of file {\b embroidery.h}.}\par
}
{\xe \v circle\:EmbGeometry_}
{\xe \v EmbGeometry_\:circle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbCircle} circle}}
\par
{\bkmkstart AAAAAAABPD}
{\bkmkend AAAAAAABPD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 388} of file {\b embroidery.h}.}\par
}
{\xe \v color\:EmbGeometry_}
{\xe \v EmbGeometry_\:color}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbColor} color}}
\par
{\bkmkstart AAAAAAABPE}
{\bkmkend AAAAAAABPE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 389} of file {\b embroidery.h}.}\par
}
{\xe \v ellipse\:EmbGeometry_}
{\xe \v EmbGeometry_\:ellipse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbEllipse} ellipse}}
\par
{\bkmkstart AAAAAAABPF}
{\bkmkend AAAAAAABPF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 390} of file {\b embroidery.h}.}\par
}
{\xe \v flag\:EmbGeometry_}
{\xe \v EmbGeometry_\:flag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int flag}}
\par
{\bkmkstart AAAAAAABPG}
{\bkmkend AAAAAAABPG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 402} of file {\b embroidery.h}.}\par
}
{\xe \v line\:EmbGeometry_}
{\xe \v EmbGeometry_\:line}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbLine} line}}
\par
{\bkmkstart AAAAAAABPH}
{\bkmkend AAAAAAABPH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 391} of file {\b embroidery.h}.}\par
}
{\xe \v lineType\:EmbGeometry_}
{\xe \v EmbGeometry_\:lineType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int lineType}}
\par
{\bkmkstart AAAAAAABPI}
{\bkmkend AAAAAAABPI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 404} of file {\b embroidery.h}.}\par
}
{\xe \v object\:EmbGeometry_}
{\xe \v EmbGeometry_\:object}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
union  \{ ... \}  object}}
\par
{\bkmkstart AAAAAAABPJ}
{\bkmkend AAAAAAABPJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v path\:EmbGeometry_}
{\xe \v EmbGeometry_\:path}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbPath} path}}
\par
{\bkmkstart AAAAAAABPK}
{\bkmkend AAAAAAABPK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 392} of file {\b embroidery.h}.}\par
}
{\xe \v point\:EmbGeometry_}
{\xe \v EmbGeometry_\:point}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbPoint} point}}
\par
{\bkmkstart AAAAAAABPL}
{\bkmkend AAAAAAABPL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 393} of file {\b embroidery.h}.}\par
}
{\xe \v polygon\:EmbGeometry_}
{\xe \v EmbGeometry_\:polygon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbPolygon} polygon}}
\par
{\bkmkstart AAAAAAABPM}
{\bkmkend AAAAAAABPM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 394} of file {\b embroidery.h}.}\par
}
{\xe \v polyline\:EmbGeometry_}
{\xe \v EmbGeometry_\:polyline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbPolyline} polyline}}
\par
{\bkmkstart AAAAAAABPN}
{\bkmkend AAAAAAABPN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 395} of file {\b embroidery.h}.}\par
}
{\xe \v rect\:EmbGeometry_}
{\xe \v EmbGeometry_\:rect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbRect} rect}}
\par
{\bkmkstart AAAAAAABPO}
{\bkmkend AAAAAAABPO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 396} of file {\b embroidery.h}.}\par
}
{\xe \v spline\:EmbGeometry_}
{\xe \v EmbGeometry_\:spline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbSpline} spline}}
\par
{\bkmkstart AAAAAAABPP}
{\bkmkend AAAAAAABPP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 397} of file {\b embroidery.h}.}\par
}
{\xe \v stitch\:EmbGeometry_}
{\xe \v EmbGeometry_\:stitch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbStitch} stitch}}
\par
{\bkmkstart AAAAAAABPQ}
{\bkmkend AAAAAAABPQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 400} of file {\b embroidery.h}.}\par
}
{\xe \v thread\:EmbGeometry_}
{\xe \v EmbGeometry_\:thread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbThread} thread}}
\par
{\bkmkstart AAAAAAABPR}
{\bkmkend AAAAAAABPR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 401} of file {\b embroidery.h}.}\par
}
{\xe \v type\:EmbGeometry_}
{\xe \v EmbGeometry_\:type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int type}}
\par
{\bkmkstart AAAAAAABPS}
{\bkmkend AAAAAAABPS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 403} of file {\b embroidery.h}.}\par
}
{\xe \v vector\:EmbGeometry_}
{\xe \v EmbGeometry_\:vector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} vector}}
\par
{\bkmkstart AAAAAAABPT}
{\bkmkend AAAAAAABPT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 398} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbImage_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbImage_}
{\xe \v EmbImage_}
{\bkmkstart AAAAAAABPU}
{\bkmkend AAAAAAABPU}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbVector} {\b position}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbVector} {\b dimensions}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char * {\b data}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b width}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b height}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b path} [200]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b name} [200]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 205} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v data\:EmbImage_}
{\xe \v EmbImage_\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char* data}}
\par
{\bkmkstart AAAAAAABPV}
{\bkmkend AAAAAAABPV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 208} of file {\b embroidery.h}.}\par
}
{\xe \v dimensions\:EmbImage_}
{\xe \v EmbImage_\:dimensions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} dimensions}}
\par
{\bkmkstart AAAAAAABPW}
{\bkmkend AAAAAAABPW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 207} of file {\b embroidery.h}.}\par
}
{\xe \v height\:EmbImage_}
{\xe \v EmbImage_\:height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int height}}
\par
{\bkmkstart AAAAAAABPX}
{\bkmkend AAAAAAABPX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 210} of file {\b embroidery.h}.}\par
}
{\xe \v name\:EmbImage_}
{\xe \v EmbImage_\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char name[200]}}
\par
{\bkmkstart AAAAAAABPY}
{\bkmkend AAAAAAABPY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 212} of file {\b embroidery.h}.}\par
}
{\xe \v path\:EmbImage_}
{\xe \v EmbImage_\:path}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char path[200]}}
\par
{\bkmkstart AAAAAAABPZ}
{\bkmkend AAAAAAABPZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 211} of file {\b embroidery.h}.}\par
}
{\xe \v position\:EmbImage_}
{\xe \v EmbImage_\:position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} position}}
\par
{\bkmkstart AAAAAAABQA}
{\bkmkend AAAAAAABQA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 206} of file {\b embroidery.h}.}\par
}
{\xe \v width\:EmbImage_}
{\xe \v EmbImage_\:width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int width}}
\par
{\bkmkstart AAAAAAABQB}
{\bkmkend AAAAAAABQB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 209} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbInfiniteLine_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbInfiniteLine_}
{\xe \v EmbInfiniteLine_}
{\bkmkstart AAAAAAABQC}
{\bkmkend AAAAAAABQC}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbVector} {\b position}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 251} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v position\:EmbInfiniteLine_}
{\xe \v EmbInfiniteLine_\:position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} position}}
\par
{\bkmkstart AAAAAAABQD}
{\bkmkend AAAAAAABQD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 252} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbLayer_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbLayer_}
{\xe \v EmbLayer_}
{\bkmkstart AAAAAAABQE}
{\bkmkend AAAAAAABQE}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b name} [100]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbArray} * {\b geometry}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 417} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v geometry\:EmbLayer_}
{\xe \v EmbLayer_\:geometry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbArray}* geometry}}
\par
{\bkmkstart AAAAAAABQF}
{\bkmkend AAAAAAABQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 420} of file {\b embroidery.h}.}\par
}
{\xe \v name\:EmbLayer_}
{\xe \v EmbLayer_\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char name[100]}}
\par
{\bkmkstart AAAAAAABQG}
{\bkmkend AAAAAAABQG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 419} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbLeaderDim_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbLeaderDim_}
{\xe \v EmbLeaderDim_}
{\bkmkstart AAAAAAABQH}
{\bkmkend AAAAAAABQH}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbVector} {\b position}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 235} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v position\:EmbLeaderDim_}
{\xe \v EmbLeaderDim_\:position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} position}}
\par
{\bkmkstart AAAAAAABQI}
{\bkmkend AAAAAAABQI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 236} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbLine_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbLine_}
{\xe \v EmbLine_}
{\bkmkstart AAAAAAABQJ}
{\bkmkend AAAAAAABQJ}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbVector} {\b start}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbVector} {\b end}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lineType}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbColor} {\b color}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 287} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v color\:EmbLine_}
{\xe \v EmbLine_\:color}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbColor} color}}
\par
{\bkmkstart AAAAAAABQK}
{\bkmkend AAAAAAABQK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 292} of file {\b embroidery.h}.}\par
}
{\xe \v end\:EmbLine_}
{\xe \v EmbLine_\:end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} end}}
\par
{\bkmkstart AAAAAAABQL}
{\bkmkend AAAAAAABQL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 290} of file {\b embroidery.h}.}\par
}
{\xe \v lineType\:EmbLine_}
{\xe \v EmbLine_\:lineType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int lineType}}
\par
{\bkmkstart AAAAAAABQM}
{\bkmkend AAAAAAABQM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 291} of file {\b embroidery.h}.}\par
}
{\xe \v start\:EmbLine_}
{\xe \v EmbLine_\:start}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} start}}
\par
{\bkmkstart AAAAAAABQN}
{\bkmkend AAAAAAABQN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 289} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbLinearDim_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbLinearDim_}
{\xe \v EmbLinearDim_}
{\bkmkstart AAAAAAABQO}
{\bkmkend AAAAAAABQO}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbVector} {\b position}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 239} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v position\:EmbLinearDim_}
{\xe \v EmbLinearDim_\:position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} position}}
\par
{\bkmkstart AAAAAAABQP}
{\bkmkend AAAAAAABQP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 240} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbOrdinateDim_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbOrdinateDim_}
{\xe \v EmbOrdinateDim_}
{\bkmkstart AAAAAAABQQ}
{\bkmkend AAAAAAABQQ}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbVector} {\b position}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 243} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v position\:EmbOrdinateDim_}
{\xe \v EmbOrdinateDim_\:position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} position}}
\par
{\bkmkstart AAAAAAABQR}
{\bkmkend AAAAAAABQR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 244} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbPath_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbPath_}
{\xe \v EmbPath_}
{\bkmkstart AAAAAAABQS}
{\bkmkend AAAAAAABQS}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbArray} * {\b pointList}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbArray} * {\b flagList}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lineType}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbColor} {\b color}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 295} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v color\:EmbPath_}
{\xe \v EmbPath_\:color}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbColor} color}}
\par
{\bkmkstart AAAAAAABQT}
{\bkmkend AAAAAAABQT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 300} of file {\b embroidery.h}.}\par
}
{\xe \v flagList\:EmbPath_}
{\xe \v EmbPath_\:flagList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbArray}* flagList}}
\par
{\bkmkstart AAAAAAABQU}
{\bkmkend AAAAAAABQU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 298} of file {\b embroidery.h}.}\par
}
{\xe \v lineType\:EmbPath_}
{\xe \v EmbPath_\:lineType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int lineType}}
\par
{\bkmkstart AAAAAAABQV}
{\bkmkend AAAAAAABQV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 299} of file {\b embroidery.h}.}\par
}
{\xe \v pointList\:EmbPath_}
{\xe \v EmbPath_\:pointList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbArray}* pointList}}
\par
{\bkmkstart AAAAAAABQW}
{\bkmkend AAAAAAABQW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 297} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbPattern_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbPattern_}
{\xe \v EmbPattern_}
{\bkmkstart AAAAAAABQX}
{\bkmkend AAAAAAABQX}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b dstJumpsPerTrim}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbVector} {\b home}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbReal} {\b hoop_width}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbReal} {\b hoop_height}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbArray} * {\b thread_list}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbArray} * {\b stitch_list}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbArray} * {\b geometry}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbLayer} {\b layer} [{\b EMB_MAX_LAYERS}]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b currentColorIndex}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 423} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v currentColorIndex\:EmbPattern_}
{\xe \v EmbPattern_\:currentColorIndex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int currentColorIndex}}
\par
{\bkmkstart AAAAAAABQY}
{\bkmkend AAAAAAABQY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 433} of file {\b embroidery.h}.}\par
}
{\xe \v dstJumpsPerTrim\:EmbPattern_}
{\xe \v EmbPattern_\:dstJumpsPerTrim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int dstJumpsPerTrim}}
\par
{\bkmkstart AAAAAAABQZ}
{\bkmkend AAAAAAABQZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 425} of file {\b embroidery.h}.}\par
}
{\xe \v geometry\:EmbPattern_}
{\xe \v EmbPattern_\:geometry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbArray}* geometry}}
\par
{\bkmkstart AAAAAAABRA}
{\bkmkend AAAAAAABRA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 431} of file {\b embroidery.h}.}\par
}
{\xe \v home\:EmbPattern_}
{\xe \v EmbPattern_\:home}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} home}}
\par
{\bkmkstart AAAAAAABRB}
{\bkmkend AAAAAAABRB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 426} of file {\b embroidery.h}.}\par
}
{\xe \v hoop_height\:EmbPattern_}
{\xe \v EmbPattern_\:hoop_height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbReal} hoop_height}}
\par
{\bkmkstart AAAAAAABRC}
{\bkmkend AAAAAAABRC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 428} of file {\b embroidery.h}.}\par
}
{\xe \v hoop_width\:EmbPattern_}
{\xe \v EmbPattern_\:hoop_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbReal} hoop_width}}
\par
{\bkmkstart AAAAAAABRD}
{\bkmkend AAAAAAABRD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 427} of file {\b embroidery.h}.}\par
}
{\xe \v layer\:EmbPattern_}
{\xe \v EmbPattern_\:layer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbLayer} layer[{\b EMB_MAX_LAYERS}]}}
\par
{\bkmkstart AAAAAAABRE}
{\bkmkend AAAAAAABRE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 432} of file {\b embroidery.h}.}\par
}
{\xe \v stitch_list\:EmbPattern_}
{\xe \v EmbPattern_\:stitch_list}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbArray}* stitch_list}}
\par
{\bkmkstart AAAAAAABRF}
{\bkmkend AAAAAAABRF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 430} of file {\b embroidery.h}.}\par
}
{\xe \v thread_list\:EmbPattern_}
{\xe \v EmbPattern_\:thread_list}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbArray}* thread_list}}
\par
{\bkmkstart AAAAAAABRG}
{\bkmkend AAAAAAABRG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 429} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbPoint_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbPoint_}
{\xe \v EmbPoint_}
{\bkmkstart AAAAAAABRH}
{\bkmkend AAAAAAABRH}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbVector} {\b position}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lineType}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbColor} {\b color}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 280} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v color\:EmbPoint_}
{\xe \v EmbPoint_\:color}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbColor} color}}
\par
{\bkmkstart AAAAAAABRI}
{\bkmkend AAAAAAABRI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 284} of file {\b embroidery.h}.}\par
}
{\xe \v lineType\:EmbPoint_}
{\xe \v EmbPoint_\:lineType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int lineType}}
\par
{\bkmkstart AAAAAAABRJ}
{\bkmkend AAAAAAABRJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 283} of file {\b embroidery.h}.}\par
}
{\xe \v position\:EmbPoint_}
{\xe \v EmbPoint_\:position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} position}}
\par
{\bkmkstart AAAAAAABRK}
{\bkmkend AAAAAAABRK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 282} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbRadiusDim_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbRadiusDim_}
{\xe \v EmbRadiusDim_}
{\bkmkstart AAAAAAABRL}
{\bkmkend AAAAAAABRL}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbVector} {\b position}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 247} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v position\:EmbRadiusDim_}
{\xe \v EmbRadiusDim_\:position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} position}}
\par
{\bkmkstart AAAAAAABRM}
{\bkmkend AAAAAAABRM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 248} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbRay_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbRay_}
{\xe \v EmbRay_}
{\bkmkstart AAAAAAABRN}
{\bkmkend AAAAAAABRN}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbVector} {\b position}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 255} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v position\:EmbRay_}
{\xe \v EmbRay_\:position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} position}}
\par
{\bkmkstart AAAAAAABRO}
{\bkmkend AAAAAAABRO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 256} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbRect_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbRect_}
{\xe \v EmbRect_}
{\bkmkstart AAAAAAABRP}
{\bkmkend AAAAAAABRP}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbReal} {\b top}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbReal} {\b left}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbReal} {\b bottom}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbReal} {\b right}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbReal} {\b rotation}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbReal} {\b radius}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 333} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v bottom\:EmbRect_}
{\xe \v EmbRect_\:bottom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbReal} bottom}}
\par
{\bkmkstart AAAAAAABRQ}
{\bkmkend AAAAAAABRQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 337} of file {\b embroidery.h}.}\par
}
{\xe \v left\:EmbRect_}
{\xe \v EmbRect_\:left}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbReal} left}}
\par
{\bkmkstart AAAAAAABRR}
{\bkmkend AAAAAAABRR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 336} of file {\b embroidery.h}.}\par
}
{\xe \v radius\:EmbRect_}
{\xe \v EmbRect_\:radius}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbReal} radius}}
\par
{\bkmkstart AAAAAAABRS}
{\bkmkend AAAAAAABRS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 340} of file {\b embroidery.h}.}\par
}
{\xe \v right\:EmbRect_}
{\xe \v EmbRect_\:right}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbReal} right}}
\par
{\bkmkstart AAAAAAABRT}
{\bkmkend AAAAAAABRT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 338} of file {\b embroidery.h}.}\par
}
{\xe \v rotation\:EmbRect_}
{\xe \v EmbRect_\:rotation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbReal} rotation}}
\par
{\bkmkstart AAAAAAABRU}
{\bkmkend AAAAAAABRU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 339} of file {\b embroidery.h}.}\par
}
{\xe \v top\:EmbRect_}
{\xe \v EmbRect_\:top}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbReal} top}}
\par
{\bkmkstart AAAAAAABRV}
{\bkmkend AAAAAAABRV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 335} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbSatinOutline_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbSatinOutline_}
{\xe \v EmbSatinOutline_}
{\bkmkstart AAAAAAABRW}
{\bkmkend AAAAAAABRW}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b length}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbArray} * {\b side1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbArray} * {\b side2}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 353} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v length\:EmbSatinOutline_}
{\xe \v EmbSatinOutline_\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int length}}
\par
{\bkmkstart AAAAAAABRX}
{\bkmkend AAAAAAABRX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 355} of file {\b embroidery.h}.}\par
}
{\xe \v side1\:EmbSatinOutline_}
{\xe \v EmbSatinOutline_\:side1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbArray}* side1}}
\par
{\bkmkstart AAAAAAABRY}
{\bkmkend AAAAAAABRY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 356} of file {\b embroidery.h}.}\par
}
{\xe \v side2\:EmbSatinOutline_}
{\xe \v EmbSatinOutline_\:side2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbArray}* side2}}
\par
{\bkmkstart AAAAAAABRZ}
{\bkmkend AAAAAAABRZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 357} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbSpline_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbSpline_}
{\xe \v EmbSpline_}
{\bkmkstart AAAAAAABSA}
{\bkmkend AAAAAAABSA}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbArray} * {\b beziers}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 374} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v beziers\:EmbSpline_}
{\xe \v EmbSpline_\:beziers}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbArray}* beziers}}
\par
{\bkmkstart AAAAAAABSB}
{\bkmkend AAAAAAABSB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 375} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbStitch_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbStitch_}
{\xe \v EmbStitch_}
{\bkmkstart AAAAAAABSC}
{\bkmkend AAAAAAABSC}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b flags}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbReal} {\b x}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbReal} {\b y}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b color}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 303} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v color\:EmbStitch_}
{\xe \v EmbStitch_\:color}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int color}}
\par
{\bkmkstart AAAAAAABSD}
{\bkmkend AAAAAAABSD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 308} of file {\b embroidery.h}.}\par
}
{\xe \v flags\:EmbStitch_}
{\xe \v EmbStitch_\:flags}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int flags}}
\par
{\bkmkstart AAAAAAABSE}
{\bkmkend AAAAAAABSE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 305} of file {\b embroidery.h}.}\par
}
{\xe \v x\:EmbStitch_}
{\xe \v EmbStitch_\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbReal} x}}
\par
{\bkmkstart AAAAAAABSF}
{\bkmkend AAAAAAABSF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 306} of file {\b embroidery.h}.}\par
}
{\xe \v y\:EmbStitch_}
{\xe \v EmbStitch_\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbReal} y}}
\par
{\bkmkstart AAAAAAABSG}
{\bkmkend AAAAAAABSG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 307} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbTextMulti_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbTextMulti_}
{\xe \v EmbTextMulti_}
{\bkmkstart AAAAAAABSH}
{\bkmkend AAAAAAABSH}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbVector} {\b position}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b text} [200]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 259} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v position\:EmbTextMulti_}
{\xe \v EmbTextMulti_\:position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} position}}
\par
{\bkmkstart AAAAAAABSI}
{\bkmkend AAAAAAABSI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 260} of file {\b embroidery.h}.}\par
}
{\xe \v text\:EmbTextMulti_}
{\xe \v EmbTextMulti_\:text}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char text[200]}}
\par
{\bkmkstart AAAAAAABSJ}
{\bkmkend AAAAAAABSJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 261} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbTextSingle_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbTextSingle_}
{\xe \v EmbTextSingle_}
{\bkmkstart AAAAAAABSK}
{\bkmkend AAAAAAABSK}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbVector} {\b position}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b text} [200]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 264} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v position\:EmbTextSingle_}
{\xe \v EmbTextSingle_\:position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbVector} position}}
\par
{\bkmkstart AAAAAAABSL}
{\bkmkend AAAAAAABSL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 265} of file {\b embroidery.h}.}\par
}
{\xe \v text\:EmbTextSingle_}
{\xe \v EmbTextSingle_\:text}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char text[200]}}
\par
{\bkmkstart AAAAAAABSM}
{\bkmkend AAAAAAABSM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 266} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbThread_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbThread_}
{\xe \v EmbThread_}
{\bkmkstart AAAAAAABSN}
{\bkmkend AAAAAAABSN}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbColor} {\b color}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b description} [50]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b catalogNumber} [30]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 312} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v catalogNumber\:EmbThread_}
{\xe \v EmbThread_\:catalogNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char catalogNumber[30]}}
\par
{\bkmkstart AAAAAAABSO}
{\bkmkend AAAAAAABSO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 316} of file {\b embroidery.h}.}\par
}
{\xe \v color\:EmbThread_}
{\xe \v EmbThread_\:color}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbColor} color}}
\par
{\bkmkstart AAAAAAABSP}
{\bkmkend AAAAAAABSP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 314} of file {\b embroidery.h}.}\par
}
{\xe \v description\:EmbThread_}
{\xe \v EmbThread_\:description}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char description[50]}}
\par
{\bkmkstart AAAAAAABSQ}
{\bkmkend AAAAAAABSQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 315} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbTime_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbTime_}
{\xe \v EmbTime_}
{\bkmkstart AAAAAAABSR}
{\bkmkend AAAAAAABSR}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b year}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b month}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b day}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b hour}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b minute}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b second}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 269} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v day\:EmbTime_}
{\xe \v EmbTime_\:day}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int day}}
\par
{\bkmkstart AAAAAAABSS}
{\bkmkend AAAAAAABSS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 273} of file {\b embroidery.h}.}\par
}
{\xe \v hour\:EmbTime_}
{\xe \v EmbTime_\:hour}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int hour}}
\par
{\bkmkstart AAAAAAABST}
{\bkmkend AAAAAAABST}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 274} of file {\b embroidery.h}.}\par
}
{\xe \v minute\:EmbTime_}
{\xe \v EmbTime_\:minute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int minute}}
\par
{\bkmkstart AAAAAAABSU}
{\bkmkend AAAAAAABSU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 275} of file {\b embroidery.h}.}\par
}
{\xe \v month\:EmbTime_}
{\xe \v EmbTime_\:month}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int month}}
\par
{\bkmkstart AAAAAAABSV}
{\bkmkend AAAAAAABSV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 272} of file {\b embroidery.h}.}\par
}
{\xe \v second\:EmbTime_}
{\xe \v EmbTime_\:second}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int second}}
\par
{\bkmkstart AAAAAAABSW}
{\bkmkend AAAAAAABSW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 276} of file {\b embroidery.h}.}\par
}
{\xe \v year\:EmbTime_}
{\xe \v EmbTime_\:year}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int year}}
\par
{\bkmkstart AAAAAAABSX}
{\bkmkend AAAAAAABSX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 271} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
EmbVector_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v EmbVector_}
{\xe \v EmbVector_}
{\bkmkstart AAAAAAABSY}
{\bkmkend AAAAAAABSY}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbReal} {\b x}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbReal} {\b y}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The basic type to represent points absolutely or represent directions.\par
Positive y is up, units are in mm. \par
}{
Definition at line {\b 194} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v x\:EmbVector_}
{\xe \v EmbVector_\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbReal} x}}
\par
{\bkmkstart AAAAAAABSZ}
{\bkmkend AAAAAAABSZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 196} of file {\b embroidery.h}.}\par
}
{\xe \v y\:EmbVector_}
{\xe \v EmbVector_\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbReal} y}}
\par
{\bkmkstart AAAAAAABTA}
{\bkmkend AAAAAAABTA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 197} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Huffman Struct Reference\par \pard\plain 
{\tc\tcl2 \v Huffman}
{\xe \v Huffman}
{\bkmkstart AAAAAAABTB}
{\bkmkend AAAAAAABTB}
\par
{
{\f2 #include <embroidery_internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b default_value}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lengths} [1000]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b nlengths}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b table} [1000]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b table_width}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ntable}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 359} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v default_value\:Huffman}
{\xe \v Huffman\:default_value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int default_value}}
\par
{\bkmkstart AAAAAAABTC}
{\bkmkend AAAAAAABTC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 360} of file {\b embroidery_internal.h}.}\par
}
{\xe \v lengths\:Huffman}
{\xe \v Huffman\:lengths}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int lengths[1000]}}
\par
{\bkmkstart AAAAAAABTD}
{\bkmkend AAAAAAABTD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 361} of file {\b embroidery_internal.h}.}\par
}
{\xe \v nlengths\:Huffman}
{\xe \v Huffman\:nlengths}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int nlengths}}
\par
{\bkmkstart AAAAAAABTE}
{\bkmkend AAAAAAABTE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 362} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ntable\:Huffman}
{\xe \v Huffman\:ntable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ntable}}
\par
{\bkmkstart AAAAAAABTF}
{\bkmkend AAAAAAABTF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 365} of file {\b embroidery_internal.h}.}\par
}
{\xe \v table\:Huffman}
{\xe \v Huffman\:table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int table[1000]}}
\par
{\bkmkstart AAAAAAABTG}
{\bkmkend AAAAAAABTG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 363} of file {\b embroidery_internal.h}.}\par
}
{\xe \v table_width\:Huffman}
{\xe \v Huffman\:table_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int table_width}}
\par
{\bkmkstart AAAAAAABTH}
{\bkmkend AAAAAAABTH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 364} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery_internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
LSYSTEM Struct Reference\par \pard\plain 
{\tc\tcl2 \v LSYSTEM}
{\xe \v LSYSTEM}
{\bkmkstart AAAAAAABTI}
{\bkmkend AAAAAAABTI}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b axiom}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b alphabet}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b constants}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char ** {\b rules}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 378} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v alphabet\:LSYSTEM}
{\xe \v LSYSTEM\:alphabet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* alphabet}}
\par
{\bkmkstart AAAAAAABTJ}
{\bkmkend AAAAAAABTJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 380} of file {\b embroidery.h}.}\par
}
{\xe \v axiom\:LSYSTEM}
{\xe \v LSYSTEM\:axiom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char axiom}}
\par
{\bkmkstart AAAAAAABTK}
{\bkmkend AAAAAAABTK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 379} of file {\b embroidery.h}.}\par
}
{\xe \v constants\:LSYSTEM}
{\xe \v LSYSTEM\:constants}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* constants}}
\par
{\bkmkstart AAAAAAABTL}
{\bkmkend AAAAAAABTL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 381} of file {\b embroidery.h}.}\par
}
{\xe \v rules\:LSYSTEM}
{\xe \v LSYSTEM\:rules}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char** rules}}
\par
{\bkmkstart AAAAAAABTM}
{\bkmkend AAAAAAABTM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 382} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
StxThread_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v StxThread_}
{\xe \v StxThread_}
{\bkmkstart AAAAAAABTN}
{\bkmkend AAAAAAABTN}
\par
{
{\f2 #include <embroidery_internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b colorCode}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b colorName}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b sectionName}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SubDescriptor} * {\b subDescriptors}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbColor} {\b stxColor}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 311} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v colorCode\:StxThread_}
{\xe \v StxThread_\:colorCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* colorCode}}
\par
{\bkmkstart AAAAAAABTO}
{\bkmkend AAAAAAABTO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 313} of file {\b embroidery_internal.h}.}\par
}
{\xe \v colorName\:StxThread_}
{\xe \v StxThread_\:colorName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* colorName}}
\par
{\bkmkstart AAAAAAABTP}
{\bkmkend AAAAAAABTP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 314} of file {\b embroidery_internal.h}.}\par
}
{\xe \v sectionName\:StxThread_}
{\xe \v StxThread_\:sectionName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* sectionName}}
\par
{\bkmkstart AAAAAAABTQ}
{\bkmkend AAAAAAABTQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 315} of file {\b embroidery_internal.h}.}\par
}
{\xe \v stxColor\:StxThread_}
{\xe \v StxThread_\:stxColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbColor} stxColor}}
\par
{\bkmkstart AAAAAAABTR}
{\bkmkend AAAAAAABTR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 317} of file {\b embroidery_internal.h}.}\par
}
{\xe \v subDescriptors\:StxThread_}
{\xe \v StxThread_\:subDescriptors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SubDescriptor}* subDescriptors}}
\par
{\bkmkstart AAAAAAABTS}
{\bkmkend AAAAAAABTS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 316} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery_internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SubDescriptor_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v SubDescriptor_}
{\xe \v SubDescriptor_}
{\bkmkstart AAAAAAABTT}
{\bkmkend AAAAAAABTT}
\par
{
{\f2 #include <embroidery_internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b someNum}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b someInt}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b someOtherInt}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b colorCode}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b colorName}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 302} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v colorCode\:SubDescriptor_}
{\xe \v SubDescriptor_\:colorCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* colorCode}}
\par
{\bkmkstart AAAAAAABTU}
{\bkmkend AAAAAAABTU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 307} of file {\b embroidery_internal.h}.}\par
}
{\xe \v colorName\:SubDescriptor_}
{\xe \v SubDescriptor_\:colorName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* colorName}}
\par
{\bkmkstart AAAAAAABTV}
{\bkmkend AAAAAAABTV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 308} of file {\b embroidery_internal.h}.}\par
}
{\xe \v someInt\:SubDescriptor_}
{\xe \v SubDescriptor_\:someInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int someInt}}
\par
{\bkmkstart AAAAAAABTW}
{\bkmkend AAAAAAABTW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 305} of file {\b embroidery_internal.h}.}\par
}
{\xe \v someNum\:SubDescriptor_}
{\xe \v SubDescriptor_\:someNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int someNum}}
\par
{\bkmkstart AAAAAAABTX}
{\bkmkend AAAAAAABTX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 304} of file {\b embroidery_internal.h}.}\par
}
{\xe \v someOtherInt\:SubDescriptor_}
{\xe \v SubDescriptor_\:someOtherInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int someOtherInt}}
\par
{\bkmkstart AAAAAAABTY}
{\bkmkend AAAAAAABTY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 306} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery_internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
SvgAttribute_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v SvgAttribute_}
{\xe \v SvgAttribute_}
{\bkmkstart AAAAAAABTZ}
{\bkmkend AAAAAAABTZ}
\par
{
{\f2 #include <embroidery_internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b name}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b value}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 353} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v name\:SvgAttribute_}
{\xe \v SvgAttribute_\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* name}}
\par
{\bkmkstart AAAAAAABUA}
{\bkmkend AAAAAAABUA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 355} of file {\b embroidery_internal.h}.}\par
}
{\xe \v value\:SvgAttribute_}
{\xe \v SvgAttribute_\:value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* value}}
\par
{\bkmkstart AAAAAAABUB}
{\bkmkend AAAAAAABUB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 356} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery_internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
thread_color_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v thread_color_}
{\xe \v thread_color_}
{\bkmkstart AAAAAAABUC}
{\bkmkend AAAAAAABUC}
\par
{
{\f2 #include <embroidery.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b name} [22]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b hex_code}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b manufacturer_code}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 319} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v hex_code\:thread_color_}
{\xe \v thread_color_\:hex_code}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int hex_code}}
\par
{\bkmkstart AAAAAAABUD}
{\bkmkend AAAAAAABUD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 321} of file {\b embroidery.h}.}\par
}
{\xe \v manufacturer_code\:thread_color_}
{\xe \v thread_color_\:manufacturer_code}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int manufacturer_code}}
\par
{\bkmkstart AAAAAAABUE}
{\bkmkend AAAAAAABUE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 322} of file {\b embroidery.h}.}\par
}
{\xe \v name\:thread_color_}
{\xe \v thread_color_\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char name[22]}}
\par
{\bkmkstart AAAAAAABUF}
{\bkmkend AAAAAAABUF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 320} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ThredExtension_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v ThredExtension_}
{\xe \v ThredExtension_}
{\bkmkstart AAAAAAABUG}
{\bkmkend AAAAAAABUG}
\par
{
{\f2 #include <embroidery_internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b hoopX}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b hoopY}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b stitchGranularity}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b creatorName} [50]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b modifierName} [50]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b auxFormat}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b reserved} [31]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 291} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v auxFormat\:ThredExtension_}
{\xe \v ThredExtension_\:auxFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char auxFormat}}
\par
{\bkmkstart AAAAAAABUH}
{\bkmkend AAAAAAABUH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 298} of file {\b embroidery_internal.h}.}\par
}
{\xe \v creatorName\:ThredExtension_}
{\xe \v ThredExtension_\:creatorName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char creatorName[50]}}
\par
{\bkmkstart AAAAAAABUI}
{\bkmkend AAAAAAABUI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 296} of file {\b embroidery_internal.h}.}\par
}
{\xe \v hoopX\:ThredExtension_}
{\xe \v ThredExtension_\:hoopX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float hoopX}}
\par
{\bkmkstart AAAAAAABUJ}
{\bkmkend AAAAAAABUJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 293} of file {\b embroidery_internal.h}.}\par
}
{\xe \v hoopY\:ThredExtension_}
{\xe \v ThredExtension_\:hoopY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float hoopY}}
\par
{\bkmkstart AAAAAAABUK}
{\bkmkend AAAAAAABUK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 294} of file {\b embroidery_internal.h}.}\par
}
{\xe \v modifierName\:ThredExtension_}
{\xe \v ThredExtension_\:modifierName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char modifierName[50]}}
\par
{\bkmkstart AAAAAAABUL}
{\bkmkend AAAAAAABUL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 297} of file {\b embroidery_internal.h}.}\par
}
{\xe \v reserved\:ThredExtension_}
{\xe \v ThredExtension_\:reserved}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char reserved[31]}}
\par
{\bkmkstart AAAAAAABUM}
{\bkmkend AAAAAAABUM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 299} of file {\b embroidery_internal.h}.}\par
}
{\xe \v stitchGranularity\:ThredExtension_}
{\xe \v ThredExtension_\:stitchGranularity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float stitchGranularity}}
\par
{\bkmkstart AAAAAAABUN}
{\bkmkend AAAAAAABUN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 295} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery_internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ThredHeader_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v ThredHeader_}
{\xe \v ThredHeader_}
{\bkmkstart AAAAAAABUO}
{\bkmkend AAAAAAABUO}
\par
{
{\f2 #include <embroidery_internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b sigVersion}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b length}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned short {\b numStiches}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned short {\b hoopSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned short {\b reserved} [7]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 282} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v hoopSize\:ThredHeader_}
{\xe \v ThredHeader_\:hoopSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short hoopSize}}
\par
{\bkmkstart AAAAAAABUP}
{\bkmkend AAAAAAABUP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 287} of file {\b embroidery_internal.h}.}\par
}
{\xe \v length\:ThredHeader_}
{\xe \v ThredHeader_\:length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int length}}
\par
{\bkmkstart AAAAAAABUQ}
{\bkmkend AAAAAAABUQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 285} of file {\b embroidery_internal.h}.}\par
}
{\xe \v numStiches\:ThredHeader_}
{\xe \v ThredHeader_\:numStiches}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short numStiches}}
\par
{\bkmkstart AAAAAAABUR}
{\bkmkend AAAAAAABUR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 286} of file {\b embroidery_internal.h}.}\par
}
{\xe \v reserved\:ThredHeader_}
{\xe \v ThredHeader_\:reserved}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short reserved[7]}}
\par
{\bkmkstart AAAAAAABUS}
{\bkmkend AAAAAAABUS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 288} of file {\b embroidery_internal.h}.}\par
}
{\xe \v sigVersion\:ThredHeader_}
{\xe \v ThredHeader_\:sigVersion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int sigVersion}}
\par
{\bkmkstart AAAAAAABUT}
{\bkmkend AAAAAAABUT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 284} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery_internal.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
VipHeader_ Struct Reference\par \pard\plain 
{\tc\tcl2 \v VipHeader_}
{\xe \v VipHeader_}
{\bkmkstart AAAAAAABUU}
{\bkmkend AAAAAAABUU}
\par
{
{\f2 #include <embroidery_internal.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Fields\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b magicCode}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b numberOfStitches}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b numberOfColors}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b postitiveXHoopSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b postitiveYHoopSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b negativeXHoopSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b negativeYHoopSize}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b attributeOffset}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b xOffset}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b yOffset}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b stringVal} [8]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b unknown}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b colorLength}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line {\b 320} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Field Documentation\par
\pard\plain 
{\xe \v attributeOffset\:VipHeader_}
{\xe \v VipHeader_\:attributeOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int attributeOffset}}
\par
{\bkmkstart AAAAAAABUV}
{\bkmkend AAAAAAABUV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 328} of file {\b embroidery_internal.h}.}\par
}
{\xe \v colorLength\:VipHeader_}
{\xe \v VipHeader_\:colorLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int colorLength}}
\par
{\bkmkstart AAAAAAABUW}
{\bkmkend AAAAAAABUW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 333} of file {\b embroidery_internal.h}.}\par
}
{\xe \v magicCode\:VipHeader_}
{\xe \v VipHeader_\:magicCode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int magicCode}}
\par
{\bkmkstart AAAAAAABUX}
{\bkmkend AAAAAAABUX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 321} of file {\b embroidery_internal.h}.}\par
}
{\xe \v negativeXHoopSize\:VipHeader_}
{\xe \v VipHeader_\:negativeXHoopSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short negativeXHoopSize}}
\par
{\bkmkstart AAAAAAABUY}
{\bkmkend AAAAAAABUY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 326} of file {\b embroidery_internal.h}.}\par
}
{\xe \v negativeYHoopSize\:VipHeader_}
{\xe \v VipHeader_\:negativeYHoopSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short negativeYHoopSize}}
\par
{\bkmkstart AAAAAAABUZ}
{\bkmkend AAAAAAABUZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 327} of file {\b embroidery_internal.h}.}\par
}
{\xe \v numberOfColors\:VipHeader_}
{\xe \v VipHeader_\:numberOfColors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int numberOfColors}}
\par
{\bkmkstart AAAAAAABVA}
{\bkmkend AAAAAAABVA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 323} of file {\b embroidery_internal.h}.}\par
}
{\xe \v numberOfStitches\:VipHeader_}
{\xe \v VipHeader_\:numberOfStitches}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int numberOfStitches}}
\par
{\bkmkstart AAAAAAABVB}
{\bkmkend AAAAAAABVB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 322} of file {\b embroidery_internal.h}.}\par
}
{\xe \v postitiveXHoopSize\:VipHeader_}
{\xe \v VipHeader_\:postitiveXHoopSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short postitiveXHoopSize}}
\par
{\bkmkstart AAAAAAABVC}
{\bkmkend AAAAAAABVC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 324} of file {\b embroidery_internal.h}.}\par
}
{\xe \v postitiveYHoopSize\:VipHeader_}
{\xe \v VipHeader_\:postitiveYHoopSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short postitiveYHoopSize}}
\par
{\bkmkstart AAAAAAABVD}
{\bkmkend AAAAAAABVD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 325} of file {\b embroidery_internal.h}.}\par
}
{\xe \v stringVal\:VipHeader_}
{\xe \v VipHeader_\:stringVal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char stringVal[8]}}
\par
{\bkmkstart AAAAAAABVE}
{\bkmkend AAAAAAABVE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 331} of file {\b embroidery_internal.h}.}\par
}
{\xe \v unknown\:VipHeader_}
{\xe \v VipHeader_\:unknown}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short unknown}}
\par
{\bkmkstart AAAAAAABVF}
{\bkmkend AAAAAAABVF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 332} of file {\b embroidery_internal.h}.}\par
}
{\xe \v xOffset\:VipHeader_}
{\xe \v VipHeader_\:xOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int xOffset}}
\par
{\bkmkstart AAAAAAABVG}
{\bkmkend AAAAAAABVG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 329} of file {\b embroidery_internal.h}.}\par
}
{\xe \v yOffset\:VipHeader_}
{\xe \v VipHeader_\:yOffset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int yOffset}}
\par
{\bkmkstart AAAAAAABVH}
{\bkmkend AAAAAAABVH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 330} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
src/{\b embroidery_internal.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/array.c File Reference\par \pard\plain 
{\tc\tcl2 \v src/array.c}
{\xe \v src/array.c}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "embroidery_internal.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbArray} * {\b embArray_create} (int type)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b embArray_resize} ({\b EmbArray} *a)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embArray_copy} ({\b EmbArray} *dst, {\b EmbArray} *src)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b embArray_addArc} ({\b EmbArray} *a, {\b EmbArc} b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b embArray_addCircle} ({\b EmbArray} *a, {\b EmbCircle} b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b embArray_addEllipse} ({\b EmbArray} *a, {\b EmbEllipse} b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b embArray_addFlag} ({\b EmbArray} *a, {\b EmbFlag} b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b embArray_addLine} ({\b EmbArray} *a, {\b EmbLine} b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b embArray_addPath} ({\b EmbArray} *a, {\b EmbPath} b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b embArray_addPoint} ({\b EmbArray} *a, {\b EmbPoint} b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b embArray_addPolyline} ({\b EmbArray} *a, {\b EmbPolyline} b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b embArray_addPolygon} ({\b EmbArray} *a, {\b EmbPolygon} b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b embArray_addRect} ({\b EmbArray} *a, {\b EmbRect} b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b embArray_addStitch} ({\b EmbArray} *a, {\b EmbStitch} b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b embArray_addVector} ({\b EmbArray} *a, {\b EmbVector} b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embArray_free} ({\b EmbArray} *a)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v embArray_addArc\:array.c}
{\xe \v array.c\:embArray_addArc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int embArray_addArc ({\b EmbArray} *  {\i a}, {\b EmbArc}  {\i b})}}
\par
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 96} of file {\b array.c}.}\par
}
{\xe \v embArray_addCircle\:array.c}
{\xe \v array.c\:embArray_addCircle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int embArray_addCircle ({\b EmbArray} *  {\i a}, {\b EmbCircle}  {\i b})}}
\par
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 108} of file {\b array.c}.}\par
}
{\xe \v embArray_addEllipse\:array.c}
{\xe \v array.c\:embArray_addEllipse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int embArray_addEllipse ({\b EmbArray} *  {\i a}, {\b EmbEllipse}  {\i b})}}
\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 120} of file {\b array.c}.}\par
}
{\xe \v embArray_addFlag\:array.c}
{\xe \v array.c\:embArray_addFlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int embArray_addFlag ({\b EmbArray} *  {\i a}, {\b EmbFlag}  {\i b})}}
\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 132} of file {\b array.c}.}\par
}
{\xe \v embArray_addLine\:array.c}
{\xe \v array.c\:embArray_addLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int embArray_addLine ({\b EmbArray} *  {\i a}, {\b EmbLine}  {\i b})}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 144} of file {\b array.c}.}\par
}
{\xe \v embArray_addPath\:array.c}
{\xe \v array.c\:embArray_addPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int embArray_addPath ({\b EmbArray} *  {\i a}, {\b EmbPath}  {\i b})}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 156} of file {\b array.c}.}\par
}
{\xe \v embArray_addPoint\:array.c}
{\xe \v array.c\:embArray_addPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int embArray_addPoint ({\b EmbArray} *  {\i a}, {\b EmbPoint}  {\i b})}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 168} of file {\b array.c}.}\par
}
{\xe \v embArray_addPolygon\:array.c}
{\xe \v array.c\:embArray_addPolygon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int embArray_addPolygon ({\b EmbArray} *  {\i a}, {\b EmbPolygon}  {\i b})}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 192} of file {\b array.c}.}\par
}
{\xe \v embArray_addPolyline\:array.c}
{\xe \v array.c\:embArray_addPolyline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int embArray_addPolyline ({\b EmbArray} *  {\i a}, {\b EmbPolyline}  {\i b})}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 180} of file {\b array.c}.}\par
}
{\xe \v embArray_addRect\:array.c}
{\xe \v array.c\:embArray_addRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int embArray_addRect ({\b EmbArray} *  {\i a}, {\b EmbRect}  {\i b})}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 204} of file {\b array.c}.}\par
}
{\xe \v embArray_addStitch\:array.c}
{\xe \v array.c\:embArray_addStitch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int embArray_addStitch ({\b EmbArray} *  {\i a}, {\b EmbStitch}  {\i b})}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 216} of file {\b array.c}.}\par
}
{\xe \v embArray_addVector\:array.c}
{\xe \v array.c\:embArray_addVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int embArray_addVector ({\b EmbArray} *  {\i a}, {\b EmbVector}  {\i b})}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 227} of file {\b array.c}.}\par
}
{\xe \v embArray_copy\:array.c}
{\xe \v array.c\:embArray_copy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embArray_copy ({\b EmbArray} *  {\i dst}, {\b EmbArray} *  {\i src})}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 74} of file {\b array.c}.}\par
}
{\xe \v embArray_create\:array.c}
{\xe \v array.c\:embArray_create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbArray} * embArray_create (int  {\i type})}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b array.c}.}\par
}
{\xe \v embArray_free\:array.c}
{\xe \v array.c\:embArray_free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embArray_free ({\b EmbArray} *  {\i a})}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 239} of file {\b array.c}.}\par
}
{\xe \v embArray_resize\:array.c}
{\xe \v array.c\:embArray_resize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int embArray_resize ({\b EmbArray} *  {\i a})}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 41} of file {\b array.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
array.c\par \pard\plain 
{\tc\tcl2 \v src/array.c}
{\xe \v src/array.c}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * This file is part of libembroidery.}\par
00003 {\cf20  *}\par
00004 {\cf20  * Copyright 2018-2022 The Embroidermodder Team}\par
00005 {\cf20  * Licensed under the terms of the zlib license.}\par
00006 {\cf20  *}\par
00007 {\cf20  * ---------------------------------------------------------}\par
00008 {\cf20  *}\par
00009 {\cf20  * The array management for libembroidery's arrays.}\par
00010 {\cf20  */}\par
00011 \par
00012 {\cf21 #include <stdio.h>}\par
00013 {\cf21 #include <stdlib.h>}\par
00014 {\cf21 #include <string.h>}\par
00015 \par
00016 {\cf21 #include "embroidery_internal.h"}\par
00017 \par
00018 EmbArray*\par
00019 embArray_create({\cf18 int} type)\par
00020 \{\par
00021     EmbArray *a;\par
00022     a = (EmbArray*)malloc({\cf17 sizeof}(EmbArray));\par
00023     a->type = type;\par
00024     a->length = CHUNK_SIZE;\par
00025     a->count = 0;\par
00026     {\cf19 switch} (type) \{\par
00027     {\cf19 case} EMB_STITCH:\par
00028         a->stitch = (EmbStitch*)malloc(CHUNK_SIZE*{\cf17 sizeof}(EmbStitch));\par
00029         {\cf19 break};\par
00030     {\cf19 case} EMB_THREAD:\par
00031         a->thread = (EmbThread*)malloc(CHUNK_SIZE*{\cf17 sizeof}(EmbThread));\par
00032         {\cf19 break};\par
00033     {\cf19 default}:\par
00034         a->geometry = (EmbGeometry*)malloc(CHUNK_SIZE*{\cf17 sizeof}(EmbGeometry));\par
00035         {\cf19 break};\par
00036     \}\par
00037     {\cf19 return} a;\par
00038 \}\par
00039 \par
00040 {\cf18 int}\par
00041 embArray_resize(EmbArray *a)\par
00042 \{\par
00043     {\cf19 if} (a->count < a->length) \{\par
00044         {\cf19 return} 1;\par
00045     \}\par
00046     a->length += CHUNK_SIZE;\par
00047     {\cf19 switch} (a->type) \{\par
00048     {\cf19 case} EMB_STITCH:\par
00049         a->stitch = (EmbStitch*)realloc(a->stitch, a->length*{\cf17 sizeof}(EmbStitch));\par
00050         {\cf19 if} (!a->stitch) \{\par
00051             {\cf20 /* TODO: Error reporting */}\par
00052             {\cf19 return} 0;\par
00053         \}\par
00054         {\cf19 break};\par
00055     {\cf19 case} EMB_THREAD:\par
00056         a->thread = (EmbThread*)realloc(a->thread, a->length*{\cf17 sizeof}(EmbThread));\par
00057         {\cf19 if} (!a->thread) \{\par
00058             {\cf20 /* TODO: Error reporting */}\par
00059             {\cf19 return} 0;\par
00060         \}\par
00061         {\cf19 break};\par
00062     {\cf19 default}:\par
00063         a->geometry = (EmbGeometry *)realloc(a->geometry, a->length*{\cf17 sizeof}(EmbGeometry));\par
00064         {\cf19 if} (!a->geometry) \{\par
00065             {\cf20 /* TODO: Error reporting */}\par
00066             {\cf19 return} 0;\par
00067         \}\par
00068         {\cf19 break};\par
00069     \}\par
00070     \par
00071     {\cf19 return} 1;\par
00072 \}\par
00073 \par
00074 {\cf18 void} embArray_copy(EmbArray *dst, EmbArray *src)\par
00075 \{\par
00076     dst = embArray_create(src->type);\par
00077     dst->length = src->length;\par
00078     dst->count = src->count;\par
00079     embArray_resize(dst);\par
00080     {\cf20 /* BUG: Potential failure to copy path memory, only copy pointers? */}\par
00081 \par
00082     {\cf19 switch} (dst->type) \{\par
00083     {\cf19 case} EMB_STITCH:\par
00084         memcpy(dst->stitch, src->stitch, {\cf17 sizeof}(EmbStitch)*src->count);\par
00085         {\cf19 break};\par
00086     {\cf19 case} EMB_THREAD:\par
00087         memcpy(dst->thread, src->thread, {\cf17 sizeof}(EmbThread)*src->count);\par
00088         {\cf19 break};\par
00089     {\cf19 default}:\par
00090         memcpy(dst->geometry, src->geometry, {\cf17 sizeof}(EmbGeometry)*src->count);\par
00091         {\cf19 break};\par
00092     \}\par
00093 \}\par
00094 \par
00095 {\cf18 int}\par
00096 embArray_addArc(EmbArray *a, EmbArc b)\par
00097 \{\par
00098     a->count++;\par
00099     {\cf19 if} (!embArray_resize(a)) \{\par
00100         {\cf19 return} 0;\par
00101     \}\par
00102     a->geometry[a->count - 1].object.arc = b;\par
00103     a->geometry[a->count - 1].type = EMB_ARC;\par
00104     {\cf19 return} 1;\par
00105 \}\par
00106 \par
00107 {\cf18 int}\par
00108 embArray_addCircle(EmbArray *a, EmbCircle b)\par
00109 \{\par
00110     a->count++;\par
00111     {\cf19 if} (!embArray_resize(a)) \{\par
00112         {\cf19 return} 0;\par
00113     \}\par
00114     a->geometry[a->count - 1].object.circle = b;\par
00115     a->geometry[a->count - 1].type = EMB_CIRCLE;\par
00116     {\cf19 return} 1;\par
00117 \}\par
00118 \par
00119 {\cf18 int}\par
00120 embArray_addEllipse(EmbArray *a, EmbEllipse b)\par
00121 \{\par
00122     a->count++;\par
00123     {\cf19 if} (!embArray_resize(a)) \{\par
00124         {\cf19 return} 0;\par
00125     \}\par
00126     a->geometry[a->count - 1].object.ellipse = b;\par
00127     a->geometry[a->count - 1].type = EMB_ELLIPSE;\par
00128     {\cf19 return} 1;\par
00129 \}\par
00130 \par
00131 {\cf18 int}\par
00132 embArray_addFlag(EmbArray *a, EmbFlag b)\par
00133 \{\par
00134     a->count++;\par
00135     {\cf19 if} (!embArray_resize(a)) \{\par
00136         {\cf19 return} 0;\par
00137     \}\par
00138     a->geometry[a->count - 1].flag = b;\par
00139     a->geometry[a->count - 1].type = EMB_FLAG;\par
00140     {\cf19 return} 1;\par
00141 \}\par
00142 \par
00143 {\cf18 int}\par
00144 embArray_addLine(EmbArray *a, EmbLine b)\par
00145 \{\par
00146     a->count++;\par
00147     {\cf19 if} (!embArray_resize(a)) \{\par
00148         {\cf19 return} 0;\par
00149     \}\par
00150     a->geometry[a->count - 1].object.line = b;\par
00151     a->geometry[a->count - 1].type = EMB_LINE;\par
00152     {\cf19 return} 1;\par
00153 \}\par
00154 \par
00155 {\cf18 int}\par
00156 embArray_addPath(EmbArray *a, EmbPath b)\par
00157 \{\par
00158     a->count++;\par
00159     {\cf19 if} (!embArray_resize(a)) \{\par
00160         {\cf19 return} 0;\par
00161     \}\par
00162     a->geometry[a->count - 1].object.path = b;\par
00163     a->geometry[a->count - 1].type = EMB_PATH;\par
00164     {\cf19 return} 1;\par
00165 \}\par
00166 \par
00167 {\cf18 int}\par
00168 embArray_addPoint(EmbArray *a, EmbPoint b)\par
00169 \{\par
00170     a->count++;\par
00171     {\cf19 if} (!embArray_resize(a)) \{\par
00172         {\cf19 return} 0;\par
00173     \}\par
00174     a->geometry[a->count - 1].object.point = b;\par
00175     a->geometry[a->count - 1].type = EMB_POINT;\par
00176     {\cf19 return} 1;\par
00177 \}\par
00178 \par
00179 {\cf18 int}\par
00180 embArray_addPolyline(EmbArray *a, EmbPolyline b)\par
00181 \{\par
00182     a->count++;\par
00183     {\cf19 if} (!embArray_resize(a)) \{\par
00184         {\cf19 return} 0;\par
00185     \}\par
00186     a->geometry[a->count - 1].object.polyline = b;\par
00187     a->geometry[a->count - 1].type = EMB_POLYLINE;\par
00188     {\cf19 return} 1;\par
00189 \}\par
00190 \par
00191 {\cf18 int}\par
00192 embArray_addPolygon(EmbArray *a, EmbPolygon b)\par
00193 \{\par
00194     a->count++;\par
00195     {\cf19 if} (!embArray_resize(a)) \{\par
00196         {\cf19 return} 0;\par
00197     \}\par
00198     a->geometry[a->count - 1].object.polygon = b;\par
00199     a->geometry[a->count - 1].type = EMB_POLYGON;\par
00200     {\cf19 return} 1;\par
00201 \}\par
00202 \par
00203 {\cf18 int}\par
00204 embArray_addRect(EmbArray *a, EmbRect b)\par
00205 \{\par
00206     a->count++;\par
00207     {\cf19 if} (!embArray_resize(a)) \{\par
00208         {\cf19 return} 0;\par
00209     \}\par
00210     a->geometry[a->count - 1].object.rect = b;\par
00211     a->geometry[a->count - 1].type = EMB_RECT;\par
00212     {\cf19 return} 1;\par
00213 \}\par
00214 \par
00215 {\cf18 int}\par
00216 embArray_addStitch(EmbArray *a, EmbStitch b)\par
00217 \{\par
00218     a->count++;\par
00219     {\cf19 if} (!embArray_resize(a)) \{\par
00220         {\cf19 return} 0;\par
00221     \}\par
00222     a->stitch[a->count - 1] = b;\par
00223     {\cf19 return} 1;\par
00224 \}\par
00225 \par
00226 {\cf18 int}\par
00227 embArray_addVector(EmbArray *a, EmbVector b)\par
00228 \{\par
00229     a->count++;\par
00230     {\cf19 if} (!embArray_resize(a)) \{\par
00231         {\cf19 return} 0;\par
00232     \}\par
00233     a->geometry[a->count - 1].object.vector = b;\par
00234     a->geometry[a->count - 1].type = EMB_VECTOR;\par
00235     {\cf19 return} 1;\par
00236 \}\par
00237 \par
00238 {\cf18 void}\par
00239 embArray_free(EmbArray* a)\par
00240 \{\par
00241     {\cf18 int} i;\par
00242     {\cf19 if} (!a) \{\par
00243         {\cf19 return};\par
00244     \}\par
00245     {\cf19 switch} (a->type) \{\par
00246     {\cf19 case} EMB_STITCH:\par
00247         free(a->stitch);\par
00248         {\cf19 break};\par
00249     {\cf19 case} EMB_THREAD:\par
00250         free(a->thread);\par
00251         {\cf19 break};\par
00252     {\cf19 default}:\par
00253         {\cf19 for} (i = 0; i < a->count; i++) \{\par
00254             EmbGeometry g = a->geometry[i];\par
00255             {\cf19 switch} (a->geometry[i].type) \{\par
00256             {\cf19 case} EMB_PATH: \{\par
00257                 embArray_free(g.object.path.pointList);\par
00258                 {\cf19 break};\par
00259             \}\par
00260             {\cf19 case} EMB_POLYGON: \{\par
00261                 embArray_free(g.object.polygon.pointList);\par
00262                 {\cf19 break};\par
00263             \}\par
00264             {\cf19 case} EMB_POLYLINE: \{\par
00265                 embArray_free(g.object.polyline.pointList);\par
00266                 {\cf19 break};\par
00267             \}\par
00268             {\cf19 default}:\par
00269                 {\cf19 break};\par
00270             \}\par
00271         \}\par
00272         free(a->geometry);\par
00273         {\cf19 break};\par
00274     \}\par
00275     free(a);\par
00276 \}\par
00277 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/compress.c File Reference\par \pard\plain 
{\tc\tcl2 \v src/compress.c}
{\xe \v src/compress.c}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "embroidery_internal.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b hus_compress} (char *data, int length, char *output, int *output_length)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b huffman_build_table} ({\b huffman} *h)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b huffman_lookup} ({\b huffman} h, int byte_lookup)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b compress_init} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b compress_get_bits} ({\b compress} *c, int length)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b compress_pop} ({\b compress} *c, int bit_count)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b compress_peek} ({\b compress} *c, int bit_count)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b compress_read_variable_length} ({\b compress} *c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b compress_load_character_length_huffman} ({\b compress} *c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b compress_load_character_huffman} ({\b compress} *c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b compress_load_distance_huffman} ({\b compress} *c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b compress_load_block} ({\b compress} *c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b compress_get_token} ({\b compress} *c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b compress_get_position} ({\b compress} *c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b hus_decompress} (char *data, int length, char *output, int *output_length)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b huffman_lookup_data} [2]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v compress_get_bits\:compress.c}
{\xe \v compress.c\:compress_get_bits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int compress_get_bits ({\b compress} *  {\i c}, int  {\i length})}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 106} of file {\b compress.c}.}\par
}
{\xe \v compress_get_position\:compress.c}
{\xe \v compress.c\:compress_get_position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int compress_get_position ({\b compress} *  {\i c})}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 251} of file {\b compress.c}.}\par
}
{\xe \v compress_get_token\:compress.c}
{\xe \v compress.c\:compress_get_token}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int compress_get_token ({\b compress} *  {\i c})}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 239} of file {\b compress.c}.}\par
}
{\xe \v compress_init\:compress.c}
{\xe \v compress.c\:compress_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void compress_init ()}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 101} of file {\b compress.c}.}\par
}
{\xe \v compress_load_block\:compress.c}
{\xe \v compress.c\:compress_load_block}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void compress_load_block ({\b compress} *  {\i c})}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 231} of file {\b compress.c}.}\par
}
{\xe \v compress_load_character_huffman\:compress.c}
{\xe \v compress.c\:compress_load_character_huffman}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void compress_load_character_huffman ({\b compress} *  {\i c})}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 184} of file {\b compress.c}.}\par
}
{\xe \v compress_load_character_length_huffman\:compress.c}
{\xe \v compress.c\:compress_load_character_length_huffman}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void compress_load_character_length_huffman ({\b compress} *  {\i c})}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 162} of file {\b compress.c}.}\par
}
{\xe \v compress_load_distance_huffman\:compress.c}
{\xe \v compress.c\:compress_load_distance_huffman}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void compress_load_distance_huffman ({\b compress} *  {\i c})}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 215} of file {\b compress.c}.}\par
}
{\xe \v compress_peek\:compress.c}
{\xe \v compress.c\:compress_peek}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int compress_peek ({\b compress} *  {\i c}, int  {\i bit_count})}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 138} of file {\b compress.c}.}\par
}
{\xe \v compress_pop\:compress.c}
{\xe \v compress.c\:compress_pop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int compress_pop ({\b compress} *  {\i c}, int  {\i bit_count})}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 131} of file {\b compress.c}.}\par
}
{\xe \v compress_read_variable_length\:compress.c}
{\xe \v compress.c\:compress_read_variable_length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int compress_read_variable_length ({\b compress} *  {\i c})}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 143} of file {\b compress.c}.}\par
}
{\xe \v huffman_build_table\:compress.c}
{\xe \v compress.c\:huffman_build_table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void huffman_build_table ({\b huffman} *  {\i h})}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 60} of file {\b compress.c}.}\par
}
{\xe \v huffman_lookup\:compress.c}
{\xe \v compress.c\:huffman_lookup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * huffman_lookup ({\b huffman}  {\i h}, int  {\i byte_lookup})}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 87} of file {\b compress.c}.}\par
}
{\xe \v hus_compress\:compress.c}
{\xe \v compress.c\:hus_compress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int hus_compress (char *  {\i data}, int  {\i length}, char *  {\i output}, int *  {\i output_length})}}
\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 44} of file {\b compress.c}.}\par
}
{\xe \v hus_decompress\:compress.c}
{\xe \v compress.c\:hus_decompress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int hus_decompress (char *  {\i data}, int  {\i length}, char *  {\i output}, int *  {\i output_length})}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 264} of file {\b compress.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v huffman_lookup_data\:compress.c}
{\xe \v compress.c\:huffman_lookup_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int huffman_lookup_data[2]}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 85} of file {\b compress.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
compress.c\par \pard\plain 
{\tc\tcl2 \v src/compress.c}
{\xe \v src/compress.c}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * This file is part of libembroidery.}\par
00003 {\cf20  *}\par
00004 {\cf20  * Copyright 2018-2022 The Embroidermodder Team}\par
00005 {\cf20  * Licensed under the terms of the zlib license.}\par
00006 {\cf20  *}\par
00007 {\cf20  * This file contains all the read and write functions for the}\par
00008 {\cf20  * library.}\par
00009 {\cf20  *}\par
00010 {\cf20  *******************************************************************}\par
00011 {\cf20  *}\par
00012 {\cf20  *  Thanks to Jason Weiler for describing the binary formats of the HUS and}\par
00013 {\cf20  *  VIP formats at:}\par
00014 {\cf20  *}\par
00015 {\cf20  *  http://www.jasonweiler.com/HUSandVIPFileFormatInfo.html}\par
00016 {\cf20  *}\par
00017 {\cf20  *  Further thanks to github user tatarize for solving the mystery of the}\par
00018 {\cf20  *  compression in:}\par
00019 {\cf20  *}\par
00020 {\cf20  *  https://github.com/EmbroidePy/pyembroidery}\par
00021 {\cf20  *}\par
00022 {\cf20  *  with a description of that work here:}\par
00023 {\cf20  *}\par
00024 {\cf20  *  https://stackoverflow.com/questions/7852670/greenleaf-archive-library}\par
00025 {\cf20  *}\par
00026 {\cf20  *  This is based on their work.}\par
00027 {\cf20  *******************************************************************************}\par
00028 {\cf20  */}\par
00029 \par
00030 {\cf21 #include <stdio.h>}\par
00031 {\cf21 #include <stdlib.h>}\par
00032 {\cf21 #include <string.h>}\par
00033 \par
00034 {\cf21 #include "embroidery_internal.h"}\par
00035 \par
00036 {\cf20 /* This is a work in progress.}\par
00037 {\cf20  * ---------------------------}\par
00038 {\cf20  */}\par
00039 \par
00040 {\cf20 /* This avoids the now unnecessary compression by placing a}\par
00041 {\cf20  * minimal header of 6 bytes and using only literals in the}\par
00042 {\cf20  * huffman compressed part (see the sources above).}\par
00043 {\cf20  */}\par
00044 {\cf18 int} hus_compress({\cf18 char} *data, {\cf18 int} length, {\cf18 char} *output, {\cf18 int} *output_length)\par
00045 \{\par
00046     {\cf18 unsigned} {\cf18 char} *a = ({\cf18 unsigned} {\cf18 char}*)output;\par
00047     a[0] = length%256;\par
00048     a[1] = (length/256)%256;\par
00049     a[2] = 0x02;\par
00050     a[3] = 0xA0;\par
00051     a[4] = 0x01;\par
00052     a[5] = 0xFE;\par
00053     memcpy(output+6, data, length);\par
00054     *output_length = length+6;\par
00055     {\cf19 return} 0;\par
00056 \}\par
00057 \par
00058 {\cf20 /* These next 2 functions represent the Huffman class in tartarize's code.}\par
00059 {\cf20  */}\par
00060 {\cf18 void} huffman_build_table(huffman *h)\par
00061 \{\par
00062     {\cf18 int} bit_length, i, max_length, size;\par
00063     max_length = 0;\par
00064     size = 1 << h->table_width;\par
00065     {\cf19 for} (i = 0; i < h->table_width; i++) \{\par
00066         {\cf19 if} (h->lengths[i] > max_length) \{\par
00067             max_length = h->lengths[i];\par
00068         \}\par
00069     \}\par
00070     {\cf19 for} (bit_length=1; bit_length<=h->table_width; bit_length++) \{\par
00071         {\cf18 int} j;\par
00072         size /= 2;\par
00073         {\cf19 for} (j=0; j < h->nlengths; j++) \{\par
00074             {\cf19 if} (h->lengths[j] == bit_length) \{\par
00075                 {\cf18 int} k;\par
00076                 {\cf19 for} (k=0; k<size; k++) \{\par
00077                     h->table[h->ntable+k] = j;\par
00078                     h->ntable++;\par
00079                 \}\par
00080             \}\par
00081         \}\par
00082     \}\par
00083 \}\par
00084 \par
00085 {\cf18 int} huffman_lookup_data[2];\par
00086 \par
00087 {\cf18 int} *huffman_lookup(huffman h, {\cf18 int} byte_lookup)\par
00088 \{\par
00089     {\cf18 int} *out = huffman_lookup_data;\par
00090     {\cf19 if} (h.table_width == 0) \{\par
00091         out[0] = h.default_value;\par
00092         out[1] = 0;\par
00093         {\cf19 return} out;\par
00094     \}\par
00095     out[0] = h.table[byte_lookup >> (16-h.table_width)];\par
00096     out[1] = h.lengths[out[0]];\par
00097     {\cf19 return} out;\par
00098 \}\par
00099 \par
00100 {\cf20 /* These functions represent the EmbCompress class. */}\par
00101 {\cf18 void} compress_init()\par
00102 \{\par
00103 \par
00104 \}\par
00105 \par
00106 {\cf18 int} compress_get_bits(compress *c, {\cf18 int} length)\par
00107 \{\par
00108     {\cf18 int} i, end_pos_in_bits, start_pos_in_bytes,\par
00109         end_pos_in_bytes, value, mask_sample_bits,\par
00110         unused_bits, original;\par
00111 \par
00112     end_pos_in_bits = c->bit_position + length - 1;\par
00113     start_pos_in_bytes = c->bit_position / 8;\par
00114     end_pos_in_bytes = end_pos_in_bits / 8;\par
00115     value = 0;\par
00116 \par
00117     {\cf19 for} (i=start_pos_in_bytes; i < end_pos_in_bytes+1; i++) \{\par
00118         value <<= 8;\par
00119         {\cf19 if} (i > c->input_length) \{\par
00120             {\cf19 break};\par
00121         \}\par
00122         value |= (c->input_data[i]) & 0xFF;\par
00123     \}\par
00124 \par
00125     unused_bits = (7 - end_pos_in_bits) % 8;\par
00126     mask_sample_bits = (1<<length) - 1;\par
00127     original = (value >> unused_bits) & mask_sample_bits;\par
00128     {\cf19 return} original;\par
00129 \}\par
00130 \par
00131 {\cf18 int} compress_pop(compress *c, {\cf18 int} bit_count)\par
00132 \{\par
00133     {\cf18 int} value = compress_get_bits(c, bit_count);\par
00134     c->bit_position += bit_count;\par
00135     {\cf19 return} value;\par
00136 \}\par
00137 \par
00138 {\cf18 int} compress_peek(compress *c, {\cf18 int} bit_count)\par
00139 \{\par
00140     {\cf19 return} compress_get_bits(c, bit_count);\par
00141 \}\par
00142 \par
00143 {\cf18 int} compress_read_variable_length(compress *c)\par
00144 \{\par
00145     {\cf18 int} q, m, s;\par
00146     m = compress_pop(c, 3);\par
00147     {\cf19 if} (m!=7) \{\par
00148         {\cf19 return} m;\par
00149     \}\par
00150     {\cf19 for} (q=0; q<13; q++) \{\par
00151         s = compress_pop(c, 1);\par
00152         {\cf19 if} (s) \{\par
00153             m++;\par
00154         \}\par
00155         {\cf19 else} \{\par
00156             {\cf19 break};\par
00157         \}\par
00158     \}\par
00159     {\cf19 return} m;\par
00160 \}\par
00161 \par
00162 {\cf18 void} compress_load_character_length_huffman(compress *c)\par
00163 \{\par
00164     {\cf18 int} count;\par
00165     count = compress_pop(c, 5);\par
00166     {\cf19 if} (count == 0) \{\par
00167         c->character_length_huffman.default_value = compress_pop(c, 5);\par
00168     \}\par
00169     {\cf19 else} \{\par
00170         {\cf18 int} i;\par
00171         {\cf19 for} (i = 0; i < count; i++) \{\par
00172             c->character_length_huffman.lengths[i] = 0;\par
00173         \}\par
00174         {\cf19 for} (i = 0; i < count; i++) \{\par
00175             {\cf19 if} (i==3) \{\par
00176                 i += compress_pop(c, 2);\par
00177             \}\par
00178             c->character_length_huffman.lengths[i] = compress_read_variable_length(c);\par
00179         \}\par
00180     \}\par
00181     huffman_build_table(&(c->character_length_huffman));\par
00182 \}\par
00183 \par
00184 {\cf18 void} compress_load_character_huffman(compress *c)\par
00185 \{\par
00186     {\cf18 int} count;\par
00187     count = compress_pop(c, 9);\par
00188     {\cf19 if} (count == 0) \{\par
00189         c->character_huffman.default_value = compress_pop(c, 9);\par
00190     \}\par
00191     {\cf19 else} \{\par
00192         {\cf18 int} i = 0;\par
00193         {\cf19 while} (i < count) \{\par
00194             {\cf18 int} *h = huffman_lookup(c->character_length_huffman,\par
00195                 compress_peek(c, 16));\par
00196             c->bit_position += h[1];\par
00197             {\cf19 if} (h[0]==0) \{\par
00198                 i += h[0];\par
00199             \}\par
00200             {\cf19 else} {\cf19 if} (h[0]==1) \{\par
00201                 i += 3 + compress_pop(c, 4);\par
00202             \}\par
00203             {\cf19 else} {\cf19 if} (h[0]==2) \{\par
00204                 i += 20 + compress_pop(c, 9);\par
00205             \}\par
00206             {\cf19 else} \{\par
00207                 c->character_huffman.lengths[i] = h[0] - 2;\par
00208                 i++;\par
00209             \}\par
00210         \}\par
00211     \}\par
00212     huffman_build_table(&(c->character_huffman));\par
00213 \}\par
00214 \par
00215 {\cf18 void} compress_load_distance_huffman(compress *c)\par
00216 \{\par
00217     {\cf18 int} count;\par
00218     count = compress_pop(c, 5);\par
00219     {\cf19 if} (count == 0) \{\par
00220         c->distance_huffman.default_value = compress_pop(c, 5);\par
00221     \}\par
00222     {\cf19 else} \{\par
00223         {\cf18 int} i;\par
00224         {\cf19 for} (i = 0; i < count; i++) \{\par
00225             c->distance_huffman.lengths[i] = compress_read_variable_length(c);\par
00226         \}\par
00227     \}\par
00228     huffman_build_table(&(c->distance_huffman));\par
00229 \}\par
00230     \par
00231 {\cf18 void} compress_load_block(compress *c)\par
00232 \{\par
00233     c->block_elements = compress_pop(c, 16);\par
00234     compress_load_character_length_huffman(c);\par
00235     compress_load_character_huffman(c);\par
00236     compress_load_distance_huffman(c);\par
00237 \}\par
00238 \par
00239 {\cf18 int} compress_get_token(compress *c)\par
00240 \{\par
00241     {\cf18 int} *h;\par
00242     {\cf19 if} (c->block_elements <= 0) \{\par
00243         compress_load_block(c);\par
00244     \}\par
00245     c->block_elements--;\par
00246     h = huffman_lookup(c->character_huffman, compress_peek(c, 16));\par
00247     c->bit_position += h[1];\par
00248     {\cf19 return} h[0];\par
00249 \}\par
00250 \par
00251 {\cf18 int} compress_get_position(compress *c)\par
00252 \{\par
00253     {\cf18 int} *h, v;\par
00254     h = huffman_lookup(c->distance_huffman, compress_peek(c, 16));\par
00255     c->bit_position += h[1];\par
00256     {\cf19 if} (h[0] == 0) \{\par
00257         {\cf19 return} 0;\par
00258     \}\par
00259     v = h[0] - 1;\par
00260     v = (1<<v) + compress_pop(c, v);\par
00261     {\cf19 return} v;\par
00262 \}\par
00263 \par
00264 {\cf18 int} hus_decompress({\cf18 char} *data, {\cf18 int} length, {\cf18 char} *output, {\cf18 int} *output_length)\par
00265 \{\par
00266     {\cf18 int} character, i, j;\par
00267     compress *c = (compress*)malloc({\cf17 sizeof}(compress));\par
00268     c->bit_position = 0;\par
00269     c->input_data = data;\par
00270     c->input_length = length;\par
00271     c->bits_total = length*8;\par
00272     i = 0;\par
00273     {\cf19 while} (c->bits_total > c->bit_position && i < *output_length) \{\par
00274         {\cf20 /* process token */}\par
00275         character = 0; {\cf20 /* fix this */}\par
00276         {\cf19 if} (character < 0x100) \{\par
00277             output[i] = (char)character;\par
00278             i++;\par
00279         \}\par
00280         {\cf19 else} {\cf19 if} (character == 510) \{\par
00281             {\cf19 break};\par
00282         \}\par
00283         {\cf19 else} \{\par
00284             length = character - 253;\par
00285             {\cf20 /* not sure about i here */}\par
00286             c->bit_position = i - compress_get_position(c) - 1;\par
00287             {\cf19 for} (j=c->bit_position; j < c->bit_position+length; j++) \{\par
00288                 output[i] = output[j];\par
00289                 i++;\par
00290             \}\par
00291         \}\par
00292     \}\par
00293     free(c);\par
00294     {\cf19 return} 0;\par
00295 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/embroidery.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/embroidery.h}
{\xe \v src/embroidery.h}
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbColor_}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbVector_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbImage_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbBlock_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbAlignedDim_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbAngularDim_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbArcLengthDim_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbDiameterDim_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbLeaderDim_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbLinearDim_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbOrdinateDim_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbRadiusDim_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbInfiniteLine_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbRay_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbTextMulti_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbTextSingle_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbTime_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbPoint_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbLine_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbPath_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbStitch_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbThread_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b thread_color_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbArc_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbRect_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbCircle_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbSatinOutline_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbEllipse_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbBezier_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbSpline_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b LSYSTEM}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbGeometry_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbArray_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbLayer_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbPattern_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b EmbFormatList_}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LIBEMBROIDERY_EMBEDDED_VERSION}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NORMAL}\~ 0 /* stitch to (x, y) */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b JUMP}\~ 1 /* move to (x, y) */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TRIM}\~ 2 /* trim + move to (x, y) */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STOP}\~ 4 /* pause machine for thread change */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SEQUIN}\~ 8 /* sequin */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b END}\~ 16 /* end of program */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_100}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_10O}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_ART}\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_BMC}\~ 3\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_BRO}\~ 4\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_CND}\~ 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_COL}\~ 6\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_CSD}\~ 7\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_CSV}\~ 8\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_DAT}\~ 9\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_DEM}\~ 10\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_DSB}\~ 11\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_DST}\~ 12\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_DSZ}\~ 13\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_DXF}\~ 14\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_EDR}\~ 15\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_EMD}\~ 16\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_EXP}\~ 17\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_EXY}\~ 18\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_EYS}\~ 19\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_FXY}\~ 20\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_GC}\~ 21\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_GNC}\~ 22\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_GT}\~ 23\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_HUS}\~ 24\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_INB}\~ 25\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_INF}\~ 26\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_JEF}\~ 27\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_KSM}\~ 28\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_MAX}\~ 29\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_MIT}\~ 30\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_NEW}\~ 31\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_OFM}\~ 32\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_PCD}\~ 33\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_PCM}\~ 34\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_PCQ}\~ 35\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_PCS}\~ 36\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_PEC}\~ 37\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_PEL}\~ 38\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_PEM}\~ 39\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_PES}\~ 40\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_PHB}\~ 41\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_PHC}\~ 42\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_PLT}\~ 43\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_RGB}\~ 44\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_SEW}\~ 45\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_SHV}\~ 46\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_SST}\~ 47\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_STX}\~ 48\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_SVG}\~ 49\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_T01}\~ 50\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_T09}\~ 51\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_TAP}\~ 52\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_THR}\~ 53\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_TXT}\~ 54\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_U00}\~ 55\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_U01}\~ 56\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_VIP}\~ 57\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_VP3}\~ 58\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_XXX}\~ 59\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FORMAT_ZSK}\~ 60\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Arc_Polyester}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Arc_Rayon}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoatsAndClark_Rayon}\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Exquisite_Polyester}\~ 3\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Fufu_Polyester}\~ 4\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Fufu_Rayon}\~ 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Hemingworth_Polyester}\~ 6\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Isacord_Polyester}\~ 7\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Isafil_Rayon}\~ 8\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Marathon_Polyester}\~ 9\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Marathon_Rayon}\~ 10\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Madeira_Polyester}\~ 11\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Madeira_Rayon}\~ 12\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Metro_Polyester}\~ 13\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Pantone}\~ 14\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RobisonAnton_Polyester}\~ 15\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RobisonAnton_Rayon}\~ 16\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Sigma_Polyester}\~ 17\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Sulky_Rayon}\~ 18\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ThreadArt_Rayon}\~ 19\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ThreadArt_Polyester}\~ 20\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ThreaDelight_Polyester}\~ 21\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Z102_Isacord_Polyester}\~ 22\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SVG_Colors}\~ 23\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b hus_thread}\~ 24\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b jef_thread}\~ 25\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b pcm_thread}\~ 26\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b pec_thread}\~ 27\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b shv_thread}\~ 28\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b dxf_color}\~ 29\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_ARRAY}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_ARC}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_CIRCLE}\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_DIM_DIAMETER}\~ 3\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_DIM_LEADER}\~ 4\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_ELLIPSE}\~ 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_FLAG}\~ 6\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_LINE}\~ 7\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_IMAGE}\~ 8\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_PATH}\~ 9\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_POINT}\~ 10\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_POLYGON}\~ 11\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_POLYLINE}\~ 12\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_RECT}\~ 13\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_SPLINE}\~ 14\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_STITCH}\~ 15\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_TEXT_SINGLE}\~ 16\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_TEXT_MULTI}\~ 17\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_VECTOR}\~ 18\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_THREAD}\~ 19\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMBFORMAT_UNSUPPORTED}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMBFORMAT_STITCHONLY}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMBFORMAT_OBJECTONLY}\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMBFORMAT_STCHANDOBJ}\~ 3 /* binary operation: 1+2=3 */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b numberOfFormats}\~ 61\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CHUNK_SIZE}\~ 128\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_MAX_LAYERS}\~ 10\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_THREADS}\~ 256\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMBFORMAT_MAXEXT}\~ 3\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMBFORMAT_MAXDESC}\~ 50\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX_STITCHES}\~ 1000000\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_PUBLIC}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef float {\b EmbReal}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbColor_} {\b EmbColor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbVector_} {\b EmbVector}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbArray_} {\b EmbArray}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbImage_} {\b EmbImage}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbBlock_} {\b EmbBlock}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbAlignedDim_} {\b EmbAlignedDim}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbAngularDim_} {\b EmbAngularDim}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbArcLengthDim_} {\b EmbArcLengthDim}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbDiameterDim_} {\b EmbDiameterDim}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbLeaderDim_} {\b EmbLeaderDim}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbLinearDim_} {\b EmbLinearDim}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbOrdinateDim_} {\b EmbOrdinateDim}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbRadiusDim_} {\b EmbRadiusDim}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbInfiniteLine_} {\b EmbInfiniteLine}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbRay_} {\b EmbRay}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbTextMulti_} {\b EmbTextMulti}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbTextSingle_} {\b EmbTextSingle}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbTime_} {\b EmbTime}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbPoint_} {\b EmbPoint}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbLine_} {\b EmbLine}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbPath_} {\b EmbPath}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbStitch_} {\b EmbStitch}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbThread_} {\b EmbThread}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b thread_color_} {\b thread_color}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbArc_} {\b EmbArc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbRect_} {\b EmbRect}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbCircle_} {\b EmbCircle}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b EmbPath} {\b EmbPolygon}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b EmbPath} {\b EmbPolyline}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef int {\b EmbFlag}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbSatinOutline_} {\b EmbSatinOutline}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbEllipse_} {\b EmbEllipse}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbBezier_} {\b EmbBezier}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbSpline_} {\b EmbSpline}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b LSYSTEM} {\b L_system}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbGeometry_} {\b EmbGeometry}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbLayer_} {\b EmbLayer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbPattern_} {\b EmbPattern}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b EmbFormatList_} {\b EmbFormatList}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b lindenmayer_system} ({\b L_system} L, char *state, int iteration, int complete)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b hilbert_curve} ({\b EmbPattern} *pattern, int iterations)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b emb_identify_format} (const char *ending)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b testMain} (int level)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b convert} (const char *inf, const char *outf)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbColor} {\b embColor_make} (unsigned char r, unsigned char g, unsigned char b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbColor} * {\b embColor_create} (unsigned char r, unsigned char g, unsigned char b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbColor} {\b embColor_fromHexStr} (char *val)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b embColor_distance} ({\b EmbColor} a, {\b EmbColor} b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbArray} * {\b embArray_create} (int type)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b embArray_resize} ({\b EmbArray} *g)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embArray_copy} ({\b EmbArray} *dst, {\b EmbArray} *src)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b embArray_addArc} ({\b EmbArray} *g, {\b EmbArc} arc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b embArray_addCircle} ({\b EmbArray} *g, {\b EmbCircle} circle)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b embArray_addEllipse} ({\b EmbArray} *g, {\b EmbEllipse} ellipse)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b embArray_addFlag} ({\b EmbArray} *g, int flag)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b embArray_addLine} ({\b EmbArray} *g, {\b EmbLine} line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b embArray_addRect} ({\b EmbArray} *g, {\b EmbRect} rect)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b embArray_addPath} ({\b EmbArray} *g, {\b EmbPath} p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b embArray_addPoint} ({\b EmbArray} *g, {\b EmbPoint} p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b embArray_addPolygon} ({\b EmbArray} *g, {\b EmbPolygon} p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b embArray_addPolyline} ({\b EmbArray} *g, {\b EmbPolyline} p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b embArray_addStitch} ({\b EmbArray} *g, {\b EmbStitch} st)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b embArray_addThread} ({\b EmbArray} *g, {\b EmbThread} p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b embArray_addVector} ({\b EmbArray} *g, {\b EmbVector})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embArray_free} ({\b EmbArray} *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbLine} {\b embLine_make} ({\b EmbReal} x1, {\b EmbReal} y1, {\b EmbReal} x2, {\b EmbReal} y2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embLine_normalVector} ({\b EmbLine} line, {\b EmbVector} *result, int clockwise)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbVector} {\b embLine_intersectionPoint} ({\b EmbLine} line1, {\b EmbLine} line2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b embThread_findNearestColor} ({\b EmbColor} color, {\b EmbColor} *colors, int n_colors)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b embThread_findNearestThread} ({\b EmbColor} color, {\b EmbThread} *threads, int n_threads)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbThread} {\b embThread_getRandom} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embVector_normalize} ({\b EmbVector} vector, {\b EmbVector} *result)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embVector_multiply} ({\b EmbVector} vector, {\b EmbReal} magnitude, {\b EmbVector} *result)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbVector} {\b embVector_add} ({\b EmbVector} v1, {\b EmbVector} v2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbVector} {\b embVector_average} ({\b EmbVector} v1, {\b EmbVector} v2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbVector} {\b embVector_subtract} ({\b EmbVector} v1, {\b EmbVector} v2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbReal} {\b embVector_dot} ({\b EmbVector} v1, {\b EmbVector} v2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbReal} {\b embVector_cross} ({\b EmbVector} v1, {\b EmbVector} v2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embVector_transpose_product} ({\b EmbVector} v1, {\b EmbVector} v2, {\b EmbVector} *result)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbReal} {\b embVector_length} ({\b EmbVector} vector)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbReal} {\b embVector_relativeX} ({\b EmbVector} a1, {\b EmbVector} a2, {\b EmbVector} a3)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbReal} {\b embVector_relativeY} ({\b EmbVector} a1, {\b EmbVector} a2, {\b EmbVector} a3)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbReal} {\b embVector_angle} ({\b EmbVector} v)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbReal} {\b embVector_distance} ({\b EmbVector} a, {\b EmbVector} b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbVector} {\b embVector_unit} ({\b EmbReal} angle)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbArc} {\b embArc_init} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} char {\b embArc_clockwise} ({\b EmbArc} arc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b getArcCenter} ({\b EmbArc} arc, {\b EmbVector} *arcCenter)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} char {\b getArcDataFromBulge} ({\b EmbReal} bulge, {\b EmbArc} *arc, {\b EmbReal} *arcCenterX, {\b EmbReal} *arcCenterY, {\b EmbReal} *radius, {\b EmbReal} *diameter, {\b EmbReal} *chord, {\b EmbReal} *chordMidX, {\b EmbReal} *chordMidY, {\b EmbReal} *sagitta, {\b EmbReal} *apothem, {\b EmbReal} *incAngleInDegrees, char *clockwise)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbCircle} {\b embCircle_init} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b getCircleCircleIntersections} ({\b EmbCircle} c0, {\b EmbCircle} c1, {\b EmbVector} *v0, {\b EmbVector} *v1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b getCircleTangentPoints} ({\b EmbCircle} c, {\b EmbVector} p, {\b EmbVector} *v0, {\b EmbVector} *v1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbEllipse} {\b embEllipse_init} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbEllipse} {\b embEllipse_make} ({\b EmbReal} cx, {\b EmbReal} cy, {\b EmbReal} rx, {\b EmbReal} ry)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbReal} {\b embEllipse_diameterX} ({\b EmbEllipse} ellipse)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbReal} {\b embEllipse_diameterY} ({\b EmbEllipse} ellipse)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbReal} {\b embEllipse_width} ({\b EmbEllipse} ellipse)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbReal} {\b embEllipse_height} ({\b EmbEllipse} ellipse)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbReal} {\b embEllipse_area} ({\b EmbEllipse} ellipse)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbReal} {\b embEllipse_perimeter} ({\b EmbEllipse} ellipse)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbImage} {\b embImage_create} (int, int)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embImage_read} ({\b EmbImage} *image, char *fname)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b embImage_write} ({\b EmbImage} *image, char *fname)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embImage_free} ({\b EmbImage} *image)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbRect} {\b embRect_init} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbReal} {\b embRect_area} ({\b EmbRect})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b threadColor} (const char *, int brand)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b threadColorNum} (unsigned int color, int brand)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} const char * {\b threadColorName} (unsigned int color, int brand)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embTime_initNow} ({\b EmbTime} *t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbTime} {\b embTime_time} ({\b EmbTime} *t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embSatinOutline_generateSatinOutline} ({\b EmbArray} *lines, {\b EmbReal} thickness, {\b EmbSatinOutline} *result)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbArray} * {\b embSatinOutline_renderStitches} ({\b EmbSatinOutline} *result, {\b EmbReal} density)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbGeometry} * {\b embGeometry_init} (int type_in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embGeometry_free} ({\b EmbGeometry} *obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embGeometry_move} ({\b EmbGeometry} *obj, {\b EmbVector} delta)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbRect} {\b embGeometry_boundingRect} ({\b EmbGeometry} *obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embGeometry_vulcanize} ({\b EmbGeometry} *obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbPattern} * {\b embPattern_create} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_hideStitchesOverLength} ({\b EmbPattern} *p, int length)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_fixColorCount} ({\b EmbPattern} *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b embPattern_addThread} ({\b EmbPattern} *p, {\b EmbThread} thread)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_addStitchAbs} ({\b EmbPattern} *p, {\b EmbReal} x, {\b EmbReal} y, int flags, int isAutoColorIndex)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_addStitchRel} ({\b EmbPattern} *p, {\b EmbReal} dx, {\b EmbReal} dy, int flags, int isAutoColorIndex)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_changeColor} ({\b EmbPattern} *p, int index)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_free} ({\b EmbPattern} *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_scale} ({\b EmbPattern} *p, {\b EmbReal} scale)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbReal} {\b embPattern_totalStitchLength} ({\b EmbPattern} *pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbReal} {\b embPattern_minimumStitchLength} ({\b EmbPattern} *pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbReal} {\b embPattern_maximumStitchLength} ({\b EmbPattern} *pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_lengthHistogram} ({\b EmbPattern} *pattern, int *bin, int NUMBINS)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b embPattern_realStitches} ({\b EmbPattern} *pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b embPattern_jumpStitches} ({\b EmbPattern} *pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b embPattern_trimStitches} ({\b EmbPattern} *pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbRect} {\b embPattern_calcBoundingBox} ({\b EmbPattern} *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_flipHorizontal} ({\b EmbPattern} *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_flipVertical} ({\b EmbPattern} *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_flip} ({\b EmbPattern} *p, int horz, int vert)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_combineJumpStitches} ({\b EmbPattern} *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_correctForMaxStitchLength} ({\b EmbPattern} *p, {\b EmbReal} maxStitchLength, {\b EmbReal} maxJumpLength)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_center} ({\b EmbPattern} *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_loadExternalColorFile} ({\b EmbPattern} *p, const char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_convertGeometry} ({\b EmbPattern} *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_designDetails} ({\b EmbPattern} *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbPattern} * {\b embPattern_combine} ({\b EmbPattern} *p1, {\b EmbPattern} *p2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b embPattern_color_count} ({\b EmbPattern} *pattern, {\b EmbColor} startColor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_end} ({\b EmbPattern} *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_crossstitch} ({\b EmbPattern} *pattern, {\b EmbImage} *, int threshhold)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_horizontal_fill} ({\b EmbPattern} *pattern, {\b EmbImage} *, int threshhold)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b embPattern_render} ({\b EmbPattern} *pattern, char *fname)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b embPattern_simulate} ({\b EmbPattern} *pattern, char *fname)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_addCircleAbs} ({\b EmbPattern} *p, {\b EmbCircle} obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_addEllipseAbs} ({\b EmbPattern} *p, {\b EmbEllipse} obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_addLineAbs} ({\b EmbPattern} *p, {\b EmbLine} obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_addPathAbs} ({\b EmbPattern} *p, {\b EmbPath} obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_addPointAbs} ({\b EmbPattern} *p, {\b EmbPoint} obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_addPolygonAbs} ({\b EmbPattern} *p, {\b EmbPolygon} obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_addPolylineAbs} ({\b EmbPattern} *p, {\b EmbPolyline} obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_addRectAbs} ({\b EmbPattern} *p, {\b EmbRect} obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_copyStitchListToPolylines} ({\b EmbPattern} *pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_copyPolylinesToStitchList} ({\b EmbPattern} *pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_moveStitchListToPolylines} ({\b EmbPattern} *pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b embPattern_movePolylinesToStitchList} ({\b EmbPattern} *pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} char {\b embPattern_read} ({\b EmbPattern} *pattern, const char *fileName, int format)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} char {\b embPattern_write} ({\b EmbPattern} *pattern, const char *fileName, int format)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} char {\b embPattern_readAuto} ({\b EmbPattern} *pattern, const char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} char {\b embPattern_writeAuto} ({\b EmbPattern} *pattern, const char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} void {\b report} (int result, char *label)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b full_test_matrix} (char *fname)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} int {\b emb_round} ({\b EmbReal} x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbReal} {\b radians} ({\b EmbReal} degree)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EMB_PUBLIC} {\b EmbReal} {\b degrees} ({\b EmbReal} radian)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbFormatList} {\b formatTable} [{\b numberOfFormats}]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b pecThreadCount}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b shvThreadCount}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b EmbReal} {\b embConstantPi}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b EmbThread} {\b husThreads} []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b EmbThread} {\b jefThreads} []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b EmbThread} {\b shvThreads} []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b EmbThread} {\b pcmThreads} []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b EmbThread} {\b pecThreads} []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned char {\b _dxfColorTable} [][3]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbThread} {\b black_thread}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned char {\b vipDecodingTable} []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b emb_error}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b emb_verbose}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v Arc_Polyester\:embroidery.h}
{\xe \v embroidery.h\:Arc_Polyester}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Arc_Polyester\~ 0}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 87} of file {\b embroidery.h}.}\par
}
{\xe \v Arc_Rayon\:embroidery.h}
{\xe \v embroidery.h\:Arc_Rayon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Arc_Rayon\~ 1}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 88} of file {\b embroidery.h}.}\par
}
{\xe \v CHUNK_SIZE\:embroidery.h}
{\xe \v embroidery.h\:CHUNK_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CHUNK_SIZE\~ 128}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 146} of file {\b embroidery.h}.}\par
}
{\xe \v CoatsAndClark_Rayon\:embroidery.h}
{\xe \v embroidery.h\:CoatsAndClark_Rayon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoatsAndClark_Rayon\~ 2}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 89} of file {\b embroidery.h}.}\par
}
{\xe \v dxf_color\:embroidery.h}
{\xe \v embroidery.h\:dxf_color}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define dxf_color\~ 29}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 116} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_ARC\:embroidery.h}
{\xe \v embroidery.h\:EMB_ARC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_ARC\~ 1}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 119} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_ARRAY\:embroidery.h}
{\xe \v embroidery.h\:EMB_ARRAY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_ARRAY\~ 0}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 118} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_CIRCLE\:embroidery.h}
{\xe \v embroidery.h\:EMB_CIRCLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_CIRCLE\~ 2}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 120} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_DIM_DIAMETER\:embroidery.h}
{\xe \v embroidery.h\:EMB_DIM_DIAMETER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_DIM_DIAMETER\~ 3}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 121} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_DIM_LEADER\:embroidery.h}
{\xe \v embroidery.h\:EMB_DIM_LEADER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_DIM_LEADER\~ 4}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 122} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_ELLIPSE\:embroidery.h}
{\xe \v embroidery.h\:EMB_ELLIPSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_ELLIPSE\~ 5}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 123} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FLAG\:embroidery.h}
{\xe \v embroidery.h\:EMB_FLAG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FLAG\~ 6}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 124} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_100\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_100}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_100\~ 0}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_10O\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_10O}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_10O\~ 1}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 25} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_ART\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_ART}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_ART\~ 2}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_BMC\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_BMC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_BMC\~ 3}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 27} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_BRO\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_BRO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_BRO\~ 4}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 28} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_CND\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_CND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_CND\~ 5}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 29} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_COL\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_COL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_COL\~ 6}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 30} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_CSD\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_CSD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_CSD\~ 7}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 31} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_CSV\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_CSV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_CSV\~ 8}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 32} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_DAT\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_DAT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_DAT\~ 9}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 33} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_DEM\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_DEM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_DEM\~ 10}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 34} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_DSB\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_DSB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_DSB\~ 11}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 35} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_DST\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_DST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_DST\~ 12}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 36} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_DSZ\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_DSZ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_DSZ\~ 13}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 37} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_DXF\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_DXF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_DXF\~ 14}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 38} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_EDR\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_EDR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_EDR\~ 15}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 39} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_EMD\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_EMD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_EMD\~ 16}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 40} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_EXP\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_EXP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_EXP\~ 17}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 41} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_EXY\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_EXY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_EXY\~ 18}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 42} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_EYS\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_EYS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_EYS\~ 19}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 43} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_FXY\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_FXY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_FXY\~ 20}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 44} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_GC\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_GC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_GC\~ 21}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 45} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_GNC\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_GNC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_GNC\~ 22}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 46} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_GT\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_GT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_GT\~ 23}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 47} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_HUS\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_HUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_HUS\~ 24}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 48} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_INB\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_INB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_INB\~ 25}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 49} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_INF\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_INF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_INF\~ 26}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 50} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_JEF\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_JEF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_JEF\~ 27}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 51} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_KSM\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_KSM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_KSM\~ 28}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 52} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_MAX\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_MAX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_MAX\~ 29}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 53} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_MIT\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_MIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_MIT\~ 30}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 54} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_NEW\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_NEW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_NEW\~ 31}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 55} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_OFM\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_OFM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_OFM\~ 32}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 56} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_PCD\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_PCD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_PCD\~ 33}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 57} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_PCM\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_PCM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_PCM\~ 34}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 58} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_PCQ\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_PCQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_PCQ\~ 35}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 59} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_PCS\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_PCS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_PCS\~ 36}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 60} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_PEC\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_PEC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_PEC\~ 37}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 61} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_PEL\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_PEL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_PEL\~ 38}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 62} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_PEM\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_PEM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_PEM\~ 39}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 63} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_PES\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_PES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_PES\~ 40}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 64} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_PHB\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_PHB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_PHB\~ 41}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 65} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_PHC\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_PHC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_PHC\~ 42}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 66} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_PLT\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_PLT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_PLT\~ 43}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 67} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_RGB\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_RGB}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_RGB\~ 44}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 68} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_SEW\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_SEW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_SEW\~ 45}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 69} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_SHV\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_SHV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_SHV\~ 46}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 70} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_SST\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_SST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_SST\~ 47}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 71} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_STX\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_STX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_STX\~ 48}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 72} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_SVG\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_SVG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_SVG\~ 49}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 73} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_T01\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_T01}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_T01\~ 50}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 74} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_T09\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_T09}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_T09\~ 51}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 75} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_TAP\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_TAP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_TAP\~ 52}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 76} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_THR\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_THR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_THR\~ 53}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 77} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_TXT\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_TXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_TXT\~ 54}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 78} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_U00\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_U00}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_U00\~ 55}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 79} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_U01\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_U01}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_U01\~ 56}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 80} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_VIP\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_VIP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_VIP\~ 57}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 81} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_VP3\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_VP3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_VP3\~ 58}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 82} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_XXX\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_XXX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_XXX\~ 59}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 83} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_FORMAT_ZSK\:embroidery.h}
{\xe \v embroidery.h\:EMB_FORMAT_ZSK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_FORMAT_ZSK\~ 60}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 84} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_IMAGE\:embroidery.h}
{\xe \v embroidery.h\:EMB_IMAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_IMAGE\~ 8}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 126} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_LINE\:embroidery.h}
{\xe \v embroidery.h\:EMB_LINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_LINE\~ 7}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 125} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_MAX_LAYERS\:embroidery.h}
{\xe \v embroidery.h\:EMB_MAX_LAYERS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_MAX_LAYERS\~ 10}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 148} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_PATH\:embroidery.h}
{\xe \v embroidery.h\:EMB_PATH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_PATH\~ 9}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 127} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_POINT\:embroidery.h}
{\xe \v embroidery.h\:EMB_POINT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_POINT\~ 10}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 128} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_POLYGON\:embroidery.h}
{\xe \v embroidery.h\:EMB_POLYGON}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_POLYGON\~ 11}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 129} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_POLYLINE\:embroidery.h}
{\xe \v embroidery.h\:EMB_POLYLINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_POLYLINE\~ 12}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 130} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_PUBLIC\:embroidery.h}
{\xe \v embroidery.h\:EMB_PUBLIC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_PUBLIC}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 164} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_RECT\:embroidery.h}
{\xe \v embroidery.h\:EMB_RECT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_RECT\~ 13}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 131} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_SPLINE\:embroidery.h}
{\xe \v embroidery.h\:EMB_SPLINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_SPLINE\~ 14}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 132} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_STITCH\:embroidery.h}
{\xe \v embroidery.h\:EMB_STITCH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_STITCH\~ 15}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 133} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_TEXT_MULTI\:embroidery.h}
{\xe \v embroidery.h\:EMB_TEXT_MULTI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_TEXT_MULTI\~ 17}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 135} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_TEXT_SINGLE\:embroidery.h}
{\xe \v embroidery.h\:EMB_TEXT_SINGLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_TEXT_SINGLE\~ 16}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 134} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_THREAD\:embroidery.h}
{\xe \v embroidery.h\:EMB_THREAD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_THREAD\~ 19}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 137} of file {\b embroidery.h}.}\par
}
{\xe \v EMB_VECTOR\:embroidery.h}
{\xe \v embroidery.h\:EMB_VECTOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_VECTOR\~ 18}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 136} of file {\b embroidery.h}.}\par
}
{\xe \v EMBFORMAT_MAXDESC\:embroidery.h}
{\xe \v embroidery.h\:EMBFORMAT_MAXDESC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMBFORMAT_MAXDESC\~ 50}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 152} of file {\b embroidery.h}.}\par
}
{\xe \v EMBFORMAT_MAXEXT\:embroidery.h}
{\xe \v embroidery.h\:EMBFORMAT_MAXEXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMBFORMAT_MAXEXT\~ 3}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 150} of file {\b embroidery.h}.}\par
}
{\xe \v EMBFORMAT_OBJECTONLY\:embroidery.h}
{\xe \v embroidery.h\:EMBFORMAT_OBJECTONLY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMBFORMAT_OBJECTONLY\~ 2}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 141} of file {\b embroidery.h}.}\par
}
{\xe \v EMBFORMAT_STCHANDOBJ\:embroidery.h}
{\xe \v embroidery.h\:EMBFORMAT_STCHANDOBJ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMBFORMAT_STCHANDOBJ\~ 3 /* binary operation: 1+2=3 */}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 142} of file {\b embroidery.h}.}\par
}
{\xe \v EMBFORMAT_STITCHONLY\:embroidery.h}
{\xe \v embroidery.h\:EMBFORMAT_STITCHONLY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMBFORMAT_STITCHONLY\~ 1}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 140} of file {\b embroidery.h}.}\par
}
{\xe \v EMBFORMAT_UNSUPPORTED\:embroidery.h}
{\xe \v embroidery.h\:EMBFORMAT_UNSUPPORTED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMBFORMAT_UNSUPPORTED\~ 0}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 139} of file {\b embroidery.h}.}\par
}
{\xe \v END\:embroidery.h}
{\xe \v embroidery.h\:END}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define END\~ 16 /* end of program */}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b embroidery.h}.}\par
}
{\xe \v Exquisite_Polyester\:embroidery.h}
{\xe \v embroidery.h\:Exquisite_Polyester}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Exquisite_Polyester\~ 3}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 90} of file {\b embroidery.h}.}\par
}
{\xe \v Fufu_Polyester\:embroidery.h}
{\xe \v embroidery.h\:Fufu_Polyester}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Fufu_Polyester\~ 4}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 91} of file {\b embroidery.h}.}\par
}
{\xe \v Fufu_Rayon\:embroidery.h}
{\xe \v embroidery.h\:Fufu_Rayon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Fufu_Rayon\~ 5}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 92} of file {\b embroidery.h}.}\par
}
{\xe \v Hemingworth_Polyester\:embroidery.h}
{\xe \v embroidery.h\:Hemingworth_Polyester}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Hemingworth_Polyester\~ 6}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 93} of file {\b embroidery.h}.}\par
}
{\xe \v hus_thread\:embroidery.h}
{\xe \v embroidery.h\:hus_thread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define hus_thread\~ 24}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 111} of file {\b embroidery.h}.}\par
}
{\xe \v Isacord_Polyester\:embroidery.h}
{\xe \v embroidery.h\:Isacord_Polyester}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Isacord_Polyester\~ 7}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 94} of file {\b embroidery.h}.}\par
}
{\xe \v Isafil_Rayon\:embroidery.h}
{\xe \v embroidery.h\:Isafil_Rayon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Isafil_Rayon\~ 8}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 95} of file {\b embroidery.h}.}\par
}
{\xe \v jef_thread\:embroidery.h}
{\xe \v embroidery.h\:jef_thread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define jef_thread\~ 25}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 112} of file {\b embroidery.h}.}\par
}
{\xe \v JUMP\:embroidery.h}
{\xe \v embroidery.h\:JUMP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define JUMP\~ 1 /* move to (x, y) */}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b embroidery.h}.}\par
}
{\xe \v LIBEMBROIDERY_EMBEDDED_VERSION\:embroidery.h}
{\xe \v embroidery.h\:LIBEMBROIDERY_EMBEDDED_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LIBEMBROIDERY_EMBEDDED_VERSION\~ 0}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 9} of file {\b embroidery.h}.}\par
}
{\xe \v Madeira_Polyester\:embroidery.h}
{\xe \v embroidery.h\:Madeira_Polyester}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Madeira_Polyester\~ 11}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 98} of file {\b embroidery.h}.}\par
}
{\xe \v Madeira_Rayon\:embroidery.h}
{\xe \v embroidery.h\:Madeira_Rayon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Madeira_Rayon\~ 12}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 99} of file {\b embroidery.h}.}\par
}
{\xe \v Marathon_Polyester\:embroidery.h}
{\xe \v embroidery.h\:Marathon_Polyester}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Marathon_Polyester\~ 9}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 96} of file {\b embroidery.h}.}\par
}
{\xe \v Marathon_Rayon\:embroidery.h}
{\xe \v embroidery.h\:Marathon_Rayon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Marathon_Rayon\~ 10}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 97} of file {\b embroidery.h}.}\par
}
{\xe \v MAX_STITCHES\:embroidery.h}
{\xe \v embroidery.h\:MAX_STITCHES}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_STITCHES\~ 1000000}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 154} of file {\b embroidery.h}.}\par
}
{\xe \v MAX_THREADS\:embroidery.h}
{\xe \v embroidery.h\:MAX_THREADS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX_THREADS\~ 256}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 149} of file {\b embroidery.h}.}\par
}
{\xe \v Metro_Polyester\:embroidery.h}
{\xe \v embroidery.h\:Metro_Polyester}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Metro_Polyester\~ 13}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 100} of file {\b embroidery.h}.}\par
}
{\xe \v NORMAL\:embroidery.h}
{\xe \v embroidery.h\:NORMAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NORMAL\~ 0 /* stitch to (x, y) */}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b embroidery.h}.}\par
}
{\xe \v numberOfFormats\:embroidery.h}
{\xe \v embroidery.h\:numberOfFormats}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define numberOfFormats\~ 61}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 144} of file {\b embroidery.h}.}\par
}
{\xe \v Pantone\:embroidery.h}
{\xe \v embroidery.h\:Pantone}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Pantone\~ 14}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 101} of file {\b embroidery.h}.}\par
}
{\xe \v pcm_thread\:embroidery.h}
{\xe \v embroidery.h\:pcm_thread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define pcm_thread\~ 26}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 113} of file {\b embroidery.h}.}\par
}
{\xe \v pec_thread\:embroidery.h}
{\xe \v embroidery.h\:pec_thread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define pec_thread\~ 27}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 114} of file {\b embroidery.h}.}\par
}
{\xe \v RobisonAnton_Polyester\:embroidery.h}
{\xe \v embroidery.h\:RobisonAnton_Polyester}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RobisonAnton_Polyester\~ 15}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 102} of file {\b embroidery.h}.}\par
}
{\xe \v RobisonAnton_Rayon\:embroidery.h}
{\xe \v embroidery.h\:RobisonAnton_Rayon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RobisonAnton_Rayon\~ 16}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 103} of file {\b embroidery.h}.}\par
}
{\xe \v SEQUIN\:embroidery.h}
{\xe \v embroidery.h\:SEQUIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SEQUIN\~ 8 /* sequin */}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b embroidery.h}.}\par
}
{\xe \v shv_thread\:embroidery.h}
{\xe \v embroidery.h\:shv_thread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define shv_thread\~ 28}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 115} of file {\b embroidery.h}.}\par
}
{\xe \v Sigma_Polyester\:embroidery.h}
{\xe \v embroidery.h\:Sigma_Polyester}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Sigma_Polyester\~ 17}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 104} of file {\b embroidery.h}.}\par
}
{\xe \v STOP\:embroidery.h}
{\xe \v embroidery.h\:STOP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STOP\~ 4 /* pause machine for thread change */}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b embroidery.h}.}\par
}
{\xe \v Sulky_Rayon\:embroidery.h}
{\xe \v embroidery.h\:Sulky_Rayon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Sulky_Rayon\~ 18}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 105} of file {\b embroidery.h}.}\par
}
{\xe \v SVG_Colors\:embroidery.h}
{\xe \v embroidery.h\:SVG_Colors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SVG_Colors\~ 23}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 110} of file {\b embroidery.h}.}\par
}
{\xe \v ThreadArt_Polyester\:embroidery.h}
{\xe \v embroidery.h\:ThreadArt_Polyester}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ThreadArt_Polyester\~ 20}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 107} of file {\b embroidery.h}.}\par
}
{\xe \v ThreadArt_Rayon\:embroidery.h}
{\xe \v embroidery.h\:ThreadArt_Rayon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ThreadArt_Rayon\~ 19}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 106} of file {\b embroidery.h}.}\par
}
{\xe \v ThreaDelight_Polyester\:embroidery.h}
{\xe \v embroidery.h\:ThreaDelight_Polyester}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ThreaDelight_Polyester\~ 21}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 108} of file {\b embroidery.h}.}\par
}
{\xe \v TRIM\:embroidery.h}
{\xe \v embroidery.h\:TRIM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TRIM\~ 2 /* trim + move to (x, y) */}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 18} of file {\b embroidery.h}.}\par
}
{\xe \v Z102_Isacord_Polyester\:embroidery.h}
{\xe \v embroidery.h\:Z102_Isacord_Polyester}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Z102_Isacord_Polyester\~ 22}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 109} of file {\b embroidery.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v EmbAlignedDim\:embroidery.h}
{\xe \v embroidery.h\:EmbAlignedDim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbAlignedDim_} {\b EmbAlignedDim}}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbAngularDim\:embroidery.h}
{\xe \v embroidery.h\:EmbAngularDim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbAngularDim_} {\b EmbAngularDim}}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbArc\:embroidery.h}
{\xe \v embroidery.h\:EmbArc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbArc_} {\b EmbArc}}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbArcLengthDim\:embroidery.h}
{\xe \v embroidery.h\:EmbArcLengthDim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbArcLengthDim_} {\b EmbArcLengthDim}}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbArray\:embroidery.h}
{\xe \v embroidery.h\:EmbArray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbArray_} {\b EmbArray}}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The basic array type. \par
}{
Definition at line {\b 203} of file {\b embroidery.h}.}\par
}
{\xe \v EmbBezier\:embroidery.h}
{\xe \v embroidery.h\:EmbBezier}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbBezier_} {\b EmbBezier}}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbBlock\:embroidery.h}
{\xe \v embroidery.h\:EmbBlock}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbBlock_} {\b EmbBlock}}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbCircle\:embroidery.h}
{\xe \v embroidery.h\:EmbCircle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbCircle_} {\b EmbCircle}}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbColor\:embroidery.h}
{\xe \v embroidery.h\:EmbColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbColor_} {\b EmbColor}}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EmbColor uses the light primaries: red, green, blue in that order. \par
}}
{\xe \v EmbDiameterDim\:embroidery.h}
{\xe \v embroidery.h\:EmbDiameterDim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbDiameterDim_} {\b EmbDiameterDim}}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbEllipse\:embroidery.h}
{\xe \v embroidery.h\:EmbEllipse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbEllipse_} {\b EmbEllipse}}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbFlag\:embroidery.h}
{\xe \v embroidery.h\:EmbFlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef int {\b EmbFlag}}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 351} of file {\b embroidery.h}.}\par
}
{\xe \v EmbFormatList\:embroidery.h}
{\xe \v embroidery.h\:EmbFormatList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbFormatList_} {\b EmbFormatList}}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbGeometry\:embroidery.h}
{\xe \v embroidery.h\:EmbGeometry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbGeometry_} {\b EmbGeometry}}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbImage\:embroidery.h}
{\xe \v embroidery.h\:EmbImage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbImage_} {\b EmbImage}}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbInfiniteLine\:embroidery.h}
{\xe \v embroidery.h\:EmbInfiniteLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbInfiniteLine_} {\b EmbInfiniteLine}}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbLayer\:embroidery.h}
{\xe \v embroidery.h\:EmbLayer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbLayer_} {\b EmbLayer}}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbLeaderDim\:embroidery.h}
{\xe \v embroidery.h\:EmbLeaderDim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbLeaderDim_} {\b EmbLeaderDim}}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbLine\:embroidery.h}
{\xe \v embroidery.h\:EmbLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbLine_} {\b EmbLine}}}
\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbLinearDim\:embroidery.h}
{\xe \v embroidery.h\:EmbLinearDim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbLinearDim_} {\b EmbLinearDim}}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbOrdinateDim\:embroidery.h}
{\xe \v embroidery.h\:EmbOrdinateDim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbOrdinateDim_} {\b EmbOrdinateDim}}}
\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbPath\:embroidery.h}
{\xe \v embroidery.h\:EmbPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbPath_} {\b EmbPath}}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbPattern\:embroidery.h}
{\xe \v embroidery.h\:EmbPattern}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbPattern_} {\b EmbPattern}}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbPoint\:embroidery.h}
{\xe \v embroidery.h\:EmbPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbPoint_} {\b EmbPoint}}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbPolygon\:embroidery.h}
{\xe \v embroidery.h\:EmbPolygon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b EmbPath} {\b EmbPolygon}}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 349} of file {\b embroidery.h}.}\par
}
{\xe \v EmbPolyline\:embroidery.h}
{\xe \v embroidery.h\:EmbPolyline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b EmbPath} {\b EmbPolyline}}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 350} of file {\b embroidery.h}.}\par
}
{\xe \v EmbRadiusDim\:embroidery.h}
{\xe \v embroidery.h\:EmbRadiusDim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbRadiusDim_} {\b EmbRadiusDim}}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbRay\:embroidery.h}
{\xe \v embroidery.h\:EmbRay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbRay_} {\b EmbRay}}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbReal\:embroidery.h}
{\xe \v embroidery.h\:EmbReal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef float {\b EmbReal}}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 177} of file {\b embroidery.h}.}\par
}
{\xe \v EmbRect\:embroidery.h}
{\xe \v embroidery.h\:EmbRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbRect_} {\b EmbRect}}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbSatinOutline\:embroidery.h}
{\xe \v embroidery.h\:EmbSatinOutline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbSatinOutline_} {\b EmbSatinOutline}}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbSpline\:embroidery.h}
{\xe \v embroidery.h\:EmbSpline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbSpline_} {\b EmbSpline}}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbStitch\:embroidery.h}
{\xe \v embroidery.h\:EmbStitch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbStitch_} {\b EmbStitch}}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbTextMulti\:embroidery.h}
{\xe \v embroidery.h\:EmbTextMulti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbTextMulti_} {\b EmbTextMulti}}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbTextSingle\:embroidery.h}
{\xe \v embroidery.h\:EmbTextSingle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbTextSingle_} {\b EmbTextSingle}}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbThread\:embroidery.h}
{\xe \v embroidery.h\:EmbThread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbThread_} {\b EmbThread}}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbTime\:embroidery.h}
{\xe \v embroidery.h\:EmbTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbTime_} {\b EmbTime}}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v EmbVector\:embroidery.h}
{\xe \v embroidery.h\:EmbVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b EmbVector_} {\b EmbVector}}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
The basic type to represent points absolutely or represent directions.\par
Positive y is up, units are in mm. \par
}}
{\xe \v L_system\:embroidery.h}
{\xe \v embroidery.h\:L_system}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b LSYSTEM} {\b L_system}}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v thread_color\:embroidery.h}
{\xe \v embroidery.h\:thread_color}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b thread_color_} {\b thread_color}}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v convert\:embroidery.h}
{\xe \v embroidery.h\:convert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int convert (const char *  {\i inf}, const char *  {\i outf})}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 1108} of file {\b pattern.c}.}\par
}
{\xe \v degrees\:embroidery.h}
{\xe \v embroidery.h\:degrees}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbReal} degrees ({\b EmbReal}  {\i radian})}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v emb_identify_format\:embroidery.h}
{\xe \v embroidery.h\:emb_identify_format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int emb_identify_format (const char *  {\i ending})}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 167} of file {\b formats.c}.}\par
}
{\xe \v emb_round\:embroidery.h}
{\xe \v embroidery.h\:emb_round}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int emb_round ({\b EmbReal}  {\i x})}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embArc_clockwise\:embroidery.h}
{\xe \v embroidery.h\:embArc_clockwise}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} char embArc_clockwise ({\b EmbArc}  {\i arc})}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embArc_init\:embroidery.h}
{\xe \v embroidery.h\:embArc_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbArc} embArc_init (void )}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embArray_addArc\:embroidery.h}
{\xe \v embroidery.h\:embArray_addArc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int embArray_addArc ({\b EmbArray} *  {\i g}, {\b EmbArc}  {\i arc})}}
\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 96} of file {\b array.c}.}\par
}
{\xe \v embArray_addCircle\:embroidery.h}
{\xe \v embroidery.h\:embArray_addCircle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int embArray_addCircle ({\b EmbArray} *  {\i g}, {\b EmbCircle}  {\i circle})}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 108} of file {\b array.c}.}\par
}
{\xe \v embArray_addEllipse\:embroidery.h}
{\xe \v embroidery.h\:embArray_addEllipse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int embArray_addEllipse ({\b EmbArray} *  {\i g}, {\b EmbEllipse}  {\i ellipse})}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 120} of file {\b array.c}.}\par
}
{\xe \v embArray_addFlag\:embroidery.h}
{\xe \v embroidery.h\:embArray_addFlag}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int embArray_addFlag ({\b EmbArray} *  {\i g}, int  {\i flag})}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 132} of file {\b array.c}.}\par
}
{\xe \v embArray_addLine\:embroidery.h}
{\xe \v embroidery.h\:embArray_addLine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int embArray_addLine ({\b EmbArray} *  {\i g}, {\b EmbLine}  {\i line})}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 144} of file {\b array.c}.}\par
}
{\xe \v embArray_addPath\:embroidery.h}
{\xe \v embroidery.h\:embArray_addPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int embArray_addPath ({\b EmbArray} *  {\i g}, {\b EmbPath}  {\i p})}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 156} of file {\b array.c}.}\par
}
{\xe \v embArray_addPoint\:embroidery.h}
{\xe \v embroidery.h\:embArray_addPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int embArray_addPoint ({\b EmbArray} *  {\i g}, {\b EmbPoint}  {\i p})}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 168} of file {\b array.c}.}\par
}
{\xe \v embArray_addPolygon\:embroidery.h}
{\xe \v embroidery.h\:embArray_addPolygon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int embArray_addPolygon ({\b EmbArray} *  {\i g}, {\b EmbPolygon}  {\i p})}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 192} of file {\b array.c}.}\par
}
{\xe \v embArray_addPolyline\:embroidery.h}
{\xe \v embroidery.h\:embArray_addPolyline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int embArray_addPolyline ({\b EmbArray} *  {\i g}, {\b EmbPolyline}  {\i p})}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 180} of file {\b array.c}.}\par
}
{\xe \v embArray_addRect\:embroidery.h}
{\xe \v embroidery.h\:embArray_addRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int embArray_addRect ({\b EmbArray} *  {\i g}, {\b EmbRect}  {\i rect})}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 204} of file {\b array.c}.}\par
}
{\xe \v embArray_addStitch\:embroidery.h}
{\xe \v embroidery.h\:embArray_addStitch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int embArray_addStitch ({\b EmbArray} *  {\i g}, {\b EmbStitch}  {\i st})}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 216} of file {\b array.c}.}\par
}
{\xe \v embArray_addThread\:embroidery.h}
{\xe \v embroidery.h\:embArray_addThread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int embArray_addThread ({\b EmbArray} *  {\i g}, {\b EmbThread}  {\i p})}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embArray_addVector\:embroidery.h}
{\xe \v embroidery.h\:embArray_addVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int embArray_addVector ({\b EmbArray} *  {\i g}, {\b EmbVector}  {\i b})}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 227} of file {\b array.c}.}\par
}
{\xe \v embArray_copy\:embroidery.h}
{\xe \v embroidery.h\:embArray_copy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embArray_copy ({\b EmbArray} *  {\i dst}, {\b EmbArray} *  {\i src})}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 74} of file {\b array.c}.}\par
}
{\xe \v embArray_create\:embroidery.h}
{\xe \v embroidery.h\:embArray_create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbArray} * embArray_create (int  {\i type})}}
\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b array.c}.}\par
}
{\xe \v embArray_free\:embroidery.h}
{\xe \v embroidery.h\:embArray_free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embArray_free ({\b EmbArray} *  {\i p})}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 239} of file {\b array.c}.}\par
}
{\xe \v embArray_resize\:embroidery.h}
{\xe \v embroidery.h\:embArray_resize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int embArray_resize ({\b EmbArray} *  {\i g})}}
\par
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 41} of file {\b array.c}.}\par
}
{\xe \v embCircle_init\:embroidery.h}
{\xe \v embroidery.h\:embCircle_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbCircle} embCircle_init (void )}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embColor_create\:embroidery.h}
{\xe \v embroidery.h\:embColor_create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbColor} * embColor_create (unsigned char  {\i r}, unsigned char  {\i g}, unsigned char  {\i b})}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embColor_distance\:embroidery.h}
{\xe \v embroidery.h\:embColor_distance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int embColor_distance ({\b EmbColor}  {\i a}, {\b EmbColor}  {\i b})}}
\par
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 671} of file {\b main.c}.}\par
}
{\xe \v embColor_fromHexStr\:embroidery.h}
{\xe \v embroidery.h\:embColor_fromHexStr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbColor} embColor_fromHexStr (char *  {\i val})}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 32} of file {\b encoding.c}.}\par
}
{\xe \v embColor_make\:embroidery.h}
{\xe \v embroidery.h\:embColor_make}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbColor} embColor_make (unsigned char  {\i r}, unsigned char  {\i g}, unsigned char  {\i b})}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embEllipse_area\:embroidery.h}
{\xe \v embroidery.h\:embEllipse_area}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbReal} embEllipse_area ({\b EmbEllipse}  {\i ellipse})}}
\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embEllipse_diameterX\:embroidery.h}
{\xe \v embroidery.h\:embEllipse_diameterX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbReal} embEllipse_diameterX ({\b EmbEllipse}  {\i ellipse})}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embEllipse_diameterY\:embroidery.h}
{\xe \v embroidery.h\:embEllipse_diameterY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbReal} embEllipse_diameterY ({\b EmbEllipse}  {\i ellipse})}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embEllipse_height\:embroidery.h}
{\xe \v embroidery.h\:embEllipse_height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbReal} embEllipse_height ({\b EmbEllipse}  {\i ellipse})}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embEllipse_init\:embroidery.h}
{\xe \v embroidery.h\:embEllipse_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbEllipse} embEllipse_init (void )}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embEllipse_make\:embroidery.h}
{\xe \v embroidery.h\:embEllipse_make}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbEllipse} embEllipse_make ({\b EmbReal}  {\i cx}, {\b EmbReal}  {\i cy}, {\b EmbReal}  {\i rx}, {\b EmbReal}  {\i ry})}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embEllipse_perimeter\:embroidery.h}
{\xe \v embroidery.h\:embEllipse_perimeter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbReal} embEllipse_perimeter ({\b EmbEllipse}  {\i ellipse})}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embEllipse_width\:embroidery.h}
{\xe \v embroidery.h\:embEllipse_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbReal} embEllipse_width ({\b EmbEllipse}  {\i ellipse})}}
\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embGeometry_boundingRect\:embroidery.h}
{\xe \v embroidery.h\:embGeometry_boundingRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbRect} embGeometry_boundingRect ({\b EmbGeometry} *  {\i obj})}}
\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 102} of file {\b geometry.c}.}\par
}
{\xe \v embGeometry_free\:embroidery.h}
{\xe \v embroidery.h\:embGeometry_free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embGeometry_free ({\b EmbGeometry} *  {\i obj})}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 63} of file {\b geometry.c}.}\par
}
{\xe \v embGeometry_init\:embroidery.h}
{\xe \v embroidery.h\:embGeometry_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbGeometry} * embGeometry_init (int  {\i type_in})}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b geometry.c}.}\par
}
{\xe \v embGeometry_move\:embroidery.h}
{\xe \v embroidery.h\:embGeometry_move}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embGeometry_move ({\b EmbGeometry} *  {\i obj}, {\b EmbVector}  {\i delta})}}
\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 81} of file {\b geometry.c}.}\par
}
{\xe \v embGeometry_vulcanize\:embroidery.h}
{\xe \v embroidery.h\:embGeometry_vulcanize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embGeometry_vulcanize ({\b EmbGeometry} *  {\i obj})}}
\par
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 128} of file {\b geometry.c}.}\par
}
{\xe \v embImage_create\:embroidery.h}
{\xe \v embroidery.h\:embImage_create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbImage} embImage_create (int , int )}}
\par
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embImage_free\:embroidery.h}
{\xe \v embroidery.h\:embImage_free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embImage_free ({\b EmbImage} *  {\i image})}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embImage_read\:embroidery.h}
{\xe \v embroidery.h\:embImage_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embImage_read ({\b EmbImage} *  {\i image}, char *  {\i fname})}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embImage_write\:embroidery.h}
{\xe \v embroidery.h\:embImage_write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int embImage_write ({\b EmbImage} *  {\i image}, char *  {\i fname})}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embLine_intersectionPoint\:embroidery.h}
{\xe \v embroidery.h\:embLine_intersectionPoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbVector} embLine_intersectionPoint ({\b EmbLine}  {\i line1}, {\b EmbLine}  {\i line2})}}
\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embLine_make\:embroidery.h}
{\xe \v embroidery.h\:embLine_make}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbLine} embLine_make ({\b EmbReal}  {\i x1}, {\b EmbReal}  {\i y1}, {\b EmbReal}  {\i x2}, {\b EmbReal}  {\i y2})}}
\par
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embLine_normalVector\:embroidery.h}
{\xe \v embroidery.h\:embLine_normalVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embLine_normalVector ({\b EmbLine}  {\i line}, {\b EmbVector} *  {\i result}, int  {\i clockwise})}}
\par
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embPattern_addCircleAbs\:embroidery.h}
{\xe \v embroidery.h\:embPattern_addCircleAbs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_addCircleAbs ({\b EmbPattern} *  {\i p}, {\b EmbCircle}  {\i circle})}}
\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a circle object to pattern ({\i p} ) with its center at the absolute position ({\i cx} ,{\i cy} ) with a radius of ({\i r} ). Positive y is up. Units are in millimeters. \par
}{
Definition at line {\b 787} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_addEllipseAbs\:embroidery.h}
{\xe \v embroidery.h\:embPattern_addEllipseAbs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_addEllipseAbs ({\b EmbPattern} *  {\i p}, {\b EmbEllipse}  {\i ellipse})}}
\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds an ellipse object to pattern ({\i p} ) with its center at the absolute position ({\i cx} ,{\i cy} ) with radii of ({\i rx} ,{\i ry} ). Positive y is up. Units are in millimeters. \par
}{
Definition at line {\b 801} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_addLineAbs\:embroidery.h}
{\xe \v embroidery.h\:embPattern_addLineAbs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_addLineAbs ({\b EmbPattern} *  {\i p}, {\b EmbLine}  {\i line})}}
\par
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a line object to pattern ({\i p} ) starting at the absolute position ({\i x1} ,{\i y1} ) and ending at the absolute position ({\i x2} ,{\i y2} ). Positive y is up. Units are in millimeters. \par
}{
Definition at line {\b 816} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_addPathAbs\:embroidery.h}
{\xe \v embroidery.h\:embPattern_addPathAbs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_addPathAbs ({\b EmbPattern} *  {\i p}, {\b EmbPath}  {\i obj})}}
\par
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 827} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_addPointAbs\:embroidery.h}
{\xe \v embroidery.h\:embPattern_addPointAbs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_addPointAbs ({\b EmbPattern} *  {\i p}, {\b EmbPoint}  {\i obj})}}
\par
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a point object to pattern ({\i p} ) at the absolute position ({\i x} ,{\i y} ). Positive y is up. Units are in millimeters. \par
}{
Definition at line {\b 843} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_addPolygonAbs\:embroidery.h}
{\xe \v embroidery.h\:embPattern_addPolygonAbs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_addPolygonAbs ({\b EmbPattern} *  {\i p}, {\b EmbPolygon}  {\i obj})}}
\par
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 854} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_addPolylineAbs\:embroidery.h}
{\xe \v embroidery.h\:embPattern_addPolylineAbs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_addPolylineAbs ({\b EmbPattern} *  {\i p}, {\b EmbPolyline}  {\i obj})}}
\par
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embPattern_addRectAbs\:embroidery.h}
{\xe \v embroidery.h\:embPattern_addRectAbs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_addRectAbs ({\b EmbPattern} *  {\i p}, {\b EmbRect}  {\i rect})}}
\par
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a rectangle object to pattern ({\i p} ) at the absolute position ({\i x} ,{\i y} ) with a width of ({\i w} ) and a height of ({\i h} ). Positive y is up. Units are in millimeters. \par
}{
Definition at line {\b 888} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_addStitchAbs\:embroidery.h}
{\xe \v embroidery.h\:embPattern_addStitchAbs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_addStitchAbs ({\b EmbPattern} *  {\i p}, {\b EmbReal}  {\i x}, {\b EmbReal}  {\i y}, int  {\i flags}, int  {\i isAutoColorIndex})}}
\par
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a stitch to the pattern ({\i p} ) at the absolute position ({\i x} ,{\i y} ). Positive y is up. Units are in millimeters. \par
}{
Definition at line {\b 236} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_addStitchRel\:embroidery.h}
{\xe \v embroidery.h\:embPattern_addStitchRel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_addStitchRel ({\b EmbPattern} *  {\i p}, {\b EmbReal}  {\i dx}, {\b EmbReal}  {\i dy}, int  {\i flags}, int  {\i isAutoColorIndex})}}
\par
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a stitch to the pattern ({\i p} ) at the relative position ({\i dx} ,{\i dy} ) to the previous stitch. Positive y is up. Units are in millimeters. \par
}{
Definition at line {\b 290} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_addThread\:embroidery.h}
{\xe \v embroidery.h\:embPattern_addThread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int embPattern_addThread ({\b EmbPattern} *  {\i p}, {\b EmbThread}  {\i thread})}}
\par
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 66} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_calcBoundingBox\:embroidery.h}
{\xe \v embroidery.h\:embPattern_calcBoundingBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbRect} embPattern_calcBoundingBox ({\b EmbPattern} *  {\i p})}}
\par
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns an EmbRect that encapsulates all stitches and objects in the pattern ({\i p} ). \par
}{
Definition at line {\b 340} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_center\:embroidery.h}
{\xe \v embroidery.h\:embPattern_center}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_center ({\b EmbPattern} *  {\i p})}}
\par
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 709} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_changeColor\:embroidery.h}
{\xe \v embroidery.h\:embPattern_changeColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_changeColor ({\b EmbPattern} *  {\i p}, int  {\i index})}}
\par
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 312} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_color_count\:embroidery.h}
{\xe \v embroidery.h\:embPattern_color_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int embPattern_color_count ({\b EmbPattern} *  {\i pattern}, {\b EmbColor}  {\i startColor})}}
\par
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 911} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_combine\:embroidery.h}
{\xe \v embroidery.h\:embPattern_combine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbPattern} * embPattern_combine ({\b EmbPattern} *  {\i p1}, {\b EmbPattern} *  {\i p2})}}
\par
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 854} of file {\b fill.c}.}\par
}
{\xe \v embPattern_combineJumpStitches\:embroidery.h}
{\xe \v embroidery.h\:embPattern_combineJumpStitches}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_combineJumpStitches ({\b EmbPattern} *  {\i p})}}
\par
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 624} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_convertGeometry\:embroidery.h}
{\xe \v embroidery.h\:embPattern_convertGeometry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_convertGeometry ({\b EmbPattern} *  {\i p})}}
\par
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 987} of file {\b fill.c}.}\par
}
{\xe \v embPattern_copyPolylinesToStitchList\:embroidery.h}
{\xe \v embroidery.h\:embPattern_copyPolylinesToStitchList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_copyPolylinesToStitchList ({\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embPattern_copyStitchListToPolylines\:embroidery.h}
{\xe \v embroidery.h\:embPattern_copyStitchListToPolylines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_copyStitchListToPolylines ({\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embPattern_correctForMaxStitchLength\:embroidery.h}
{\xe \v embroidery.h\:embPattern_correctForMaxStitchLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_correctForMaxStitchLength ({\b EmbPattern} *  {\i p}, {\b EmbReal}  {\i maxStitchLength}, {\b EmbReal}  {\i maxJumpLength})}}
\par
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 660} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_create\:embroidery.h}
{\xe \v embroidery.h\:embPattern_create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbPattern} * embPattern_create (void )}}
\par
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a pointer to an EmbPattern. It is created on the heap. The caller is responsible for freeing the allocated memory with {\b embPattern_free()}. \par
}{
Definition at line {\b 21} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_crossstitch\:embroidery.h}
{\xe \v embroidery.h\:embPattern_crossstitch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_crossstitch ({\b EmbPattern} *  {\i pattern}, {\b EmbImage} *  {\i image}, int  {\i threshhold})}}
\par
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 239} of file {\b fill.c}.}\par
}
{\xe \v embPattern_designDetails\:embroidery.h}
{\xe \v embroidery.h\:embPattern_designDetails}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_designDetails ({\b EmbPattern} *  {\i p})}}
\par
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 942} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_end\:embroidery.h}
{\xe \v embroidery.h\:embPattern_end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_end ({\b EmbPattern} *  {\i p})}}
\par
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 898} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_fixColorCount\:embroidery.h}
{\xe \v embroidery.h\:embPattern_fixColorCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_fixColorCount ({\b EmbPattern} *  {\i p})}}
\par
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 79} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_flip\:embroidery.h}
{\xe \v embroidery.h\:embPattern_flip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_flip ({\b EmbPattern} *  {\i p}, int  {\i horz}, int  {\i vert})}}
\par
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flips the entire pattern ({\i p} ) horizontally about the x-axis if ({\i horz} ) is true. Flips the entire pattern ({\i p} ) vertically about the y-axis if ({\i vert} ) is true. \par
}{
Definition at line {\b 497} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_flipHorizontal\:embroidery.h}
{\xe \v embroidery.h\:embPattern_flipHorizontal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_flipHorizontal ({\b EmbPattern} *  {\i p})}}
\par
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flips the entire pattern ({\i p} ) horizontally about the y-axis. \par
}{
Definition at line {\b 472} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_flipVertical\:embroidery.h}
{\xe \v embroidery.h\:embPattern_flipVertical}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_flipVertical ({\b EmbPattern} *  {\i p})}}
\par
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flips the entire pattern ({\i p} ) vertically about the x-axis. \par
}{
Definition at line {\b 484} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_free\:embroidery.h}
{\xe \v embroidery.h\:embPattern_free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_free ({\b EmbPattern} *  {\i p})}}
\par
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frees all memory allocated in the pattern ({\i p} ). \par
}{
Definition at line {\b 771} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_hideStitchesOverLength\:embroidery.h}
{\xe \v embroidery.h\:embPattern_hideStitchesOverLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_hideStitchesOverLength ({\b EmbPattern} *  {\i p}, int  {\i length})}}
\par
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 42} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_horizontal_fill\:embroidery.h}
{\xe \v embroidery.h\:embPattern_horizontal_fill}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_horizontal_fill ({\b EmbPattern} *  {\i pattern}, {\b EmbImage} *  {\i image}, int  {\i threshhold})}}
\par
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 212} of file {\b fill.c}.}\par
}
{\xe \v embPattern_jumpStitches\:embroidery.h}
{\xe \v embroidery.h\:embPattern_jumpStitches}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int embPattern_jumpStitches ({\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 1240} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_lengthHistogram\:embroidery.h}
{\xe \v embroidery.h\:embPattern_lengthHistogram}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_lengthHistogram ({\b EmbPattern} *  {\i pattern}, int *  {\i bin}, int  {\i NUMBINS})}}
\par
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 1205} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_loadExternalColorFile\:embroidery.h}
{\xe \v embroidery.h\:embPattern_loadExternalColorFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_loadExternalColorFile ({\b EmbPattern} *  {\i p}, const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 732} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_maximumStitchLength\:embroidery.h}
{\xe \v embroidery.h\:embPattern_maximumStitchLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbReal} embPattern_maximumStitchLength ({\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 1184} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_minimumStitchLength\:embroidery.h}
{\xe \v embroidery.h\:embPattern_minimumStitchLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbReal} embPattern_minimumStitchLength ({\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 1163} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_movePolylinesToStitchList\:embroidery.h}
{\xe \v embroidery.h\:embPattern_movePolylinesToStitchList}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_movePolylinesToStitchList ({\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embPattern_moveStitchListToPolylines\:embroidery.h}
{\xe \v embroidery.h\:embPattern_moveStitchListToPolylines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_moveStitchListToPolylines ({\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embPattern_read\:embroidery.h}
{\xe \v embroidery.h\:embPattern_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} char embPattern_read ({\b EmbPattern} *  {\i pattern}, const char *  {\i fileName}, int  {\i format})}}
\par
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 259} of file {\b formats.c}.}\par
}
{\xe \v embPattern_readAuto\:embroidery.h}
{\xe \v embroidery.h\:embPattern_readAuto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} char embPattern_readAuto ({\b EmbPattern} *  {\i pattern}, const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 706} of file {\b formats.c}.}\par
}
{\xe \v embPattern_realStitches\:embroidery.h}
{\xe \v embroidery.h\:embPattern_realStitches}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int embPattern_realStitches ({\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 1227} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_render\:embroidery.h}
{\xe \v embroidery.h\:embPattern_render}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int embPattern_render ({\b EmbPattern} *  {\i pattern}, char *  {\i fname})}}
\par
{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embPattern_scale\:embroidery.h}
{\xe \v embroidery.h\:embPattern_scale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embPattern_scale ({\b EmbPattern} *  {\i p}, {\b EmbReal}  {\i scale})}}
\par
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 324} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_simulate\:embroidery.h}
{\xe \v embroidery.h\:embPattern_simulate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int embPattern_simulate ({\b EmbPattern} *  {\i pattern}, char *  {\i fname})}}
\par
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embPattern_totalStitchLength\:embroidery.h}
{\xe \v embroidery.h\:embPattern_totalStitchLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbReal} embPattern_totalStitchLength ({\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 1143} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_trimStitches\:embroidery.h}
{\xe \v embroidery.h\:embPattern_trimStitches}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int embPattern_trimStitches ({\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 1254} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_write\:embroidery.h}
{\xe \v embroidery.h\:embPattern_write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} char embPattern_write ({\b EmbPattern} *  {\i pattern}, const char *  {\i fileName}, int  {\i format})}}
\par
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 480} of file {\b formats.c}.}\par
}
{\xe \v embPattern_writeAuto\:embroidery.h}
{\xe \v embroidery.h\:embPattern_writeAuto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} char embPattern_writeAuto ({\b EmbPattern} *  {\i pattern}, const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 718} of file {\b formats.c}.}\par
}
{\xe \v embRect_area\:embroidery.h}
{\xe \v embroidery.h\:embRect_area}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbReal} embRect_area ({\b EmbRect} )}}
\par
{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embRect_init\:embroidery.h}
{\xe \v embroidery.h\:embRect_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbRect} embRect_init (void )}}
\par
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embSatinOutline_generateSatinOutline\:embroidery.h}
{\xe \v embroidery.h\:embSatinOutline_generateSatinOutline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embSatinOutline_generateSatinOutline ({\b EmbArray} *  {\i lines}, {\b EmbReal}  {\i thickness}, {\b EmbSatinOutline} *  {\i result})}}
\par
{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 520} of file {\b main.c}.}\par
}
{\xe \v embSatinOutline_renderStitches\:embroidery.h}
{\xe \v embroidery.h\:embSatinOutline_renderStitches}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbArray} * embSatinOutline_renderStitches ({\b EmbSatinOutline} *  {\i result}, {\b EmbReal}  {\i density})}}
\par
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 608} of file {\b main.c}.}\par
}
{\xe \v embThread_findNearestColor\:embroidery.h}
{\xe \v embroidery.h\:embThread_findNearestColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int embThread_findNearestColor ({\b EmbColor}  {\i color}, {\b EmbColor} *  {\i color_list}, int  {\i n_colors})}}
\par
{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the closest color to the required color based on a list of available threads. The algorithm is a simple least squares search against the list. If the (square of) Euclidean 3-dimensional distance between the points in (red, green, blue) space is smaller then the index is saved and the remaining index is returned to the caller.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i color} \cell }{The EmbColor color to match. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i colors} \cell }{The EmbThreadList pointer to start the search at. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mode} \cell }{Is the argument an array of threads (0) or colors (1)? \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
closestIndex The entry in the ThreadList that matches. \par
}}}{
Definition at line {\b 715} of file {\b main.c}.}\par
}
{\xe \v embThread_findNearestThread\:embroidery.h}
{\xe \v embroidery.h\:embThread_findNearestThread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int embThread_findNearestThread ({\b EmbColor}  {\i color}, {\b EmbThread} *  {\i threads}, int  {\i n_threads})}}
\par
{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 731} of file {\b main.c}.}\par
}
{\xe \v embThread_getRandom\:embroidery.h}
{\xe \v embroidery.h\:embThread_getRandom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbThread} embThread_getRandom (void )}}
\par
{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a random thread color, useful in filling in cases where the actual color of the thread doesn't matter but one needs to be declared to test or render a pattern.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
c The resulting color. \par
}}}{
Definition at line {\b 754} of file {\b main.c}.}\par
}
{\xe \v embTime_initNow\:embroidery.h}
{\xe \v embroidery.h\:embTime_initNow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embTime_initNow ({\b EmbTime} *  {\i t})}}
\par
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 885} of file {\b main.c}.}\par
}
{\xe \v embTime_time\:embroidery.h}
{\xe \v embroidery.h\:embTime_time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbTime} embTime_time ({\b EmbTime} *  {\i t})}}
\par
{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 905} of file {\b main.c}.}\par
}
{\xe \v embVector_add\:embroidery.h}
{\xe \v embroidery.h\:embVector_add}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbVector} embVector_add ({\b EmbVector}  {\i v1}, {\b EmbVector}  {\i v2})}}
\par
{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embVector_angle\:embroidery.h}
{\xe \v embroidery.h\:embVector_angle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbReal} embVector_angle ({\b EmbVector}  {\i v})}}
\par
{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embVector_average\:embroidery.h}
{\xe \v embroidery.h\:embVector_average}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbVector} embVector_average ({\b EmbVector}  {\i v1}, {\b EmbVector}  {\i v2})}}
\par
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embVector_cross\:embroidery.h}
{\xe \v embroidery.h\:embVector_cross}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbReal} embVector_cross ({\b EmbVector}  {\i v1}, {\b EmbVector}  {\i v2})}}
\par
{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embVector_distance\:embroidery.h}
{\xe \v embroidery.h\:embVector_distance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbReal} embVector_distance ({\b EmbVector}  {\i a}, {\b EmbVector}  {\i b})}}
\par
{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embVector_dot\:embroidery.h}
{\xe \v embroidery.h\:embVector_dot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbReal} embVector_dot ({\b EmbVector}  {\i v1}, {\b EmbVector}  {\i v2})}}
\par
{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embVector_length\:embroidery.h}
{\xe \v embroidery.h\:embVector_length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbReal} embVector_length ({\b EmbVector}  {\i vector})}}
\par
{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embVector_multiply\:embroidery.h}
{\xe \v embroidery.h\:embVector_multiply}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embVector_multiply ({\b EmbVector}  {\i vector}, {\b EmbReal}  {\i magnitude}, {\b EmbVector} *  {\i result})}}
\par
{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embVector_normalize\:embroidery.h}
{\xe \v embroidery.h\:embVector_normalize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embVector_normalize ({\b EmbVector}  {\i vector}, {\b EmbVector} *  {\i result})}}
\par
{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embVector_relativeX\:embroidery.h}
{\xe \v embroidery.h\:embVector_relativeX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbReal} embVector_relativeX ({\b EmbVector}  {\i a1}, {\b EmbVector}  {\i a2}, {\b EmbVector}  {\i a3})}}
\par
{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embVector_relativeY\:embroidery.h}
{\xe \v embroidery.h\:embVector_relativeY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbReal} embVector_relativeY ({\b EmbVector}  {\i a1}, {\b EmbVector}  {\i a2}, {\b EmbVector}  {\i a3})}}
\par
{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embVector_subtract\:embroidery.h}
{\xe \v embroidery.h\:embVector_subtract}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbVector} embVector_subtract ({\b EmbVector}  {\i v1}, {\b EmbVector}  {\i v2})}}
\par
{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embVector_transpose_product\:embroidery.h}
{\xe \v embroidery.h\:embVector_transpose_product}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void embVector_transpose_product ({\b EmbVector}  {\i v1}, {\b EmbVector}  {\i v2}, {\b EmbVector} *  {\i result})}}
\par
{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v embVector_unit\:embroidery.h}
{\xe \v embroidery.h\:embVector_unit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbVector} embVector_unit ({\b EmbReal}  {\i angle})}}
\par
{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v full_test_matrix\:embroidery.h}
{\xe \v embroidery.h\:full_test_matrix}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int full_test_matrix (char *  {\i fname})}}
\par
{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getArcCenter\:embroidery.h}
{\xe \v embroidery.h\:getArcCenter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void getArcCenter ({\b EmbArc}  {\i arc}, {\b EmbVector} *  {\i arcCenter})}}
\par
{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getArcDataFromBulge\:embroidery.h}
{\xe \v embroidery.h\:getArcDataFromBulge}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} char getArcDataFromBulge ({\b EmbReal}  {\i bulge}, {\b EmbArc} *  {\i arc}, {\b EmbReal} *  {\i arcCenterX}, {\b EmbReal} *  {\i arcCenterY}, {\b EmbReal} *  {\i radius}, {\b EmbReal} *  {\i diameter}, {\b EmbReal} *  {\i chord}, {\b EmbReal} *  {\i chordMidX}, {\b EmbReal} *  {\i chordMidY}, {\b EmbReal} *  {\i sagitta}, {\b EmbReal} *  {\i apothem}, {\b EmbReal} *  {\i incAngleInDegrees}, char *  {\i clockwise})}}
\par
{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getCircleCircleIntersections\:embroidery.h}
{\xe \v embroidery.h\:getCircleCircleIntersections}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int getCircleCircleIntersections ({\b EmbCircle}  {\i c0}, {\b EmbCircle}  {\i c1}, {\b EmbVector} *  {\i v0}, {\b EmbVector} *  {\i v1})}}
\par
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v getCircleTangentPoints\:embroidery.h}
{\xe \v embroidery.h\:getCircleTangentPoints}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int getCircleTangentPoints ({\b EmbCircle}  {\i c}, {\b EmbVector}  {\i p}, {\b EmbVector} *  {\i v0}, {\b EmbVector} *  {\i v1})}}
\par
{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v hilbert_curve\:embroidery.h}
{\xe \v embroidery.h\:hilbert_curve}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int hilbert_curve ({\b EmbPattern} *  {\i pattern}, int  {\i iterations})}}
\par
{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 268} of file {\b fill.c}.}\par
}
{\xe \v lindenmayer_system\:embroidery.h}
{\xe \v embroidery.h\:lindenmayer_system}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int lindenmayer_system ({\b L_system}  {\i L}, char *  {\i state}, int  {\i iteration}, int  {\i complete})}}
\par
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 27} of file {\b fill.c}.}\par
}
{\xe \v radians\:embroidery.h}
{\xe \v embroidery.h\:radians}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} {\b EmbReal} radians ({\b EmbReal}  {\i degree})}}
\par
{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v report\:embroidery.h}
{\xe \v embroidery.h\:report}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void report (int  {\i result}, char *  {\i label})}}
\par
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v testMain\:embroidery.h}
{\xe \v embroidery.h\:testMain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} void testMain (int  {\i level})}}
\par
{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v threadColor\:embroidery.h}
{\xe \v embroidery.h\:threadColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int threadColor (const char *  {\i name}, int  {\i brand})}}
\par
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4012} of file {\b thread-color.c}.}\par
}
{\xe \v threadColorName\:embroidery.h}
{\xe \v embroidery.h\:threadColorName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} const char * threadColorName (unsigned int  {\i color}, int  {\i brand})}}
\par
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4035} of file {\b thread-color.c}.}\par
}
{\xe \v threadColorNum\:embroidery.h}
{\xe \v embroidery.h\:threadColorNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EMB_PUBLIC} int threadColorNum (unsigned int  {\i color}, int  {\i brand})}}
\par
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4023} of file {\b thread-color.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v _dxfColorTable\:embroidery.h}
{\xe \v embroidery.h\:_dxfColorTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned char _dxfColorTable[][3]{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b thread-color.c}.}\par
}
{\xe \v black_thread\:embroidery.h}
{\xe \v embroidery.h\:black_thread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbThread} black_thread{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 56} of file {\b main.c}.}\par
}
{\xe \v emb_error\:embroidery.h}
{\xe \v embroidery.h\:emb_error}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int emb_error{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 58} of file {\b main.c}.}\par
}
{\xe \v emb_verbose\:embroidery.h}
{\xe \v embroidery.h\:emb_verbose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int emb_verbose{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 57} of file {\b main.c}.}\par
}
{\xe \v embConstantPi\:embroidery.h}
{\xe \v embroidery.h\:embConstantPi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b EmbReal} embConstantPi{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 60} of file {\b main.c}.}\par
}
{\xe \v formatTable\:embroidery.h}
{\xe \v embroidery.h\:formatTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbFormatList} formatTable[{\b numberOfFormats}]{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b formats.c}.}\par
}
{\xe \v husThreads\:embroidery.h}
{\xe \v embroidery.h\:husThreads}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b EmbThread} husThreads[]{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b thread-color.c}.}\par
}
{\xe \v jefThreads\:embroidery.h}
{\xe \v embroidery.h\:jefThreads}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b EmbThread} jefThreads[]{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b thread-color.c}.}\par
}
{\xe \v pcmThreads\:embroidery.h}
{\xe \v embroidery.h\:pcmThreads}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b EmbThread} pcmThreads[]{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 18} of file {\b thread-color.c}.}\par
}
{\xe \v pecThreadCount\:embroidery.h}
{\xe \v embroidery.h\:pecThreadCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int pecThreadCount{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b thread-color.c}.}\par
}
{\xe \v pecThreads\:embroidery.h}
{\xe \v embroidery.h\:pecThreads}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b EmbThread} pecThreads[]{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b thread-color.c}.}\par
}
{\xe \v shvThreadCount\:embroidery.h}
{\xe \v embroidery.h\:shvThreadCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int shvThreadCount{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b thread-color.c}.}\par
}
{\xe \v shvThreads\:embroidery.h}
{\xe \v embroidery.h\:shvThreads}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b EmbThread} shvThreads[]{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b thread-color.c}.}\par
}
{\xe \v vipDecodingTable\:embroidery.h}
{\xe \v embroidery.h\:vipDecodingTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned char vipDecodingTable[]{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
embroidery.h\par \pard\plain 
{\tc\tcl2 \v src/embroidery.h}
{\xe \v src/embroidery.h}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef LIBEMBROIDERY_HEADER__}\par
00002 {\cf21 #define LIBEMBROIDERY_HEADER__}\par
00003 \par
00004 {\cf21 #ifdef __cplusplus}\par
00005 {\cf17 extern} {\cf22 "C"} \{\par
00006 {\cf21 #endif}\par
00007 \par
00008 {\cf21 #ifndef LIBEMBROIDERY_EMBEDDED_VERSION}\par
00009 {\cf21 #define LIBEMBROIDERY_EMBEDDED_VERSION 0}\par
00010 {\cf21 #endif}\par
00011 \par
00012 {\cf20 /* MACROS}\par
00013 {\cf20  *****************************************************************************/}\par
00014 \par
00015 {\cf20 /* Machine codes for stitch flags */}\par
00016 {\cf21 #define NORMAL                  0 }{\cf20 /* stitch to (x, y) */}{\cf21 }\par
00017 {\cf21 #define JUMP                    1 }{\cf20 /* move to (x, y) */}{\cf21 }\par
00018 {\cf21 #define TRIM                    2 }{\cf20 /* trim + move to (x, y) */}{\cf21 }\par
00019 {\cf21 #define STOP                    4 }{\cf20 /* pause machine for thread change */}{\cf21 }\par
00020 {\cf21 #define SEQUIN                  8 }{\cf20 /* sequin */}{\cf21 }\par
00021 {\cf21 #define END                     16 }{\cf20 /* end of program */}{\cf21 }\par
00022 \par
00023 {\cf20 /* Format identifiers */}\par
00024 {\cf21 #define EMB_FORMAT_100          0}\par
00025 {\cf21 #define EMB_FORMAT_10O          1}\par
00026 {\cf21 #define EMB_FORMAT_ART          2}\par
00027 {\cf21 #define EMB_FORMAT_BMC          3}\par
00028 {\cf21 #define EMB_FORMAT_BRO          4}\par
00029 {\cf21 #define EMB_FORMAT_CND          5}\par
00030 {\cf21 #define EMB_FORMAT_COL          6}\par
00031 {\cf21 #define EMB_FORMAT_CSD          7}\par
00032 {\cf21 #define EMB_FORMAT_CSV          8}\par
00033 {\cf21 #define EMB_FORMAT_DAT          9}\par
00034 {\cf21 #define EMB_FORMAT_DEM          10}\par
00035 {\cf21 #define EMB_FORMAT_DSB          11}\par
00036 {\cf21 #define EMB_FORMAT_DST          12}\par
00037 {\cf21 #define EMB_FORMAT_DSZ          13}\par
00038 {\cf21 #define EMB_FORMAT_DXF          14}\par
00039 {\cf21 #define EMB_FORMAT_EDR          15}\par
00040 {\cf21 #define EMB_FORMAT_EMD          16}\par
00041 {\cf21 #define EMB_FORMAT_EXP          17}\par
00042 {\cf21 #define EMB_FORMAT_EXY          18}\par
00043 {\cf21 #define EMB_FORMAT_EYS          19}\par
00044 {\cf21 #define EMB_FORMAT_FXY          20}\par
00045 {\cf21 #define EMB_FORMAT_GC           21}\par
00046 {\cf21 #define EMB_FORMAT_GNC          22}\par
00047 {\cf21 #define EMB_FORMAT_GT           23}\par
00048 {\cf21 #define EMB_FORMAT_HUS          24}\par
00049 {\cf21 #define EMB_FORMAT_INB          25}\par
00050 {\cf21 #define EMB_FORMAT_INF          26}\par
00051 {\cf21 #define EMB_FORMAT_JEF          27}\par
00052 {\cf21 #define EMB_FORMAT_KSM          28}\par
00053 {\cf21 #define EMB_FORMAT_MAX          29}\par
00054 {\cf21 #define EMB_FORMAT_MIT          30}\par
00055 {\cf21 #define EMB_FORMAT_NEW          31}\par
00056 {\cf21 #define EMB_FORMAT_OFM          32}\par
00057 {\cf21 #define EMB_FORMAT_PCD          33}\par
00058 {\cf21 #define EMB_FORMAT_PCM          34}\par
00059 {\cf21 #define EMB_FORMAT_PCQ          35}\par
00060 {\cf21 #define EMB_FORMAT_PCS          36}\par
00061 {\cf21 #define EMB_FORMAT_PEC          37}\par
00062 {\cf21 #define EMB_FORMAT_PEL          38}\par
00063 {\cf21 #define EMB_FORMAT_PEM          39}\par
00064 {\cf21 #define EMB_FORMAT_PES          40}\par
00065 {\cf21 #define EMB_FORMAT_PHB          41}\par
00066 {\cf21 #define EMB_FORMAT_PHC          42}\par
00067 {\cf21 #define EMB_FORMAT_PLT          43}\par
00068 {\cf21 #define EMB_FORMAT_RGB          44}\par
00069 {\cf21 #define EMB_FORMAT_SEW          45}\par
00070 {\cf21 #define EMB_FORMAT_SHV          46}\par
00071 {\cf21 #define EMB_FORMAT_SST          47}\par
00072 {\cf21 #define EMB_FORMAT_STX          48}\par
00073 {\cf21 #define EMB_FORMAT_SVG          49}\par
00074 {\cf21 #define EMB_FORMAT_T01          50}\par
00075 {\cf21 #define EMB_FORMAT_T09          51}\par
00076 {\cf21 #define EMB_FORMAT_TAP          52}\par
00077 {\cf21 #define EMB_FORMAT_THR          53}\par
00078 {\cf21 #define EMB_FORMAT_TXT          54}\par
00079 {\cf21 #define EMB_FORMAT_U00          55}\par
00080 {\cf21 #define EMB_FORMAT_U01          56}\par
00081 {\cf21 #define EMB_FORMAT_VIP          57}\par
00082 {\cf21 #define EMB_FORMAT_VP3          58}\par
00083 {\cf21 #define EMB_FORMAT_XXX          59}\par
00084 {\cf21 #define EMB_FORMAT_ZSK          60}\par
00085 \par
00086 {\cf20 /* Thread color */}\par
00087 {\cf21 #define Arc_Polyester           0}\par
00088 {\cf21 #define Arc_Rayon               1}\par
00089 {\cf21 #define CoatsAndClark_Rayon     2}\par
00090 {\cf21 #define Exquisite_Polyester     3}\par
00091 {\cf21 #define Fufu_Polyester          4}\par
00092 {\cf21 #define Fufu_Rayon              5}\par
00093 {\cf21 #define Hemingworth_Polyester   6}\par
00094 {\cf21 #define Isacord_Polyester       7}\par
00095 {\cf21 #define Isafil_Rayon            8}\par
00096 {\cf21 #define Marathon_Polyester      9}\par
00097 {\cf21 #define Marathon_Rayon          10}\par
00098 {\cf21 #define Madeira_Polyester       11}\par
00099 {\cf21 #define Madeira_Rayon           12}\par
00100 {\cf21 #define Metro_Polyester         13}\par
00101 {\cf21 #define Pantone                 14}\par
00102 {\cf21 #define RobisonAnton_Polyester  15}\par
00103 {\cf21 #define RobisonAnton_Rayon      16}\par
00104 {\cf21 #define Sigma_Polyester         17}\par
00105 {\cf21 #define Sulky_Rayon             18}\par
00106 {\cf21 #define ThreadArt_Rayon         19}\par
00107 {\cf21 #define ThreadArt_Polyester     20}\par
00108 {\cf21 #define ThreaDelight_Polyester  21}\par
00109 {\cf21 #define Z102_Isacord_Polyester  22}\par
00110 {\cf21 #define SVG_Colors              23}\par
00111 {\cf21 #define hus_thread              24}\par
00112 {\cf21 #define jef_thread              25}\par
00113 {\cf21 #define pcm_thread              26}\par
00114 {\cf21 #define pec_thread              27}\par
00115 {\cf21 #define shv_thread              28}\par
00116 {\cf21 #define dxf_color               29}\par
00117 \par
00118 {\cf21 #define EMB_ARRAY               0}\par
00119 {\cf21 #define EMB_ARC                 1}\par
00120 {\cf21 #define EMB_CIRCLE              2}\par
00121 {\cf21 #define EMB_DIM_DIAMETER        3}\par
00122 {\cf21 #define EMB_DIM_LEADER          4}\par
00123 {\cf21 #define EMB_ELLIPSE             5}\par
00124 {\cf21 #define EMB_FLAG                6}\par
00125 {\cf21 #define EMB_LINE                7}\par
00126 {\cf21 #define EMB_IMAGE               8}\par
00127 {\cf21 #define EMB_PATH                9}\par
00128 {\cf21 #define EMB_POINT               10}\par
00129 {\cf21 #define EMB_POLYGON             11}\par
00130 {\cf21 #define EMB_POLYLINE            12}\par
00131 {\cf21 #define EMB_RECT                13}\par
00132 {\cf21 #define EMB_SPLINE              14}\par
00133 {\cf21 #define EMB_STITCH              15}\par
00134 {\cf21 #define EMB_TEXT_SINGLE         16}\par
00135 {\cf21 #define EMB_TEXT_MULTI          17}\par
00136 {\cf21 #define EMB_VECTOR              18}\par
00137 {\cf21 #define EMB_THREAD              19}\par
00138 \par
00139 {\cf21 #define EMBFORMAT_UNSUPPORTED    0}\par
00140 {\cf21 #define EMBFORMAT_STITCHONLY     1}\par
00141 {\cf21 #define EMBFORMAT_OBJECTONLY     2}\par
00142 {\cf21 #define EMBFORMAT_STCHANDOBJ     3 }{\cf20 /* binary operation: 1+2=3 */}{\cf21 }\par
00143 \par
00144 {\cf21 #define numberOfFormats         61}\par
00145 \par
00146 {\cf21 #define CHUNK_SIZE                  128}\par
00147 \par
00148 {\cf21 #define EMB_MAX_LAYERS               10}\par
00149 {\cf21 #define MAX_THREADS                 256}\par
00150 {\cf21 #define EMBFORMAT_MAXEXT              3}\par
00151 {\cf20 /* maximum length of extension without dot */}\par
00152 {\cf21 #define EMBFORMAT_MAXDESC            50}\par
00153 {\cf20 /* the longest possible description string length */}\par
00154 {\cf21 #define MAX_STITCHES             1000000}\par
00155 \par
00156 \par
00157 \par
00158 {\cf21 #if defined(_WIN32) && !defined(WIN32)}\par
00159 {\cf21 #define WIN32}\par
00160 {\cf21 #endif}\par
00161 \par
00162 {\cf20 /* When building a shared library,}\par
00163 {\cf20 * use the proper export keyword depending on the compiler */}\par
00164 {\cf21 #define EMB_PUBLIC}\par
00165 {\cf21 #if defined(LIBEMBROIDERY_SHARED)}\par
00166 {\cf21     #undef EMB_PUBLIC}\par
00167 {\cf21     #if defined(__WIN32__) || defined(WIN32)}\par
00168 {\cf21         #define EMB_PUBLIC __declspec(dllexport)}\par
00169 {\cf21     #else}\par
00170 {\cf21         #define EMB_PUBLIC __attribute__ ((visibility("default"})))\par
00171 {\cf21     #endif}\par
00172 {\cf21 #endif}\par
00173 \par
00174 {\cf20 /* TYPEDEFS AND STRUCTS}\par
00175 {\cf20  *******************************************************************/}\par
00176 \par
00177 {\cf17 typedef} {\cf18 float} EmbReal;\par
00178 \par
00182 {\cf17 typedef} {\cf17 struct }EmbColor_\par
00183 \{\par
00184     {\cf18 unsigned} {\cf18 char} r;\par
00185     {\cf18 unsigned} {\cf18 char} g;\par
00186     {\cf18 unsigned} {\cf18 char} b;\par
00187 \} EmbColor;\par
00188 \par
00194 {\cf17 typedef} {\cf17 struct }EmbVector_\par
00195 \{\par
00196     EmbReal x;\par
00197     EmbReal y;\par
00198 \} EmbVector;\par
00199 \par
00203 {\cf17 typedef} {\cf17 struct }EmbArray_ EmbArray;\par
00204 \par
00205 {\cf17 typedef} {\cf17 struct }EmbImage_ \{\par
00206     EmbVector position;\par
00207     EmbVector dimensions;\par
00208     {\cf18 unsigned} {\cf18 char}* data;\par
00209     {\cf18 int} width;\par
00210     {\cf18 int} height;\par
00211     {\cf18 char} path[200];\par
00212     {\cf18 char} name[200];\par
00213 \} EmbImage;\par
00214 \par
00215 {\cf17 typedef} {\cf17 struct }EmbBlock_ \{\par
00216     EmbVector position;\par
00217 \} EmbBlock;\par
00218 \par
00219 {\cf17 typedef} {\cf17 struct }EmbAlignedDim_ \{\par
00220     EmbVector position;\par
00221 \} EmbAlignedDim;\par
00222 \par
00223 {\cf17 typedef} {\cf17 struct }EmbAngularDim_ \{\par
00224     EmbVector position;\par
00225 \} EmbAngularDim;\par
00226 \par
00227 {\cf17 typedef} {\cf17 struct }EmbArcLengthDim_ \{\par
00228     EmbVector position;\par
00229 \} EmbArcLengthDim;\par
00230 \par
00231 {\cf17 typedef} {\cf17 struct }EmbDiameterDim_ \{\par
00232     EmbVector position;\par
00233 \} EmbDiameterDim;\par
00234 \par
00235 {\cf17 typedef} {\cf17 struct }EmbLeaderDim_ \{\par
00236     EmbVector position;\par
00237 \} EmbLeaderDim;\par
00238 \par
00239 {\cf17 typedef} {\cf17 struct }EmbLinearDim_ \{\par
00240     EmbVector position;\par
00241 \} EmbLinearDim;\par
00242 \par
00243 {\cf17 typedef} {\cf17 struct }EmbOrdinateDim_ \{\par
00244     EmbVector position;\par
00245 \} EmbOrdinateDim;\par
00246 \par
00247 {\cf17 typedef} {\cf17 struct }EmbRadiusDim_ \{\par
00248     EmbVector position;\par
00249 \} EmbRadiusDim;\par
00250 \par
00251 {\cf17 typedef} {\cf17 struct }EmbInfiniteLine_ \{\par
00252     EmbVector position;\par
00253 \} EmbInfiniteLine;\par
00254 \par
00255 {\cf17 typedef} {\cf17 struct }EmbRay_ \{\par
00256     EmbVector position;\par
00257 \} EmbRay;\par
00258 \par
00259 {\cf17 typedef} {\cf17 struct }EmbTextMulti_ \{\par
00260     EmbVector position;\par
00261     {\cf18 char} text[200];\par
00262 \} EmbTextMulti;\par
00263 \par
00264 {\cf17 typedef} {\cf17 struct }EmbTextSingle_ \{\par
00265     EmbVector position;\par
00266     {\cf18 char} text[200];\par
00267 \} EmbTextSingle;\par
00268 \par
00269 {\cf17 typedef} {\cf17 struct }EmbTime_\par
00270 \{\par
00271     {\cf18 unsigned} {\cf18 int} year;\par
00272     {\cf18 unsigned} {\cf18 int} month;\par
00273     {\cf18 unsigned} {\cf18 int} day;\par
00274     {\cf18 unsigned} {\cf18 int} hour;\par
00275     {\cf18 unsigned} {\cf18 int} minute;\par
00276     {\cf18 unsigned} {\cf18 int} second;\par
00277 \} EmbTime;\par
00278 \par
00279 \par
00280 {\cf17 typedef} {\cf17 struct }EmbPoint_\par
00281 \{\par
00282     EmbVector position;\par
00283     {\cf18 int} lineType;\par
00284     EmbColor color;\par
00285 \} EmbPoint;\par
00286 \par
00287 {\cf17 typedef} {\cf17 struct }EmbLine_\par
00288 \{\par
00289     EmbVector start;\par
00290     EmbVector end;\par
00291     {\cf18 int} lineType;\par
00292     EmbColor color;\par
00293 \} EmbLine;\par
00294 \par
00295 {\cf17 typedef} {\cf17 struct }EmbPath_\par
00296 \{\par
00297     EmbArray* pointList;\par
00298     EmbArray* flagList;\par
00299     {\cf18 int} lineType;\par
00300     EmbColor color;\par
00301 \} EmbPath;\par
00302 \par
00303 {\cf17 typedef} {\cf17 struct }EmbStitch_\par
00304 \{\par
00305     {\cf18 int} flags; {\cf20 /* uses codes defined above */}\par
00306     EmbReal x; {\cf20 /* absolute position (not relative) */}\par
00307     EmbReal y; {\cf20 /* positive is up, units are in mm  */}\par
00308     {\cf18 int} color; {\cf20 /* color number for this stitch */}\par
00309     {\cf20 /* TODO: this should be called colorIndex since it is not an EmbColor */}\par
00310 \} EmbStitch;\par
00311 \par
00312 {\cf17 typedef} {\cf17 struct }EmbThread_\par
00313 \{\par
00314     EmbColor color;\par
00315     {\cf18 char} description[50];\par
00316     {\cf18 char} catalogNumber[30];\par
00317 \} EmbThread;\par
00318 \par
00319 {\cf17 typedef} {\cf17 struct }thread_color_ \{\par
00320     {\cf18 char} name[22];\par
00321     {\cf18 unsigned} {\cf18 int} hex_code;\par
00322     {\cf18 int} manufacturer_code;\par
00323 \} thread_color;\par
00324 \par
00325 {\cf20 /* absolute position (not relative) */}\par
00326 {\cf17 typedef} {\cf17 struct }EmbArc_\par
00327 \{\par
00328     EmbVector start;\par
00329     EmbVector mid;\par
00330     EmbVector end;\par
00331 \} EmbArc;\par
00332 \par
00333 {\cf17 typedef} {\cf17 struct }EmbRect_\par
00334 \{\par
00335     EmbReal top;\par
00336     EmbReal left;\par
00337     EmbReal bottom;\par
00338     EmbReal right;\par
00339     EmbReal rotation;\par
00340     EmbReal radius;\par
00341 \} EmbRect;\par
00342 \par
00343 {\cf17 typedef} {\cf17 struct }EmbCircle_\par
00344 \{\par
00345     EmbVector center;\par
00346     EmbReal radius;\par
00347 \} EmbCircle;\par
00348 \par
00349 {\cf17 typedef} EmbPath EmbPolygon;\par
00350 {\cf17 typedef} EmbPath EmbPolyline;\par
00351 {\cf17 typedef} {\cf18 int} EmbFlag;\par
00352 \par
00353 {\cf17 typedef} {\cf17 struct }EmbSatinOutline_\par
00354 \{\par
00355     {\cf18 int} length;\par
00356     EmbArray* side1;\par
00357     EmbArray* side2;\par
00358 \} EmbSatinOutline;\par
00359 \par
00360 {\cf17 typedef} {\cf17 struct }EmbEllipse_\par
00361 \{\par
00362     EmbVector center;\par
00363     EmbVector radius;\par
00364     EmbReal rotation;\par
00365 \} EmbEllipse;\par
00366 \par
00367 {\cf17 typedef} {\cf17 struct }EmbBezier_ \{\par
00368     EmbVector start;\par
00369     EmbVector control1;\par
00370     EmbVector control2;\par
00371     EmbVector end;\par
00372 \} EmbBezier;\par
00373 \par
00374 {\cf17 typedef} {\cf17 struct }EmbSpline_ \{\par
00375     EmbArray *beziers;\par
00376 \} EmbSpline;\par
00377 \par
00378 {\cf17 typedef} {\cf17 struct }LSYSTEM \{\par
00379     {\cf18 char} axiom;\par
00380     {\cf18 char} *alphabet;\par
00381     {\cf18 char} *constants;\par
00382     {\cf18 char} **rules;\par
00383 \} L_system;\par
00384 \par
00385 {\cf17 typedef} {\cf17 struct }EmbGeometry_ \{\par
00386     {\cf17 union }\{\par
00387         EmbArc arc;\par
00388         EmbCircle circle;\par
00389         EmbColor color;\par
00390         EmbEllipse ellipse;\par
00391         EmbLine line;\par
00392         EmbPath path;\par
00393         EmbPoint point;\par
00394         EmbPolygon polygon;\par
00395         EmbPolyline polyline;\par
00396         EmbRect rect;\par
00397         EmbSpline spline;\par
00398         EmbVector vector;\par
00399     \} object;\par
00400     EmbStitch stitch;\par
00401     EmbThread thread;\par
00402     {\cf18 int} flag;\par
00403     {\cf18 int} type;\par
00404     {\cf18 int} lineType;\par
00405     EmbColor color;\par
00406 \} EmbGeometry;\par
00407 \par
00408 {\cf17 struct }EmbArray_ \{\par
00409     EmbGeometry *geometry;\par
00410     EmbStitch *stitch;\par
00411     EmbThread *thread;\par
00412     {\cf18 int} count;\par
00413     {\cf18 int} length;\par
00414     {\cf18 int} type;\par
00415 \};\par
00416 \par
00417 {\cf17 typedef} {\cf17 struct }EmbLayer_\par
00418 \{\par
00419     {\cf18 char} name[100];\par
00420     EmbArray *geometry;\par
00421 \} EmbLayer;\par
00422 \par
00423 {\cf17 typedef} {\cf17 struct }EmbPattern_\par
00424 \{\par
00425     {\cf18 unsigned} {\cf18 int} dstJumpsPerTrim;\par
00426     EmbVector home;\par
00427     EmbReal hoop_width;\par
00428     EmbReal hoop_height;\par
00429     EmbArray *thread_list;\par
00430     EmbArray *stitch_list;\par
00431     EmbArray *geometry;\par
00432     EmbLayer layer[EMB_MAX_LAYERS];\par
00433     {\cf18 int} currentColorIndex;\par
00434 \} EmbPattern;\par
00435 \par
00436 {\cf17 typedef} {\cf17 struct }EmbFormatList_\par
00437 \{\par
00438     {\cf18 char} extension[2 + EMBFORMAT_MAXEXT];\par
00439     {\cf18 char} description[EMBFORMAT_MAXDESC];\par
00440     {\cf18 char} reader_state;\par
00441     {\cf18 char} writer_state;\par
00442     {\cf18 int} type;\par
00443     {\cf18 int} color_only;\par
00444     {\cf18 int} check_for_color_file;\par
00445     {\cf18 int} write_external_color_file;\par
00446 \} EmbFormatList;\par
00447 \par
00448 {\cf20 /* Function Declarations}\par
00449 {\cf20 *****************************************************************************/}\par
00450 EMB_PUBLIC {\cf18 int} lindenmayer_system(L_system L, {\cf18 char}* state, {\cf18 int} iteration, {\cf18 int} complete);\par
00451 EMB_PUBLIC {\cf18 int} hilbert_curve(EmbPattern *pattern, {\cf18 int} iterations);\par
00452 \par
00453 EMB_PUBLIC {\cf18 int} emb_identify_format({\cf17 const} {\cf18 char} *ending);\par
00454 EMB_PUBLIC {\cf18 void} testMain({\cf18 int} level);\par
00455 EMB_PUBLIC {\cf18 int} convert({\cf17 const} {\cf18 char} *inf, {\cf17 const} {\cf18 char} *outf);\par
00456 \par
00457 EMB_PUBLIC EmbColor embColor_make({\cf18 unsigned} {\cf18 char} r, {\cf18 unsigned} {\cf18 char} g, {\cf18 unsigned} {\cf18 char} b);\par
00458 EMB_PUBLIC EmbColor* embColor_create({\cf18 unsigned} {\cf18 char} r, {\cf18 unsigned} {\cf18 char} g, {\cf18 unsigned} {\cf18 char} b);\par
00459 EMB_PUBLIC EmbColor embColor_fromHexStr({\cf18 char}* val);\par
00460 EMB_PUBLIC {\cf18 int} embColor_distance(EmbColor a, EmbColor b);\par
00461 \par
00462 EMB_PUBLIC EmbArray* embArray_create({\cf18 int} type);\par
00463 EMB_PUBLIC {\cf18 int} embArray_resize(EmbArray *g);\par
00464 EMB_PUBLIC {\cf18 void} embArray_copy(EmbArray *dst, EmbArray *src);\par
00465 EMB_PUBLIC {\cf18 int} embArray_addArc(EmbArray* g, EmbArc arc);\par
00466 EMB_PUBLIC {\cf18 int} embArray_addCircle(EmbArray* g, EmbCircle circle);\par
00467 EMB_PUBLIC {\cf18 int} embArray_addEllipse(EmbArray* g, EmbEllipse ellipse);\par
00468 EMB_PUBLIC {\cf18 int} embArray_addFlag(EmbArray* g, {\cf18 int} flag);\par
00469 EMB_PUBLIC {\cf18 int} embArray_addLine(EmbArray* g, EmbLine line);\par
00470 EMB_PUBLIC {\cf18 int} embArray_addRect(EmbArray* g, EmbRect rect);\par
00471 EMB_PUBLIC {\cf18 int} embArray_addPath(EmbArray* g, EmbPath p);\par
00472 EMB_PUBLIC {\cf18 int} embArray_addPoint(EmbArray* g, EmbPoint p);\par
00473 EMB_PUBLIC {\cf18 int} embArray_addPolygon(EmbArray* g, EmbPolygon p);\par
00474 EMB_PUBLIC {\cf18 int} embArray_addPolyline(EmbArray* g, EmbPolyline p);\par
00475 {\cf20 /* EMB_PUBLIC int embArray_addSpline(EmbArray* g, EmbSpline p); */}\par
00476 EMB_PUBLIC {\cf18 int} embArray_addStitch(EmbArray* g, EmbStitch st);\par
00477 EMB_PUBLIC {\cf18 int} embArray_addThread(EmbArray* g, EmbThread p);\par
00478 EMB_PUBLIC {\cf18 int} embArray_addVector(EmbArray* g, EmbVector);\par
00479 EMB_PUBLIC {\cf18 void} embArray_free(EmbArray* p);\par
00480 \par
00481 EMB_PUBLIC EmbLine embLine_make(EmbReal x1, EmbReal y1, EmbReal x2, EmbReal y2);\par
00482 \par
00483 EMB_PUBLIC {\cf18 void} embLine_normalVector(EmbLine line, EmbVector* result, {\cf18 int} clockwise);\par
00484 EMB_PUBLIC EmbVector embLine_intersectionPoint(EmbLine line1, EmbLine line2);\par
00485 \par
00486 EMB_PUBLIC {\cf18 int} embThread_findNearestColor(EmbColor color, EmbColor* colors, {\cf18 int} n_colors);\par
00487 EMB_PUBLIC {\cf18 int} embThread_findNearestThread(EmbColor color, EmbThread* threads, {\cf18 int} n_threads);\par
00488 EMB_PUBLIC EmbThread embThread_getRandom({\cf18 void});\par
00489 \par
00490 EMB_PUBLIC {\cf18 void} embVector_normalize(EmbVector vector, EmbVector* result);\par
00491 EMB_PUBLIC {\cf18 void} embVector_multiply(EmbVector vector, EmbReal magnitude, EmbVector* result);\par
00492 EMB_PUBLIC EmbVector embVector_add(EmbVector v1, EmbVector v2);\par
00493 EMB_PUBLIC EmbVector embVector_average(EmbVector v1, EmbVector v2);\par
00494 EMB_PUBLIC EmbVector embVector_subtract(EmbVector v1, EmbVector v2);\par
00495 EMB_PUBLIC EmbReal embVector_dot(EmbVector v1, EmbVector v2);\par
00496 EMB_PUBLIC EmbReal embVector_cross(EmbVector v1, EmbVector v2);\par
00497 EMB_PUBLIC {\cf18 void} embVector_transpose_product(EmbVector v1, EmbVector v2, EmbVector* result);\par
00498 EMB_PUBLIC EmbReal embVector_length(EmbVector vector);\par
00499 EMB_PUBLIC EmbReal embVector_relativeX(EmbVector a1, EmbVector a2, EmbVector a3);\par
00500 EMB_PUBLIC EmbReal embVector_relativeY(EmbVector a1, EmbVector a2, EmbVector a3);\par
00501 EMB_PUBLIC EmbReal embVector_angle(EmbVector v);\par
00502 EMB_PUBLIC EmbReal embVector_distance(EmbVector a, EmbVector b);\par
00503 EMB_PUBLIC EmbVector embVector_unit(EmbReal angle);\par
00504 \par
00505 EMB_PUBLIC EmbArc embArc_init({\cf18 void});\par
00506 EMB_PUBLIC {\cf18 char} embArc_clockwise(EmbArc arc);\par
00507 \par
00508 EMB_PUBLIC {\cf18 void} getArcCenter(EmbArc arc, EmbVector *arcCenter);\par
00509 EMB_PUBLIC {\cf18 char} getArcDataFromBulge(EmbReal bulge,\par
00510                          EmbArc *arc,\par
00511                          EmbReal* arcCenterX,        EmbReal* arcCenterY,\par
00512                          EmbReal* radius,            EmbReal* diameter,\par
00513                          EmbReal* chord,\par
00514                          EmbReal* chordMidX,         EmbReal* chordMidY,\par
00515                          EmbReal* sagitta,           EmbReal* apothem,\par
00516                          EmbReal* incAngleInDegrees, {\cf18 char}*   clockwise);\par
00517 \par
00518 EMB_PUBLIC EmbCircle embCircle_init({\cf18 void});\par
00519 EMB_PUBLIC {\cf18 int} getCircleCircleIntersections(\par
00520      EmbCircle c0, EmbCircle c1, EmbVector *v0, EmbVector *v1);\par
00521 EMB_PUBLIC {\cf18 int} getCircleTangentPoints(\par
00522      EmbCircle c, EmbVector p, EmbVector *v0, EmbVector *v1);\par
00523 \par
00524 EMB_PUBLIC EmbEllipse embEllipse_init({\cf18 void});\par
00525 EMB_PUBLIC EmbEllipse embEllipse_make(EmbReal cx, EmbReal cy, EmbReal rx, EmbReal ry);\par
00526 EMB_PUBLIC EmbReal embEllipse_diameterX(EmbEllipse ellipse);\par
00527 EMB_PUBLIC EmbReal embEllipse_diameterY(EmbEllipse ellipse);\par
00528 EMB_PUBLIC EmbReal embEllipse_width(EmbEllipse ellipse);\par
00529 EMB_PUBLIC EmbReal embEllipse_height(EmbEllipse ellipse);\par
00530 EMB_PUBLIC EmbReal embEllipse_area(EmbEllipse ellipse);\par
00531 EMB_PUBLIC EmbReal embEllipse_perimeter(EmbEllipse ellipse);\par
00532 \par
00533 EMB_PUBLIC EmbImage embImage_create({\cf18 int}, {\cf18 int});\par
00534 EMB_PUBLIC {\cf18 void} embImage_read(EmbImage *image, {\cf18 char} *fname);\par
00535 EMB_PUBLIC {\cf18 int} embImage_write(EmbImage *image, {\cf18 char} *fname);\par
00536 EMB_PUBLIC {\cf18 void} embImage_free(EmbImage *image);\par
00537 \par
00538 EMB_PUBLIC EmbRect embRect_init({\cf18 void});\par
00539 EMB_PUBLIC EmbReal embRect_area(EmbRect);\par
00540 \par
00541 EMB_PUBLIC {\cf18 int} threadColor({\cf17 const} {\cf18 char}*, {\cf18 int} brand);\par
00542 EMB_PUBLIC {\cf18 int} threadColorNum({\cf18 unsigned} {\cf18 int} color, {\cf18 int} brand);\par
00543 EMB_PUBLIC {\cf17 const} {\cf18 char}* threadColorName({\cf18 unsigned} {\cf18 int} color, {\cf18 int} brand);\par
00544 \par
00545 EMB_PUBLIC {\cf18 void} embTime_initNow(EmbTime* t);\par
00546 EMB_PUBLIC EmbTime embTime_time(EmbTime* t);\par
00547 \par
00548 EMB_PUBLIC {\cf18 void} embSatinOutline_generateSatinOutline(EmbArray* lines, EmbReal thickness, EmbSatinOutline* result);\par
00549 EMB_PUBLIC EmbArray* embSatinOutline_renderStitches(EmbSatinOutline* result, EmbReal density);\par
00550 \par
00551 EMB_PUBLIC EmbGeometry *embGeometry_init({\cf18 int} type_in);\par
00552 EMB_PUBLIC {\cf18 void} embGeometry_free(EmbGeometry *obj);\par
00553 EMB_PUBLIC {\cf18 void} embGeometry_move(EmbGeometry *obj, EmbVector delta);\par
00554 EMB_PUBLIC EmbRect embGeometry_boundingRect(EmbGeometry *obj);\par
00555 EMB_PUBLIC {\cf18 void} embGeometry_vulcanize(EmbGeometry *obj);\par
00556 \par
00557 EMB_PUBLIC EmbPattern* embPattern_create({\cf18 void});\par
00558 EMB_PUBLIC {\cf18 void} embPattern_hideStitchesOverLength(EmbPattern* p, {\cf18 int} length);\par
00559 EMB_PUBLIC {\cf18 void} embPattern_fixColorCount(EmbPattern* p);\par
00560 EMB_PUBLIC {\cf18 int} embPattern_addThread(EmbPattern* p, EmbThread thread);\par
00561 EMB_PUBLIC {\cf18 void} embPattern_addStitchAbs(EmbPattern* p, EmbReal x, EmbReal y, {\cf18 int} flags, {\cf18 int} isAutoColorIndex);\par
00562 EMB_PUBLIC {\cf18 void} embPattern_addStitchRel(EmbPattern* p, EmbReal dx, EmbReal dy, {\cf18 int} flags, {\cf18 int} isAutoColorIndex);\par
00563 EMB_PUBLIC {\cf18 void} embPattern_changeColor(EmbPattern* p, {\cf18 int} index);\par
00564 EMB_PUBLIC {\cf18 void} embPattern_free(EmbPattern* p);\par
00565 EMB_PUBLIC {\cf18 void} embPattern_scale(EmbPattern* p, EmbReal scale);\par
00566 EMB_PUBLIC EmbReal embPattern_totalStitchLength(EmbPattern *pattern);\par
00567 EMB_PUBLIC EmbReal embPattern_minimumStitchLength(EmbPattern *pattern);\par
00568 EMB_PUBLIC EmbReal embPattern_maximumStitchLength(EmbPattern *pattern);\par
00569 EMB_PUBLIC {\cf18 void} embPattern_lengthHistogram(EmbPattern *pattern, {\cf18 int} *bin, {\cf18 int} NUMBINS);\par
00570 EMB_PUBLIC {\cf18 int} embPattern_realStitches(EmbPattern *pattern);\par
00571 EMB_PUBLIC {\cf18 int} embPattern_jumpStitches(EmbPattern *pattern);\par
00572 EMB_PUBLIC {\cf18 int} embPattern_trimStitches(EmbPattern *pattern);\par
00573 EMB_PUBLIC EmbRect embPattern_calcBoundingBox(EmbPattern* p);\par
00574 EMB_PUBLIC {\cf18 void} embPattern_flipHorizontal(EmbPattern* p);\par
00575 EMB_PUBLIC {\cf18 void} embPattern_flipVertical(EmbPattern* p);\par
00576 EMB_PUBLIC {\cf18 void} embPattern_flip(EmbPattern* p, {\cf18 int} horz, {\cf18 int} vert);\par
00577 EMB_PUBLIC {\cf18 void} embPattern_combineJumpStitches(EmbPattern* p);\par
00578 EMB_PUBLIC {\cf18 void} embPattern_correctForMaxStitchLength(EmbPattern* p, EmbReal maxStitchLength, EmbReal maxJumpLength);\par
00579 EMB_PUBLIC {\cf18 void} embPattern_center(EmbPattern* p);\par
00580 EMB_PUBLIC {\cf18 void} embPattern_loadExternalColorFile(EmbPattern* p, {\cf17 const} {\cf18 char}* fileName);\par
00581 EMB_PUBLIC {\cf18 void} embPattern_convertGeometry(EmbPattern* p);\par
00582 EMB_PUBLIC {\cf18 void} embPattern_designDetails(EmbPattern *p);\par
00583 EMB_PUBLIC EmbPattern *embPattern_combine(EmbPattern *p1, EmbPattern *p2);\par
00584 EMB_PUBLIC {\cf18 int} embPattern_color_count(EmbPattern *pattern, EmbColor startColor);\par
00585 EMB_PUBLIC {\cf18 void} embPattern_end(EmbPattern* p);\par
00586 EMB_PUBLIC {\cf18 void} embPattern_crossstitch(EmbPattern *pattern, EmbImage *, {\cf18 int} threshhold);\par
00587 EMB_PUBLIC {\cf18 void} embPattern_horizontal_fill(EmbPattern *pattern, EmbImage *, {\cf18 int} threshhold);\par
00588 EMB_PUBLIC {\cf18 int} embPattern_render(EmbPattern *pattern, {\cf18 char} *fname);\par
00589 EMB_PUBLIC {\cf18 int} embPattern_simulate(EmbPattern *pattern, {\cf18 char} *fname);\par
00590 \par
00591 EMB_PUBLIC {\cf18 void} embPattern_addCircleAbs(EmbPattern* p, EmbCircle obj);\par
00592 EMB_PUBLIC {\cf18 void} embPattern_addEllipseAbs(EmbPattern* p, EmbEllipse obj);\par
00593 EMB_PUBLIC {\cf18 void} embPattern_addLineAbs(EmbPattern* p, EmbLine obj);\par
00594 EMB_PUBLIC {\cf18 void} embPattern_addPathAbs(EmbPattern* p, EmbPath obj);\par
00595 EMB_PUBLIC {\cf18 void} embPattern_addPointAbs(EmbPattern* p, EmbPoint obj);\par
00596 EMB_PUBLIC {\cf18 void} embPattern_addPolygonAbs(EmbPattern* p, EmbPolygon obj);\par
00597 EMB_PUBLIC {\cf18 void} embPattern_addPolylineAbs(EmbPattern* p, EmbPolyline obj);\par
00598 EMB_PUBLIC {\cf18 void} embPattern_addRectAbs(EmbPattern* p, EmbRect obj);\par
00599 \par
00600 EMB_PUBLIC {\cf18 void} embPattern_copyStitchListToPolylines(EmbPattern* pattern);\par
00601 EMB_PUBLIC {\cf18 void} embPattern_copyPolylinesToStitchList(EmbPattern* pattern);\par
00602 EMB_PUBLIC {\cf18 void} embPattern_moveStitchListToPolylines(EmbPattern* pattern);\par
00603 EMB_PUBLIC {\cf18 void} embPattern_movePolylinesToStitchList(EmbPattern* pattern);\par
00604 \par
00605 EMB_PUBLIC {\cf18 char} embPattern_read(EmbPattern *pattern, {\cf17 const} {\cf18 char}* fileName, {\cf18 int} format);\par
00606 EMB_PUBLIC {\cf18 char} embPattern_write(EmbPattern *pattern, {\cf17 const} {\cf18 char}* fileName, {\cf18 int} format);\par
00607 \par
00608 EMB_PUBLIC {\cf18 char} embPattern_readAuto(EmbPattern *pattern, {\cf17 const} {\cf18 char}* fileName);\par
00609 EMB_PUBLIC {\cf18 char} embPattern_writeAuto(EmbPattern *pattern, {\cf17 const} {\cf18 char}* fileName);\par
00610 \par
00611 EMB_PUBLIC {\cf18 void} report({\cf18 int} result, {\cf18 char} *label);\par
00612 EMB_PUBLIC {\cf18 int} full_test_matrix({\cf18 char} *fname);\par
00613 \par
00614 EMB_PUBLIC {\cf18 int} emb_round(EmbReal x);\par
00615 EMB_PUBLIC EmbReal radians(EmbReal degree);\par
00616 EMB_PUBLIC EmbReal degrees(EmbReal radian);\par
00617 \par
00618 {\cf20 /* NON-MACRO CONSTANTS}\par
00619 {\cf20  ******************************************************************************/}\par
00620 \par
00621 {\cf17 extern} EmbFormatList formatTable[numberOfFormats];\par
00622 {\cf17 extern} {\cf17 const} {\cf18 int} pecThreadCount;\par
00623 {\cf17 extern} {\cf17 const} {\cf18 int} shvThreadCount;\par
00624 {\cf17 extern} {\cf17 const} EmbReal embConstantPi;\par
00625 {\cf17 extern} {\cf17 const} EmbThread husThreads[];\par
00626 {\cf17 extern} {\cf17 const} EmbThread jefThreads[];\par
00627 {\cf17 extern} {\cf17 const} EmbThread shvThreads[];\par
00628 {\cf17 extern} {\cf17 const} EmbThread pcmThreads[];\par
00629 {\cf17 extern} {\cf17 const} EmbThread pecThreads[];\par
00630 {\cf17 extern} {\cf17 const} {\cf18 unsigned} {\cf18 char} _dxfColorTable[][3];\par
00631 {\cf17 extern} EmbThread black_thread;\par
00632 {\cf17 extern} {\cf17 const} {\cf18 unsigned} {\cf18 char} vipDecodingTable[];\par
00633 \par
00634 {\cf20 /* VARIABLES}\par
00635 {\cf20  ******************************************************************************/}\par
00636 \par
00637 {\cf17 extern} {\cf18 int} emb_error;\par
00638 {\cf17 extern} {\cf18 int} emb_verbose;\par
00639 \par
00640 {\cf21 #ifdef __cplusplus}\par
00641 \}\par
00642 {\cf21 #endif }{\cf20 /* __cplusplus */}{\cf21 }\par
00643 \par
00644 {\cf21 #endif }{\cf20 /* LIBEMBROIDERY_HEADER__ */}{\cf21 }\par
00645 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/embroidery_internal.h File Reference\par \pard\plain 
{\tc\tcl2 \v src/embroidery_internal.h}
{\xe \v src/embroidery_internal.h}
{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "embroidery.h"}\par
{\f2 #include <stdio.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Data Structures\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b _bcf_file_difat}\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b _bcf_file_fat}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b _bcf_directory_entry}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b _bcf_directory}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b _bcf_file_header}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b _bcf_file}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b _vp3Hoop}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ThredHeader_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ThredExtension_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SubDescriptor_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b StxThread_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b VipHeader_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SvgAttribute_}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Huffman}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Compress}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CompoundFileSector_MaxRegSector}\~ 0xFFFFFFFA\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CompoundFileSector_DIFAT_Sector}\~ 0xFFFFFFFC\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CompoundFileSector_FAT_Sector}\~ 0xFFFFFFFD\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CompoundFileSector_EndOfChain}\~ 0xFFFFFFFE\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CompoundFileSector_FreeSector}\~ 0xFFFFFFFF\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ObjectTypeUnknown}\~ 0x00\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ObjectTypeStorage}\~ 0x01\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ObjectTypeStream}\~ 0x02\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ObjectTypeRootEntry}\~ 0x05\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CompoundFileStreamId_MaxRegularStreamId}\~ 0xFFFFFFFA\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CompoundFileStreamId_NoStream}\~ 0xFFFFFFFF\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_XML}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_A}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_ANIMATE}\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_ANIMATECOLOR}\~ 3\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_ANIMATEMOTION}\~ 4\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_ANIMATETRANSFORM}\~ 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_ANIMATION}\~ 6\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_AUDIO}\~ 7\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_CIRCLE}\~ 8\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_DEFS}\~ 9\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_DESC}\~ 10\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_DISCARD}\~ 11\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_ELLIPSE}\~ 12\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_FONT}\~ 13\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_FONT_FACE}\~ 14\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_FONT_FACE_SRC}\~ 15\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_FONT_FACE_URI}\~ 16\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_FOREIGN_OBJECT}\~ 17\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_G}\~ 18\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_GLYPH}\~ 19\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_HANDLER}\~ 20\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_HKERN}\~ 21\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_IMAGE}\~ 22\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_LINE}\~ 23\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_LINEAR_GRADIENT}\~ 24\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_LISTENER}\~ 25\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_METADATA}\~ 26\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_MISSING_GLYPH}\~ 27\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_MPATH}\~ 28\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_PATH}\~ 29\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_POLYGON}\~ 30\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_POLYLINE}\~ 31\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_PREFETCH}\~ 32\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_RADIAL_GRADIENT}\~ 33\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_RECT}\~ 34\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_SCRIPT}\~ 35\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_SET}\~ 36\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_SOLID_COLOR}\~ 37\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_STOP}\~ 38\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_SVG}\~ 39\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_SWITCH}\~ 40\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_TBREAK}\~ 41\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_TEXT}\~ 42\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_TEXT_AREA}\~ 43\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_TITLE}\~ 44\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_TSPAN}\~ 45\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_USE}\~ 46\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELEMENT_VIDEO}\~ 47\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RED_TERM_COLOR}\~ "\\x1B[0;31m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GREEN_TERM_COLOR}\~ "\\x1B[0;32m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b YELLOW_TERM_COLOR}\~ "\\x1B[1;33m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RESET_TERM_COLOR}\~ "\\033[0m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HOOP_126X110}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HOOP_110X110}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HOOP_50X50}\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HOOP_140X200}\~ 3\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b HOOP_230X200}\~ 4\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_MIN}(A,  B)\~ (((A) < (B)) ? (A) : (B))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_MAX}(A,  B)\~ (((A) > (B)) ? (A) : (B))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_BIG_ENDIAN}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_LITTLE_ENDIAN}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ENDIAN_HOST}\~ {\b EMB_LITTLE_ENDIAN}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_INT16_BIG}\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_INT16_LITTLE}\~ 3\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_INT32_BIG}\~ 4\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMB_INT32_LITTLE}\~ 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PES0001}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PES0020}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PES0022}\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PES0030}\~ 3\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PES0040}\~ 4\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PES0050}\~ 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PES0055}\~ 6\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PES0056}\~ 7\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PES0060}\~ 8\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PES0070}\~ 9\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PES0080}\~ 10\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PES0090}\~ 11\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PES0100}\~ 12\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b N_PES_VERSIONS}\~ 13\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DXF_VERSION_R10}\~ "AC1006"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DXF_VERSION_R11}\~ "AC1009"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DXF_VERSION_R12}\~ "AC1009"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DXF_VERSION_R13}\~ "AC1012"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DXF_VERSION_R14}\~ "AC1014"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DXF_VERSION_R15}\~ "AC1015"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DXF_VERSION_R18}\~ "AC1018"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DXF_VERSION_R21}\~ "AC1021"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DXF_VERSION_R24}\~ "AC1024"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DXF_VERSION_R27}\~ "AC1027"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DXF_VERSION_2000}\~ "AC1015"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DXF_VERSION_2002}\~ "AC1015"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DXF_VERSION_2004}\~ "AC1018"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DXF_VERSION_2006}\~ "AC1018"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DXF_VERSION_2007}\~ "AC1021"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DXF_VERSION_2009}\~ "AC1021"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DXF_VERSION_2010}\~ "AC1024"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DXF_VERSION_2013}\~ "AC1027"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SVG_CREATOR_NULL}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SVG_CREATOR_EMBROIDERMODDER}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SVG_CREATOR_ILLUSTRATOR}\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SVG_CREATOR_INKSCAPE}\~ 3\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SVG_EXPECT_NULL}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SVG_EXPECT_ELEMENT}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SVG_EXPECT_ATTRIBUTE}\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SVG_EXPECT_VALUE}\~ 3\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SVG_NULL}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SVG_ELEMENT}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SVG_PROPERTY}\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SVG_MEDIA_PROPERTY}\~ 3\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SVG_ATTRIBUTE}\~ 4\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SVG_CATCH_ALL}\~ 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LINETO}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MOVETO}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BULGETOCONTROL}\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BULGETOEND}\~ 4\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELLIPSETORAD}\~ 8\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ELLIPSETOEND}\~ 16\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CUBICTOCONTROL1}\~ 32\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CUBICTOCONTROL2}\~ 64\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CUBICTOEND}\~ 128\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b QUADTOCONTROL}\~ 256\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b QUADTOEND}\~ 512\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedefs\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b _bcf_file_difat} {\b bcf_file_difat}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b _bcf_file_fat} {\b bcf_file_fat}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b _bcf_directory_entry} {\b bcf_directory_entry}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b _bcf_directory} {\b bcf_directory}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b _bcf_file_header} {\b bcf_file_header}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b _bcf_file} {\b bcf_file}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b _vp3Hoop} {\b vp3Hoop}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b ThredHeader_} {\b ThredHeader}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b ThredExtension_} {\b ThredExtension}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b SubDescriptor_} {\b SubDescriptor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b StxThread_} {\b StxThread}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b VipHeader_} {\b VipHeader}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b SvgAttribute_} {\b SvgAttribute}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Huffman} {\b huffman}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b Compress} {\b compress}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSV_EXPECT} \{ {\b CSV_EXPECT_NULL}
, {\b CSV_EXPECT_QUOTE1}
, {\b CSV_EXPECT_QUOTE2}
, {\b CSV_EXPECT_COMMA}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b CSV_MODE} \{ {\b CSV_MODE_NULL}
, {\b CSV_MODE_COMMENT}
, {\b CSV_MODE_VARIABLE}
, {\b CSV_MODE_THREAD}
, {\b CSV_MODE_STITCH}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b huffman_build_table} ({\b huffman} *h)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int * {\b huffman_table_lookup} ({\b huffman} *h, int byte_lookup, int *lengths)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b compress_get_bits} ({\b compress} *c, int length)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b compress_pop} ({\b compress} *c, int bit_count)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b compress_read_variable_length} ({\b compress} *c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b compress_load_character_length_huffman} ({\b compress} *c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b compress_load_character_huffman} ({\b compress} *c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b compress_load_distance_huffman} ({\b compress} *c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b compress_load_block} ({\b compress} *c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b compress_get_token} ({\b compress} *c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b compress_get_position} ({\b compress} *c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readPecStitches} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writePecStitches} ({\b EmbPattern} *pattern, FILE *file, const char *filename)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b decodeNewStitch} (unsigned char value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pfaffEncode} (FILE *file, int x, int y, int flags)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbReal} {\b pfaffDecode} (unsigned char a1, unsigned char a2, unsigned char a3)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b mitEncodeStitch} ({\b EmbReal} value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mitDecodeStitch} (unsigned char value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b encode_tajima_ternary} (unsigned char b[3], int x, int y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b decode_tajima_ternary} (unsigned char b[3], int *x, int *y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b encode_t01_record} (unsigned char b[3], int x, int y, int flags)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b decode_t01_record} (unsigned char b[3], int *x, int *y, int *flags)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readPESHeaderV5} (FILE *file, {\b EmbPattern} *pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readPESHeaderV6} (FILE *file, {\b EmbPattern} *pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readPESHeaderV7} (FILE *file, {\b EmbPattern} *pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readPESHeaderV8} (FILE *file, {\b EmbPattern} *pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readPESHeaderV9} (FILE *file, {\b EmbPattern} *pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readPESHeaderV10} (FILE *file, {\b EmbPattern} *pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readDescriptions} (FILE *file, {\b EmbPattern} *pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readHoopName} (FILE *file, {\b EmbPattern} *pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readImageString} (FILE *file, {\b EmbPattern} *pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readProgrammableFills} (FILE *file, {\b EmbPattern} *pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readMotifPatterns} (FILE *file, {\b EmbPattern} *pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readFeatherPatterns} (FILE *file, {\b EmbPattern} *pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readThreads} (FILE *file, {\b EmbPattern} *pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embInt_read} (FILE *f, char *label, void *b, int mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embInt_write} (FILE *f, char *label, void *b, int mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b emb_readline} (FILE *file, char *line, int maxLength)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b bcfFile_read} (FILE *file, {\b bcf_file} *bcfFile)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
FILE * {\b GetFile} ({\b bcf_file} *bcfFile, FILE *file, char *fileToFind)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b bcf_file_free} ({\b bcf_file} *bcfFile)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b binaryReadString} (FILE *file, char *buffer, int maxLength)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b binaryReadUnicodeString} (FILE *file, char *buffer, const int stringLength)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b stringInArray} (const char *s, const char **array)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b fpad} (FILE *f, char c, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b copy_trim} (char const *s)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b emb_optOut} ({\b EmbReal} num, char *str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b write_24bit} (FILE *file, int)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b check_header_present} (FILE *file, int minimum_header_length)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned short {\b fread_uint16} (FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b fread_int16} (FILE *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b safe_free} (void *data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b binaryWriteUInt} (FILE *f, unsigned int data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bcf_file_difat} * {\b bcf_difat_create} (FILE *file, unsigned int fatSectors, const unsigned int {\b sectorSize})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b readFullSector} (FILE *file, {\b bcf_file_difat} *bcfFile, unsigned int *numberOfDifatEntriesStillToRead)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b numberOfEntriesInDifatSector} ({\b bcf_file_difat} *fat)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b bcf_file_difat_free} ({\b bcf_file_difat} *difat)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b entriesInDifatSector} ({\b bcf_file_difat} *fat)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bcf_file_fat} * {\b bcfFileFat_create} (const unsigned int {\b sectorSize})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b loadFatFromSector} ({\b bcf_file_fat} *fat, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b bcf_file_fat_free} ({\b bcf_file_fat} **fat)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bcf_directory_entry} * {\b CompoundFileDirectoryEntry} (FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bcf_directory} * {\b CompoundFileDirectory} (const unsigned int maxNumberOfDirectoryEntries)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readNextSector} (FILE *file, {\b bcf_directory} *dir)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b bcf_directory_free} ({\b bcf_directory} **dir)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bcf_file_header} {\b bcfFileHeader_read} (FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b bcfFileHeader_isValid} ({\b bcf_file_header} header)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b hus_compress} (char *input, int size, char *output, int *out_size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b hus_decompress} (char *input, int size, char *output, int *out_size)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b testTangentPoints} ({\b EmbCircle} c, {\b EmbVector} p, {\b EmbVector} *t0, {\b EmbVector} *t1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printArcResults} ({\b EmbReal} bulge, {\b EmbArc} arc, {\b EmbReal} centerX, {\b EmbReal} centerY, {\b EmbReal} radius, {\b EmbReal} diameter, {\b EmbReal} chord, {\b EmbReal} chordMidX, {\b EmbReal} chordMidY, {\b EmbReal} sagitta, {\b EmbReal} apothem, {\b EmbReal} incAngle, char clockwise)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b create_test_file_1} (const char *outf)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b create_test_file_2} (const char *outf)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b create_test_file_3} (const char *outf)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b testEmbCircle} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b testEmbCircle_2} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b testGeomArc} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b testThreadColor} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b testEmbFormat} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embColor_read} (FILE *f, {\b EmbColor} *c, int toRead)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embColor_write} (FILE *f, {\b EmbColor} c, int toWrite)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b read100} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b write100} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b read10o} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b write10o} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readArt} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeArt} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readBmc} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeBmc} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readBro} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeBro} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readCnd} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeCnd} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readCol} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeCol} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readCsd} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeCsd} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readCsv} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeCsv} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readDat} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeDat} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readDem} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeDem} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readDsb} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeDsb} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readDst} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeDst} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readDsz} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeDsz} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readDxf} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeDxf} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readEdr} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeEdr} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readEmd} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeEmd} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readExp} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeExp} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readExy} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeExy} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readEys} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeEys} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readFxy} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeFxy} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readGc} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeGc} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readGnc} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeGnc} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readGt} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeGt} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readHus} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeHus} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readInb} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeInb} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readInf} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeInf} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readJef} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeJef} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readKsm} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeKsm} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readMax} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeMax} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readMit} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeMit} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readNew} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeNew} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readOfm} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeOfm} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readPcd} ({\b EmbPattern} *pattern, const char *fileName, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writePcd} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readPcm} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writePcm} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readPcq} ({\b EmbPattern} *pattern, const char *fileName, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writePcq} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readPcs} ({\b EmbPattern} *pattern, const char *fileName, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writePcs} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readPec} ({\b EmbPattern} *pattern, const char *fileName, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writePec} ({\b EmbPattern} *pattern, const char *fileName, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readPel} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writePel} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readPem} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writePem} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readPes} ({\b EmbPattern} *pattern, const char *fileName, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writePes} ({\b EmbPattern} *pattern, const char *fileName, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readPhb} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writePhb} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readPhc} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writePhc} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readPlt} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writePlt} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readRgb} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeRgb} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readSew} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeSew} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readShv} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeShv} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readSst} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeSst} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readStx} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeStx} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readSvg} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeSvg} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readT01} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeT01} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readT09} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeT09} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readTap} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeTap} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readThr} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeThr} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readTxt} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeTxt} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readU00} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeU00} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readU01} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeU01} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readVip} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeVip} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readVp3} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeVp3} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readXxx} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeXxx} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b readZsk} ({\b EmbPattern} *pattern, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b writeZsk} ({\b EmbPattern} *pattern, FILE *file)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char {\b imageWithFrame} [38][48]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v BULGETOCONTROL\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:BULGETOCONTROL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BULGETOCONTROL\~ 2}}
\par
{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 167} of file {\b embroidery_internal.h}.}\par
}
{\xe \v BULGETOEND\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:BULGETOEND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BULGETOEND\~ 4}}
\par
{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 168} of file {\b embroidery_internal.h}.}\par
}
{\xe \v CompoundFileSector_DIFAT_Sector\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:CompoundFileSector_DIFAT_Sector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CompoundFileSector_DIFAT_Sector\~ 0xFFFFFFFC}}
\par
{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 13} of file {\b embroidery_internal.h}.}\par
}
{\xe \v CompoundFileSector_EndOfChain\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:CompoundFileSector_EndOfChain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CompoundFileSector_EndOfChain\~ 0xFFFFFFFE}}
\par
{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b embroidery_internal.h}.}\par
}
{\xe \v CompoundFileSector_FAT_Sector\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:CompoundFileSector_FAT_Sector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CompoundFileSector_FAT_Sector\~ 0xFFFFFFFD}}
\par
{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b embroidery_internal.h}.}\par
}
{\xe \v CompoundFileSector_FreeSector\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:CompoundFileSector_FreeSector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CompoundFileSector_FreeSector\~ 0xFFFFFFFF}}
\par
{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b embroidery_internal.h}.}\par
}
{\xe \v CompoundFileSector_MaxRegSector\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:CompoundFileSector_MaxRegSector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CompoundFileSector_MaxRegSector\~ 0xFFFFFFFA}}
\par
{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type of sector \par
}{
Definition at line {\b 12} of file {\b embroidery_internal.h}.}\par
}
{\xe \v CompoundFileStreamId_MaxRegularStreamId\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:CompoundFileStreamId_MaxRegularStreamId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CompoundFileStreamId_MaxRegularStreamId\~ 0xFFFFFFFA}}
\par
{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Special values for Stream Identifiers All real stream Ids are less than this \par
}{
Definition at line {\b 29} of file {\b embroidery_internal.h}.}\par
}
{\xe \v CompoundFileStreamId_NoStream\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:CompoundFileStreamId_NoStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CompoundFileStreamId_NoStream\~ 0xFFFFFFFF}}
\par
{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
There is no valid stream Id \par
 \par
}{
Definition at line {\b 30} of file {\b embroidery_internal.h}.}\par
}
{\xe \v CUBICTOCONTROL1\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:CUBICTOCONTROL1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CUBICTOCONTROL1\~ 32}}
\par
{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 171} of file {\b embroidery_internal.h}.}\par
}
{\xe \v CUBICTOCONTROL2\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:CUBICTOCONTROL2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CUBICTOCONTROL2\~ 64}}
\par
{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 172} of file {\b embroidery_internal.h}.}\par
}
{\xe \v CUBICTOEND\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:CUBICTOEND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CUBICTOEND\~ 128}}
\par
{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 173} of file {\b embroidery_internal.h}.}\par
}
{\xe \v DXF_VERSION_2000\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:DXF_VERSION_2000}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DXF_VERSION_2000\~ "AC1015"}}
\par
{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 135} of file {\b embroidery_internal.h}.}\par
}
{\xe \v DXF_VERSION_2002\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:DXF_VERSION_2002}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DXF_VERSION_2002\~ "AC1015"}}
\par
{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 136} of file {\b embroidery_internal.h}.}\par
}
{\xe \v DXF_VERSION_2004\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:DXF_VERSION_2004}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DXF_VERSION_2004\~ "AC1018"}}
\par
{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 137} of file {\b embroidery_internal.h}.}\par
}
{\xe \v DXF_VERSION_2006\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:DXF_VERSION_2006}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DXF_VERSION_2006\~ "AC1018"}}
\par
{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 138} of file {\b embroidery_internal.h}.}\par
}
{\xe \v DXF_VERSION_2007\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:DXF_VERSION_2007}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DXF_VERSION_2007\~ "AC1021"}}
\par
{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 139} of file {\b embroidery_internal.h}.}\par
}
{\xe \v DXF_VERSION_2009\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:DXF_VERSION_2009}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DXF_VERSION_2009\~ "AC1021"}}
\par
{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 140} of file {\b embroidery_internal.h}.}\par
}
{\xe \v DXF_VERSION_2010\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:DXF_VERSION_2010}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DXF_VERSION_2010\~ "AC1024"}}
\par
{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 141} of file {\b embroidery_internal.h}.}\par
}
{\xe \v DXF_VERSION_2013\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:DXF_VERSION_2013}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DXF_VERSION_2013\~ "AC1027"}}
\par
{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 142} of file {\b embroidery_internal.h}.}\par
}
{\xe \v DXF_VERSION_R10\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:DXF_VERSION_R10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DXF_VERSION_R10\~ "AC1006"}}
\par
{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 124} of file {\b embroidery_internal.h}.}\par
}
{\xe \v DXF_VERSION_R11\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:DXF_VERSION_R11}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DXF_VERSION_R11\~ "AC1009"}}
\par
{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 125} of file {\b embroidery_internal.h}.}\par
}
{\xe \v DXF_VERSION_R12\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:DXF_VERSION_R12}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DXF_VERSION_R12\~ "AC1009"}}
\par
{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 126} of file {\b embroidery_internal.h}.}\par
}
{\xe \v DXF_VERSION_R13\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:DXF_VERSION_R13}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DXF_VERSION_R13\~ "AC1012"}}
\par
{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 127} of file {\b embroidery_internal.h}.}\par
}
{\xe \v DXF_VERSION_R14\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:DXF_VERSION_R14}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DXF_VERSION_R14\~ "AC1014"}}
\par
{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 128} of file {\b embroidery_internal.h}.}\par
}
{\xe \v DXF_VERSION_R15\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:DXF_VERSION_R15}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DXF_VERSION_R15\~ "AC1015"}}
\par
{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 129} of file {\b embroidery_internal.h}.}\par
}
{\xe \v DXF_VERSION_R18\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:DXF_VERSION_R18}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DXF_VERSION_R18\~ "AC1018"}}
\par
{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 130} of file {\b embroidery_internal.h}.}\par
}
{\xe \v DXF_VERSION_R21\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:DXF_VERSION_R21}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DXF_VERSION_R21\~ "AC1021"}}
\par
{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 131} of file {\b embroidery_internal.h}.}\par
}
{\xe \v DXF_VERSION_R24\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:DXF_VERSION_R24}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DXF_VERSION_R24\~ "AC1024"}}
\par
{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 132} of file {\b embroidery_internal.h}.}\par
}
{\xe \v DXF_VERSION_R27\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:DXF_VERSION_R27}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DXF_VERSION_R27\~ "AC1027"}}
\par
{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 133} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_A\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_A}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_A\~ 1}}
\par
{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 33} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_ANIMATE\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_ANIMATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_ANIMATE\~ 2}}
\par
{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 34} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_ANIMATECOLOR\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_ANIMATECOLOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_ANIMATECOLOR\~ 3}}
\par
{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 35} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_ANIMATEMOTION\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_ANIMATEMOTION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_ANIMATEMOTION\~ 4}}
\par
{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 36} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_ANIMATETRANSFORM\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_ANIMATETRANSFORM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_ANIMATETRANSFORM\~ 5}}
\par
{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 37} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_ANIMATION\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_ANIMATION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_ANIMATION\~ 6}}
\par
{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 38} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_AUDIO\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_AUDIO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_AUDIO\~ 7}}
\par
{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 39} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_CIRCLE\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_CIRCLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_CIRCLE\~ 8}}
\par
{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 40} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_DEFS\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_DEFS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_DEFS\~ 9}}
\par
{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 41} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_DESC\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_DESC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_DESC\~ 10}}
\par
{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 42} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_DISCARD\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_DISCARD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_DISCARD\~ 11}}
\par
{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 43} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_ELLIPSE\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_ELLIPSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_ELLIPSE\~ 12}}
\par
{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 44} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_FONT\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_FONT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_FONT\~ 13}}
\par
{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 45} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_FONT_FACE\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_FONT_FACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_FONT_FACE\~ 14}}
\par
{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 46} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_FONT_FACE_SRC\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_FONT_FACE_SRC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_FONT_FACE_SRC\~ 15}}
\par
{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 47} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_FONT_FACE_URI\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_FONT_FACE_URI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_FONT_FACE_URI\~ 16}}
\par
{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 48} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_FOREIGN_OBJECT\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_FOREIGN_OBJECT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_FOREIGN_OBJECT\~ 17}}
\par
{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 49} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_G\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_G}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_G\~ 18}}
\par
{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 50} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_GLYPH\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_GLYPH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_GLYPH\~ 19}}
\par
{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 51} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_HANDLER\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_HANDLER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_HANDLER\~ 20}}
\par
{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 52} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_HKERN\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_HKERN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_HKERN\~ 21}}
\par
{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 53} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_IMAGE\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_IMAGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_IMAGE\~ 22}}
\par
{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 54} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_LINE\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_LINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_LINE\~ 23}}
\par
{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 55} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_LINEAR_GRADIENT\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_LINEAR_GRADIENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_LINEAR_GRADIENT\~ 24}}
\par
{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 56} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_LISTENER\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_LISTENER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_LISTENER\~ 25}}
\par
{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 57} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_METADATA\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_METADATA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_METADATA\~ 26}}
\par
{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 58} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_MISSING_GLYPH\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_MISSING_GLYPH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_MISSING_GLYPH\~ 27}}
\par
{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 59} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_MPATH\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_MPATH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_MPATH\~ 28}}
\par
{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 60} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_PATH\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_PATH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_PATH\~ 29}}
\par
{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 61} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_POLYGON\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_POLYGON}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_POLYGON\~ 30}}
\par
{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 62} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_POLYLINE\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_POLYLINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_POLYLINE\~ 31}}
\par
{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 63} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_PREFETCH\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_PREFETCH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_PREFETCH\~ 32}}
\par
{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 64} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_RADIAL_GRADIENT\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_RADIAL_GRADIENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_RADIAL_GRADIENT\~ 33}}
\par
{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 65} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_RECT\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_RECT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_RECT\~ 34}}
\par
{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 66} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_SCRIPT\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_SCRIPT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_SCRIPT\~ 35}}
\par
{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 67} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_SET\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_SET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_SET\~ 36}}
\par
{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 68} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_SOLID_COLOR\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_SOLID_COLOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_SOLID_COLOR\~ 37}}
\par
{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 69} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_STOP\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_STOP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_STOP\~ 38}}
\par
{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 70} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_SVG\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_SVG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_SVG\~ 39}}
\par
{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 71} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_SWITCH\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_SWITCH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_SWITCH\~ 40}}
\par
{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 72} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_TBREAK\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_TBREAK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_TBREAK\~ 41}}
\par
{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 73} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_TEXT\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_TEXT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_TEXT\~ 42}}
\par
{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 74} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_TEXT_AREA\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_TEXT_AREA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_TEXT_AREA\~ 43}}
\par
{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 75} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_TITLE\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_TITLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_TITLE\~ 44}}
\par
{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 76} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_TSPAN\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_TSPAN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_TSPAN\~ 45}}
\par
{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 77} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_USE\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_USE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_USE\~ 46}}
\par
{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 78} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_VIDEO\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_VIDEO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_VIDEO\~ 47}}
\par
{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 79} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELEMENT_XML\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELEMENT_XML}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELEMENT_XML\~ 0}}
\par
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 32} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELLIPSETOEND\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELLIPSETOEND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELLIPSETOEND\~ 16}}
\par
{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 170} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ELLIPSETORAD\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ELLIPSETORAD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ELLIPSETORAD\~ 8}}
\par
{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 169} of file {\b embroidery_internal.h}.}\par
}
{\xe \v EMB_BIG_ENDIAN\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:EMB_BIG_ENDIAN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_BIG_ENDIAN\~ 0}}
\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 98} of file {\b embroidery_internal.h}.}\par
}
{\xe \v EMB_INT16_BIG\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:EMB_INT16_BIG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_INT16_BIG\~ 2}}
\par
{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 103} of file {\b embroidery_internal.h}.}\par
}
{\xe \v EMB_INT16_LITTLE\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:EMB_INT16_LITTLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_INT16_LITTLE\~ 3}}
\par
{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 104} of file {\b embroidery_internal.h}.}\par
}
{\xe \v EMB_INT32_BIG\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:EMB_INT32_BIG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_INT32_BIG\~ 4}}
\par
{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 105} of file {\b embroidery_internal.h}.}\par
}
{\xe \v EMB_INT32_LITTLE\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:EMB_INT32_LITTLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_INT32_LITTLE\~ 5}}
\par
{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 106} of file {\b embroidery_internal.h}.}\par
}
{\xe \v EMB_LITTLE_ENDIAN\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:EMB_LITTLE_ENDIAN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_LITTLE_ENDIAN\~ 1}}
\par
{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 99} of file {\b embroidery_internal.h}.}\par
}
{\xe \v EMB_MAX\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:EMB_MAX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_MAX( A,  B)\~ (((A) > (B)) ? (A) : (B))}}
\par
{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 94} of file {\b embroidery_internal.h}.}\par
}
{\xe \v EMB_MIN\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:EMB_MIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMB_MIN( A,  B)\~ (((A) < (B)) ? (A) : (B))}}
\par
{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 93} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ENDIAN_HOST\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ENDIAN_HOST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ENDIAN_HOST\~ {\b EMB_LITTLE_ENDIAN}}}
\par
{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 101} of file {\b embroidery_internal.h}.}\par
}
{\xe \v GREEN_TERM_COLOR\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:GREEN_TERM_COLOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GREEN_TERM_COLOR\~ "\\x1B[0;32m"}}
\par
{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 83} of file {\b embroidery_internal.h}.}\par
}
{\xe \v HOOP_110X110\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:HOOP_110X110}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HOOP_110X110\~ 1}}
\par
{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 88} of file {\b embroidery_internal.h}.}\par
}
{\xe \v HOOP_126X110\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:HOOP_126X110}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HOOP_126X110\~ 0}}
\par
{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 87} of file {\b embroidery_internal.h}.}\par
}
{\xe \v HOOP_140X200\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:HOOP_140X200}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HOOP_140X200\~ 3}}
\par
{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 90} of file {\b embroidery_internal.h}.}\par
}
{\xe \v HOOP_230X200\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:HOOP_230X200}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HOOP_230X200\~ 4}}
\par
{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 91} of file {\b embroidery_internal.h}.}\par
}
{\xe \v HOOP_50X50\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:HOOP_50X50}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define HOOP_50X50\~ 2}}
\par
{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 89} of file {\b embroidery_internal.h}.}\par
}
{\xe \v LINETO\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:LINETO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LINETO\~ 0}}
\par
{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 165} of file {\b embroidery_internal.h}.}\par
}
{\xe \v MOVETO\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:MOVETO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MOVETO\~ 1}}
\par
{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 166} of file {\b embroidery_internal.h}.}\par
}
{\xe \v N_PES_VERSIONS\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:N_PES_VERSIONS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define N_PES_VERSIONS\~ 13}}
\par
{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 121} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ObjectTypeRootEntry\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ObjectTypeRootEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ObjectTypeRootEntry\~ 0x05}}
\par
{\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the root entry \par
 \par
}{
Definition at line {\b 24} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ObjectTypeStorage\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ObjectTypeStorage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ObjectTypeStorage\~ 0x01}}
\par
{\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a directory type object \par
}{
Definition at line {\b 22} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ObjectTypeStream\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ObjectTypeStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ObjectTypeStream\~ 0x02}}
\par
{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
a file type object \par
 \par
}{
Definition at line {\b 23} of file {\b embroidery_internal.h}.}\par
}
{\xe \v ObjectTypeUnknown\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ObjectTypeUnknown}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ObjectTypeUnknown\~ 0x00}}
\par
{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Type of directory object Probably unallocated \par
 \par
}{
Definition at line {\b 21} of file {\b embroidery_internal.h}.}\par
}
{\xe \v PES0001\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:PES0001}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PES0001\~ 0}}
\par
{\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 108} of file {\b embroidery_internal.h}.}\par
}
{\xe \v PES0020\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:PES0020}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PES0020\~ 1}}
\par
{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 109} of file {\b embroidery_internal.h}.}\par
}
{\xe \v PES0022\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:PES0022}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PES0022\~ 2}}
\par
{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 110} of file {\b embroidery_internal.h}.}\par
}
{\xe \v PES0030\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:PES0030}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PES0030\~ 3}}
\par
{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 111} of file {\b embroidery_internal.h}.}\par
}
{\xe \v PES0040\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:PES0040}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PES0040\~ 4}}
\par
{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 112} of file {\b embroidery_internal.h}.}\par
}
{\xe \v PES0050\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:PES0050}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PES0050\~ 5}}
\par
{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 113} of file {\b embroidery_internal.h}.}\par
}
{\xe \v PES0055\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:PES0055}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PES0055\~ 6}}
\par
{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 114} of file {\b embroidery_internal.h}.}\par
}
{\xe \v PES0056\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:PES0056}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PES0056\~ 7}}
\par
{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 115} of file {\b embroidery_internal.h}.}\par
}
{\xe \v PES0060\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:PES0060}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PES0060\~ 8}}
\par
{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 116} of file {\b embroidery_internal.h}.}\par
}
{\xe \v PES0070\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:PES0070}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PES0070\~ 9}}
\par
{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 117} of file {\b embroidery_internal.h}.}\par
}
{\xe \v PES0080\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:PES0080}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PES0080\~ 10}}
\par
{\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 118} of file {\b embroidery_internal.h}.}\par
}
{\xe \v PES0090\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:PES0090}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PES0090\~ 11}}
\par
{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 119} of file {\b embroidery_internal.h}.}\par
}
{\xe \v PES0100\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:PES0100}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PES0100\~ 12}}
\par
{\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 120} of file {\b embroidery_internal.h}.}\par
}
{\xe \v QUADTOCONTROL\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:QUADTOCONTROL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define QUADTOCONTROL\~ 256}}
\par
{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 174} of file {\b embroidery_internal.h}.}\par
}
{\xe \v QUADTOEND\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:QUADTOEND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define QUADTOEND\~ 512}}
\par
{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 175} of file {\b embroidery_internal.h}.}\par
}
{\xe \v RED_TERM_COLOR\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:RED_TERM_COLOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RED_TERM_COLOR\~ "\\x1B[0;31m"}}
\par
{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 82} of file {\b embroidery_internal.h}.}\par
}
{\xe \v RESET_TERM_COLOR\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:RESET_TERM_COLOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RESET_TERM_COLOR\~ "\\033[0m"}}
\par
{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 85} of file {\b embroidery_internal.h}.}\par
}
{\xe \v SVG_ATTRIBUTE\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:SVG_ATTRIBUTE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SVG_ATTRIBUTE\~ 4}}
\par
{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 161} of file {\b embroidery_internal.h}.}\par
}
{\xe \v SVG_CATCH_ALL\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:SVG_CATCH_ALL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SVG_CATCH_ALL\~ 5}}
\par
{\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 162} of file {\b embroidery_internal.h}.}\par
}
{\xe \v SVG_CREATOR_EMBROIDERMODDER\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:SVG_CREATOR_EMBROIDERMODDER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SVG_CREATOR_EMBROIDERMODDER\~ 1}}
\par
{\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 145} of file {\b embroidery_internal.h}.}\par
}
{\xe \v SVG_CREATOR_ILLUSTRATOR\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:SVG_CREATOR_ILLUSTRATOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SVG_CREATOR_ILLUSTRATOR\~ 2}}
\par
{\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 146} of file {\b embroidery_internal.h}.}\par
}
{\xe \v SVG_CREATOR_INKSCAPE\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:SVG_CREATOR_INKSCAPE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SVG_CREATOR_INKSCAPE\~ 3}}
\par
{\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 147} of file {\b embroidery_internal.h}.}\par
}
{\xe \v SVG_CREATOR_NULL\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:SVG_CREATOR_NULL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SVG_CREATOR_NULL\~ 0}}
\par
{\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 144} of file {\b embroidery_internal.h}.}\par
}
{\xe \v SVG_ELEMENT\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:SVG_ELEMENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SVG_ELEMENT\~ 1}}
\par
{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 158} of file {\b embroidery_internal.h}.}\par
}
{\xe \v SVG_EXPECT_ATTRIBUTE\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:SVG_EXPECT_ATTRIBUTE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SVG_EXPECT_ATTRIBUTE\~ 2}}
\par
{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 151} of file {\b embroidery_internal.h}.}\par
}
{\xe \v SVG_EXPECT_ELEMENT\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:SVG_EXPECT_ELEMENT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SVG_EXPECT_ELEMENT\~ 1}}
\par
{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 150} of file {\b embroidery_internal.h}.}\par
}
{\xe \v SVG_EXPECT_NULL\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:SVG_EXPECT_NULL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SVG_EXPECT_NULL\~ 0}}
\par
{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 149} of file {\b embroidery_internal.h}.}\par
}
{\xe \v SVG_EXPECT_VALUE\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:SVG_EXPECT_VALUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SVG_EXPECT_VALUE\~ 3}}
\par
{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 152} of file {\b embroidery_internal.h}.}\par
}
{\xe \v SVG_MEDIA_PROPERTY\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:SVG_MEDIA_PROPERTY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SVG_MEDIA_PROPERTY\~ 3}}
\par
{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 160} of file {\b embroidery_internal.h}.}\par
}
{\xe \v SVG_NULL\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:SVG_NULL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SVG_NULL\~ 0}}
\par
{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 157} of file {\b embroidery_internal.h}.}\par
}
{\xe \v SVG_PROPERTY\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:SVG_PROPERTY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SVG_PROPERTY\~ 2}}
\par
{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 159} of file {\b embroidery_internal.h}.}\par
}
{\xe \v YELLOW_TERM_COLOR\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:YELLOW_TERM_COLOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define YELLOW_TERM_COLOR\~ "\\x1B[1;33m"}}
\par
{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 84} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Typedef Documentation\par
\pard\plain 
{\xe \v bcf_directory\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:bcf_directory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b _bcf_directory} {\b bcf_directory}}}
\par
{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bcf_directory_entry\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:bcf_directory_entry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b _bcf_directory_entry} {\b bcf_directory_entry}}}
\par
{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bcf_file\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:bcf_file}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b _bcf_file} {\b bcf_file}}}
\par
{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bcf_file_difat\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:bcf_file_difat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b _bcf_file_difat} {\b bcf_file_difat}}}
\par
{\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bcf_file_fat\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:bcf_file_fat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b _bcf_file_fat} {\b bcf_file_fat}}}
\par
{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bcf_file_header\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:bcf_file_header}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b _bcf_file_header} {\b bcf_file_header}}}
\par
{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v compress\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:compress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Compress} {\b compress}}}
\par
{\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v huffman\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:huffman}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b Huffman} {\b huffman}}}
\par
{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v StxThread\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:StxThread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b StxThread_} {\b StxThread}}}
\par
{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SubDescriptor\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:SubDescriptor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b SubDescriptor_} {\b SubDescriptor}}}
\par
{\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SvgAttribute\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:SvgAttribute}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b SvgAttribute_} {\b SvgAttribute}}}
\par
{\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ThredExtension\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ThredExtension}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b ThredExtension_} {\b ThredExtension}}}
\par
{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ThredHeader\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:ThredHeader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b ThredHeader_} {\b ThredHeader}}}
\par
{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v VipHeader\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:VipHeader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b VipHeader_} {\b VipHeader}}}
\par
{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v vp3Hoop\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:vp3Hoop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b _vp3Hoop} {\b vp3Hoop}}}
\par
{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v CSV_EXPECT\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:CSV_EXPECT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSV_EXPECT}}}
\par
{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v CSV_EXPECT_NULL\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:CSV_EXPECT_NULL}
{\qr CSV_EXPECT_NULL{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
\cell }{\cell }{\row }
{\xe \v CSV_EXPECT_QUOTE1\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:CSV_EXPECT_QUOTE1}
{\qr CSV_EXPECT_QUOTE1{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATW}
\cell }{\cell }{\row }
{\xe \v CSV_EXPECT_QUOTE2\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:CSV_EXPECT_QUOTE2}
{\qr CSV_EXPECT_QUOTE2{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
\cell }{\cell }{\row }
{\xe \v CSV_EXPECT_COMMA\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:CSV_EXPECT_COMMA}
{\qr CSV_EXPECT_COMMA{\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
\cell }{\cell }{\row }
}
\par
{
Definition at line {\b 336} of file {\b embroidery_internal.h}.}\par
}
{\xe \v CSV_MODE\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:CSV_MODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b CSV_MODE}}}
\par
{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v CSV_MODE_NULL\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:CSV_MODE_NULL}
{\qr CSV_MODE_NULL{\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
\cell }{\cell }{\row }
{\xe \v CSV_MODE_COMMENT\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:CSV_MODE_COMMENT}
{\qr CSV_MODE_COMMENT{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
\cell }{\cell }{\row }
{\xe \v CSV_MODE_VARIABLE\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:CSV_MODE_VARIABLE}
{\qr CSV_MODE_VARIABLE{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
\cell }{\cell }{\row }
{\xe \v CSV_MODE_THREAD\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:CSV_MODE_THREAD}
{\qr CSV_MODE_THREAD{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
\cell }{\cell }{\row }
{\xe \v CSV_MODE_STITCH\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:CSV_MODE_STITCH}
{\qr CSV_MODE_STITCH{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUE}
\cell }{\cell }{\row }
}
\par
{
Definition at line {\b 344} of file {\b embroidery_internal.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v bcf_difat_create\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:bcf_difat_create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bcf_file_difat} * bcf_difat_create (FILE *  {\i file}, unsigned int  {\i fatSectors}, const unsigned int  {\i sectorSize})}}
\par
{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 276} of file {\b main.c}.}\par
}
{\xe \v bcf_directory_free\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:bcf_directory_free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void bcf_directory_free ({\b bcf_directory} **  {\i dir})}}
\par
{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 448} of file {\b main.c}.}\par
}
{\xe \v bcf_file_difat_free\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:bcf_file_difat_free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void bcf_file_difat_free ({\b bcf_file_difat} *  {\i difat})}}
\par
{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bcf_file_fat_free\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:bcf_file_fat_free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void bcf_file_fat_free ({\b bcf_file_fat} **  {\i fat})}}
\par
{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bcf_file_free\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:bcf_file_free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void bcf_file_free ({\b bcf_file} *  {\i bcfFile})}}
\par
{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 267} of file {\b main.c}.}\par
}
{\xe \v bcfFile_read\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:bcfFile_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int bcfFile_read (FILE *  {\i file}, {\b bcf_file} *  {\i bcfFile})}}
\par
{\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 196} of file {\b main.c}.}\par
}
{\xe \v bcfFileFat_create\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:bcfFileFat_create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bcf_file_fat} * bcfFileFat_create (const unsigned int  {\i sectorSize})}}
\par
{\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 467} of file {\b main.c}.}\par
}
{\xe \v bcfFileHeader_isValid\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:bcfFileHeader_isValid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int bcfFileHeader_isValid ({\b bcf_file_header}  {\i header})}}
\par
{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bcfFileHeader_read\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:bcfFileHeader_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bcf_file_header} bcfFileHeader_read (FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 495} of file {\b main.c}.}\par
}
{\xe \v binaryReadString\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:binaryReadString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void binaryReadString (FILE *  {\i file}, char *  {\i buffer}, int  {\i maxLength})}}
\par
{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 766} of file {\b main.c}.}\par
}
{\xe \v binaryReadUnicodeString\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:binaryReadUnicodeString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void binaryReadUnicodeString (FILE *  {\i file}, char *  {\i buffer}, const int  {\i stringLength})}}
\par
{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 777} of file {\b main.c}.}\par
}
{\xe \v binaryWriteUInt\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:binaryWriteUInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void binaryWriteUInt (FILE *  {\i f}, unsigned int  {\i data})}}
\par
{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 247} of file {\b formats.c}.}\par
}
{\xe \v check_header_present\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:check_header_present}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int check_header_present (FILE *  {\i file}, int  {\i minimum_header_length})}}
\par
{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 149} of file {\b main.c}.}\par
}
{\xe \v CompoundFileDirectory\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:CompoundFileDirectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bcf_directory} * CompoundFileDirectory (const unsigned int  {\i maxNumberOfDirectoryEntries})}}
\par
{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 360} of file {\b main.c}.}\par
}
{\xe \v CompoundFileDirectoryEntry\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:CompoundFileDirectoryEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bcf_directory_entry} * CompoundFileDirectoryEntry (FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 390} of file {\b main.c}.}\par
}
{\xe \v compress_get_bits\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:compress_get_bits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int compress_get_bits ({\b compress} *  {\i c}, int  {\i length})}}
\par
{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 106} of file {\b compress.c}.}\par
}
{\xe \v compress_get_position\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:compress_get_position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int compress_get_position ({\b compress} *  {\i c})}}
\par
{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 251} of file {\b compress.c}.}\par
}
{\xe \v compress_get_token\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:compress_get_token}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int compress_get_token ({\b compress} *  {\i c})}}
\par
{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 239} of file {\b compress.c}.}\par
}
{\xe \v compress_load_block\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:compress_load_block}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void compress_load_block ({\b compress} *  {\i c})}}
\par
{\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 231} of file {\b compress.c}.}\par
}
{\xe \v compress_load_character_huffman\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:compress_load_character_huffman}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void compress_load_character_huffman ({\b compress} *  {\i c})}}
\par
{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 184} of file {\b compress.c}.}\par
}
{\xe \v compress_load_character_length_huffman\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:compress_load_character_length_huffman}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void compress_load_character_length_huffman ({\b compress} *  {\i c})}}
\par
{\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAUZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 162} of file {\b compress.c}.}\par
}
{\xe \v compress_load_distance_huffman\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:compress_load_distance_huffman}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void compress_load_distance_huffman ({\b compress} *  {\i c})}}
\par
{\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 215} of file {\b compress.c}.}\par
}
{\xe \v compress_pop\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:compress_pop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int compress_pop ({\b compress} *  {\i c}, int  {\i bit_count})}}
\par
{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 131} of file {\b compress.c}.}\par
}
{\xe \v compress_read_variable_length\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:compress_read_variable_length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int compress_read_variable_length ({\b compress} *  {\i c})}}
\par
{\bkmkstart AAAAAAAAVC}
{\bkmkend AAAAAAAAVC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 143} of file {\b compress.c}.}\par
}
{\xe \v copy_trim\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:copy_trim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * copy_trim (char const *  {\i s})}}
\par
{\bkmkstart AAAAAAAAVD}
{\bkmkend AAAAAAAAVD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 851} of file {\b main.c}.}\par
}
{\xe \v create_test_file_1\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:create_test_file_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int create_test_file_1 (const char *  {\i outf})}}
\par
{\bkmkstart AAAAAAAAVE}
{\bkmkend AAAAAAAAVE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v create_test_file_2\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:create_test_file_2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int create_test_file_2 (const char *  {\i outf})}}
\par
{\bkmkstart AAAAAAAAVF}
{\bkmkend AAAAAAAAVF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v create_test_file_3\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:create_test_file_3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int create_test_file_3 (const char *  {\i outf})}}
\par
{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v decode_t01_record\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:decode_t01_record}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int decode_t01_record (unsigned char  {\i b}[3], int *  {\i x}, int *  {\i y}, int *  {\i flags})}}
\par
{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 74} of file {\b encoding.c}.}\par
}
{\xe \v decode_tajima_ternary\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:decode_tajima_ternary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void decode_tajima_ternary (unsigned char  {\i b}[3], int *  {\i x}, int *  {\i y})}}
\par
{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 229} of file {\b encoding.c}.}\par
}
{\xe \v decodeNewStitch\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:decodeNewStitch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int decodeNewStitch (unsigned char  {\i value})}}
\par
{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 337} of file {\b encoding.c}.}\par
}
{\xe \v emb_optOut\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:emb_optOut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * emb_optOut ({\b EmbReal}  {\i num}, char *  {\i str})}}
\par
{\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Optimizes the number ({\i num} ) for output to a text file and returns it as a string ({\i str} ). \par
}{
Definition at line {\b 868} of file {\b main.c}.}\par
}
{\xe \v emb_readline\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:emb_readline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int emb_readline (FILE *  {\i file}, char *  {\i line}, int  {\i maxLength})}}
\par
{\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 809} of file {\b main.c}.}\par
}
{\xe \v embColor_read\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:embColor_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embColor_read (FILE *  {\i f}, {\b EmbColor} *  {\i c}, int  {\i toRead})}}
\par
{\bkmkstart AAAAAAAAVM}
{\bkmkend AAAAAAAAVM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 681} of file {\b main.c}.}\par
}
{\xe \v embColor_write\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:embColor_write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embColor_write (FILE *  {\i f}, {\b EmbColor}  {\i c}, int  {\i toWrite})}}
\par
{\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 691} of file {\b main.c}.}\par
}
{\xe \v embInt_read\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:embInt_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embInt_read (FILE *  {\i f}, char *  {\i label}, void *  {\i b}, int  {\i mode})}}
\par
{\bkmkstart AAAAAAAAVO}
{\bkmkend AAAAAAAAVO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 350} of file {\b encoding.c}.}\par
}
{\xe \v embInt_write\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:embInt_write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embInt_write (FILE *  {\i f}, char *  {\i label}, void *  {\i b}, int  {\i mode})}}
\par
{\bkmkstart AAAAAAAAVP}
{\bkmkend AAAAAAAAVP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 381} of file {\b encoding.c}.}\par
}
{\xe \v encode_t01_record\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:encode_t01_record}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void encode_t01_record (unsigned char  {\i b}[3], int  {\i x}, int  {\i y}, int  {\i flags})}}
\par
{\bkmkstart AAAAAAAAVQ}
{\bkmkend AAAAAAAAVQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 99} of file {\b encoding.c}.}\par
}
{\xe \v encode_tajima_ternary\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:encode_tajima_ternary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int encode_tajima_ternary (unsigned char  {\i b}[3], int  {\i x}, int  {\i y})}}
\par
{\bkmkstart AAAAAAAAVR}
{\bkmkend AAAAAAAAVR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 118} of file {\b encoding.c}.}\par
}
{\xe \v entriesInDifatSector\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:entriesInDifatSector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int entriesInDifatSector ({\b bcf_file_difat} *  {\i fat})}}
\par
{\bkmkstart AAAAAAAAVS}
{\bkmkend AAAAAAAAVS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 308} of file {\b main.c}.}\par
}
{\xe \v fpad\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:fpad}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void fpad (FILE *  {\i f}, char  {\i c}, int  {\i n})}}
\par
{\bkmkstart AAAAAAAAVT}
{\bkmkend AAAAAAAAVT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 207} of file {\b formats.c}.}\par
}
{\xe \v fread_int16\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:fread_int16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short fread_int16 (FILE *  {\i f})}}
\par
{\bkmkstart AAAAAAAAVU}
{\bkmkend AAAAAAAAVU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 183} of file {\b formats.c}.}\par
}
{\xe \v fread_uint16\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:fread_uint16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short fread_uint16 (FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAVV}
{\bkmkend AAAAAAAAVV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 191} of file {\b formats.c}.}\par
}
{\xe \v GetFile\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:GetFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FILE * GetFile ({\b bcf_file} *  {\i bcfFile}, FILE *  {\i file}, char *  {\i fileToFind})}}
\par
{\bkmkstart AAAAAAAAVW}
{\bkmkend AAAAAAAAVW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 233} of file {\b main.c}.}\par
}
{\xe \v huffman_build_table\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:huffman_build_table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void huffman_build_table ({\b huffman} *  {\i h})}}
\par
{\bkmkstart AAAAAAAAVX}
{\bkmkend AAAAAAAAVX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 60} of file {\b compress.c}.}\par
}
{\xe \v huffman_table_lookup\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:huffman_table_lookup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int * huffman_table_lookup ({\b huffman} *  {\i h}, int  {\i byte_lookup}, int *  {\i lengths})}}
\par
{\bkmkstart AAAAAAAAVY}
{\bkmkend AAAAAAAAVY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v hus_compress\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:hus_compress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int hus_compress (char *  {\i input}, int  {\i size}, char *  {\i output}, int *  {\i out_size})}}
\par
{\bkmkstart AAAAAAAAVZ}
{\bkmkend AAAAAAAAVZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 44} of file {\b compress.c}.}\par
}
{\xe \v hus_decompress\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:hus_decompress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int hus_decompress (char *  {\i input}, int  {\i size}, char *  {\i output}, int *  {\i out_size})}}
\par
{\bkmkstart AAAAAAAAWA}
{\bkmkend AAAAAAAAWA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 264} of file {\b compress.c}.}\par
}
{\xe \v loadFatFromSector\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:loadFatFromSector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void loadFatFromSector ({\b bcf_file_fat} *  {\i fat}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAWB}
{\bkmkend AAAAAAAAWB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 481} of file {\b main.c}.}\par
}
{\xe \v mitDecodeStitch\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:mitDecodeStitch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int mitDecodeStitch (unsigned char  {\i value})}}
\par
{\bkmkstart AAAAAAAAWC}
{\bkmkend AAAAAAAAWC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 330} of file {\b encoding.c}.}\par
}
{\xe \v mitEncodeStitch\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:mitEncodeStitch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char mitEncodeStitch ({\b EmbReal}  {\i value})}}
\par
{\bkmkstart AAAAAAAAWD}
{\bkmkend AAAAAAAAWD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 323} of file {\b encoding.c}.}\par
}
{\xe \v numberOfEntriesInDifatSector\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:numberOfEntriesInDifatSector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int numberOfEntriesInDifatSector ({\b bcf_file_difat} *  {\i fat})}}
\par
{\bkmkstart AAAAAAAAWE}
{\bkmkend AAAAAAAAWE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v pfaffDecode\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:pfaffDecode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbReal} pfaffDecode (unsigned char  {\i a1}, unsigned char  {\i a2}, unsigned char  {\i a3})}}
\par
{\bkmkstart AAAAAAAAWF}
{\bkmkend AAAAAAAAWF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 315} of file {\b encoding.c}.}\par
}
{\xe \v pfaffEncode\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:pfaffEncode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pfaffEncode (FILE *  {\i file}, int  {\i x}, int  {\i y}, int  {\i flags})}}
\par
{\bkmkstart AAAAAAAAWG}
{\bkmkend AAAAAAAAWG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 295} of file {\b encoding.c}.}\par
}
{\xe \v printArcResults\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:printArcResults}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void printArcResults ({\b EmbReal}  {\i bulge}, {\b EmbArc}  {\i arc}, {\b EmbReal}  {\i centerX}, {\b EmbReal}  {\i centerY}, {\b EmbReal}  {\i radius}, {\b EmbReal}  {\i diameter}, {\b EmbReal}  {\i chord}, {\b EmbReal}  {\i chordMidX}, {\b EmbReal}  {\i chordMidY}, {\b EmbReal}  {\i sagitta}, {\b EmbReal}  {\i apothem}, {\b EmbReal}  {\i incAngle}, char  {\i clockwise})}}
\par
{\bkmkstart AAAAAAAAWH}
{\bkmkend AAAAAAAAWH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v read100\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:read100}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char read100 ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAWI}
{\bkmkend AAAAAAAAWI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v read10o\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:read10o}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char read10o ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAWJ}
{\bkmkend AAAAAAAAWJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readArt\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readArt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readArt ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAWK}
{\bkmkend AAAAAAAAWK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readBmc\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readBmc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readBmc ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAWL}
{\bkmkend AAAAAAAAWL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readBro\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readBro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readBro ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAWM}
{\bkmkend AAAAAAAAWM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readCnd\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readCnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readCnd ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAWN}
{\bkmkend AAAAAAAAWN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readCol\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readCol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readCol ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAWO}
{\bkmkend AAAAAAAAWO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readCsd\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readCsd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readCsd ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAWP}
{\bkmkend AAAAAAAAWP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readCsv\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readCsv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readCsv ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAWQ}
{\bkmkend AAAAAAAAWQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readDat\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readDat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readDat ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAWR}
{\bkmkend AAAAAAAAWR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readDem\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readDem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readDem ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAWS}
{\bkmkend AAAAAAAAWS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readDescriptions\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readDescriptions}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void readDescriptions (FILE *  {\i file}, {\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAAAWT}
{\bkmkend AAAAAAAAWT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readDsb\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readDsb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readDsb ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAWU}
{\bkmkend AAAAAAAAWU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readDst\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readDst}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readDst ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAWV}
{\bkmkend AAAAAAAAWV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readDsz\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readDsz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readDsz ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAWW}
{\bkmkend AAAAAAAAWW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readDxf\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readDxf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readDxf ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAWX}
{\bkmkend AAAAAAAAWX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readEdr\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readEdr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readEdr ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAWY}
{\bkmkend AAAAAAAAWY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readEmd\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readEmd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readEmd ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAWZ}
{\bkmkend AAAAAAAAWZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readExp\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readExp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readExp ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAXA}
{\bkmkend AAAAAAAAXA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readExy\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readExy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readExy ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAXB}
{\bkmkend AAAAAAAAXB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readEys\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readEys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readEys ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAXC}
{\bkmkend AAAAAAAAXC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readFeatherPatterns\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readFeatherPatterns}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void readFeatherPatterns (FILE *  {\i file}, {\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAAAXD}
{\bkmkend AAAAAAAAXD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readFullSector\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readFullSector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int readFullSector (FILE *  {\i file}, {\b bcf_file_difat} *  {\i bcfFile}, unsigned int *  {\i numberOfDifatEntriesStillToRead})}}
\par
{\bkmkstart AAAAAAAAXE}
{\bkmkend AAAAAAAAXE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 314} of file {\b main.c}.}\par
}
{\xe \v readFxy\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readFxy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readFxy ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAXF}
{\bkmkend AAAAAAAAXF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readGc\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readGc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readGc ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAXG}
{\bkmkend AAAAAAAAXG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readGnc\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readGnc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readGnc ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAXH}
{\bkmkend AAAAAAAAXH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readGt\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readGt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readGt ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAXI}
{\bkmkend AAAAAAAAXI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readHoopName\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readHoopName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void readHoopName (FILE *  {\i file}, {\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAAAXJ}
{\bkmkend AAAAAAAAXJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readHus\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readHus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readHus ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAXK}
{\bkmkend AAAAAAAAXK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readImageString\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readImageString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void readImageString (FILE *  {\i file}, {\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAAAXL}
{\bkmkend AAAAAAAAXL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readInb\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readInb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readInb ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAXM}
{\bkmkend AAAAAAAAXM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readInf\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readInf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readInf ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAXN}
{\bkmkend AAAAAAAAXN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readJef\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readJef}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readJef ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAXO}
{\bkmkend AAAAAAAAXO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readKsm\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readKsm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readKsm ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAXP}
{\bkmkend AAAAAAAAXP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readMax\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readMax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readMax ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAXQ}
{\bkmkend AAAAAAAAXQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readMit\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readMit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readMit ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAXR}
{\bkmkend AAAAAAAAXR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readMotifPatterns\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readMotifPatterns}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void readMotifPatterns (FILE *  {\i file}, {\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAAAXS}
{\bkmkend AAAAAAAAXS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readNew\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readNew}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readNew ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAXT}
{\bkmkend AAAAAAAAXT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readNextSector\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readNextSector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void readNextSector (FILE *  {\i file}, {\b bcf_directory} *  {\i dir})}}
\par
{\bkmkstart AAAAAAAAXU}
{\bkmkend AAAAAAAAXU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 426} of file {\b main.c}.}\par
}
{\xe \v readOfm\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readOfm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readOfm ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAXV}
{\bkmkend AAAAAAAAXV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readPcd\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readPcd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readPcd ({\b EmbPattern} *  {\i pattern}, const char *  {\i fileName}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAXW}
{\bkmkend AAAAAAAAXW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readPcm\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readPcm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readPcm ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAXX}
{\bkmkend AAAAAAAAXX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readPcq\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readPcq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readPcq ({\b EmbPattern} *  {\i pattern}, const char *  {\i fileName}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAXY}
{\bkmkend AAAAAAAAXY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readPcs\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readPcs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readPcs ({\b EmbPattern} *  {\i pattern}, const char *  {\i fileName}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAXZ}
{\bkmkend AAAAAAAAXZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readPec\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readPec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readPec ({\b EmbPattern} *  {\i pattern}, const char *  {\i fileName}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAYA}
{\bkmkend AAAAAAAAYA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readPecStitches\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readPecStitches}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void readPecStitches ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAYB}
{\bkmkend AAAAAAAAYB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readPel\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readPel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readPel ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAYC}
{\bkmkend AAAAAAAAYC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readPem\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readPem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readPem ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAYD}
{\bkmkend AAAAAAAAYD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readPes\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readPes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readPes ({\b EmbPattern} *  {\i pattern}, const char *  {\i fileName}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAYE}
{\bkmkend AAAAAAAAYE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readPESHeaderV10\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readPESHeaderV10}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void readPESHeaderV10 (FILE *  {\i file}, {\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAAAYF}
{\bkmkend AAAAAAAAYF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readPESHeaderV5\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readPESHeaderV5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void readPESHeaderV5 (FILE *  {\i file}, {\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAAAYG}
{\bkmkend AAAAAAAAYG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readPESHeaderV6\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readPESHeaderV6}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void readPESHeaderV6 (FILE *  {\i file}, {\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAAAYH}
{\bkmkend AAAAAAAAYH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readPESHeaderV7\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readPESHeaderV7}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void readPESHeaderV7 (FILE *  {\i file}, {\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAAAYI}
{\bkmkend AAAAAAAAYI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readPESHeaderV8\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readPESHeaderV8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void readPESHeaderV8 (FILE *  {\i file}, {\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAAAYJ}
{\bkmkend AAAAAAAAYJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readPESHeaderV9\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readPESHeaderV9}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void readPESHeaderV9 (FILE *  {\i file}, {\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAAAYK}
{\bkmkend AAAAAAAAYK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readPhb\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readPhb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readPhb ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAYL}
{\bkmkend AAAAAAAAYL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readPhc\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readPhc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readPhc ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAYM}
{\bkmkend AAAAAAAAYM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readPlt\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readPlt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readPlt ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAYN}
{\bkmkend AAAAAAAAYN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readProgrammableFills\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readProgrammableFills}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void readProgrammableFills (FILE *  {\i file}, {\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAAAYO}
{\bkmkend AAAAAAAAYO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readRgb\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readRgb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readRgb ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAYP}
{\bkmkend AAAAAAAAYP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readSew\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readSew}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readSew ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAYQ}
{\bkmkend AAAAAAAAYQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readShv\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readShv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readShv ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAYR}
{\bkmkend AAAAAAAAYR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readSst\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readSst}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readSst ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAYS}
{\bkmkend AAAAAAAAYS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readStx\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readStx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readStx ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAYT}
{\bkmkend AAAAAAAAYT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readSvg\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readSvg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readSvg ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAYU}
{\bkmkend AAAAAAAAYU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readT01\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readT01}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readT01 ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAYV}
{\bkmkend AAAAAAAAYV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readT09\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readT09}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readT09 ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAYW}
{\bkmkend AAAAAAAAYW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readTap\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readTap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readTap ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAYX}
{\bkmkend AAAAAAAAYX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readThr\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readThr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readThr ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAYY}
{\bkmkend AAAAAAAAYY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readThreads\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readThreads}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void readThreads (FILE *  {\i file}, {\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAAAYZ}
{\bkmkend AAAAAAAAYZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readTxt\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readTxt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readTxt ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAZA}
{\bkmkend AAAAAAAAZA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readU00\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readU00}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readU00 ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAZB}
{\bkmkend AAAAAAAAZB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readU01\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readU01}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readU01 ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAZC}
{\bkmkend AAAAAAAAZC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readVip\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readVip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readVip ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAZD}
{\bkmkend AAAAAAAAZD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readVp3\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readVp3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readVp3 ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAZE}
{\bkmkend AAAAAAAAZE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readXxx\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readXxx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readXxx ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAZF}
{\bkmkend AAAAAAAAZF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v readZsk\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:readZsk}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char readZsk ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAZG}
{\bkmkend AAAAAAAAZG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v safe_free\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:safe_free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void safe_free (void *  {\i data})}}
\par
{\bkmkstart AAAAAAAAZH}
{\bkmkend AAAAAAAAZH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 129} of file {\b formats.c}.}\par
}
{\xe \v stringInArray\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:stringInArray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int stringInArray (const char *  {\i s}, const char **  {\i array})}}
\par
{\bkmkstart AAAAAAAAZI}
{\bkmkend AAAAAAAAZI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tests for the presence of a string {\i s}  in the supplied {\i array} .\par
The end of the array is marked by an empty string.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0 if not present 1 if present. \par
}}}{
Definition at line {\b 797} of file {\b main.c}.}\par
}
{\xe \v testEmbCircle\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:testEmbCircle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int testEmbCircle (void )}}
\par
{\bkmkstart AAAAAAAAZJ}
{\bkmkend AAAAAAAAZJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v testEmbCircle_2\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:testEmbCircle_2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int testEmbCircle_2 (void )}}
\par
{\bkmkstart AAAAAAAAZK}
{\bkmkend AAAAAAAAZK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v testEmbFormat\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:testEmbFormat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int testEmbFormat (void )}}
\par
{\bkmkstart AAAAAAAAZL}
{\bkmkend AAAAAAAAZL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v testGeomArc\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:testGeomArc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int testGeomArc (void )}}
\par
{\bkmkstart AAAAAAAAZM}
{\bkmkend AAAAAAAAZM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v testTangentPoints\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:testTangentPoints}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void testTangentPoints ({\b EmbCircle}  {\i c}, {\b EmbVector}  {\i p}, {\b EmbVector} *  {\i t0}, {\b EmbVector} *  {\i t1})}}
\par
{\bkmkstart AAAAAAAAZN}
{\bkmkend AAAAAAAAZN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v testThreadColor\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:testThreadColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int testThreadColor (void )}}
\par
{\bkmkstart AAAAAAAAZO}
{\bkmkend AAAAAAAAZO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write100\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:write100}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char write100 ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAZP}
{\bkmkend AAAAAAAAZP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write10o\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:write10o}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char write10o ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAZQ}
{\bkmkend AAAAAAAAZQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v write_24bit\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:write_24bit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void write_24bit (FILE *  {\i file}, int  {\i x})}}
\par
{\bkmkstart AAAAAAAAZR}
{\bkmkend AAAAAAAAZR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 660} of file {\b main.c}.}\par
}
{\xe \v writeArt\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeArt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeArt ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAZS}
{\bkmkend AAAAAAAAZS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeBmc\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeBmc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeBmc ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAZT}
{\bkmkend AAAAAAAAZT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeBro\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeBro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeBro ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAZU}
{\bkmkend AAAAAAAAZU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeCnd\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeCnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeCnd ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAZV}
{\bkmkend AAAAAAAAZV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeCol\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeCol}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeCol ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAZW}
{\bkmkend AAAAAAAAZW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeCsd\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeCsd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeCsd ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAZX}
{\bkmkend AAAAAAAAZX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeCsv\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeCsv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeCsv ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAZY}
{\bkmkend AAAAAAAAZY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeDat\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeDat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeDat ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAAAZZ}
{\bkmkend AAAAAAAAZZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeDem\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeDem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeDem ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABAA}
{\bkmkend AAAAAAABAA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeDsb\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeDsb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeDsb ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABAB}
{\bkmkend AAAAAAABAB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeDst\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeDst}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeDst ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABAC}
{\bkmkend AAAAAAABAC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeDsz\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeDsz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeDsz ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABAD}
{\bkmkend AAAAAAABAD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeDxf\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeDxf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeDxf ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABAE}
{\bkmkend AAAAAAABAE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeEdr\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeEdr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeEdr ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABAF}
{\bkmkend AAAAAAABAF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeEmd\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeEmd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeEmd ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABAG}
{\bkmkend AAAAAAABAG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeExp\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeExp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeExp ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABAH}
{\bkmkend AAAAAAABAH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeExy\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeExy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeExy ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABAI}
{\bkmkend AAAAAAABAI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeEys\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeEys}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeEys ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABAJ}
{\bkmkend AAAAAAABAJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeFxy\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeFxy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeFxy ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABAK}
{\bkmkend AAAAAAABAK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeGc\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeGc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeGc ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABAL}
{\bkmkend AAAAAAABAL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeGnc\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeGnc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeGnc ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABAM}
{\bkmkend AAAAAAABAM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeGt\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeGt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeGt ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABAN}
{\bkmkend AAAAAAABAN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeHus\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeHus}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeHus ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABAO}
{\bkmkend AAAAAAABAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeInb\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeInb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeInb ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABAP}
{\bkmkend AAAAAAABAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeInf\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeInf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeInf ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABAQ}
{\bkmkend AAAAAAABAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeJef\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeJef}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeJef ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABAR}
{\bkmkend AAAAAAABAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeKsm\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeKsm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeKsm ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABAS}
{\bkmkend AAAAAAABAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeMax\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeMax}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeMax ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABAT}
{\bkmkend AAAAAAABAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeMit\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeMit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeMit ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABAU}
{\bkmkend AAAAAAABAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeNew\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeNew}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeNew ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABAV}
{\bkmkend AAAAAAABAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeOfm\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeOfm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeOfm ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABAW}
{\bkmkend AAAAAAABAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writePcd\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writePcd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writePcd ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABAX}
{\bkmkend AAAAAAABAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writePcm\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writePcm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writePcm ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABAY}
{\bkmkend AAAAAAABAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writePcq\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writePcq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writePcq ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABAZ}
{\bkmkend AAAAAAABAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writePcs\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writePcs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writePcs ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABBA}
{\bkmkend AAAAAAABBA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writePec\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writePec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writePec ({\b EmbPattern} *  {\i pattern}, const char *  {\i fileName}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABBB}
{\bkmkend AAAAAAABBB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writePecStitches\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writePecStitches}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void writePecStitches ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file}, const char *  {\i filename})}}
\par
{\bkmkstart AAAAAAABBC}
{\bkmkend AAAAAAABBC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writePel\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writePel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writePel ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABBD}
{\bkmkend AAAAAAABBD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writePem\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writePem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writePem ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABBE}
{\bkmkend AAAAAAABBE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writePes\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writePes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writePes ({\b EmbPattern} *  {\i pattern}, const char *  {\i fileName}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABBF}
{\bkmkend AAAAAAABBF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writePhb\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writePhb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writePhb ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABBG}
{\bkmkend AAAAAAABBG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writePhc\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writePhc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writePhc ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABBH}
{\bkmkend AAAAAAABBH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writePlt\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writePlt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writePlt ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABBI}
{\bkmkend AAAAAAABBI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeRgb\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeRgb}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeRgb ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABBJ}
{\bkmkend AAAAAAABBJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeSew\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeSew}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeSew ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABBK}
{\bkmkend AAAAAAABBK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeShv\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeShv}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeShv ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABBL}
{\bkmkend AAAAAAABBL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeSst\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeSst}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeSst ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABBM}
{\bkmkend AAAAAAABBM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeStx\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeStx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeStx ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABBN}
{\bkmkend AAAAAAABBN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeSvg\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeSvg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeSvg ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABBO}
{\bkmkend AAAAAAABBO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeT01\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeT01}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeT01 ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABBP}
{\bkmkend AAAAAAABBP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeT09\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeT09}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeT09 ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABBQ}
{\bkmkend AAAAAAABBQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeTap\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeTap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeTap ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABBR}
{\bkmkend AAAAAAABBR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeThr\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeThr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeThr ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABBS}
{\bkmkend AAAAAAABBS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeTxt\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeTxt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeTxt ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABBT}
{\bkmkend AAAAAAABBT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeU00\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeU00}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeU00 ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABBU}
{\bkmkend AAAAAAABBU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeU01\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeU01}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeU01 ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABBV}
{\bkmkend AAAAAAABBV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeVip\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeVip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeVip ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABBW}
{\bkmkend AAAAAAABBW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeVp3\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeVp3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeVp3 ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABBX}
{\bkmkend AAAAAAABBX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeXxx\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeXxx}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeXxx ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABBY}
{\bkmkend AAAAAAABBY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v writeZsk\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:writeZsk}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char writeZsk ({\b EmbPattern} *  {\i pattern}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABBZ}
{\bkmkend AAAAAAABBZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v imageWithFrame\:embroidery_internal.h}
{\xe \v embroidery_internal.h\:imageWithFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char imageWithFrame[38][48]{\f2 [extern]}}}
\par
{\bkmkstart AAAAAAABCA}
{\bkmkend AAAAAAABCA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 87} of file {\b formats.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
embroidery_internal.h\par \pard\plain 
{\tc\tcl2 \v src/embroidery_internal.h}
{\xe \v src/embroidery_internal.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef LIBEMBROIDERY_INTERNAL_HEADER__}\par
00002 {\cf21 #define LIBEMBROIDERY_INTERNAL_HEADER__}\par
00003 \par
00004 {\cf21 #include "embroidery.h"}\par
00005 \par
00006 {\cf20 /* For FILE * */}\par
00007 {\cf21 #include <stdio.h>}\par
00008 \par
00012 {\cf21 #define CompoundFileSector_MaxRegSector 0xFFFFFFFA}\par
00013 {\cf21 #define CompoundFileSector_DIFAT_Sector 0xFFFFFFFC}\par
00014 {\cf21 #define CompoundFileSector_FAT_Sector   0xFFFFFFFD}\par
00015 {\cf21 #define CompoundFileSector_EndOfChain   0xFFFFFFFE}\par
00016 {\cf21 #define CompoundFileSector_FreeSector   0xFFFFFFFF}\par
00017 \par
00021 {\cf21 #define ObjectTypeUnknown   0x00 }\par
00022 {\cf21 #define ObjectTypeStorage   0x01 }\par
00023 {\cf21 #define ObjectTypeStream    0x02 }\par
00024 {\cf21 #define ObjectTypeRootEntry 0x05 }\par
00029 {\cf21 #define CompoundFileStreamId_MaxRegularStreamId 0xFFFFFFFA }\par
00030 {\cf21 #define CompoundFileStreamId_NoStream           0xFFFFFFFF }\par
00032 {\cf21 #define ELEMENT_XML              0}\par
00033 {\cf21 #define ELEMENT_A                1}\par
00034 {\cf21 #define ELEMENT_ANIMATE          2}\par
00035 {\cf21 #define ELEMENT_ANIMATECOLOR     3}\par
00036 {\cf21 #define ELEMENT_ANIMATEMOTION    4}\par
00037 {\cf21 #define ELEMENT_ANIMATETRANSFORM 5}\par
00038 {\cf21 #define ELEMENT_ANIMATION        6}\par
00039 {\cf21 #define ELEMENT_AUDIO            7}\par
00040 {\cf21 #define ELEMENT_CIRCLE           8}\par
00041 {\cf21 #define ELEMENT_DEFS             9}\par
00042 {\cf21 #define ELEMENT_DESC            10}\par
00043 {\cf21 #define ELEMENT_DISCARD         11}\par
00044 {\cf21 #define ELEMENT_ELLIPSE         12}\par
00045 {\cf21 #define ELEMENT_FONT            13}\par
00046 {\cf21 #define ELEMENT_FONT_FACE       14}\par
00047 {\cf21 #define ELEMENT_FONT_FACE_SRC   15}\par
00048 {\cf21 #define ELEMENT_FONT_FACE_URI   16}\par
00049 {\cf21 #define ELEMENT_FOREIGN_OBJECT  17}\par
00050 {\cf21 #define ELEMENT_G               18}\par
00051 {\cf21 #define ELEMENT_GLYPH           19}\par
00052 {\cf21 #define ELEMENT_HANDLER         20}\par
00053 {\cf21 #define ELEMENT_HKERN           21}\par
00054 {\cf21 #define ELEMENT_IMAGE           22}\par
00055 {\cf21 #define ELEMENT_LINE            23}\par
00056 {\cf21 #define ELEMENT_LINEAR_GRADIENT 24}\par
00057 {\cf21 #define ELEMENT_LISTENER        25}\par
00058 {\cf21 #define ELEMENT_METADATA        26}\par
00059 {\cf21 #define ELEMENT_MISSING_GLYPH   27}\par
00060 {\cf21 #define ELEMENT_MPATH           28}\par
00061 {\cf21 #define ELEMENT_PATH            29}\par
00062 {\cf21 #define ELEMENT_POLYGON         30}\par
00063 {\cf21 #define ELEMENT_POLYLINE        31}\par
00064 {\cf21 #define ELEMENT_PREFETCH        32}\par
00065 {\cf21 #define ELEMENT_RADIAL_GRADIENT 33}\par
00066 {\cf21 #define ELEMENT_RECT            34}\par
00067 {\cf21 #define ELEMENT_SCRIPT          35}\par
00068 {\cf21 #define ELEMENT_SET             36}\par
00069 {\cf21 #define ELEMENT_SOLID_COLOR     37}\par
00070 {\cf21 #define ELEMENT_STOP            38}\par
00071 {\cf21 #define ELEMENT_SVG             39}\par
00072 {\cf21 #define ELEMENT_SWITCH          40}\par
00073 {\cf21 #define ELEMENT_TBREAK          41}\par
00074 {\cf21 #define ELEMENT_TEXT            42}\par
00075 {\cf21 #define ELEMENT_TEXT_AREA       43}\par
00076 {\cf21 #define ELEMENT_TITLE           44}\par
00077 {\cf21 #define ELEMENT_TSPAN           45}\par
00078 {\cf21 #define ELEMENT_USE             46}\par
00079 {\cf21 #define ELEMENT_VIDEO           47}\par
00080 \par
00081 {\cf20 /* INTERNAL DEFINES */}\par
00082 {\cf21 #define RED_TERM_COLOR      "\\x1B[0;31m"}\par
00083 {\cf21 #define GREEN_TERM_COLOR    "\\x1B[0;32m"}\par
00084 {\cf21 #define YELLOW_TERM_COLOR   "\\x1B[1;33m"}\par
00085 {\cf21 #define RESET_TERM_COLOR       "\\033[0m"}\par
00086 \par
00087 {\cf21 #define HOOP_126X110                  0}\par
00088 {\cf21 #define HOOP_110X110                  1}\par
00089 {\cf21 #define HOOP_50X50                    2}\par
00090 {\cf21 #define HOOP_140X200                  3}\par
00091 {\cf21 #define HOOP_230X200                  4}\par
00092 \par
00093 {\cf21 #define EMB_MIN(A, B) (((A) < (B)) ? (A) : (B))}\par
00094 {\cf21 #define EMB_MAX(A, B) (((A) > (B)) ? (A) : (B))}\par
00095 \par
00096 {\cf20 /* Libembroidery's handling of integer types.}\par
00097 {\cf20  */}\par
00098 {\cf21 #define EMB_BIG_ENDIAN                          0}\par
00099 {\cf21 #define EMB_LITTLE_ENDIAN                       1}\par
00100 \par
00101 {\cf21 #define ENDIAN_HOST                             EMB_LITTLE_ENDIAN}\par
00102 \par
00103 {\cf21 #define EMB_INT16_BIG                           2}\par
00104 {\cf21 #define EMB_INT16_LITTLE                        3}\par
00105 {\cf21 #define EMB_INT32_BIG                           4}\par
00106 {\cf21 #define EMB_INT32_LITTLE                        5}\par
00107 \par
00108 {\cf21 #define PES0001         0}\par
00109 {\cf21 #define PES0020         1}\par
00110 {\cf21 #define PES0022         2}\par
00111 {\cf21 #define PES0030         3}\par
00112 {\cf21 #define PES0040         4}\par
00113 {\cf21 #define PES0050         5}\par
00114 {\cf21 #define PES0055         6}\par
00115 {\cf21 #define PES0056         7}\par
00116 {\cf21 #define PES0060         8}\par
00117 {\cf21 #define PES0070         9}\par
00118 {\cf21 #define PES0080        10}\par
00119 {\cf21 #define PES0090        11}\par
00120 {\cf21 #define PES0100        12}\par
00121 {\cf21 #define N_PES_VERSIONS 13}\par
00122 \par
00123 {\cf20 /* DXF Version Identifiers */}\par
00124 {\cf21 #define DXF_VERSION_R10 "AC1006"}\par
00125 {\cf21 #define DXF_VERSION_R11 "AC1009"}\par
00126 {\cf21 #define DXF_VERSION_R12 "AC1009"}\par
00127 {\cf21 #define DXF_VERSION_R13 "AC1012"}\par
00128 {\cf21 #define DXF_VERSION_R14 "AC1014"}\par
00129 {\cf21 #define DXF_VERSION_R15 "AC1015"}\par
00130 {\cf21 #define DXF_VERSION_R18 "AC1018"}\par
00131 {\cf21 #define DXF_VERSION_R21 "AC1021"}\par
00132 {\cf21 #define DXF_VERSION_R24 "AC1024"}\par
00133 {\cf21 #define DXF_VERSION_R27 "AC1027"}\par
00134 \par
00135 {\cf21 #define DXF_VERSION_2000 "AC1015"}\par
00136 {\cf21 #define DXF_VERSION_2002 "AC1015"}\par
00137 {\cf21 #define DXF_VERSION_2004 "AC1018"}\par
00138 {\cf21 #define DXF_VERSION_2006 "AC1018"}\par
00139 {\cf21 #define DXF_VERSION_2007 "AC1021"}\par
00140 {\cf21 #define DXF_VERSION_2009 "AC1021"}\par
00141 {\cf21 #define DXF_VERSION_2010 "AC1024"}\par
00142 {\cf21 #define DXF_VERSION_2013 "AC1027"}\par
00143 \par
00144 {\cf21 #define SVG_CREATOR_NULL              0}\par
00145 {\cf21 #define SVG_CREATOR_EMBROIDERMODDER   1}\par
00146 {\cf21 #define SVG_CREATOR_ILLUSTRATOR       2}\par
00147 {\cf21 #define SVG_CREATOR_INKSCAPE          3}\par
00148 \par
00149 {\cf21 #define SVG_EXPECT_NULL               0}\par
00150 {\cf21 #define SVG_EXPECT_ELEMENT            1}\par
00151 {\cf21 #define SVG_EXPECT_ATTRIBUTE          2}\par
00152 {\cf21 #define SVG_EXPECT_VALUE              3}\par
00153 \par
00154 {\cf20 /*  SVG_TYPES}\par
00155 {\cf20  *  ---------}\par
00156 {\cf20  */}\par
00157 {\cf21 #define SVG_NULL                      0}\par
00158 {\cf21 #define SVG_ELEMENT                   1}\par
00159 {\cf21 #define SVG_PROPERTY                  2}\par
00160 {\cf21 #define SVG_MEDIA_PROPERTY            3}\par
00161 {\cf21 #define SVG_ATTRIBUTE                 4}\par
00162 {\cf21 #define SVG_CATCH_ALL                 5}\par
00163 \par
00164 {\cf20 /* path flag codes */}\par
00165 {\cf21 #define LINETO             0}\par
00166 {\cf21 #define MOVETO             1}\par
00167 {\cf21 #define BULGETOCONTROL     2}\par
00168 {\cf21 #define BULGETOEND         4}\par
00169 {\cf21 #define ELLIPSETORAD       8}\par
00170 {\cf21 #define ELLIPSETOEND      16}\par
00171 {\cf21 #define CUBICTOCONTROL1   32}\par
00172 {\cf21 #define CUBICTOCONTROL2   64}\par
00173 {\cf21 #define CUBICTOEND       128}\par
00174 {\cf21 #define QUADTOCONTROL    256}\par
00175 {\cf21 #define QUADTOEND        512}\par
00176 \par
00177 {\cf20 /* STRUCTS}\par
00178 {\cf20  *******************************************************************/}\par
00179 \par
00180 {\cf20 /* double-indirection file allocation table references */}\par
00181 {\cf17 typedef} {\cf17 struct }_bcf_file_difat\par
00182 \{\par
00183     {\cf18 unsigned} {\cf18 int} fatSectorCount;\par
00184     {\cf18 unsigned} {\cf18 int} fatSectorEntries[109];\par
00185     {\cf18 unsigned} {\cf18 int} sectorSize;\par
00186 \} bcf_file_difat;\par
00187 \par
00188 {\cf17 typedef} {\cf17 struct }_bcf_file_fat\par
00189 \{\par
00190     {\cf18 int}          fatEntryCount;\par
00191     {\cf18 unsigned} {\cf18 int} fatEntries[255]; {\cf20 /* maybe make this dynamic */}\par
00192     {\cf18 unsigned} {\cf18 int} numberOfEntriesInFatSector;\par
00193 \} bcf_file_fat;\par
00194 \par
00195 {\cf17 typedef} {\cf17 struct }_bcf_directory_entry\par
00196 \{\par
00197     {\cf18 char}                         directoryEntryName[32];\par
00198     {\cf18 unsigned} {\cf18 short}               directoryEntryNameLength;\par
00199     {\cf18 unsigned} {\cf18 char}                objectType;\par
00200     {\cf18 unsigned} {\cf18 char}                colorFlag;\par
00201     {\cf18 unsigned} {\cf18 int}                 leftSiblingId;\par
00202     {\cf18 unsigned} {\cf18 int}                 rightSiblingId;\par
00203     {\cf18 unsigned} {\cf18 int}                 childId;\par
00204     {\cf18 unsigned} {\cf18 char}                CLSID[16];\par
00205     {\cf18 unsigned} {\cf18 int}                 stateBits;\par
00206     EmbTime                      creationTime;\par
00207     EmbTime                      modifiedTime;\par
00208     {\cf18 unsigned} {\cf18 int}                 startingSectorLocation;\par
00209     {\cf18 unsigned} {\cf18 long}                streamSize; {\cf20 /* should be long long but in our case we shouldn't need it, and hard to support on c89 cross platform */}\par
00210     {\cf18 unsigned} {\cf18 int}                 streamSizeHigh; {\cf20 /* store the high int of streamsize */}\par
00211     {\cf17 struct }_bcf_directory_entry* next;\par
00212 \} bcf_directory_entry;\par
00213 \par
00214 {\cf17 typedef} {\cf17 struct }_bcf_directory\par
00215 \{\par
00216     bcf_directory_entry* dirEntries;\par
00217     {\cf18 unsigned} {\cf18 int}         maxNumberOfDirectoryEntries;\par
00218     {\cf20 /* TODO: possibly add a directory tree in the future */}\par
00219 \par
00220 \} bcf_directory;\par
00221 \par
00222 {\cf17 typedef} {\cf17 struct }_bcf_file_header\par
00223 \{\par
00224     {\cf18 unsigned} {\cf18 char}  signature[8];\par
00225     {\cf18 unsigned} {\cf18 char}  CLSID[16]; {\cf20 /* TODO: this should be a separate type */}\par
00226     {\cf18 unsigned} {\cf18 short} minorVersion;\par
00227     {\cf18 unsigned} {\cf18 short} majorVersion;\par
00228     {\cf18 unsigned} {\cf18 short} byteOrder;\par
00229     {\cf18 unsigned} {\cf18 short} sectorShift;\par
00230     {\cf18 unsigned} {\cf18 short} miniSectorShift;\par
00231     {\cf18 unsigned} {\cf18 short} reserved1;\par
00232     {\cf18 unsigned} {\cf18 int}   reserved2;\par
00233     {\cf18 unsigned} {\cf18 int}   numberOfDirectorySectors;\par
00234     {\cf18 unsigned} {\cf18 int}   numberOfFATSectors;\par
00235     {\cf18 unsigned} {\cf18 int}   firstDirectorySectorLocation;\par
00236     {\cf18 unsigned} {\cf18 int}   transactionSignatureNumber;\par
00237     {\cf18 unsigned} {\cf18 int}   miniStreamCutoffSize;\par
00238     {\cf18 unsigned} {\cf18 int}   firstMiniFATSectorLocation;\par
00239     {\cf18 unsigned} {\cf18 int}   numberOfMiniFatSectors;\par
00240     {\cf18 unsigned} {\cf18 int}   firstDifatSectorLocation;\par
00241     {\cf18 unsigned} {\cf18 int}   numberOfDifatSectors;\par
00242 \} bcf_file_header;\par
00243 \par
00244 {\cf17 typedef} {\cf17 struct }_bcf_file\par
00245 \{\par
00246     bcf_file_header header;   \par
00247     bcf_file_difat* difat;    \par
00248     bcf_file_fat* fat;        \par
00249     bcf_directory* directory; \par
00250 \} bcf_file;\par
00251 \par
00252 {\cf17 typedef} {\cf17 struct }_vp3Hoop\par
00253 \{\par
00254     {\cf18 int} right;\par
00255     {\cf18 int} bottom;\par
00256     {\cf18 int} left;\par
00257     {\cf18 int} top;\par
00258     {\cf18 int} threadLength;\par
00259     {\cf18 char} unknown2;\par
00260     {\cf18 unsigned} {\cf18 char} numberOfColors;\par
00261     {\cf18 unsigned} {\cf18 short} unknown3;\par
00262     {\cf18 int} unknown4;\par
00263     {\cf18 int} numberOfBytesRemaining;\par
00264 \par
00265     {\cf18 int} xOffset;\par
00266     {\cf18 int} yOffset;\par
00267 \par
00268     {\cf18 unsigned} {\cf18 char} byte1;\par
00269     {\cf18 unsigned} {\cf18 char} byte2;\par
00270     {\cf18 unsigned} {\cf18 char} byte3;\par
00271 \par
00272     {\cf20 /* Centered hoop dimensions */}\par
00273     {\cf18 int} right2;\par
00274     {\cf18 int} left2;\par
00275     {\cf18 int} bottom2;\par
00276     {\cf18 int} top2;\par
00277 \par
00278     {\cf18 int} width;\par
00279     {\cf18 int} height;\par
00280 \} vp3Hoop;\par
00281 \par
00282 {\cf17 typedef} {\cf17 struct }ThredHeader_     {\cf20 /* thred file header */}\par
00283 \{\par
00284     {\cf18 unsigned} {\cf18 int} sigVersion;    {\cf20 /* signature and version */}\par
00285     {\cf18 unsigned} {\cf18 int} length;        {\cf20 /* length of ThredHeader + length of stitch data */}\par
00286     {\cf18 unsigned} {\cf18 short} numStiches;  {\cf20 /* number of stitches */}\par
00287     {\cf18 unsigned} {\cf18 short} hoopSize;    {\cf20 /* size of hoop */}\par
00288     {\cf18 unsigned} {\cf18 short} reserved[7]; {\cf20 /* reserved for expansion */}\par
00289 \} ThredHeader;\par
00290 \par
00291 {\cf17 typedef} {\cf17 struct }ThredExtension_  {\cf20 /* thred v1.0 file header extension */}\par
00292 \{\par
00293     {\cf18 float} hoopX;                {\cf20 /* hoop size x dimension in 1/6 mm units */}\par
00294     {\cf18 float} hoopY;                {\cf20 /* hoop size y dimension in 1/6 mm units */}\par
00295     {\cf18 float} stitchGranularity;    {\cf20 /* stitches per millimeter--not implemented */}\par
00296     {\cf18 char} creatorName[50];       {\cf20 /* name of the file creator */}\par
00297     {\cf18 char} modifierName[50];      {\cf20 /* name of last file modifier */}\par
00298     {\cf18 char} auxFormat;             {\cf20 /* auxiliary file format, 0=PCS,1=DST,2=PES */}\par
00299     {\cf18 char} reserved[31];          {\cf20 /* reserved for expansion */}\par
00300 \} ThredExtension;\par
00301 \par
00302 {\cf17 typedef} {\cf17 struct }SubDescriptor_\par
00303 \{\par
00304     {\cf18 int} someNum;      {\cf20 /* TODO: better variable naming */}\par
00305     {\cf18 int} someInt;      {\cf20 /* TODO: better variable naming */}\par
00306     {\cf18 int} someOtherInt; {\cf20 /* TODO: better variable naming */}\par
00307     {\cf18 char}* colorCode;\par
00308     {\cf18 char}* colorName;\par
00309 \} SubDescriptor;\par
00310 \par
00311 {\cf17 typedef} {\cf17 struct }StxThread_\par
00312 \{\par
00313     {\cf18 char}* colorCode;\par
00314     {\cf18 char}* colorName;\par
00315     {\cf18 char}* sectionName;\par
00316     SubDescriptor* subDescriptors;\par
00317     EmbColor stxColor;\par
00318 \} StxThread;\par
00319 \par
00320 {\cf17 typedef} {\cf17 struct }VipHeader_ \{\par
00321     {\cf18 int} magicCode;\par
00322     {\cf18 int} numberOfStitches;\par
00323     {\cf18 int} numberOfColors;\par
00324     {\cf18 short} postitiveXHoopSize;\par
00325     {\cf18 short} postitiveYHoopSize;\par
00326     {\cf18 short} negativeXHoopSize;\par
00327     {\cf18 short} negativeYHoopSize;\par
00328     {\cf18 int} attributeOffset;\par
00329     {\cf18 int} xOffset;\par
00330     {\cf18 int} yOffset;\par
00331     {\cf18 unsigned} {\cf18 char} stringVal[8];\par
00332     {\cf18 short} unknown;\par
00333     {\cf18 int} colorLength;\par
00334 \} VipHeader;\par
00335 \par
00336 {\cf17 typedef} {\cf17 enum}\par
00337 \{\par
00338     CSV_EXPECT_NULL,\par
00339     CSV_EXPECT_QUOTE1,\par
00340     CSV_EXPECT_QUOTE2,\par
00341     CSV_EXPECT_COMMA\par
00342 \} CSV_EXPECT;\par
00343 \par
00344 {\cf17 typedef} {\cf17 enum}\par
00345 \{\par
00346     CSV_MODE_NULL,\par
00347     CSV_MODE_COMMENT,\par
00348     CSV_MODE_VARIABLE,\par
00349     CSV_MODE_THREAD,\par
00350     CSV_MODE_STITCH\par
00351 \} CSV_MODE;\par
00352 \par
00353 {\cf17 typedef} {\cf17 struct }SvgAttribute_\par
00354 \{\par
00355     {\cf18 char}* name;\par
00356     {\cf18 char}* value;\par
00357 \} SvgAttribute;\par
00358 \par
00359 {\cf17 typedef} {\cf17 struct }Huffman \{\par
00360     {\cf18 int} default_value;\par
00361     {\cf18 int} lengths[1000];\par
00362     {\cf18 int} nlengths;\par
00363     {\cf18 int} table[1000];\par
00364     {\cf18 int} table_width;\par
00365     {\cf18 int} ntable;\par
00366 \} huffman;\par
00367 \par
00368 {\cf17 typedef} {\cf17 struct }Compress \{\par
00369     {\cf18 int} bit_position;\par
00370     {\cf18 char} *input_data;\par
00371     {\cf18 int} input_length;\par
00372     {\cf18 int} bits_total;\par
00373     {\cf18 int} block_elements;\par
00374     huffman character_length_huffman;\par
00375     huffman character_huffman;\par
00376     huffman distance_huffman;\par
00377 \} compress;\par
00378 \par
00379 {\cf20 /* Function Declarations}\par
00380 {\cf20 *****************************************************************************/}\par
00381 {\cf18 void} huffman_build_table(huffman *h);\par
00382 {\cf18 int} *huffman_table_lookup(huffman *h, {\cf18 int} byte_lookup, {\cf18 int} *lengths);\par
00383 \par
00384 {\cf18 int} compress_get_bits(compress *c, {\cf18 int} length);\par
00385 {\cf18 int} compress_pop(compress *c, {\cf18 int} bit_count);\par
00386 {\cf18 int} compress_read_variable_length(compress *c);\par
00387 {\cf18 void} compress_load_character_length_huffman(compress *c);\par
00388 {\cf18 void} compress_load_character_huffman(compress *c);\par
00389 {\cf18 void} compress_load_distance_huffman(compress *c);\par
00390 {\cf18 void} compress_load_block(compress *c);\par
00391 {\cf18 int} compress_get_token(compress *c);\par
00392 {\cf18 int} compress_get_position(compress *c);\par
00393 \par
00394 {\cf18 void} readPecStitches(EmbPattern* pattern, FILE* file);\par
00395 {\cf18 void} writePecStitches(EmbPattern* pattern, FILE* file, {\cf17 const} {\cf18 char}* filename);\par
00396 \par
00397 {\cf18 int} decodeNewStitch({\cf18 unsigned} {\cf18 char} value);\par
00398 \par
00399 {\cf18 void} pfaffEncode(FILE* file, {\cf18 int} x, {\cf18 int} y, {\cf18 int} flags);\par
00400 EmbReal pfaffDecode({\cf18 unsigned} {\cf18 char} a1, {\cf18 unsigned} {\cf18 char} a2, {\cf18 unsigned} {\cf18 char} a3);\par
00401 \par
00402 {\cf18 unsigned} {\cf18 char} mitEncodeStitch(EmbReal value);\par
00403 {\cf18 int} mitDecodeStitch({\cf18 unsigned} {\cf18 char} value);\par
00404 \par
00405 {\cf18 int} encode_tajima_ternary({\cf18 unsigned} {\cf18 char} b[3], {\cf18 int} x, {\cf18 int} y);\par
00406 {\cf18 void} decode_tajima_ternary({\cf18 unsigned} {\cf18 char} b[3], {\cf18 int} *x, {\cf18 int} *y);\par
00407 \par
00408 {\cf18 void} encode_t01_record({\cf18 unsigned} {\cf18 char} b[3], {\cf18 int} x, {\cf18 int} y, {\cf18 int} flags);\par
00409 {\cf18 int} decode_t01_record({\cf18 unsigned} {\cf18 char} b[3], {\cf18 int} *x, {\cf18 int} *y, {\cf18 int} *flags);\par
00410 {\cf18 void} readPESHeaderV5(FILE* file, EmbPattern* pattern);\par
00411 {\cf18 void} readPESHeaderV6(FILE* file, EmbPattern* pattern);\par
00412 {\cf18 void} readPESHeaderV7(FILE* file, EmbPattern* pattern);\par
00413 {\cf18 void} readPESHeaderV8(FILE* file, EmbPattern* pattern);\par
00414 {\cf18 void} readPESHeaderV9(FILE* file, EmbPattern* pattern);\par
00415 {\cf18 void} readPESHeaderV10(FILE* file, EmbPattern* pattern);\par
00416 \par
00417 {\cf18 void} readDescriptions(FILE* file, EmbPattern* pattern);\par
00418 {\cf18 void} readHoopName(FILE* file, EmbPattern* pattern);\par
00419 {\cf18 void} readImageString(FILE* file, EmbPattern* pattern);\par
00420 {\cf18 void} readProgrammableFills(FILE* file, EmbPattern* pattern);\par
00421 {\cf18 void} readMotifPatterns(FILE* file, EmbPattern* pattern);\par
00422 {\cf18 void} readFeatherPatterns(FILE* file, EmbPattern* pattern);\par
00423 {\cf18 void} readThreads(FILE* file, EmbPattern* pattern);\par
00424 \par
00425 {\cf18 void} embInt_read(FILE* f, {\cf18 char} *label, {\cf18 void} *b, {\cf18 int} mode);\par
00426 {\cf18 void} embInt_write(FILE* f, {\cf18 char} *label, {\cf18 void} *b, {\cf18 int} mode);\par
00427 {\cf18 int} emb_readline(FILE* file, {\cf18 char} *line, {\cf18 int} maxLength);\par
00428 \par
00429 {\cf18 int} bcfFile_read(FILE* file, bcf_file* bcfFile);\par
00430 FILE* GetFile(bcf_file* bcfFile, FILE* file, {\cf18 char}* fileToFind);\par
00431 {\cf18 void} bcf_file_free(bcf_file* bcfFile);\par
00432 \par
00433 {\cf18 void} binaryReadString(FILE* file, {\cf18 char} *buffer, {\cf18 int} maxLength);\par
00434 {\cf18 void} binaryReadUnicodeString(FILE* file, {\cf18 char} *buffer, {\cf17 const} {\cf18 int} stringLength);\par
00435 \par
00436 {\cf18 int} stringInArray({\cf17 const} {\cf18 char} *s, {\cf17 const} {\cf18 char} **array);\par
00437 {\cf18 void} fpad(FILE *f, {\cf18 char} c, {\cf18 int} n);\par
00438 {\cf18 char} *copy_trim({\cf18 char} {\cf17 const} *s);\par
00439 {\cf18 char}* emb_optOut(EmbReal num, {\cf18 char}* str);\par
00440 \par
00441 {\cf18 void} write_24bit(FILE* file, {\cf18 int});\par
00442 {\cf18 int} check_header_present(FILE* file, {\cf18 int} minimum_header_length);\par
00443 \par
00444 {\cf18 unsigned} {\cf18 short} fread_uint16(FILE *file);\par
00445 {\cf18 short} fread_int16(FILE* f);\par
00446 {\cf18 void} safe_free({\cf18 void} *data);\par
00447 {\cf18 void} embInt_read(FILE* f, {\cf18 char} *label, {\cf18 void} *b, {\cf18 int} mode);\par
00448  \par
00449 {\cf18 void} binaryWriteUInt(FILE* f, {\cf18 unsigned} {\cf18 int} data);\par
00450 \par
00451 bcf_file_difat* bcf_difat_create(FILE* file, {\cf18 unsigned} {\cf18 int} fatSectors, {\cf17 const} {\cf18 unsigned} {\cf18 int} sectorSize);\par
00452 {\cf18 unsigned} {\cf18 int} readFullSector(FILE* file, bcf_file_difat* bcfFile, {\cf18 unsigned} {\cf18 int}* numberOfDifatEntriesStillToRead);\par
00453 {\cf18 unsigned} {\cf18 int} numberOfEntriesInDifatSector(bcf_file_difat* fat);\par
00454 {\cf18 void} bcf_file_difat_free(bcf_file_difat* difat);\par
00455 \par
00456 {\cf18 unsigned} {\cf18 int} entriesInDifatSector(bcf_file_difat* fat);\par
00457 bcf_file_fat* bcfFileFat_create({\cf17 const} {\cf18 unsigned} {\cf18 int} sectorSize);\par
00458 {\cf18 void} loadFatFromSector(bcf_file_fat* fat, FILE* file);\par
00459 {\cf18 void} bcf_file_fat_free(bcf_file_fat** fat);\par
00460 \par
00461 bcf_directory_entry* CompoundFileDirectoryEntry(FILE* file);\par
00462 bcf_directory* CompoundFileDirectory({\cf17 const} {\cf18 unsigned} {\cf18 int} maxNumberOfDirectoryEntries);\par
00463 {\cf18 void} readNextSector(FILE* file, bcf_directory* dir);\par
00464 {\cf18 void} bcf_directory_free(bcf_directory** dir);\par
00465 \par
00466 bcf_file_header bcfFileHeader_read(FILE* file);\par
00467 {\cf18 int} bcfFileHeader_isValid(bcf_file_header header);\par
00468 \par
00469 {\cf18 int} hus_compress({\cf18 char}* input, {\cf18 int} size, {\cf18 char}* output, {\cf18 int} *out_size);\par
00470 {\cf18 int} hus_decompress({\cf18 char}* input, {\cf18 int} size, {\cf18 char}* output, {\cf18 int} *out_size);\par
00471 \par
00472 {\cf18 int} encode_tajima_ternary({\cf18 unsigned} {\cf18 char} b[3], {\cf18 int} x, {\cf18 int} y);\par
00473 {\cf18 void} decode_tajima_ternary({\cf18 unsigned} {\cf18 char} b[3], {\cf18 int} *x, {\cf18 int} *y);\par
00474 {\cf18 void} testTangentPoints(EmbCircle c, EmbVector p, EmbVector *t0, EmbVector *t1);\par
00475 {\cf18 void} printArcResults(EmbReal bulge, EmbArc arc,\par
00476                      EmbReal centerX,   EmbReal centerY,\par
00477                      EmbReal radius,    EmbReal diameter,\par
00478                      EmbReal chord,\par
00479                      EmbReal chordMidX, EmbReal chordMidY,\par
00480                      EmbReal sagitta,   EmbReal apothem,\par
00481                      EmbReal incAngle,  {\cf18 char}   clockwise);\par
00482 {\cf18 int} create_test_file_1({\cf17 const} {\cf18 char}* outf);\par
00483 {\cf18 int} create_test_file_2({\cf17 const} {\cf18 char}* outf);\par
00484 {\cf18 int} create_test_file_3({\cf17 const} {\cf18 char}* outf);\par
00485 {\cf18 int} testEmbCircle({\cf18 void});\par
00486 {\cf18 int} testEmbCircle_2({\cf18 void});\par
00487 {\cf18 int} testGeomArc({\cf18 void});\par
00488 {\cf18 int} testThreadColor({\cf18 void});\par
00489 {\cf18 int} testEmbFormat({\cf18 void});\par
00490 \par
00491 {\cf18 void} embColor_read(FILE *f, EmbColor *c, {\cf18 int} toRead);\par
00492 {\cf18 void} embColor_write(FILE *f, EmbColor c, {\cf18 int} toWrite);\par
00493 \par
00494 {\cf18 char} read100(EmbPattern *pattern, FILE* file);\par
00495 {\cf18 char} write100(EmbPattern *pattern, FILE* file);\par
00496 {\cf18 char} read10o(EmbPattern *pattern, FILE* file);\par
00497 {\cf18 char} write10o(EmbPattern *pattern, FILE* file);\par
00498 {\cf18 char} readArt(EmbPattern *pattern, FILE* file);\par
00499 {\cf18 char} writeArt(EmbPattern *pattern, FILE* file);\par
00500 {\cf18 char} readBmc(EmbPattern *pattern, FILE* file);\par
00501 {\cf18 char} writeBmc(EmbPattern *pattern, FILE* file);\par
00502 {\cf18 char} readBro(EmbPattern *pattern, FILE* file);\par
00503 {\cf18 char} writeBro(EmbPattern *pattern, FILE* file);\par
00504 {\cf18 char} readCnd(EmbPattern *pattern, FILE* file);\par
00505 {\cf18 char} writeCnd(EmbPattern *pattern, FILE* file);\par
00506 {\cf18 char} readCol(EmbPattern *pattern, FILE* file);\par
00507 {\cf18 char} writeCol(EmbPattern *pattern, FILE* file);\par
00508 {\cf18 char} readCsd(EmbPattern *pattern, FILE* file);\par
00509 {\cf18 char} writeCsd(EmbPattern *pattern, FILE* file);\par
00510 {\cf18 char} readCsv(EmbPattern *pattern, FILE* file);\par
00511 {\cf18 char} writeCsv(EmbPattern *pattern, FILE* file);\par
00512 {\cf18 char} readDat(EmbPattern *pattern, FILE* file);\par
00513 {\cf18 char} writeDat(EmbPattern *pattern, FILE* file);\par
00514 {\cf18 char} readDem(EmbPattern *pattern, FILE* file);\par
00515 {\cf18 char} writeDem(EmbPattern *pattern, FILE* file);\par
00516 {\cf18 char} readDsb(EmbPattern *pattern, FILE* file);\par
00517 {\cf18 char} writeDsb(EmbPattern *pattern, FILE* file);\par
00518 {\cf18 char} readDst(EmbPattern *pattern, FILE* file);\par
00519 {\cf18 char} writeDst(EmbPattern *pattern, FILE* file);\par
00520 {\cf18 char} readDsz(EmbPattern *pattern, FILE* file);\par
00521 {\cf18 char} writeDsz(EmbPattern *pattern, FILE* file);\par
00522 {\cf18 char} readDxf(EmbPattern *pattern, FILE* file);\par
00523 {\cf18 char} writeDxf(EmbPattern *pattern, FILE* file);\par
00524 {\cf18 char} readEdr(EmbPattern *pattern, FILE* file);\par
00525 {\cf18 char} writeEdr(EmbPattern *pattern, FILE* file);\par
00526 {\cf18 char} readEmd(EmbPattern *pattern, FILE* file);\par
00527 {\cf18 char} writeEmd(EmbPattern *pattern, FILE* file);\par
00528 {\cf18 char} readExp(EmbPattern *pattern, FILE* file);\par
00529 {\cf18 char} writeExp(EmbPattern *pattern, FILE* file);\par
00530 {\cf18 char} readExy(EmbPattern *pattern, FILE* file);\par
00531 {\cf18 char} writeExy(EmbPattern *pattern, FILE* file);\par
00532 {\cf18 char} readEys(EmbPattern *pattern, FILE* file);\par
00533 {\cf18 char} writeEys(EmbPattern *pattern, FILE* file);\par
00534 {\cf18 char} readFxy(EmbPattern *pattern, FILE* file);\par
00535 {\cf18 char} writeFxy(EmbPattern *pattern, FILE* file);\par
00536 {\cf18 char} readGc(EmbPattern *pattern, FILE* file);\par
00537 {\cf18 char} writeGc(EmbPattern *pattern, FILE* file);\par
00538 {\cf18 char} readGnc(EmbPattern *pattern, FILE* file);\par
00539 {\cf18 char} writeGnc(EmbPattern *pattern, FILE* file);\par
00540 {\cf18 char} readGt(EmbPattern *pattern, FILE* file);\par
00541 {\cf18 char} writeGt(EmbPattern *pattern, FILE* file);\par
00542 {\cf18 char} readHus(EmbPattern *pattern, FILE* file);\par
00543 {\cf18 char} writeHus(EmbPattern *pattern, FILE* file);\par
00544 {\cf18 char} readInb(EmbPattern *pattern, FILE* file);\par
00545 {\cf18 char} writeInb(EmbPattern *pattern, FILE* file);\par
00546 {\cf18 char} readInf(EmbPattern *pattern, FILE* file);\par
00547 {\cf18 char} writeInf(EmbPattern *pattern, FILE* file);\par
00548 {\cf18 char} readJef(EmbPattern *pattern, FILE* file);\par
00549 {\cf18 char} writeJef(EmbPattern *pattern, FILE* file);\par
00550 {\cf18 char} readKsm(EmbPattern *pattern, FILE* file);\par
00551 {\cf18 char} writeKsm(EmbPattern *pattern, FILE* file);\par
00552 {\cf18 char} readMax(EmbPattern *pattern, FILE* file);\par
00553 {\cf18 char} writeMax(EmbPattern *pattern, FILE* file);\par
00554 {\cf18 char} readMit(EmbPattern *pattern, FILE* file);\par
00555 {\cf18 char} writeMit(EmbPattern *pattern, FILE* file);\par
00556 {\cf18 char} readNew(EmbPattern *pattern, FILE* file);\par
00557 {\cf18 char} writeNew(EmbPattern *pattern, FILE* file);\par
00558 {\cf18 char} readOfm(EmbPattern *pattern, FILE* file);\par
00559 {\cf18 char} writeOfm(EmbPattern *pattern, FILE* file);\par
00560 {\cf18 char} readPcd(EmbPattern *pattern, {\cf17 const} {\cf18 char} *fileName, FILE* file);\par
00561 {\cf18 char} writePcd(EmbPattern *pattern, FILE* file);\par
00562 {\cf18 char} readPcm(EmbPattern *pattern, FILE* file);\par
00563 {\cf18 char} writePcm(EmbPattern *pattern, FILE* file);\par
00564 {\cf18 char} readPcq(EmbPattern *pattern, {\cf17 const} {\cf18 char} *fileName, FILE* file);\par
00565 {\cf18 char} writePcq(EmbPattern *pattern, FILE* file);\par
00566 {\cf18 char} readPcs(EmbPattern *pattern, {\cf17 const} {\cf18 char} *fileName, FILE* file);\par
00567 {\cf18 char} writePcs(EmbPattern *pattern, FILE* file);\par
00568 {\cf18 char} readPec(EmbPattern *pattern, {\cf17 const} {\cf18 char} *fileName, FILE* file);\par
00569 {\cf18 char} writePec(EmbPattern *pattern, {\cf17 const} {\cf18 char} *fileName,  FILE* file);\par
00570 {\cf18 char} readPel(EmbPattern *pattern, FILE *file);\par
00571 {\cf18 char} writePel(EmbPattern *pattern, FILE *file);\par
00572 {\cf18 char} readPem(EmbPattern *pattern, FILE *file);\par
00573 {\cf18 char} writePem(EmbPattern *pattern, FILE *file);\par
00574 {\cf18 char} readPes(EmbPattern *pattern, {\cf17 const} {\cf18 char} *fileName, FILE* file);\par
00575 {\cf18 char} writePes(EmbPattern *pattern, {\cf17 const} {\cf18 char} *fileName, FILE* file);\par
00576 {\cf18 char} readPhb(EmbPattern *pattern, FILE* file);\par
00577 {\cf18 char} writePhb(EmbPattern *pattern, FILE *file);\par
00578 {\cf18 char} readPhc(EmbPattern *pattern, FILE* file);\par
00579 {\cf18 char} writePhc(EmbPattern *pattern, FILE *file);\par
00580 {\cf18 char} readPlt(EmbPattern *pattern, FILE* file);\par
00581 {\cf18 char} writePlt(EmbPattern *pattern, FILE* file);\par
00582 {\cf18 char} readRgb(EmbPattern *pattern, FILE* file);\par
00583 {\cf18 char} writeRgb(EmbPattern *pattern, FILE* file);\par
00584 {\cf18 char} readSew(EmbPattern *pattern, FILE* file);\par
00585 {\cf18 char} writeSew(EmbPattern *pattern, FILE* file);\par
00586 {\cf18 char} readShv(EmbPattern *pattern, FILE* file);\par
00587 {\cf18 char} writeShv(EmbPattern *pattern, FILE *file);\par
00588 {\cf18 char} readSst(EmbPattern *pattern, FILE* file);\par
00589 {\cf18 char} writeSst(EmbPattern *pattern, FILE *file);\par
00590 {\cf18 char} readStx(EmbPattern *pattern, FILE* file);\par
00591 {\cf18 char} writeStx(EmbPattern *pattern, FILE *file);\par
00592 {\cf18 char} readSvg(EmbPattern *pattern, FILE* file);\par
00593 {\cf18 char} writeSvg(EmbPattern *pattern, FILE* file);\par
00594 {\cf18 char} readT01(EmbPattern *pattern, FILE* file);\par
00595 {\cf18 char} writeT01(EmbPattern *pattern, FILE* file);\par
00596 {\cf18 char} readT09(EmbPattern *pattern, FILE* file);\par
00597 {\cf18 char} writeT09(EmbPattern *pattern, FILE* file);\par
00598 {\cf18 char} readTap(EmbPattern *pattern, FILE* file);\par
00599 {\cf18 char} writeTap(EmbPattern *pattern, FILE* file);\par
00600 {\cf18 char} readThr(EmbPattern *pattern, FILE* file);\par
00601 {\cf18 char} writeThr(EmbPattern *pattern, FILE* file);\par
00602 {\cf18 char} readTxt(EmbPattern *pattern, FILE* file);\par
00603 {\cf18 char} writeTxt(EmbPattern *pattern, FILE* file);\par
00604 {\cf18 char} readU00(EmbPattern *pattern, FILE* file);\par
00605 {\cf18 char} writeU00(EmbPattern *pattern, FILE *file);\par
00606 {\cf18 char} readU01(EmbPattern *pattern, FILE* file);\par
00607 {\cf18 char} writeU01(EmbPattern *pattern, FILE *file);\par
00608 {\cf18 char} readVip(EmbPattern *pattern, FILE* file);\par
00609 {\cf18 char} writeVip(EmbPattern *pattern, FILE* file);\par
00610 {\cf18 char} readVp3(EmbPattern *pattern, FILE* file);\par
00611 {\cf18 char} writeVp3(EmbPattern *pattern, FILE* file);\par
00612 {\cf18 char} readXxx(EmbPattern *pattern, FILE* file);\par
00613 {\cf18 char} writeXxx(EmbPattern *pattern, FILE* file);\par
00614 {\cf18 char} readZsk(EmbPattern *pattern, FILE* file);\par
00615 {\cf18 char} writeZsk(EmbPattern *pattern, FILE* file);\par
00616 \par
00617 {\cf17 extern} {\cf17 const} {\cf18 char} imageWithFrame[38][48];\par
00618 \par
00619 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/encoding.c File Reference\par \pard\plain 
{\tc\tcl2 \v src/encoding.c}
{\xe \v src/encoding.c}
{\bkmkstart AAAAAAABCB}
{\bkmkend AAAAAAABCB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include "embroidery_internal.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b write_24bit} (FILE *file, int)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbColor} {\b embColor_fromHexStr} (char *val)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reverse_byte_order} (void *b, int bytes)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b decode_t01_record} (unsigned char b[3], int *x, int *y, int *flags)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b encode_t01_record} (unsigned char b[3], int x, int y, int flags)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b encode_tajima_ternary} (unsigned char b[3], int x, int y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b decode_tajima_ternary} (unsigned char b[3], int *x, int *y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pfaffEncode} (FILE *file, int dx, int dy, int flags)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbReal} {\b pfaffDecode} (unsigned char a1, unsigned char a2, unsigned char a3)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned char {\b mitEncodeStitch} ({\b EmbReal} value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b mitDecodeStitch} (unsigned char value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b decodeNewStitch} (unsigned char value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embInt_read} (FILE *f, char *label, void *b, int mode)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embInt_write} (FILE *f, char *label, void *b, int mode)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v decode_t01_record\:encoding.c}
{\xe \v encoding.c\:decode_t01_record}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int decode_t01_record (unsigned char  {\i b}[3], int *  {\i x}, int *  {\i y}, int *  {\i flags})}}
\par
{\bkmkstart AAAAAAABCC}
{\bkmkend AAAAAAABCC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 74} of file {\b encoding.c}.}\par
}
{\xe \v decode_tajima_ternary\:encoding.c}
{\xe \v encoding.c\:decode_tajima_ternary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void decode_tajima_ternary (unsigned char  {\i b}[3], int *  {\i x}, int *  {\i y})}}
\par
{\bkmkstart AAAAAAABCD}
{\bkmkend AAAAAAABCD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 229} of file {\b encoding.c}.}\par
}
{\xe \v decodeNewStitch\:encoding.c}
{\xe \v encoding.c\:decodeNewStitch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int decodeNewStitch (unsigned char  {\i value})}}
\par
{\bkmkstart AAAAAAABCE}
{\bkmkend AAAAAAABCE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 337} of file {\b encoding.c}.}\par
}
{\xe \v embColor_fromHexStr\:encoding.c}
{\xe \v encoding.c\:embColor_fromHexStr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbColor} embColor_fromHexStr (char *  {\i val})}}
\par
{\bkmkstart AAAAAAABCF}
{\bkmkend AAAAAAABCF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 32} of file {\b encoding.c}.}\par
}
{\xe \v embInt_read\:encoding.c}
{\xe \v encoding.c\:embInt_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embInt_read (FILE *  {\i f}, char *  {\i label}, void *  {\i b}, int  {\i mode})}}
\par
{\bkmkstart AAAAAAABCG}
{\bkmkend AAAAAAABCG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 350} of file {\b encoding.c}.}\par
}
{\xe \v embInt_write\:encoding.c}
{\xe \v encoding.c\:embInt_write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embInt_write (FILE *  {\i f}, char *  {\i label}, void *  {\i b}, int  {\i mode})}}
\par
{\bkmkstart AAAAAAABCH}
{\bkmkend AAAAAAABCH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 381} of file {\b encoding.c}.}\par
}
{\xe \v encode_t01_record\:encoding.c}
{\xe \v encoding.c\:encode_t01_record}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void encode_t01_record (unsigned char  {\i b}[3], int  {\i x}, int  {\i y}, int  {\i flags})}}
\par
{\bkmkstart AAAAAAABCI}
{\bkmkend AAAAAAABCI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 99} of file {\b encoding.c}.}\par
}
{\xe \v encode_tajima_ternary\:encoding.c}
{\xe \v encoding.c\:encode_tajima_ternary}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int encode_tajima_ternary (unsigned char  {\i b}[3], int  {\i x}, int  {\i y})}}
\par
{\bkmkstart AAAAAAABCJ}
{\bkmkend AAAAAAABCJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 118} of file {\b encoding.c}.}\par
}
{\xe \v mitDecodeStitch\:encoding.c}
{\xe \v encoding.c\:mitDecodeStitch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int mitDecodeStitch (unsigned char  {\i value})}}
\par
{\bkmkstart AAAAAAABCK}
{\bkmkend AAAAAAABCK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 330} of file {\b encoding.c}.}\par
}
{\xe \v mitEncodeStitch\:encoding.c}
{\xe \v encoding.c\:mitEncodeStitch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned char mitEncodeStitch ({\b EmbReal}  {\i value})}}
\par
{\bkmkstart AAAAAAABCL}
{\bkmkend AAAAAAABCL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 323} of file {\b encoding.c}.}\par
}
{\xe \v pfaffDecode\:encoding.c}
{\xe \v encoding.c\:pfaffDecode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbReal} pfaffDecode (unsigned char  {\i a1}, unsigned char  {\i a2}, unsigned char  {\i a3})}}
\par
{\bkmkstart AAAAAAABCM}
{\bkmkend AAAAAAABCM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 315} of file {\b encoding.c}.}\par
}
{\xe \v pfaffEncode\:encoding.c}
{\xe \v encoding.c\:pfaffEncode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void pfaffEncode (FILE *  {\i file}, int  {\i dx}, int  {\i dy}, int  {\i flags})}}
\par
{\bkmkstart AAAAAAABCN}
{\bkmkend AAAAAAABCN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 295} of file {\b encoding.c}.}\par
}
{\xe \v reverse_byte_order\:encoding.c}
{\xe \v encoding.c\:reverse_byte_order}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void reverse_byte_order (void *  {\i b}, int  {\i bytes})}}
\par
{\bkmkstart AAAAAAABCO}
{\bkmkend AAAAAAABCO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 56} of file {\b encoding.c}.}\par
}
{\xe \v write_24bit\:encoding.c}
{\xe \v encoding.c\:write_24bit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void write_24bit (FILE *  {\i file}, int  {\i x})}}
\par
{\bkmkstart AAAAAAABCP}
{\bkmkend AAAAAAABCP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 660} of file {\b main.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
encoding.c\par \pard\plain 
{\tc\tcl2 \v src/encoding.c}
{\xe \v src/encoding.c}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * This file is part of libembroidery.}\par
00003 {\cf20  *}\par
00004 {\cf20  * Copyright 2018-2022 The Embroidermodder Team}\par
00005 {\cf20  * Licensed under the terms of the zlib license.}\par
00006 {\cf20  *}\par
00007 {\cf20  * This file contains all the read and write functions for the}\par
00008 {\cf20  * library.}\par
00009 {\cf20  */}\par
00010 \par
00011 {\cf21 #include <stdio.h>}\par
00012 {\cf21 #include <stdlib.h>}\par
00013 {\cf21 #include <string.h>}\par
00014 {\cf21 #include <math.h>}\par
00015 \par
00016 {\cf21 #include "embroidery_internal.h"}\par
00017 \par
00018 {\cf18 void} write_24bit(FILE* file, {\cf18 int});\par
00019 \par
00020 {\cf20 /* ENCODING}\par
00021 {\cf20  *******************************************************************}\par
00022 {\cf20  * The functions in this file are grouped together to aid the developer's}\par
00023 {\cf20  * understanding of the similarities between the file formats. This also helps}\par
00024 {\cf20  * reduce errors between reimplementation of the same idea.}\par
00025 {\cf20  *}\par
00026 {\cf20  * For example: the Tajima ternary encoding of positions is used by at least 4}\par
00027 {\cf20  * formats and the only part that changes is the flag encoding.}\par
00028 {\cf20  */}\par
00029 \par
00030 {\cf20 /* Converts a 6 digit hex string (I.E. "00FF00") }\par
00031 {\cf20     into an EmbColor and returns it. */}\par
00032 EmbColor embColor_fromHexStr({\cf18 char}* val) \{\par
00033     EmbColor color;\par
00034     {\cf18 char} r[3];\par
00035     {\cf18 char} g[3];\par
00036     {\cf18 char} b[3];\par
00037 \par
00038     r[0] = val[0];\par
00039     r[1] = val[1];\par
00040     r[2] = 0;\par
00041 \par
00042     g[0] = val[2];\par
00043     g[1] = val[3];\par
00044     g[2] = 0;\par
00045 \par
00046     b[0] = val[4];\par
00047     b[1] = val[5];\par
00048     b[2] = 0;\par
00049 \par
00050     color.r = ({\cf18 unsigned} char)strtol(r, 0, 16);\par
00051     color.g = ({\cf18 unsigned} char)strtol(g, 0, 16);\par
00052     color.b = ({\cf18 unsigned} char)strtol(b, 0, 16);\par
00053     {\cf19 return} color;\par
00054 \}\par
00055 \par
00056 {\cf18 void} reverse_byte_order({\cf18 void} *b, {\cf18 int} bytes)\par
00057 \{\par
00058     {\cf18 char} swap;\par
00059     {\cf19 if} (bytes == 2) \{\par
00060         swap = *(({\cf18 char}*)b+0);\par
00061         *(({\cf18 char}*)b+0) = *(({\cf18 char}*)b+1);\par
00062         *(({\cf18 char}*)b+1) = swap;\par
00063     \}\par
00064     {\cf19 else} \{\par
00065         swap = *(({\cf18 char}*)b+0);\par
00066         *(({\cf18 char}*)b+0) = *(({\cf18 char}*)b+3);\par
00067         *(({\cf18 char}*)b+3) = swap;\par
00068         swap = *(({\cf18 char}*)b+1);\par
00069         *(({\cf18 char}*)b+1) = *(({\cf18 char}*)b+2);\par
00070         *(({\cf18 char}*)b+2) = swap;\par
00071     \}\par
00072 \}\par
00073 \par
00074 {\cf18 int} decode_t01_record({\cf18 unsigned} {\cf18 char} b[3], {\cf18 int} *x, {\cf18 int} *y, {\cf18 int} *flags) \{\par
00075     decode_tajima_ternary(b, x, y);\par
00076 \par
00077     {\cf19 if} (b[2] == 0xF3) \{\par
00078         *flags = END;\par
00079     \}\par
00080     {\cf19 else} \{\par
00081         {\cf19 switch} (b[2] & 0xC3) \{\par
00082         {\cf19 case} 0x03:\par
00083             *flags = NORMAL;\par
00084             {\cf19 break};\par
00085         {\cf19 case} 0x83:\par
00086             *flags = TRIM;\par
00087             {\cf19 break};\par
00088         {\cf19 case} 0xC3:\par
00089             *flags = STOP;\par
00090             {\cf19 break};\par
00091         {\cf19 default}:\par
00092             *flags = NORMAL;\par
00093             {\cf19 break};\par
00094         \}\par
00095     \}\par
00096     {\cf19 return} 1;\par
00097 \}\par
00098 \par
00099 {\cf18 void} encode_t01_record({\cf18 unsigned} {\cf18 char} b[3], {\cf18 int} x, {\cf18 int} y, {\cf18 int} flags) \{\par
00100     {\cf19 if} (!encode_tajima_ternary(b, x, y)) \{\par
00101         {\cf19 return};\par
00102     \}\par
00103 \par
00104     b[2] |= ({\cf18 unsigned} char)3;\par
00105     {\cf19 if} (flags & END) \{\par
00106         b[0] = 0;\par
00107         b[1] = 0;\par
00108         b[2] = 0xF3;\par
00109     \}\par
00110     {\cf19 if} (flags & (JUMP | TRIM)) \{\par
00111         b[2] = ({\cf18 unsigned} char)(b[2] | 0x83);\par
00112     \}\par
00113     {\cf19 if} (flags & STOP) \{\par
00114         b[2] = ({\cf18 unsigned} char)(b[2] | 0xC3);\par
00115     \}\par
00116 \}\par
00117 \par
00118 {\cf18 int} encode_tajima_ternary({\cf18 unsigned} {\cf18 char} b[3], {\cf18 int} x, {\cf18 int} y)\par
00119 \{\par
00120     b[0] = 0;\par
00121     b[1] = 0;\par
00122     b[2] = 0;\par
00123 \par
00124     {\cf20 /* cannot encode values > +121 or < -121. */}\par
00125     {\cf19 if} (x > 121 || x < -121) \{\par
00126         printf({\cf22 "ERROR: format-t01.c encode_record(), "});\par
00127         printf({\cf22 "x is not in valid range [-121,121] , x = %d\\n"}, x);\par
00128         {\cf19 return} 0;\par
00129     \}\par
00130     {\cf19 if} (y > 121 || y < -121) \{\par
00131         printf({\cf22 "ERROR: format-t01.c encode_record(), "});\par
00132         printf({\cf22 "y is not in valid range [-121,121] , y = %d\\n"}, y);\par
00133         {\cf19 return} 0;\par
00134     \}\par
00135 \par
00136     {\cf19 if} (x >= +41) \{\par
00137         b[2] |= 0x04;\par
00138         x -= 81;\par
00139     \}\par
00140     {\cf19 if} (x <= -41) \{\par
00141         b[2] |= 0x08;\par
00142         x += 81;\par
00143     \}\par
00144     {\cf19 if} (x >= +14) \{\par
00145         b[1] |= 0x04;\par
00146         x -= 27;\par
00147     \}\par
00148     {\cf19 if} (x <= -14) \{\par
00149         b[1] |= 0x08;\par
00150         x += 27;\par
00151     \}\par
00152     {\cf19 if} (x >= +5) \{\par
00153         b[0] |= 0x04;\par
00154         x -= 9;\par
00155     \}\par
00156     {\cf19 if} (x <= -5) \{\par
00157         b[0] |= 0x08;\par
00158         x += 9;\par
00159     \}\par
00160     {\cf19 if} (x >= +2) \{\par
00161         b[1] |= 0x01;\par
00162         x -= 3;\par
00163     \}\par
00164     {\cf19 if} (x <= -2) \{\par
00165         b[1] |= 0x02;\par
00166         x += 3;\par
00167     \}\par
00168     {\cf19 if} (x >= +1) \{\par
00169         b[0] |= 0x01;\par
00170         x -= 1;\par
00171     \}\par
00172     {\cf19 if} (x <= -1) \{\par
00173         b[0] |= 0x02;\par
00174         x += 1;\par
00175     \}\par
00176     {\cf19 if} (x != 0) \{\par
00177         printf({\cf22 "ERROR: format-dst.c encode_record(), "});\par
00178         printf({\cf22 "x should be zero yet x = %d\\n"}, x);\par
00179         {\cf19 return} 0;\par
00180     \}\par
00181     {\cf19 if} (y >= +41) \{\par
00182         b[2] |= 0x20;\par
00183         y -= 81;\par
00184     \}\par
00185     {\cf19 if} (y <= -41) \{\par
00186         b[2] |= 0x10;\par
00187         y += 81;\par
00188     \}\par
00189     {\cf19 if} (y >= +14) \{\par
00190         b[1] |= 0x20;\par
00191         y -= 27;\par
00192     \}\par
00193     {\cf19 if} (y <= -14) \{\par
00194         b[1] |= 0x10;\par
00195         y += 27;\par
00196     \}\par
00197     {\cf19 if} (y >= +5) \{\par
00198         b[0] |= 0x20;\par
00199         y -= 9;\par
00200     \}\par
00201     {\cf19 if} (y <= -5) \{\par
00202         b[0] |= 0x10;\par
00203         y += 9;\par
00204     \}\par
00205     {\cf19 if} (y >= +2) \{\par
00206         b[1] |= 0x80;\par
00207         y -= 3;\par
00208     \}\par
00209     {\cf19 if} (y <= -2) \{\par
00210         b[1] |= 0x40;\par
00211         y += 3;\par
00212     \}\par
00213     {\cf19 if} (y >= +1) \{\par
00214         b[0] |= 0x80;\par
00215         y -= 1;\par
00216     \}\par
00217     {\cf19 if} (y <= -1) \{\par
00218         b[0] |= 0x40;\par
00219         y += 1;\par
00220     \}\par
00221     {\cf19 if} (y != 0) \{\par
00222         printf({\cf22 "ERROR: format-dst.c encode_record(), "});\par
00223         printf({\cf22 "y should be zero yet y = %d\\n"}, y);\par
00224         {\cf19 return} 0;\par
00225     \}\par
00226     {\cf19 return} 1;\par
00227 \}\par
00228 \par
00229 {\cf18 void} decode_tajima_ternary({\cf18 unsigned} {\cf18 char} b[3], {\cf18 int} *x, {\cf18 int} *y)\par
00230 \{\par
00231     *x = 0;\par
00232     *y = 0;\par
00233     {\cf19 if} (b[0] & 0x01) \{\par
00234         *x += 1;\par
00235     \}\par
00236     {\cf19 if} (b[0] & 0x02) \{\par
00237         *x -= 1;\par
00238     \}\par
00239     {\cf19 if} (b[0] & 0x04) \{\par
00240         *x += 9;\par
00241     \}\par
00242     {\cf19 if} (b[0] & 0x08) \{\par
00243         *x -= 9;\par
00244     \}\par
00245     {\cf19 if} (b[0] & 0x80) \{\par
00246         *y += 1;\par
00247     \}\par
00248     {\cf19 if} (b[0] & 0x40) \{\par
00249         *y -= 1;\par
00250     \}\par
00251     {\cf19 if} (b[0] & 0x20) \{\par
00252         *y += 9;\par
00253     \}\par
00254     {\cf19 if} (b[0] & 0x10) \{\par
00255         *y -= 9;\par
00256     \}\par
00257     {\cf19 if} (b[1] & 0x01) \{\par
00258         *x += 3;\par
00259     \}\par
00260     {\cf19 if} (b[1] & 0x02) \{\par
00261         *x -= 3;\par
00262     \}\par
00263     {\cf19 if} (b[1] & 0x04) \{\par
00264         *x += 27;\par
00265     \}\par
00266     {\cf19 if} (b[1] & 0x08) \{\par
00267         *x -= 27;\par
00268     \}\par
00269     {\cf19 if} (b[1] & 0x80) \{\par
00270         *y += 3;\par
00271     \}\par
00272     {\cf19 if} (b[1] & 0x40) \{\par
00273         *y -= 3;\par
00274     \}\par
00275     {\cf19 if} (b[1] & 0x20) \{\par
00276         *y += 27;\par
00277     \}\par
00278     {\cf19 if} (b[1] & 0x10) \{\par
00279         *y -= 27;\par
00280     \}\par
00281     {\cf19 if} (b[2] & 0x04) \{\par
00282         *x += 81;\par
00283     \}\par
00284     {\cf19 if} (b[2] & 0x08) \{\par
00285         *x -= 81;\par
00286     \}\par
00287     {\cf19 if} (b[2] & 0x20) \{\par
00288         *y += 81;\par
00289     \}\par
00290     {\cf19 if} (b[2] & 0x10) \{\par
00291         *y -= 81;\par
00292     \}\par
00293 \}\par
00294 \par
00295 {\cf18 void} pfaffEncode(FILE* file, {\cf18 int} dx, {\cf18 int} dy, {\cf18 int} flags)\par
00296 \{\par
00297     {\cf18 unsigned} {\cf18 char} flagsToWrite = 0;\par
00298 \par
00299     {\cf19 if} (!file) \{ printf({\cf22 "ERROR: format-pcs.c pcsEncode(), file argument is null\\n"}); {\cf19 return}; \}\par
00300 \par
00301     write_24bit(file, dx);\par
00302     write_24bit(file, dy);\par
00303 \par
00304     {\cf19 if} (flags & STOP)\par
00305     \{\par
00306         flagsToWrite |= 0x01;\par
00307     \}\par
00308     {\cf19 if} (flags & TRIM)\par
00309     \{\par
00310         flagsToWrite |= 0x04;\par
00311     \}\par
00312     fwrite(&flagsToWrite, 1, 1, file);\par
00313 \}\par
00314 \par
00315 EmbReal pfaffDecode({\cf18 unsigned} {\cf18 char} a1, {\cf18 unsigned} {\cf18 char} a2, {\cf18 unsigned} {\cf18 char} a3) \{\par
00316     {\cf18 int} res = a1 + (a2 << 8) + (a3 << 16);\par
00317     {\cf19 if} (res > 0x7FFFFF) \{\par
00318         {\cf19 return} (-((~(res) & 0x7FFFFF) - 1));\par
00319     \}\par
00320     {\cf19 return} res;\par
00321 \}\par
00322 \par
00323 {\cf18 unsigned} {\cf18 char} mitEncodeStitch(EmbReal value) \{\par
00324     {\cf19 if} (value < 0) \{\par
00325         {\cf19 return} 0x80 | ({\cf18 unsigned} char)(-value);\par
00326     \}\par
00327     {\cf19 return} ({\cf18 unsigned} {\cf18 char})value;\par
00328 \}\par
00329 \par
00330 {\cf18 int} mitDecodeStitch({\cf18 unsigned} {\cf18 char} value) \{\par
00331     {\cf19 if} (value & 0x80) \{\par
00332         {\cf19 return} -(value & 0x1F);\par
00333     \}\par
00334     {\cf19 return} value;\par
00335 \}\par
00336 \par
00337 {\cf18 int} decodeNewStitch({\cf18 unsigned} {\cf18 char} value) \{\par
00338     {\cf19 return} ({\cf18 int})value;\par
00339 \}\par
00340 \par
00341 {\cf20 /* Read and write system for multiple byte types.}\par
00342 {\cf20  *}\par
00343 {\cf20  * The caller passes the function to read/write from, the}\par
00344 {\cf20  * memory location as a void pointer and a mode identifier that describes}\par
00345 {\cf20  * the type. This way we can abstract out the endianness of the}\par
00346 {\cf20  * system running the library and don't have to maintain many functions,}\par
00347 {\cf20  * just two.}\par
00348 {\cf20  */}\par
00349 {\cf18 void}\par
00350 embInt_read(FILE* f, {\cf18 char} *label, {\cf18 void} *b, {\cf18 int} mode)\par
00351 \{\par
00352     {\cf18 int} endian = mode & 0x01;\par
00353     {\cf18 int} length = mode - endian;\par
00354     fread(b, 1, length, f);\par
00355     {\cf19 if} (endian != ENDIAN_HOST) \{\par
00356         reverse_byte_order(b, length);\par
00357     \}\par
00358 \par
00359     {\cf19 if} (emb_verbose>1) \{\par
00360         {\cf19 switch} (mode) \{\par
00361         {\cf19 case} EMB_INT16_LITTLE:\par
00362             printf({\cf22 "read int16_le %s: %d\\n"}, label, *(({\cf18 short}*)b));\par
00363             {\cf19 break};\par
00364         {\cf19 case} EMB_INT16_BIG:\par
00365             printf({\cf22 "read int16_be %s: %d\\n"}, label, *(({\cf18 short}*)b));\par
00366             {\cf19 break};\par
00367         {\cf19 case} EMB_INT32_LITTLE:\par
00368             printf({\cf22 "read int32_le %s: %d\\n"}, label, *(({\cf18 int}*)b));\par
00369             {\cf19 break};\par
00370         {\cf19 case} EMB_INT32_BIG:\par
00371             printf({\cf22 "read int32_be %s: %d\\n"}, label, *(({\cf18 int}*)b));\par
00372             {\cf19 break};\par
00373         {\cf19 default}:\par
00374             puts({\cf22 "ERROR: the mode supplied to fread_int is invalid."});\par
00375             {\cf19 break};\par
00376         \}\par
00377     \}\par
00378 \}\par
00379 \par
00380 {\cf18 void}\par
00381 embInt_write(FILE* f, {\cf18 char} *label, {\cf18 void} *b, {\cf18 int} mode)\par
00382 \{\par
00383     {\cf18 int} endian = mode & 0x01;\par
00384     {\cf18 int} length = mode - endian;\par
00385     {\cf19 if} (endian != ENDIAN_HOST) \{\par
00386         reverse_byte_order(b, length);\par
00387     \}\par
00388     {\cf19 if} (emb_verbose>1) \{\par
00389         {\cf19 switch} (mode) \{\par
00390         {\cf19 case} EMB_INT16_LITTLE:\par
00391             printf({\cf22 "write int16_le %s: %d\\n"}, label, *(({\cf18 short}*)b));\par
00392             {\cf19 break};\par
00393         {\cf19 case} EMB_INT16_BIG:\par
00394             printf({\cf22 "write int16_be %s: %d\\n"}, label, *(({\cf18 short}*)b));\par
00395             {\cf19 break};\par
00396         {\cf19 case} EMB_INT32_LITTLE:\par
00397             printf({\cf22 "write int32_le %s: %d\\n"}, label, *(({\cf18 int}*)b));\par
00398             {\cf19 break};\par
00399         {\cf19 case} EMB_INT32_BIG:\par
00400             printf({\cf22 "write int32_be %s: %d\\n"}, label, *(({\cf18 int}*)b));\par
00401             {\cf19 break};\par
00402         {\cf19 default}:\par
00403             puts({\cf22 "ERROR: the mode supplied to fwrite_int is invalid."});\par
00404             {\cf19 break};\par
00405         \}\par
00406     \}\par
00407 \par
00408     fwrite(b, 1, length, f);\par
00409 \}\par
00410 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/fill.c File Reference\par \pard\plain 
{\tc\tcl2 \v src/fill.c}
{\xe \v src/fill.c}
{\bkmkstart AAAAAAABCQ}
{\bkmkend AAAAAAABCQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include "embroidery_internal.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b lindenmayer_system} ({\b L_system} L, char *state, int iterations, int complete)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_horizontal_fill} ({\b EmbPattern} *pattern, {\b EmbImage} *image, int threshhold)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_crossstitch} ({\b EmbPattern} *pattern, {\b EmbImage} *image, int threshhold)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b hilbert_curve} ({\b EmbPattern} *pattern, int iterations)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b generate_dragon_curve} (char *state, int iterations)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b dragon_curve} (int iterations)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPolygon_reduceByDistance} ({\b EmbArray} *vertices, {\b EmbArray} *simplified, float distance)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPolygon_reduceByNth} ({\b EmbArray} *vertices, {\b EmbArray} *out, int nth)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbPattern} * {\b embPattern_combine} ({\b EmbPattern} *p1, {\b EmbPattern} *p2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_stitchArc} ({\b EmbPattern} *p, {\b EmbArc} arc, int thread_index, int style)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_stitchCircle} ({\b EmbPattern} *p, {\b EmbCircle} circle, int thread_index, int style)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_stitchEllipse} ({\b EmbPattern} *p, {\b EmbEllipse} ellipse, int thread_index, int style)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_stitchPath} ({\b EmbPattern} *p, {\b EmbPath} rect, int thread_index, int style)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_stitchPolygon} ({\b EmbPattern} *p, {\b EmbPolygon} rect, int thread_index, int style)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_stitchPolyline} ({\b EmbPattern} *p, {\b EmbPolyline} rect, int thread_index, int style)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_stitchRect} ({\b EmbPattern} *p, {\b EmbRect} rect, int thread_index, int style)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_stitchText} ({\b EmbPattern} *p, {\b EmbRect} rect, int thread_index, int style)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_convertGeometry} ({\b EmbPattern} *p)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b rules} [] = \{"+BF-AFA-FB+", "-AF+BFB+FA-"\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b L_system} {\b hilbert_curve_l_system}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v dragon_curve\:fill.c}
{\xe \v fill.c\:dragon_curve}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int dragon_curve (int  {\i iterations})}}
\par
{\bkmkstart AAAAAAABCR}
{\bkmkend AAAAAAABCR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 345} of file {\b fill.c}.}\par
}
{\xe \v embPattern_combine\:fill.c}
{\xe \v fill.c\:embPattern_combine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbPattern} * embPattern_combine ({\b EmbPattern} *  {\i p1}, {\b EmbPattern} *  {\i p2})}}
\par
{\bkmkstart AAAAAAABCS}
{\bkmkend AAAAAAABCS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 854} of file {\b fill.c}.}\par
}
{\xe \v embPattern_convertGeometry\:fill.c}
{\xe \v fill.c\:embPattern_convertGeometry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_convertGeometry ({\b EmbPattern} *  {\i p})}}
\par
{\bkmkstart AAAAAAABCT}
{\bkmkend AAAAAAABCT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 987} of file {\b fill.c}.}\par
}
{\xe \v embPattern_crossstitch\:fill.c}
{\xe \v fill.c\:embPattern_crossstitch}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_crossstitch ({\b EmbPattern} *  {\i pattern}, {\b EmbImage} *  {\i image}, int  {\i threshhold})}}
\par
{\bkmkstart AAAAAAABCU}
{\bkmkend AAAAAAABCU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 239} of file {\b fill.c}.}\par
}
{\xe \v embPattern_horizontal_fill\:fill.c}
{\xe \v fill.c\:embPattern_horizontal_fill}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_horizontal_fill ({\b EmbPattern} *  {\i pattern}, {\b EmbImage} *  {\i image}, int  {\i threshhold})}}
\par
{\bkmkstart AAAAAAABCV}
{\bkmkend AAAAAAABCV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 212} of file {\b fill.c}.}\par
}
{\xe \v embPattern_stitchArc\:fill.c}
{\xe \v fill.c\:embPattern_stitchArc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_stitchArc ({\b EmbPattern} *  {\i p}, {\b EmbArc}  {\i arc}, int  {\i thread_index}, int  {\i style})}}
\par
{\bkmkstart AAAAAAABCW}
{\bkmkend AAAAAAABCW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 875} of file {\b fill.c}.}\par
}
{\xe \v embPattern_stitchCircle\:fill.c}
{\xe \v fill.c\:embPattern_stitchCircle}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_stitchCircle ({\b EmbPattern} *  {\i p}, {\b EmbCircle}  {\i circle}, int  {\i thread_index}, int  {\i style})}}
\par
{\bkmkstart AAAAAAABCX}
{\bkmkend AAAAAAABCX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 881} of file {\b fill.c}.}\par
}
{\xe \v embPattern_stitchEllipse\:fill.c}
{\xe \v fill.c\:embPattern_stitchEllipse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_stitchEllipse ({\b EmbPattern} *  {\i p}, {\b EmbEllipse}  {\i ellipse}, int  {\i thread_index}, int  {\i style})}}
\par
{\bkmkstart AAAAAAABCY}
{\bkmkend AAAAAAABCY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 933} of file {\b fill.c}.}\par
}
{\xe \v embPattern_stitchPath\:fill.c}
{\xe \v fill.c\:embPattern_stitchPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_stitchPath ({\b EmbPattern} *  {\i p}, {\b EmbPath}  {\i rect}, int  {\i thread_index}, int  {\i style})}}
\par
{\bkmkstart AAAAAAABCZ}
{\bkmkend AAAAAAABCZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 939} of file {\b fill.c}.}\par
}
{\xe \v embPattern_stitchPolygon\:fill.c}
{\xe \v fill.c\:embPattern_stitchPolygon}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_stitchPolygon ({\b EmbPattern} *  {\i p}, {\b EmbPolygon}  {\i rect}, int  {\i thread_index}, int  {\i style})}}
\par
{\bkmkstart AAAAAAABDA}
{\bkmkend AAAAAAABDA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 945} of file {\b fill.c}.}\par
}
{\xe \v embPattern_stitchPolyline\:fill.c}
{\xe \v fill.c\:embPattern_stitchPolyline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_stitchPolyline ({\b EmbPattern} *  {\i p}, {\b EmbPolyline}  {\i rect}, int  {\i thread_index}, int  {\i style})}}
\par
{\bkmkstart AAAAAAABDB}
{\bkmkend AAAAAAABDB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 951} of file {\b fill.c}.}\par
}
{\xe \v embPattern_stitchRect\:fill.c}
{\xe \v fill.c\:embPattern_stitchRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_stitchRect ({\b EmbPattern} *  {\i p}, {\b EmbRect}  {\i rect}, int  {\i thread_index}, int  {\i style})}}
\par
{\bkmkstart AAAAAAABDC}
{\bkmkend AAAAAAABDC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 957} of file {\b fill.c}.}\par
}
{\xe \v embPattern_stitchText\:fill.c}
{\xe \v fill.c\:embPattern_stitchText}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_stitchText ({\b EmbPattern} *  {\i p}, {\b EmbRect}  {\i rect}, int  {\i thread_index}, int  {\i style})}}
\par
{\bkmkstart AAAAAAABDD}
{\bkmkend AAAAAAABDD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 982} of file {\b fill.c}.}\par
}
{\xe \v embPolygon_reduceByDistance\:fill.c}
{\xe \v fill.c\:embPolygon_reduceByDistance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPolygon_reduceByDistance ({\b EmbArray} *  {\i vertices}, {\b EmbArray} *  {\i simplified}, float  {\i distance})}}
\par
{\bkmkstart AAAAAAABDE}
{\bkmkend AAAAAAABDE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 805} of file {\b fill.c}.}\par
}
{\xe \v embPolygon_reduceByNth\:fill.c}
{\xe \v fill.c\:embPolygon_reduceByNth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPolygon_reduceByNth ({\b EmbArray} *  {\i vertices}, {\b EmbArray} *  {\i out}, int  {\i nth})}}
\par
{\bkmkstart AAAAAAABDF}
{\bkmkend AAAAAAABDF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 835} of file {\b fill.c}.}\par
}
{\xe \v generate_dragon_curve\:fill.c}
{\xe \v fill.c\:generate_dragon_curve}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void generate_dragon_curve (char *  {\i state}, int  {\i iterations})}}
\par
{\bkmkstart AAAAAAABDG}
{\bkmkend AAAAAAABDG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 324} of file {\b fill.c}.}\par
}
{\xe \v hilbert_curve\:fill.c}
{\xe \v fill.c\:hilbert_curve}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int hilbert_curve ({\b EmbPattern} *  {\i pattern}, int  {\i iterations})}}
\par
{\bkmkstart AAAAAAABDH}
{\bkmkend AAAAAAABDH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 268} of file {\b fill.c}.}\par
}
{\xe \v lindenmayer_system\:fill.c}
{\xe \v fill.c\:lindenmayer_system}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int lindenmayer_system ({\b L_system}  {\i L}, char *  {\i state}, int  {\i iterations}, int  {\i complete})}}
\par
{\bkmkstart AAAAAAABDI}
{\bkmkend AAAAAAABDI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 27} of file {\b fill.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v hilbert_curve_l_system\:fill.c}
{\xe \v fill.c\:hilbert_curve_l_system}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b L_system} hilbert_curve_l_system}}
\par
{\bkmkstart AAAAAAABDJ}
{\bkmkend AAAAAAABDJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    {\cf23 'A'}, {\cf22 "AB"}, {\cf22 "F+-"}, ({\cf18 char}**)rules\par
\}\par
}
{
Definition at line {\b 22} of file {\b fill.c}.}\par
}
{\xe \v rules\:fill.c}
{\xe \v fill.c\:rules}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* rules[] = \{"+BF-AFA-FB+", "-AF+BFB+FA-"\}}}
\par
{\bkmkstart AAAAAAABDK}
{\bkmkend AAAAAAABDK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b fill.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
fill.c\par \pard\plain 
{\tc\tcl2 \v src/fill.c}
{\xe \v src/fill.c}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /* }\par
00002 {\cf20  * This file is part of libembroidery.}\par
00003 {\cf20  *}\par
00004 {\cf20  * Copyright 2018-2022 The Embroidermodder Team}\par
00005 {\cf20  * Licensed under the terms of the zlib license.}\par
00006 {\cf20  *}\par
00007 {\cf20  * This file contains all the read and write functions for the}\par
00008 {\cf20  * library.}\par
00009 {\cf20  *}\par
00010 {\cf20  * FILL ALGORITHMS}\par
00011 {\cf20  *******************************************************************/}\par
00012 \par
00013 {\cf21 #include <stdio.h>}\par
00014 {\cf21 #include <stdlib.h>}\par
00015 {\cf21 #include <string.h>}\par
00016 {\cf21 #include <math.h>}\par
00017 \par
00018 {\cf21 #include "embroidery_internal.h"}\par
00019 \par
00020 {\cf17 const} {\cf18 char} *rules[] = \{{\cf22 "+BF-AFA-FB+"}, {\cf22 "-AF+BFB+FA-"}\};\par
00021 \par
00022 L_system hilbert_curve_l_system = \{\par
00023     {\cf23 'A'}, {\cf22 "AB"}, {\cf22 "F+-"}, ({\cf18 char}**)rules\par
00024 \};\par
00025 \par
00026 {\cf20 /* This is a slow generation algorithm */}\par
00027 {\cf18 int} lindenmayer_system(L_system L, {\cf18 char} *state, {\cf18 int} iterations, {\cf18 int} complete)\par
00028 \{\par
00029     {\cf20 /* We know that the full length of the curve has to fit within}\par
00030 {\cf20      * the number of stitches and we can cancel consecutive +-, -+}\par
00031 {\cf20      * etc.}\par
00032 {\cf20      *}\par
00033 {\cf20 }\par
00034 {\cf20 Potential reference:}\par
00035 {\cf20 }\par
00036 {\cf20 @book\{Prusinkiewicz1996Mar,}\par
00037 {\cf20     author = \{Prusinkiewicz, Przemyslaw and Lindenmayer, Aristid and Hanan, J. S. and Fracchia, F. D. and Fowler, D. R. and de Boer, M. J. M. and Mercer, L.\},}\par
00038 {\cf20     title = \{\{The Algorithmic Beauty of Plants (The Virtual Laboratory)\}\},}\par
00039 {\cf20     year = \{1996\},}\par
00040 {\cf20     month = \{Mar\},}\par
00041 {\cf20     publisher = \{Springer\}}\par
00042 {\cf20 \}}\par
00043 {\cf20      */}\par
00044     {\cf18 char} *new_state;\par
00045     {\cf18 int} j;\par
00046 \par
00047     {\cf19 if} (complete == 0) \{\par
00048         state[0] = L.axiom;\par
00049         state[1] = 0;\par
00050         lindenmayer_system(L, state, iterations, complete+1);\par
00051         {\cf19 return} 0;\par
00052     \}\par
00053 \par
00054     new_state = state + MAX_STITCHES*5;\par
00055 \par
00056     new_state[0] = 0;\par
00057 \par
00058     {\cf20 /* replace letters using rules by copying to new_state */}\par
00059     {\cf19 for} (j=0; j < (int)strlen(state); j++) \{\par
00060         {\cf19 if} (state[j] >= {\cf23 'A'} && state[j] < {\cf23 'F'}) \{\par
00061             strcat(new_state, L.rules[state[j]-{\cf23 'A'}]);\par
00062         \}\par
00063         {\cf19 if} (state[j] == {\cf23 'F'}) \{\par
00064             strcat(new_state, {\cf22 "F"});\par
00065         \}\par
00066         {\cf19 if} (state[j] == {\cf23 '+'}) \{\par
00067             strcat(new_state, {\cf22 "+"});\par
00068         \}\par
00069         {\cf19 if} (state[j] == {\cf23 '-'}) \{\par
00070             strcat(new_state, {\cf22 "-"});\par
00071         \}\par
00072     \}\par
00073     memcpy(state, new_state, strlen(new_state)+1);\par
00074 \par
00075     {\cf19 if} (complete < iterations) \{\par
00076         lindenmayer_system(L, state, iterations, complete+1);\par
00077     \}\par
00078     {\cf19 return} 0;\par
00079 \}\par
00080 \par
00081 {\cf20 /* Remove points that lie in the middle of two short stitches that could}\par
00082 {\cf20  * be one longer stitch. Repeat until none are found.}\par
00083 {\cf20  */}\par
00084 {\cf17 static} {\cf18 void}\par
00085 join_short_stitches({\cf18 int} *points, {\cf18 int} *n_points, {\cf18 int} width, {\cf18 int} tolerence)\par
00086 \{\par
00087     {\cf18 int} found = 1;\par
00088     {\cf19 while} (found > 0) \{\par
00089         {\cf18 int} i;\par
00090         found = 0;\par
00091         {\cf19 for} (i=*n_points-2; i>=0; i--) \{\par
00092             {\cf18 int} st1 = points[i+1]%width - points[i]%width;\par
00093             {\cf18 int} st2 = points[i+2]%width - points[i+1]%width;\par
00094             {\cf18 int} same_line = (points[i+1]/width == points[i]/width)\par
00095                             && (points[i+2]/width == points[i+1]/width);\par
00096             {\cf19 if} (st1 < tolerence && st2 < tolerence && same_line) \{\par
00097                 found++;\par
00098                 {\cf19 break};\par
00099             \}\par
00100         \}\par
00101         {\cf19 if} (found) \{\par
00102             {\cf20 /* Remove the point. */}\par
00103             i++;\par
00104             {\cf19 for} (; i<*n_points; i++) \{\par
00105                 points[i] = points[i+1];\par
00106             \}\par
00107             (*n_points)--;\par
00108         \}\par
00109     \}\par
00110 \}\par
00111 \par
00112 {\cf20 /* Identify darker pixels to put stitches in.}\par
00113 {\cf20  */}\par
00114 {\cf17 static} {\cf18 int} *\par
00115 threshold_method(EmbImage *image, {\cf18 int} *n_points,\par
00116     {\cf18 int} subsample_width, {\cf18 int} subsample_height, {\cf18 int} threshold)\par
00117 \{\par
00118     {\cf18 int} i, j;\par
00119     {\cf18 int} *points;\par
00120     {\cf18 int} height = image->height;\par
00121     {\cf18 int} width = image->width;\par
00122     points = ({\cf18 int} *)malloc((height/subsample_height)\par
00123         *(width/subsample_width) * {\cf17 sizeof}({\cf18 int}));\par
00124     *n_points = 0;\par
00125     {\cf19 for} (i=0; i<height/subsample_height; i++)\par
00126     {\cf19 for} (j=0; j<width/subsample_width; j++) \{\par
00127         EmbColor color;\par
00128         {\cf18 int} index = subsample_height*i*width+subsample_width*j;\par
00129         color.r = image->data[3*index+0];\par
00130         color.g = image->data[3*index+1];\par
00131         color.b = image->data[3*index+2];\par
00132         {\cf19 if} (color.r+color.g+color.b < threshold) \{\par
00133             points[*n_points] = index;\par
00134             (*n_points)++;\par
00135         \}\par
00136     \}\par
00137     {\cf19 return} points;\par
00138 \}\par
00139 \par
00140 {\cf20 /* Greedy Algorithm}\par
00141 {\cf20 * ----------------}\par
00142 {\cf20 * For each point in the list find the shortest distance to}\par
00143 {\cf20 * any possible neighbour, then perform a swap to make that}\par
00144 {\cf20 * neighbour the next item in the list.}\par
00145 {\cf20 * }\par
00146 {\cf20 * To make the stitches lie more on one axis than the other}\par
00147 {\cf20 * bias the distance operator to prefer horizontal direction.}\par
00148 {\cf20 */}\par
00149 {\cf17 static} {\cf18 void}\par
00150 greedy_algorithm({\cf18 int} *points, {\cf18 int} n_points, {\cf18 int} width, EmbReal bias)\par
00151 \{\par
00152     {\cf18 int} i, j;\par
00153     printf({\cf22 "points[0] = %d\\n"}, points[0]);\par
00154     printf({\cf22 "n_points = %d\\n"}, n_points);\par
00155     printf({\cf22 "width = %d\\n"}, width);\par
00156     printf({\cf22 "bias = %f\\n"}, bias);\par
00157 \par
00158     {\cf19 for} (i=0; i<n_points-1; i++) \{\par
00159         {\cf18 int} stor;\par
00160         EmbReal shortest = 1.0e20;\par
00161         {\cf18 int} next = i+1;\par
00162         {\cf20 /* Find nearest neighbour. */}\par
00163         {\cf18 int} x1 = points[i]%width;\par
00164         {\cf18 int} y1 = points[i]/width;\par
00165         {\cf19 for} (j=i+1; j<n_points; j++) \{\par
00166             {\cf18 int} x, y;\par
00167             EmbReal distance;\par
00168             x = x1 - (points[j]%width);\par
00169             {\cf19 if} (x*x > shortest) \{\par
00170                 {\cf19 continue};\par
00171             \}\par
00172             y = y1 - (points[j]/width);\par
00173             distance = x*x + bias*y*y;\par
00174             {\cf19 if} (distance < shortest) \{\par
00175                 next = j;\par
00176                 shortest = distance;\par
00177             \}\par
00178         \}\par
00179         {\cf19 if} (i%100 == 0) \{\par
00180             printf({\cf22 "%2.1f%%\\n"}, (100.0*i)/(1.0*n_points));\par
00181         \}\par
00182         {\cf20 /* swap points */}\par
00183         stor = points[next];\par
00184         points[next] = points[i+1];\par
00185         points[i+1] = stor;\par
00186     \}\par
00187 \}\par
00188 \par
00189 {\cf17 static} {\cf18 void}\par
00190 save_points_to_pattern(\par
00191     EmbPattern *pattern, {\cf18 int} *points, {\cf18 int} n_points, EmbReal scale, {\cf18 int} width, {\cf18 int} height)\par
00192 \{\par
00193     {\cf18 int} i;\par
00194     {\cf19 for} (i=0; i<n_points; i++) \{\par
00195         {\cf18 int} x, y;\par
00196         x = points[i]%width;\par
00197         y = height - points[i]/width;\par
00198         embPattern_addStitchAbs(pattern, scale*x, scale*y, NORMAL, 0);\par
00199     \}\par
00200 \}\par
00201 \par
00202 {\cf20 /* Uses a threshhold method to determine where to put}\par
00203 {\cf20  * lines in the fill.}\par
00204 {\cf20  *}\par
00205 {\cf20  * Needs to pass a "donut test", i.e. an image with black pixels where:}\par
00206 {\cf20  *     10 < x*x + y*y < 20}\par
00207 {\cf20  * over the area (-30, 30) x (-30, 30).}\par
00208 {\cf20  * }\par
00209 {\cf20  * Use render then image difference to see how well it passes.}\par
00210 {\cf20  */}\par
00211 {\cf18 void}\par
00212 embPattern_horizontal_fill(EmbPattern *pattern, EmbImage *image, {\cf18 int} threshhold)\par
00213 \{\par
00214     {\cf20 /* Size of the crosses in millimeters. */}\par
00215     EmbReal scale = 0.1;\par
00216     {\cf18 int} sample_w = 3;\par
00217     {\cf18 int} sample_h = 3;\par
00218     EmbReal bias = 1.2;\par
00219     {\cf18 int} *points;\par
00220     {\cf18 int} n_points;\par
00221 \par
00222     points = threshold_method(image, &n_points, sample_w, sample_h, threshhold);\par
00223     greedy_algorithm(points, n_points, image->width, bias);\par
00224     join_short_stitches(points, &n_points, image->width, 40);\par
00225     save_points_to_pattern(pattern, points, n_points, scale, image->width, image->height);\par
00226 \par
00227     embPattern_end(pattern);\par
00228     free(points);\par
00229 \}\par
00230 \par
00231 {\cf20 /* Uses a threshhold method to determine where to put}\par
00232 {\cf20  * crosses in the fill.}\par
00233 {\cf20  *}\par
00234 {\cf20  * To improve this, we can remove the vertical stitches when two crosses}\par
00235 {\cf20  * neighbour. Currently the simple way to do this is to chain crosses}\par
00236 {\cf20  * that are neighbours exactly one ahead.}\par
00237 {\cf20  */}\par
00238 {\cf18 void}\par
00239 embPattern_crossstitch(EmbPattern *pattern, EmbImage *image, {\cf18 int} threshhold)\par
00240 \{\par
00241     {\cf18 int} i;\par
00242     {\cf20 /* Size of the crosses in millimeters. */}\par
00243     EmbReal scale = 0.1;\par
00244     {\cf18 int} sample_w = 5;\par
00245     {\cf18 int} sample_h = 5;\par
00246     EmbReal bias = 1.0;\par
00247     {\cf18 int} *points;\par
00248     {\cf18 int} n_points;\par
00249     {\cf18 int} width = 1000;\par
00250     points = threshold_method(image, &n_points, sample_w, sample_h, threshhold);\par
00251     greedy_algorithm(points, n_points, width, bias);\par
00252 \par
00253     {\cf19 for} (i=0; i<n_points; i++) \{\par
00254         EmbReal x, y;\par
00255         x = points[i]%width;\par
00256         y = points[i]/width;\par
00257         printf({\cf22 "%f %f\\n"}, x, y);\par
00258         embPattern_addStitchAbs(pattern, scale*x, scale*y, NORMAL, 0);\par
00259         embPattern_addStitchAbs(pattern, scale*(x+sample_w), scale*(y+sample_h), NORMAL, 0);\par
00260         embPattern_addStitchAbs(pattern, scale*x, scale*(y+sample_h), NORMAL, 0);\par
00261         embPattern_addStitchAbs(pattern, scale*(x+sample_w), scale*y, NORMAL, 0);\par
00262     \}\par
00263 \par
00264     embPattern_end(pattern);\par
00265 \}\par
00266 \par
00267 {\cf18 int}\par
00268 hilbert_curve(EmbPattern *pattern, {\cf18 int} iterations)\par
00269 \{\par
00270     {\cf20 /*}\par
00271 {\cf20     https://en.wikipedia.org/wiki/Hilbert_curve}\par
00272 {\cf20 }\par
00273 {\cf20     Using the Lindenmayer System, so we can save work across}\par
00274 {\cf20     different functions.}\par
00275 {\cf20     */}\par
00276     {\cf18 char} *state;\par
00277     {\cf18 int} i, position[2], direction;\par
00278     EmbReal scale = 1.0;\par
00279 \par
00280     {\cf20 /* Make the n-th iteration. */}\par
00281     state = malloc(MAX_STITCHES*10);\par
00282     lindenmayer_system(hilbert_curve_l_system, state, iterations, 0);\par
00283 \par
00284     {\cf20 /* Convert to an embroidery pattern. */}\par
00285     position[0] = 0;\par
00286     position[1] = 0;\par
00287     direction = 0;\par
00288 \par
00289     {\cf19 for} (i = 0; i < (int)strlen(state); i++) \{\par
00290         {\cf19 if} (state[i] == {\cf23 '+'}) \{\par
00291             direction = (direction + 1) % 4;\par
00292             {\cf19 continue};\par
00293         \}\par
00294         {\cf19 if} (state[i] == {\cf23 '-'}) \{\par
00295             direction = (direction + 3) % 4;\par
00296             {\cf19 continue};\par
00297         \}\par
00298         {\cf19 if} (state[i] == {\cf23 'F'}) \{\par
00299             {\cf18 int} flags = NORMAL;\par
00300             {\cf19 switch} (direction) \{\par
00301             {\cf19 case} 0:\par
00302             {\cf19 default}:\par
00303                 position[0]--;\par
00304                 {\cf19 break};\par
00305             {\cf19 case} 1:\par
00306                 position[1]++;\par
00307                 {\cf19 break};\par
00308             {\cf19 case} 2:\par
00309                 position[0]++;\par
00310                 {\cf19 break};\par
00311             {\cf19 case} 3:\par
00312                 position[1]--;\par
00313                 {\cf19 break};\par
00314             \}\par
00315             embPattern_addStitchAbs(pattern, position[0]*scale, position[1]*scale, flags, 0);\par
00316         \}\par
00317     \}\par
00318     free(state);\par
00319     embPattern_end(pattern);\par
00320     {\cf19 return} 0;\par
00321 \}\par
00322 \par
00323 {\cf20 /* using the "paper folding" method (find citation) */}\par
00324 {\cf18 void} generate_dragon_curve({\cf18 char} *state, {\cf18 int} iterations)\par
00325 \{\par
00326     {\cf18 int} i, length;\par
00327     {\cf19 if} (iterations == 1) \{\par
00328         state[0] = {\cf23 'R'};\par
00329         state[1] = 0;\par
00330         {\cf19 return};\par
00331     \}\par
00332     length = strlen(state);\par
00333     {\cf19 for} (i=length-1; i>=0; i--) \{\par
00334         state[2*i+1] = state[i];\par
00335         {\cf19 if} (i%2 == 0) \{\par
00336             state[2*i] = {\cf23 'R'};\par
00337         \} {\cf19 else} \{\par
00338             state[2*i] = {\cf23 'L'};\par
00339         \}\par
00340     \}\par
00341     state[2*length+1] = 0;\par
00342     generate_dragon_curve(state, iterations-1);\par
00343 \}\par
00344 \par
00345 {\cf18 int} dragon_curve({\cf18 int} iterations)\par
00346 \{\par
00347     {\cf18 char} *state;\par
00348     {\cf19 if} (iterations > 10) \{\par
00349         puts({\cf22 "The dragon curve is only supported up to 10 iterations."});\par
00350         {\cf19 return} 0;\par
00351     \}\par
00352     state = malloc(1<<(iterations+1));\par
00353     generate_dragon_curve(state, iterations);\par
00354     free(state);\par
00355     {\cf19 return} 1;\par
00356 \}\par
00357 \par
00358 {\cf21 #if 0}\par
00359 StitchBlock* BreakIntoColorBlocks(EmbPattern *pattern)\par
00360 \{\par
00361     {\cf18 int} i;\par
00362     {\cf18 int} sa2 = {\cf17 new} StitchBlock();\par
00363     {\cf18 int} oldColor = pattern->stitch_list->stitch[0].color;\par
00364     {\cf18 int} color = pattern.ColorList[oldColor];\par
00365     sa2.Thread = {\cf17 new} Thread(color.Red, color.Blue, color.Green);\par
00366     {\cf19 for} (i = 0; i < pattern->stitch_list->count; i++) \{\par
00367         EmbStitch s = pattern->stitch_list->stitch[i];\par
00368         {\cf19 if} (s.color != oldColor) \{\par
00369             yield {\cf19 return} sa2;\par
00370             sa2 = {\cf17 new} StitchBlock();\par
00371             color = pattern.ColorList[s.ColorIndex];\par
00372             sa2.Thread = {\cf17 new} Thread(color.Red, color.Blue, color.Green);\par
00373             oldColor = s.ColorIndex;\par
00374         \}\par
00375         {\cf18 int} vs = {\cf17 new} VectorStitch \{ Xy = {\cf17 new} Point(s.X, s.Y), Color = s.ColorIndex \};\par
00376         sa2.Stitches.Add(vs);\par
00377     \}\par
00378     yield {\cf19 return} sa2;\par
00379 \}\par
00380 \par
00381 \par
00382 \par
00383 StitchBlock * BreakIntoSeparateObjects(EmbStitchBlock* blocks)\par
00384 \{\par
00385     {\cf18 int} i, block;\par
00386     EmbReal previousAngle = 0.0;\par
00387     {\cf19 for} (block=0; block<blocks->length; block++) \{\par
00388         {\cf18 int} stitches = {\cf17 new} List<VectorStitch>();\par
00389         block.Stitches[0].Type = VectorStitchType.Contour;\par
00390         block.Stitches[block.Stitches.Count - 1].Type = VectorStitchType.Contour;\par
00391 \par
00392         {\cf19 for} ({\cf18 int} i = 0; i < block.Stitches.Count - 2; i++) \{ {\cf20 /* step 0 */}\par
00393             EmbReal dx = (embVector_relativeX(block.Stitches[i].Xy, block.Stitches[i + 1].Xy, block.Stitches[i + 2].Xy));\par
00394             block.Stitches[i + 1].Type = dx <= 0 ? VectorStitchType.Run : VectorStitchType.Contour;\par
00395             block.Stitches[i].Angle = GetAngle(block.Stitches[i], block.Stitches[i + 1]);\par
00396             stitches.Add(block.Stitches[i].Clone());\par
00397             {\cf19 if} (i > 0) \{\par
00398                 {\cf19 if} ((block.Stitches[i].Type == VectorStitchType.Contour) && fabs(block.Stitches[i].Angle - previousAngle) > (20/180*embConstantPi)) \{\par
00399                     yield {\cf19 return}\par
00400                         {\cf17 new} StitchBlock\par
00401                             \{\par
00402                                 Stitches = stitches,\par
00403                                 Angle = stitches.Average(x => x.Angle),\par
00404                                 Thread = {\cf17 new} Thread(block.Thread.Red, block.Thread.Blue, block.Thread.Green)\par
00405                             \};\par
00406                     stitches = {\cf17 new} List<VectorStitch>();\par
00407 \par
00408                 \}\par
00409             \}\par
00410         \}\par
00411 \par
00412         {\cf20 /* step 1 */}\par
00413         {\cf19 for} (i = 1; i < sa.Stitches.Count - 3; i++) \{\par
00414             {\cf19 if} (sa.Stitches[i + 1].Type == VectorStitchType.Contour) \{\par
00415                 {\cf18 float} dy = embVector_relativeY(sa[i + 1].XY, sa[i + 2].XY, sa[i + 3].XY);\par
00416                 {\cf18 float} dy2 = embVector_relativeY(sa[i].XY, sa[i + 1].XY, sa[i + 2].XY);\par
00417                 {\cf18 float} dy3 = embVector_relativeY(sa[i + 2].XY, sa[i + 3].XY, sa[i + 4].XY);\par
00418                 {\cf19 if} (dy)\par
00419                 {\cf19 if} (sa.Stitches[i - 1].Type == VectorStitchType.Run || sa.Stitches[i + 1].Type == VectorStitchType.Run) \{\par
00420                     sa.Stitches[i].Type = VectorStitchType.Tatami;\par
00421                 \}\par
00422                 {\cf19 else} \{\par
00423                     sa.Stitches[i].Type = VectorStitchType.Satin;\par
00424                 \}\par
00425             \}\par
00426         \}\par
00427     \}\par
00428 \}\par
00429 \par
00430 StitchObject * FindOutline(EmbStitchBlock* stitchData)\par
00431 \{\par
00432     {\cf18 int} currColorIndex = 0, sa;\par
00433     {\cf18 int} pOdd = {\cf17 new} List<Point>();\par
00434     {\cf18 int} pEven = {\cf17 new} List<Point>();\par
00435     {\cf19 for} (sa=0; sa<stitchData->count; sa++) \{\par
00436         {\cf19 if} (sa.Stitches.Count > 0) \{\par
00437             sa.Stitches[0].Type = VectorStitchType.Contour;\par
00438             sa.Stitches[sa.Stitches.Count - 1].Type = VectorStitchType.Contour;\par
00439             {\cf20 /* step 0 */}\par
00440             {\cf19 for} ({\cf18 int} i = 0; i < sa.Stitches.Count - 2; i++) \{\par
00441                 {\cf18 float} dx = (GetRelativeX(sa.Stitches[i].Xy, sa.Stitches[i + 1].Xy, sa.Stitches[i + 2].Xy));\par
00442                 sa.Stitches[i + 1].Type = dx <= 0 ? VectorStitchType.Run : VectorStitchType.Contour;\par
00443                 sa.Stitches[i].Angle = embVector_angle(sa.Stitches[i], sa.Stitches[i + 1]);\par
00444             \}\par
00445             {\cf20 /* step 1 */}\par
00446             {\cf19 for} ({\cf18 int} i = 1; i < sa.Stitches.Count - 3; i++) \{\par
00447                 {\cf19 if} (sa.Stitches[i + 1].Type == VectorStitchType.Contour) \{\par
00448                     {\cf18 float} dy = embVector_relativeY(sa[i + 1].XY, sa[i + 2].XY, sa[i + 3].XY);\par
00449                     {\cf18 float} dy2 = embVector_relativeY(sa[i].XY, sa[i + 1].XY, sa[i + 2].XY);\par
00450                     {\cf18 float} dy3 = embVector_relativeY(sa[i + 2].XY, sa[i + 3].XY, sa[i + 4].XY);\par
00451                     {\cf19 if} (dy)\par
00452                     {\cf19 if} (sa.Stitches[i - 1].Type == VectorStitchType.Run || sa.Stitches[i + 1].Type == VectorStitchType.Run) \{\par
00453                         sa.Stitches[i].Type = VectorStitchType.Tatami;\par
00454                     \}\par
00455                     {\cf19 else} \{\par
00456                         sa.Stitches[i].Type = VectorStitchType.Satin;\par
00457                     \}\par
00458                 \}\par
00459             \}\par
00460         \}\par
00461 \par
00462 \par
00463         {\cf18 int} oddEven = 0;\par
00464         {\cf19 foreach} (VectorStitch t {\cf19 in} sa.Stitches) \{\par
00465             {\cf19 if} ((t.Type == VectorStitchType.Contour) && (oddEven % 2) == 0) \{\par
00466                 pEven.Add(t.Xy);\par
00467 \par
00468                 oddEven++;\par
00469             \}\par
00470             {\cf19 else} {\cf19 if} ((t.Type == VectorStitchType.Contour) && (oddEven % 2) == 1) \{\par
00471                 pOdd.Add(t.Xy);\par
00472                 oddEven++;\par
00473             \}\par
00474         \}\par
00475         currColorIndex++;\par
00476         {\cf18 int} so = {\cf17 new} StitchObject \{ SideOne = pEven, SideTwo = pOdd, ColorIndex = currColorIndex \};\par
00477         yield {\cf19 return} so;\par
00478         pEven = {\cf17 new} List<Point>();\par
00479         pOdd = {\cf17 new} List<Point>();\par
00480         {\cf20 /* break; */}\par
00481     \}\par
00482 \}\par
00483 \par
00484 EmbPattern DrawGraphics(EmbPattern p) \{\par
00485     {\cf18 int} stitchData = BreakIntoColorBlocks(p);\par
00486 \par
00487     {\cf18 int} outBlock = {\cf17 new} List<StitchBlock>(BreakIntoSeparateObjects(stitchData));\par
00488     {\cf19 foreach}(var block {\cf19 in} stitchData) \{\par
00489         {\cf19 foreach} (var stitch {\cf19 in} block.Stitches) \{\par
00490             {\cf19 if} (stitch.Angle != 0) \{\par
00491                 {\cf18 int} aaa = 1;\par
00492             \}\par
00493         \}\par
00494     \}\par
00495     {\cf18 int} xxxxx = outBlock;\par
00496     {\cf18 int} objectsFound = FindOutline(stitchData);\par
00497     {\cf18 int} outPattern = {\cf17 new} Pattern();\par
00498     outPattern.AddColor({\cf17 new} Thread(255, 0, 0, {\cf22 "none"}, {\cf22 "None"}));\par
00499     {\cf18 int} colorIndex = outPattern.ColorList.Count - 1;\par
00500     {\cf18 int} r = {\cf17 new} Random();\par
00501     {\cf19 foreach} (StitchObject stitchObject {\cf19 in} objectsFound) \{\par
00502         {\cf19 if} (stitchObject.SideOne.Count > 1 && stitchObject.SideTwo.Count > 1) \{\par
00503             outPattern.AddColor({\cf17 new} Thread(({\cf18 byte}) (r.Next()%256), ({\cf18 byte}) (r.Next()%256), ({\cf18 byte}) (r.Next()%256),\par
00504                                            {\cf22 "none"}, {\cf22 "None"}));\par
00505             colorIndex++;\par
00506             outPattern.AddStitchRelative(0, 0, StitchTypes.Stop);\par
00507             {\cf18 int} points = stitchObject.Generate2(75);\par
00508             {\cf19 foreach} (var point {\cf19 in} points) \{\par
00509                 outPattern.AddStitchAbsolute(point.X, point.Y, StitchTypes.Normal);\par
00510             \}\par
00511             {\cf19 break};\par
00512             StitchObject stitchObject = objectsFound[1];))\par
00513             {\cf19 if} (stitchObject.SideOne.Count > 0) \{\par
00514                 outPattern.stitch_list.Add({\cf17 new} Stitch(stitchObject.SideOne[0].X, stitchObject.SideOne[0].Y,\par
00515                                                      StitchType.Jump, colorIndex));\par
00516             \}\par
00517             {\cf19 foreach} (Point t {\cf19 in} stitchObject.SideOne) \{\par
00518             \par
00519                 outPattern.stitch_list.Add({\cf17 new} Stitch(t.X, t.Y,\par
00520                                                      StitchType.Normal, colorIndex));\par
00521             \}\par
00522             {\cf19 foreach} (Point t {\cf19 in} stitchObject.SideTwo) \{\par
00523                 outPattern.stitch_list.Add({\cf17 new} Stitch(t.X, t.Y,\par
00524                                                      StitchType.Normal, colorIndex));\par
00525             \}\par
00526             {\cf19 break};\par
00527         \}\par
00528     \}\par
00529     outPattern.AddStitchRelative(0, 0, StitchTypes.End);\par
00530     {\cf19 return} outPattern;\par
00531     {\cf20 /*}\par
00532 {\cf20     return (SimplifyOutline(outPattern));}\par
00533 {\cf20     */}\par
00534 \}\par
00535 \par
00536 EmbPattern SimplifyOutline(EmbPattern pattern)\par
00537 \{\par
00538     {\cf18 int} v = {\cf17 new} Vertices();\par
00539     v.AddRange(pattern.stitch_list.Select(point => {\cf17 new} Vector2(point.X, point.Y)));\par
00540     {\cf18 int} output = SimplifyTools.DouglasPeuckerSimplify(v, 10);\par
00541     {\cf18 int} patternOut = {\cf17 new} Pattern();\par
00542     {\cf19 foreach} (var color {\cf19 in} pattern.ColorList)\par
00543     \{\par
00544         patternOut.AddColor(color);\par
00545     \}\par
00546 \par
00547     {\cf19 foreach} (var vertex {\cf19 in} output)\par
00548     \{\par
00549         patternOut.AddStitchAbsolute(vertex.X, vertex.Y, StitchTypes.Normal);\par
00550     \}\par
00551     patternOut.AddStitchRelative(0, 0, StitchTypes.End);\par
00552     {\cf19 return} patternOut;\par
00553 \}\par
00554 \par
00555 {\cf18 bool}[] _usePt;\par
00556 EmbReal _distanceTolerance;\par
00557 \par
00558 {\cf20 /* Removes all collinear points on the polygon. */}\par
00559 Vertices CollinearSimplify(Vertices vertices, {\cf18 float} collinearityTolerance)\par
00560 \{\par
00561     {\cf20 /* We can't simplify polygons under 3 vertices */}\par
00562     {\cf19 if} (vertices.Count < 3)\par
00563         {\cf19 return} vertices;\par
00564 \par
00565     {\cf18 int} simplified = {\cf17 new} Vertices();\par
00566 \par
00567     {\cf19 for} ({\cf18 int} i = 0; i < vertices.Count; i++) \{\par
00568         {\cf18 int} prevId = vertices.PreviousIndex(i);\par
00569         {\cf18 int} nextId = vertices.NextIndex(i);\par
00570 \par
00571         Vector2 prev = vertices[prevId];\par
00572         Vector2 current = vertices[i];\par
00573         Vector2 next = vertices[nextId];\par
00574 \par
00575         {\cf20 /* If they collinear, continue */}\par
00576         {\cf19 if} (embVector_collinear(ref prev, ref current, ref next, collinearityTolerance))\par
00577             {\cf19 continue};\par
00578 \par
00579         simplified.Add(current);\par
00580     \}\par
00581 \par
00582     {\cf19 return} simplified;\par
00583 \}\par
00584 \par
00585 \par
00586 {\cf20 /* Removes all collinear points on the polygon.}\par
00587 {\cf20  * Has a default bias of 0}\par
00588 {\cf20  *}\par
00589 {\cf20  * param vertices: The polygon that needs simplification.}\par
00590 {\cf20  * returns: A simplified polygon.}\par
00591 {\cf20  */}\par
00592 Vertices CollinearSimplify(Vertices vertices)\par
00593 \{\par
00594     {\cf19 return} CollinearSimplify(vertices, 0);\par
00595 \}\par
00596 \par
00597 {\cf20 /*}\par
00598 {\cf20  * Ramer-Douglas-Peucker polygon simplification algorithm.}\par
00599 {\cf20  * This is the general recursive version that does not use the}\par
00600 {\cf20  * speed-up technique by using the Melkman convex hull.}\par
00601 {\cf20  * If you pass in 0, it will remove all collinear points.}\par
00602 {\cf20  */}\par
00603 Vertices DouglasPeuckerSimplify(Vertices vertices, {\cf18 float} distanceTolerance)\par
00604 \{\par
00605     _distanceTolerance = distanceTolerance;\par
00606 \par
00607     _usePt = {\cf17 new} {\cf18 bool}[vertices.Count];\par
00608     {\cf19 for} ({\cf18 int} i = 0; i < vertices.Count; i++)\par
00609     \{\par
00610         _usePt[i] = {\cf17 true};\par
00611     \}\par
00612     SimplifySection(vertices, 0, vertices.Count - 1);\par
00613     {\cf18 int} result = {\cf17 new} Vertices();\par
00614     result.AddRange(vertices.Where((t, i) => _usePt[i]));\par
00615     {\cf19 return} result;\par
00616 \}\par
00617 \par
00618 {\cf18 void} SimplifySection(Vertices vertices, {\cf18 int} i, {\cf18 int} j)\par
00619 \{\par
00620     {\cf19 if} ((i + 1) == j)\par
00621         {\cf19 return};\par
00622 \par
00623     Vector2 a = vertices[i];\par
00624     Vector2 b = vertices[j];\par
00625     EmbReal maxDistance = -1.0;\par
00626     {\cf18 int} maxIndex = i;\par
00627     {\cf19 for} ({\cf18 int} k = i + 1; k < j; k++)\par
00628     \{\par
00629         EmbReal distance = DistancePointLine(vertices[k], a, b);\par
00630 \par
00631         {\cf19 if} (distance > maxDistance)\par
00632         \{\par
00633             maxDistance = distance;\par
00634             maxIndex = k;\par
00635         \}\par
00636     \}\par
00637     {\cf19 if} (maxDistance <= _distanceTolerance) \{\par
00638         {\cf19 for} ({\cf18 int} k = i + 1; k < j; k++) \{\par
00639             _usePt[k] = 0;\par
00640         \}\par
00641     \}\par
00642     {\cf19 else} \{\par
00643         SimplifySection(vertices, i, maxIndex);\par
00644         SimplifySection(vertices, maxIndex, j);\par
00645     \}\par
00646 \}\par
00647 \par
00648 EmbReal DistancePointLine(EmbVector p, EmbVector a, EmbVector b)\par
00649 \{\par
00650     {\cf20 /* if start == end, then use point-to-point distance */}\par
00651     {\cf19 if} (a.X == b.X && a.Y == b.Y)\par
00652         {\cf19 return} DistancePointPoint(p, a);\par
00653 \par
00654     {\cf20 /* otherwise use comp.graphics.algorithms Frequently Asked Questions method */}\par
00655     {\cf20 /* (1)               AC dot AB}\par
00656 {\cf20                 r =   ---------}\par
00657 {\cf20                       ||AB||^2}\par
00658 {\cf20 }\par
00659 {\cf20                 r has the following meaning:}\par
00660 {\cf20                 r=0 Point = A}\par
00661 {\cf20                 r=1 Point = B}\par
00662 {\cf20                 r<0 Point is on the backward extension of AB}\par
00663 {\cf20                 r>1 Point is on the forward extension of AB}\par
00664 {\cf20                 0<r<1 Point is interior to AB}\par
00665 {\cf20     */}\par
00666 \par
00667     EmbReal r = ((p.X - a.X) * (b.X - a.X) + (p.Y - a.Y) * (b.Y - a.Y))\par
00668                /\par
00669                ((b.X - a.X) * (b.X - a.X) + (b.Y - a.Y) * (b.Y - a.Y));\par
00670 \par
00671     {\cf19 if} (r <= 0.0) {\cf19 return} DistancePointPoint(p, a);\par
00672     {\cf19 if} (r >= 1.0) {\cf19 return} DistancePointPoint(p, b);\par
00673 \par
00674 \par
00675     {\cf20 /* (2)}\par
00676 {\cf20                     (Ay-Cy)(Bx-Ax)-(Ax-Cx)(By-Ay)}\par
00677 {\cf20                 s = -----------------------------}\par
00678 {\cf20                                 Curve^2}\par
00679 {\cf20 }\par
00680 {\cf20                 Then the distance from C to Point = |s|*Curve.}\par
00681 {\cf20     */}\par
00682 \par
00683     EmbReal s = ((a.Y - p.Y) * (b.X - a.X) - (a.X - p.X) * (b.Y - a.Y))\par
00684                /\par
00685                ((b.X - a.X) * (b.X - a.X) + (b.Y - a.Y) * (b.Y - a.Y));\par
00686 \par
00687     {\cf19 return} fabs(s) * sqrt(((b.X - a.X) * (b.X - a.X) + (b.Y - a.Y) * (b.Y - a.Y)));\par
00688 \}\par
00689 \par
00690 / * From physics2d.net * /\par
00691 {\cf17 public} Vertices ReduceByArea(Vertices vertices, {\cf18 float} areaTolerance)\par
00692 \{\par
00693     {\cf19 if} (vertices.Count <= 3)\par
00694         {\cf19 return} vertices;\par
00695 \par
00696     {\cf19 if} (areaTolerance < 0)\par
00697     \{\par
00698         {\cf19 throw} {\cf17 new} ArgumentOutOfRangeException({\cf22 "areaTolerance"}, {\cf22 "must be equal to or greater then zero."});\par
00699     \}\par
00700 \par
00701     {\cf18 int} result = {\cf17 new} Vertices();\par
00702     Vector2 v3;\par
00703     Vector2 v1 = vertices[vertices.Count - 2];\par
00704     Vector2 v2 = vertices[vertices.Count - 1];\par
00705     areaTolerance *= 2;\par
00706     {\cf19 for} ({\cf18 int} index = 0; index < vertices.Count; ++index, v2 = v3)\par
00707     \{\par
00708         {\cf19 if} (index == vertices.Count - 1)\par
00709         \{\par
00710             {\cf19 if} (result.Count == 0)\par
00711             \{\par
00712                 {\cf19 throw} {\cf17 new} ArgumentOutOfRangeException({\cf22 "areaTolerance"}, {\cf22 "The tolerance is too high!"});\par
00713             \}\par
00714             v3 = result[0];\par
00715         \}\par
00716         {\cf19 else}\par
00717         \{\par
00718             v3 = vertices[index];\par
00719         \}\par
00720         {\cf18 float} old1, old2, new1;\par
00721         MathUtils.Cross(ref v1, ref v2, out old1);\par
00722         MathUtils.Cross(ref v2, ref v3, out old2);\par
00723         MathUtils.Cross(ref v1, ref v3, out new1);\par
00724         {\cf19 if} (fabs(new1 - (old1 + old2)) > areaTolerance)\par
00725         \{\par
00726             result.Add(v2);\par
00727             v1 = v2;\par
00728         \}\par
00729     \}\par
00730     {\cf19 return} result;\par
00731 \}\par
00732 \par
00733 {\cf20 /* From Eric Jordan's convex decomposition library.}\par
00734 {\cf20  * Merges all parallel edges in the list of vertices.}\par
00735 {\cf20  */}\par
00736 {\cf18 void} MergeParallelEdges(EmbArray *vertices, {\cf18 float} tolerance)\par
00737 \{\par
00738     {\cf18 int} i;\par
00739     {\cf19 if} (vertices.Count <= 3) \{\par
00740         {\cf20 /* Can't do anything useful here to a triangle. */}\par
00741         {\cf19 return};\par
00742     \}\par
00743 \par
00744     {\cf18 int} mergeMe = {\cf17 new} {\cf18 bool}[vertices.Count];\par
00745     {\cf18 int} newNVertices = vertices.Count;\par
00746 \par
00747     {\cf20 /* Gather points to process */}\par
00748     {\cf19 for} (i = 0; i < vertices->count; i++) \{\par
00749         EmbVector delta0, delta1;\par
00750         {\cf18 int} lower = (i == 0) ? (vertices.Count - 1) : (i - 1);\par
00751         {\cf18 int} upper = (i == vertices.Count - 1) ? (0) : (i + 1);\par
00752 \par
00753         delta0 = embVector_subtract(vertices[i], vertices[lower]);\par
00754         delta1 = embVector_subtract(vertices[upper], vertices[i]);\par
00755         {\cf18 float} norm0 = embVector_length(delta0);\par
00756         {\cf18 float} norm1 = embVector_length(delta0);\par
00757 \par
00758         {\cf19 if} (!(norm0 > 0.0f && norm1 > 0.0f) && newNVertices > 3) \{\par
00759             {\cf20 /* Merge identical points */}\par
00760             mergeMe[i] = 1;\par
00761             newNVertices--;\par
00762         \}\par
00763 \par
00764         embVector_normalize(delta0, &delta0);\par
00765         embVector_normalize(delta1, &delta1);\par
00766         {\cf18 float} cross = embVector_cross(delta0, delta1);\par
00767         {\cf18 float} dot = embVector_dot(delta0, delta1);\par
00768 \par
00769         {\cf19 if} (fabs(cross) < tolerance && dot > 0 && newNVertices > 3) \{\par
00770             mergeMe[i] = 1;\par
00771             newNVertices--;\par
00772         \}\par
00773         {\cf19 else} \{\par
00774             mergeMe[i] = 0;\par
00775         \}\par
00776     \}\par
00777 \par
00778     {\cf19 if} (newNVertices == vertices.Count || newNVertices == 0)\par
00779         {\cf19 return};\par
00780 \par
00781     {\cf18 int} currIndex = 0;\par
00782 \par
00783     {\cf20 /* Copy the vertices to a new list and clear the old */}\par
00784     {\cf18 int} oldVertices = {\cf17 new} Vertices(vertices);\par
00785     vertices.Clear();\par
00786 \par
00787     {\cf19 for} (i = 0; i < oldVertices.Count; i++) \{\par
00788         {\cf19 if} (mergeMe[i] || newNVertices == 0 || currIndex == newNVertices)\par
00789             {\cf19 continue};\par
00790 \par
00791         vertices.Add(oldVertices[i]);\par
00792         currIndex++;\par
00793     \}\par
00794 \}\par
00795 {\cf21 #endif}\par
00796 \par
00797 {\cf18 void} embPolygon_reduceByDistance(EmbArray *vertices, EmbArray *simplified, {\cf18 float} distance);\par
00798 {\cf18 void} embPolygon_reduceByNth(EmbArray *vertices, EmbArray *out, {\cf18 int} nth);\par
00799 \par
00800 {\cf20 /* Reduces the polygon by distance.}\par
00801 {\cf20  *}\par
00802 {\cf20  * This is a non-destructive function, so the caller is responsible for}\par
00803 {\cf20  * freeing "vertices" if they choose to keep "simplified".}\par
00804 {\cf20  */}\par
00805 {\cf18 void} embPolygon_reduceByDistance(EmbArray *vertices, EmbArray *simplified, {\cf18 float} distance)\par
00806 \{\par
00807     {\cf18 int} i;\par
00808     {\cf20 /* We can't simplify polygons under 3 vertices */}\par
00809     {\cf19 if} (vertices->count < 3) \{\par
00810         embArray_copy(simplified, vertices);\par
00811         {\cf19 return};\par
00812     \}\par
00813 \par
00814     {\cf19 for} (i = 0; i < vertices->count; i++) \{\par
00815         EmbVector delta;\par
00816         {\cf18 int} nextId = (i + 1) % vertices->count;\par
00817 \par
00818         delta = embVector_subtract(\par
00819             vertices->geometry[nextId].object.vector,\par
00820             vertices->geometry[i].object.vector);\par
00821 \par
00822         {\cf20 /* If they are closer than the distance, continue */}\par
00823         {\cf19 if} (embVector_length(delta) < distance) \{\par
00824             {\cf19 continue};\par
00825         \}\par
00826 \par
00827         embArray_addVector(simplified, vertices->geometry[i].object.vector);\par
00828     \}\par
00829 \}\par
00830 \par
00831 {\cf20 /* Reduces the polygon by removing the Nth vertex in the vertices list.}\par
00832 {\cf20  * This is a non-destructive function, so the caller is responsible for}\par
00833 {\cf20  * freeing vertices if they choose to keep out.}\par
00834 {\cf20  */}\par
00835 {\cf18 void} embPolygon_reduceByNth(EmbArray *vertices, EmbArray *out, {\cf18 int} nth)\par
00836 \{\par
00837     {\cf18 int} i;\par
00838     {\cf20 /* We can't simplify polygons under 3 vertices */}\par
00839     {\cf19 if} (vertices->count < 3) \{\par
00840         embArray_copy(out, vertices);\par
00841         {\cf19 return};\par
00842     \}\par
00843 \par
00844     {\cf19 for} (i=0; i<vertices->count; i++) \{\par
00845         {\cf19 if} (i!=nth) \{\par
00846             embArray_addVector(out, vertices->geometry[i].object.vector);\par
00847         \}\par
00848     \}\par
00849 \}\par
00850 \par
00851 {\cf20 /* .}\par
00852 {\cf20  */}\par
00853 EmbPattern *\par
00854 embPattern_combine(EmbPattern *p1, EmbPattern *p2)\par
00855 \{\par
00856     {\cf18 int} i;\par
00857     EmbPattern *out = embPattern_create();\par
00858     {\cf19 for} (i=0; i<p1->stitch_list->count; i++) \{\par
00859         embArray_addStitch(out->stitch_list, p1->stitch_list->stitch[i]);\par
00860     \}\par
00861     {\cf19 for} (i=0; i<p2->stitch_list->count; i++) \{\par
00862         embArray_addStitch(out->stitch_list, p2->stitch_list->stitch[i]);\par
00863     \}\par
00864     {\cf20 /* These need to be merged, not appended. */}\par
00865     {\cf19 for} (i=0; i<p1->thread_list->count; i++) \{\par
00866         embPattern_addThread(out, p1->thread_list->thread[i]);\par
00867     \}\par
00868     {\cf19 for} (i=0; i<p2->thread_list->count; i++) \{\par
00869         embPattern_addThread(out, p2->thread_list->thread[i]);\par
00870     \}\par
00871     {\cf19 return} out;\par
00872 \}\par
00873 \par
00874 {\cf18 void}\par
00875 embPattern_stitchArc(EmbPattern *p, EmbArc arc, {\cf18 int} thread_index, {\cf18 int} style)\par
00876 \{\par
00877 \par
00878 \}\par
00879 \par
00880 {\cf18 void}\par
00881 embPattern_stitchCircle(EmbPattern *p, EmbCircle circle, {\cf18 int} thread_index, {\cf18 int} style)\par
00882 \{\par
00883     {\cf20 /* style determines:}\par
00884 {\cf20      *     stitch density}\par
00885 {\cf20      *     fill pattern}\par
00886 {\cf20      *     outline or fill}\par
00887 {\cf20      *}\par
00888 {\cf20      * For now it's a straight fill of 1000 stitches of the whole object by }\par
00889 {\cf20      * default.}\par
00890 {\cf20      *}\par
00891 {\cf20      * Consider the intersection of a line in direction "d" that passes through}\par
00892 {\cf20      * the disc with center "c", radius "r". The start and end points are:}\par
00893 {\cf20      *}\par
00894 {\cf20      *     $(c-r(d/|d|), c + r(d/|d|))$}\par
00895 {\cf20      *}\par
00896 {\cf20      * Lines that are above and below this with an even seperation $s$ can be }\par
00897 {\cf20      * found by taking the point on the line to be c+sn where the $n$ is the }\par
00898 {\cf20      * unit normal vector to $d$ and the vector to be $d$ again. The}\par
00899 {\cf20      * intersection points are therefore a right angled triangle, with one side}\par
00900 {\cf20      * r, another s and the third the length to be solved, by Pythagoras we}\par
00901 {\cf20      * have:}\par
00902 {\cf20      *}\par
00903 {\cf20      *    $(c + sn - \\sqrt\{r^2-s^2\}(d/|d|), c + sn + \\sqrt\{r^2-s^2\}(d/|d|))$}\par
00904 {\cf20      *}\par
00905 {\cf20      * repeating this process gives us all the end points and the fill only }\par
00906 {\cf20      * alters these lines by splitting the ones longer than some tolerence.}\par
00907 {\cf20      */}\par
00908     {\cf18 float} s;\par
00909     {\cf18 float} seperation = 0.1;\par
00910     EmbVector direction = \{1.0, 1.0\};\par
00911     EmbVector normal = \{-1.0, 1.0\};\par
00912     embVector_normalize(direction, &direction);\par
00913     embVector_normalize(normal, &normal);\par
00914     {\cf19 for} (s=-circle.radius; s<circle.radius; s += seperation) \{\par
00915         EmbLine line;\par
00916         {\cf18 float} length = sqrt(circle.radius*circle.radius - s*s);\par
00917         EmbVector scaled;\par
00918         embVector_multiply(normal, s, &scaled);\par
00919         line.start = embVector_add(circle.center, scaled);\par
00920         embVector_multiply(direction, length, &scaled);\par
00921         line.start = embVector_subtract(line.start, scaled);\par
00922         embVector_multiply(normal, s, &scaled);\par
00923         line.end = embVector_add(circle.center, scaled);\par
00924         embVector_multiply(direction, length, &scaled);\par
00925         line.end = embVector_add(line.end, scaled);\par
00926         {\cf20 /* Split long stitches here. */}\par
00927         embPattern_addStitchAbs(p, line.start.x, line.start.y, NORMAL, thread_index);\par
00928         embPattern_addStitchAbs(p, line.end.x, line.end.y, NORMAL, thread_index);\par
00929     \}\par
00930 \}\par
00931 \par
00932 {\cf18 void}\par
00933 embPattern_stitchEllipse(EmbPattern *p, EmbEllipse ellipse, {\cf18 int} thread_index, {\cf18 int} style)\par
00934 \{\par
00935 \par
00936 \}\par
00937 \par
00938 {\cf18 void}\par
00939 embPattern_stitchPath(EmbPattern *p, EmbPath rect, {\cf18 int} thread_index, {\cf18 int} style)\par
00940 \{\par
00941 \par
00942 \}\par
00943 \par
00944 {\cf18 void}\par
00945 embPattern_stitchPolygon(EmbPattern *p, EmbPolygon rect, {\cf18 int} thread_index, {\cf18 int} style)\par
00946 \{\par
00947 \par
00948 \}\par
00949 \par
00950 {\cf18 void}\par
00951 embPattern_stitchPolyline(EmbPattern *p, EmbPolyline rect, {\cf18 int} thread_index, {\cf18 int} style)\par
00952 \{\par
00953 \par
00954 \}\par
00955 \par
00956 {\cf18 void}\par
00957 embPattern_stitchRect(EmbPattern *p, EmbRect rect, {\cf18 int} thread_index, {\cf18 int} style)\par
00958 \{\par
00959     {\cf20 /* Here we just stitch the rectangle in the direction of it's longer side. */}\par
00960     EmbReal seperation = 0.1;\par
00961     EmbReal width = rect.right - rect.left;\par
00962     EmbReal height = rect.bottom - rect.top;\par
00963     {\cf19 if} (width > height) \{\par
00964         {\cf18 float} s;\par
00965         {\cf19 for} (s=rect.top; s<rect.bottom; s += seperation) \{\par
00966             {\cf20 /* Split long stitches here. */}\par
00967             embPattern_addStitchAbs(p, rect.top, s, NORMAL, thread_index);\par
00968             embPattern_addStitchAbs(p, rect.bottom, s, NORMAL, thread_index);\par
00969         \}\par
00970     \}\par
00971     {\cf19 else} \{\par
00972         {\cf18 float} s;\par
00973         {\cf19 for} (s=rect.left; s<rect.right; s += seperation) \{\par
00974             {\cf20 /* Split long stitches here. */}\par
00975             embPattern_addStitchAbs(p, s, rect.left, NORMAL, thread_index);\par
00976             embPattern_addStitchAbs(p, s, rect.right, NORMAL, thread_index);\par
00977         \}\par
00978     \}\par
00979 \}\par
00980 \par
00981 {\cf18 void}\par
00982 embPattern_stitchText(EmbPattern *p, EmbRect rect, {\cf18 int} thread_index, {\cf18 int} style)\par
00983 \{\par
00984 \}\par
00985 \par
00986 {\cf18 void}\par
00987 embPattern_convertGeometry(EmbPattern* p)\par
00988 \{\par
00989     {\cf18 int} i;\par
00990     {\cf19 for} (i=0; i<p->geometry->count; i++) \{\par
00991         EmbGeometry g = p->geometry->geometry[i];\par
00992         {\cf19 switch} (g.type) \{\par
00993         {\cf19 case} EMB_ARC: \{\par
00994             {\cf20 /* To Do make the thread up here. */}\par
00995             embPattern_stitchArc(p, g.object.arc, 0, 0);\par
00996             {\cf19 break};\par
00997         \}\par
00998         {\cf19 case} EMB_CIRCLE: \{\par
00999             {\cf20 /* To Do make the thread up here. */}\par
01000             embPattern_stitchCircle(p, g.object.circle, 0, 0);\par
01001             {\cf19 break};\par
01002         \}\par
01003         {\cf19 case} EMB_ELLIPSE: \{\par
01004             {\cf20 /* To Do make the thread up here. */}\par
01005             embPattern_stitchEllipse(p, g.object.ellipse, 0, 0);\par
01006             {\cf19 break};\par
01007         \}\par
01008         {\cf19 case} EMB_RECT: \{\par
01009             {\cf20 /* To Do make the thread up here. */}\par
01010             embPattern_stitchRect(p, g.object.rect, 0, 0);\par
01011             {\cf19 break};\par
01012         \}\par
01013         {\cf19 default}:\par
01014             {\cf19 break};\par
01015         \}\par
01016     \}\par
01017     {\cf20 /* Now ignore the geometry when writing. */}\par
01018     p->geometry->count = 0;\par
01019 \}\par
01020 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/formats.c File Reference\par \pard\plain 
{\tc\tcl2 \v src/formats.c}
{\xe \v src/formats.c}
{\bkmkstart AAAAAAABDL}
{\bkmkend AAAAAAABDL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <ctype.h>}\par
{\f2 #include "embroidery_internal.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b safe_free} (void *data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b embFormat_getExtension} (const char *fileName, char *ending)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b emb_identify_format} (const char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
short {\b fread_int16} (FILE *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned short {\b fread_uint16} (FILE *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b fread_int32_be} (FILE *f)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b fpad} (FILE *file, char c, int n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b binaryWriteShort} (FILE *f, short data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b binaryWriteUShort} (FILE *f, unsigned short data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b binaryWriteUShortBE} (FILE *f, unsigned short data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b binaryWriteInt} (FILE *f, int data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b binaryWriteIntBE} (FILE *f, int data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b binaryWriteUInt} (FILE *f, unsigned int data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b binaryWriteUIntBE} (FILE *f, unsigned int data)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b embPattern_read} ({\b EmbPattern} *pattern, const char *fileName, int format)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b embPattern_write} ({\b EmbPattern} *pattern, const char *fileName, int format)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b embPattern_readAuto} ({\b EmbPattern} *pattern, const char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b embPattern_writeAuto} ({\b EmbPattern} *pattern, const char *fileName)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbFormatList} {\b formatTable} [{\b numberOfFormats}]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char {\b imageWithFrame} [38][48]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v binaryWriteInt\:formats.c}
{\xe \v formats.c\:binaryWriteInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void binaryWriteInt (FILE *  {\i f}, int  {\i data})}}
\par
{\bkmkstart AAAAAAABDM}
{\bkmkend AAAAAAABDM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 235} of file {\b formats.c}.}\par
}
{\xe \v binaryWriteIntBE\:formats.c}
{\xe \v formats.c\:binaryWriteIntBE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void binaryWriteIntBE (FILE *  {\i f}, int  {\i data})}}
\par
{\bkmkstart AAAAAAABDN}
{\bkmkend AAAAAAABDN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 241} of file {\b formats.c}.}\par
}
{\xe \v binaryWriteShort\:formats.c}
{\xe \v formats.c\:binaryWriteShort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void binaryWriteShort (FILE *  {\i f}, short  {\i data})}}
\par
{\bkmkstart AAAAAAABDO}
{\bkmkend AAAAAAABDO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 217} of file {\b formats.c}.}\par
}
{\xe \v binaryWriteUInt\:formats.c}
{\xe \v formats.c\:binaryWriteUInt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void binaryWriteUInt (FILE *  {\i f}, unsigned int  {\i data})}}
\par
{\bkmkstart AAAAAAABDP}
{\bkmkend AAAAAAABDP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 247} of file {\b formats.c}.}\par
}
{\xe \v binaryWriteUIntBE\:formats.c}
{\xe \v formats.c\:binaryWriteUIntBE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void binaryWriteUIntBE (FILE *  {\i f}, unsigned int  {\i data})}}
\par
{\bkmkstart AAAAAAABDQ}
{\bkmkend AAAAAAABDQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 253} of file {\b formats.c}.}\par
}
{\xe \v binaryWriteUShort\:formats.c}
{\xe \v formats.c\:binaryWriteUShort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void binaryWriteUShort (FILE *  {\i f}, unsigned short  {\i data})}}
\par
{\bkmkstart AAAAAAABDR}
{\bkmkend AAAAAAABDR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 223} of file {\b formats.c}.}\par
}
{\xe \v binaryWriteUShortBE\:formats.c}
{\xe \v formats.c\:binaryWriteUShortBE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void binaryWriteUShortBE (FILE *  {\i f}, unsigned short  {\i data})}}
\par
{\bkmkstart AAAAAAABDS}
{\bkmkend AAAAAAABDS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 229} of file {\b formats.c}.}\par
}
{\xe \v emb_identify_format\:formats.c}
{\xe \v formats.c\:emb_identify_format}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int emb_identify_format (const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAABDT}
{\bkmkend AAAAAAABDT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 167} of file {\b formats.c}.}\par
}
{\xe \v embFormat_getExtension\:formats.c}
{\xe \v formats.c\:embFormat_getExtension}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int embFormat_getExtension (const char *  {\i fileName}, char *  {\i ending})}}
\par
{\bkmkstart AAAAAAABDU}
{\bkmkend AAAAAAABDU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 138} of file {\b formats.c}.}\par
}
{\xe \v embPattern_read\:formats.c}
{\xe \v formats.c\:embPattern_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char embPattern_read ({\b EmbPattern} *  {\i pattern}, const char *  {\i fileName}, int  {\i format})}}
\par
{\bkmkstart AAAAAAABDV}
{\bkmkend AAAAAAABDV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 259} of file {\b formats.c}.}\par
}
{\xe \v embPattern_readAuto\:formats.c}
{\xe \v formats.c\:embPattern_readAuto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char embPattern_readAuto ({\b EmbPattern} *  {\i pattern}, const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAABDW}
{\bkmkend AAAAAAABDW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 706} of file {\b formats.c}.}\par
}
{\xe \v embPattern_write\:formats.c}
{\xe \v formats.c\:embPattern_write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char embPattern_write ({\b EmbPattern} *  {\i pattern}, const char *  {\i fileName}, int  {\i format})}}
\par
{\bkmkstart AAAAAAABDX}
{\bkmkend AAAAAAABDX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 480} of file {\b formats.c}.}\par
}
{\xe \v embPattern_writeAuto\:formats.c}
{\xe \v formats.c\:embPattern_writeAuto}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char embPattern_writeAuto ({\b EmbPattern} *  {\i pattern}, const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAABDY}
{\bkmkend AAAAAAABDY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 718} of file {\b formats.c}.}\par
}
{\xe \v fpad\:formats.c}
{\xe \v formats.c\:fpad}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void fpad (FILE *  {\i file}, char  {\i c}, int  {\i n})}}
\par
{\bkmkstart AAAAAAABDZ}
{\bkmkend AAAAAAABDZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 207} of file {\b formats.c}.}\par
}
{\xe \v fread_int16\:formats.c}
{\xe \v formats.c\:fread_int16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
short fread_int16 (FILE *  {\i f})}}
\par
{\bkmkstart AAAAAAABEA}
{\bkmkend AAAAAAABEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 183} of file {\b formats.c}.}\par
}
{\xe \v fread_int32_be\:formats.c}
{\xe \v formats.c\:fread_int32_be}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int fread_int32_be (FILE *  {\i f})}}
\par
{\bkmkstart AAAAAAABEB}
{\bkmkend AAAAAAABEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 199} of file {\b formats.c}.}\par
}
{\xe \v fread_uint16\:formats.c}
{\xe \v formats.c\:fread_uint16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned short fread_uint16 (FILE *  {\i f})}}
\par
{\bkmkstart AAAAAAABEC}
{\bkmkend AAAAAAABEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 191} of file {\b formats.c}.}\par
}
{\xe \v safe_free\:formats.c}
{\xe \v formats.c\:safe_free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void safe_free (void *  {\i data})}}
\par
{\bkmkstart AAAAAAABED}
{\bkmkend AAAAAAABED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 129} of file {\b formats.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v formatTable\:formats.c}
{\xe \v formats.c\:formatTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbFormatList} formatTable[{\b numberOfFormats}]}}
\par
{\bkmkstart AAAAAAABEE}
{\bkmkend AAAAAAABEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b formats.c}.}\par
}
{\xe \v imageWithFrame\:formats.c}
{\xe \v formats.c\:imageWithFrame}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char imageWithFrame[38][48]}}
\par
{\bkmkstart AAAAAAABEF}
{\bkmkend AAAAAAABEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 87} of file {\b formats.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
formats.c\par \pard\plain 
{\tc\tcl2 \v src/formats.c}
{\xe \v src/formats.c}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * This file is part of libembroidery.}\par
00003 {\cf20  *}\par
00004 {\cf20  * Copyright 2018-2022 The Embroidermodder Team}\par
00005 {\cf20  * Licensed under the terms of the zlib license.}\par
00006 {\cf20  *}\par
00007 {\cf20  * This file contains all the read and write functions for the}\par
00008 {\cf20  * library.}\par
00009 {\cf20  */}\par
00010 \par
00011 {\cf21 #include <stdio.h>}\par
00012 {\cf21 #include <stdlib.h>}\par
00013 {\cf21 #include <string.h>}\par
00014 {\cf21 #include <math.h>}\par
00015 {\cf21 #include <ctype.h>}\par
00016 \par
00017 {\cf21 #include "embroidery_internal.h"}\par
00018 \par
00019 {\cf20 /* TODO: This list needs reviewed in case some stitch }\par
00020 {\cf20     formats also can contain object data (EMBFORMAT_STCHANDOBJ). */}\par
00021 EmbFormatList formatTable[numberOfFormats] = \{\par
00022     \{{\cf22 ".10o"}, {\cf22 "Toyota Embroidery Format"},           {\cf23 'U'}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 1, 0\},\par
00023     \{{\cf22 ".100"}, {\cf22 "Toyota Embroidery Format"},           {\cf23 'U'}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 1, 0\},\par
00024     \{{\cf22 ".art"}, {\cf22 "Bernina Embroidery Format"},          {\cf23 ' '}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00025     \{{\cf22 ".bmc"}, {\cf22 "Bitmap Cache Embroidery Format"},     {\cf23 ' '}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00026     \{{\cf22 ".bro"}, {\cf22 "Bits & Volts Embroidery Format"},     {\cf23 'U'}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 1, 0\},\par
00027     \{{\cf22 ".cnd"}, {\cf22 "Melco Embroidery Format"},            {\cf23 ' '}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00028     \{{\cf22 ".col"}, {\cf22 "Embroidery Thread Color Format"},     {\cf23 'U'}, {\cf23 'U'}, EMBFORMAT_STITCHONLY, 1, 0, 0\},\par
00029     \{{\cf22 ".csd"}, {\cf22 "Singer Embroidery Format"},           {\cf23 'U'}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00030     \{{\cf22 ".csv"}, {\cf22 "Comma Separated Values Format"},      {\cf23 'U'}, {\cf23 'U'}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00031     \{{\cf22 ".dat"}, {\cf22 "Barudan Embroidery Format"},          {\cf23 'U'}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 1, 0\},\par
00032     \{{\cf22 ".dem"}, {\cf22 "Melco Embroidery Format"},            {\cf23 ' '}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00033     \{{\cf22 ".dsb"}, {\cf22 "Barudan Embroidery Format"},          {\cf23 'U'}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 1, 0\},\par
00034     \{{\cf22 ".dst"}, {\cf22 "Tajima Embroidery Format"},           {\cf23 'U'}, {\cf23 'U'}, EMBFORMAT_STITCHONLY, 0, 1, 0\},\par
00035     \{{\cf22 ".dsz"}, {\cf22 "ZSK USA Embroidery Format"},          {\cf23 'U'}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 1, 0\},\par
00036     \{{\cf22 ".dxf"}, {\cf22 "Drawing Exchange Format"},            {\cf23 ' '}, {\cf23 ' '}, EMBFORMAT_OBJECTONLY, 0, 0, 0\},\par
00037     \{{\cf22 ".edr"}, {\cf22 "Embird Embroidery Format"},           {\cf23 'U'}, {\cf23 'U'}, EMBFORMAT_STITCHONLY, 1, 0, 0\},\par
00038     \{{\cf22 ".emd"}, {\cf22 "Elna Embroidery Format"},             {\cf23 'U'}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 1, 0\},\par
00039     \{{\cf22 ".exp"}, {\cf22 "Melco Embroidery Format"},            {\cf23 'U'}, {\cf23 'U'}, EMBFORMAT_STITCHONLY, 0, 1, 0\},\par
00040     \{{\cf22 ".exy"}, {\cf22 "Eltac Embroidery Format"},            {\cf23 'U'}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 1, 0\},\par
00041     \{{\cf22 ".eys"}, {\cf22 "Sierra Expanded Embroidery Format"},  {\cf23 ' '}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00042     \{{\cf22 ".fxy"}, {\cf22 "Fortron Embroidery Format"},          {\cf23 'U'}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 1, 0\},\par
00043     \{{\cf22 ".gc"},  {\cf22 "Smoothie G-Code Format"},             {\cf23 ' '}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00044     \{{\cf22 ".gnc"}, {\cf22 "Great Notions Embroidery Format"},    {\cf23 ' '}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00045     \{{\cf22 ".gt"},  {\cf22 "Gold Thread Embroidery Format"},      {\cf23 'U'}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 1, 0\},\par
00046     \{{\cf22 ".hus"}, {\cf22 "Husqvarna Viking Embroidery Format"}, {\cf23 'U'}, {\cf23 'U'}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00047     \{{\cf22 ".inb"}, {\cf22 "Inbro Embroidery Format"},            {\cf23 'U'}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 1, 0\},\par
00048     \{{\cf22 ".inf"}, {\cf22 "Embroidery Color Format"},            {\cf23 'U'}, {\cf23 'U'}, EMBFORMAT_STITCHONLY, 1, 0, 0\},\par
00049     \{{\cf22 ".jef"}, {\cf22 "Janome Embroidery Format"},           {\cf23 'U'}, {\cf23 'U'}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00050     \{{\cf22 ".ksm"}, {\cf22 "Pfaff Embroidery Format"},            {\cf23 'U'}, {\cf23 'U'}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00051     \{{\cf22 ".max"}, {\cf22 "Pfaff Embroidery Format"},            {\cf23 'U'}, {\cf23 'U'}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00052     \{{\cf22 ".mit"}, {\cf22 "Mitsubishi Embroidery Format"},       {\cf23 'U'}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 1, 0\},\par
00053     \{{\cf22 ".new"}, {\cf22 "Ameco Embroidery Format"},            {\cf23 'U'}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 1, 0\},\par
00054     \{{\cf22 ".ofm"}, {\cf22 "Melco Embroidery Format"},            {\cf23 'U'}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00055     \{{\cf22 ".pcd"}, {\cf22 "Pfaff Embroidery Format"},            {\cf23 'U'}, {\cf23 'U'}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00056     \{{\cf22 ".pcm"}, {\cf22 "Pfaff Embroidery Format"},            {\cf23 'U'}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00057     \{{\cf22 ".pcq"}, {\cf22 "Pfaff Embroidery Format"},            {\cf23 'U'}, {\cf23 'U'}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00058     \{{\cf22 ".pcs"}, {\cf22 "Pfaff Embroidery Format"},            {\cf23 'U'}, {\cf23 'U'}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00059     \{{\cf22 ".pec"}, {\cf22 "Brother Embroidery Format"},          {\cf23 'U'}, {\cf23 'U'}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00060     \{{\cf22 ".pel"}, {\cf22 "Brother Embroidery Format"},          {\cf23 ' '}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00061     \{{\cf22 ".pem"}, {\cf22 "Brother Embroidery Format"},          {\cf23 ' '}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00062     \{{\cf22 ".pes"}, {\cf22 "Brother Embroidery Format"},          {\cf23 'U'}, {\cf23 'U'}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00063     \{{\cf22 ".phb"}, {\cf22 "Brother Embroidery Format"},          {\cf23 'U'}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00064     \{{\cf22 ".phc"}, {\cf22 "Brother Embroidery Format"},          {\cf23 'U'}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00065     \{{\cf22 ".plt"}, {\cf22 "AutoCAD Plot Drawing Format"},        {\cf23 'U'}, {\cf23 'U'}, EMBFORMAT_STITCHONLY, 0, 1, 0\},\par
00066     \{{\cf22 ".rgb"}, {\cf22 "RGB Embroidery Format"},              {\cf23 'U'}, {\cf23 'U'}, EMBFORMAT_STITCHONLY, 1, 0, 0\},\par
00067     \{{\cf22 ".sew"}, {\cf22 "Janome Embroidery Format"},           {\cf23 'U'}, {\cf23 'U'}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00068     \{{\cf22 ".shv"}, {\cf22 "Husqvarna Viking Embroidery Format"}, {\cf23 'U'}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00069     \{{\cf22 ".sst"}, {\cf22 "Sunstar Embroidery Format"},          {\cf23 'U'}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 1, 0\},\par
00070     \{{\cf22 ".stx"}, {\cf22 "Data Stitch Embroidery Format"},      {\cf23 'U'}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00071     \{{\cf22 ".svg"}, {\cf22 "Scalable Vector Graphics"},           {\cf23 'U'}, {\cf23 'U'}, EMBFORMAT_OBJECTONLY, 0, 0, 0\},\par
00072     \{{\cf22 ".t01"}, {\cf22 "Pfaff Embroidery Format"},            {\cf23 'U'}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 1, 0\},\par
00073     \{{\cf22 ".t09"}, {\cf22 "Pfaff Embroidery Format"},            {\cf23 'U'}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00074     \{{\cf22 ".tap"}, {\cf22 "Happy Embroidery Format"},            {\cf23 'U'}, {\cf23 'U'}, EMBFORMAT_STITCHONLY, 0, 1, 0\},\par
00075     \{{\cf22 ".thr"}, {\cf22 "ThredWorks Embroidery Format"},       {\cf23 'U'}, {\cf23 'U'}, EMBFORMAT_STITCHONLY, 1, 0, 0\},\par
00076     \{{\cf22 ".txt"}, {\cf22 "Text File"},                          {\cf23 ' '}, {\cf23 'U'}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00077     \{{\cf22 ".u00"}, {\cf22 "Barudan Embroidery Format"},          {\cf23 'U'}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00078     \{{\cf22 ".u01"}, {\cf22 "Barudan Embroidery Format"},          {\cf23 ' '}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00079     \{{\cf22 ".vip"}, {\cf22 "Pfaff Embroidery Format"},            {\cf23 'U'}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00080     \{{\cf22 ".vp3"}, {\cf22 "Pfaff Embroidery Format"},            {\cf23 'U'}, {\cf23 'U'}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00081     \{{\cf22 ".xxx"}, {\cf22 "Singer Embroidery Format"},           {\cf23 'U'}, {\cf23 'U'}, EMBFORMAT_STITCHONLY, 0, 0, 0\},\par
00082     \{{\cf22 ".zsk"}, {\cf22 "ZSK USA Embroidery Format"},          {\cf23 'U'}, {\cf23 ' '}, EMBFORMAT_STITCHONLY, 0, 0, 0\}\par
00083 \};\par
00084 \par
00085 \par
00086 \par
00087 {\cf17 const} {\cf18 char} imageWithFrame[38][48] = \{\par
00088 \{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0\},\par
00089 \{0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0\},\par
00090 \{0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0\},\par
00091 \{0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0\},\par
00092 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00093 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00094 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00095 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00096 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00097 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00098 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00099 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00100 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00101 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00102 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00103 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00104 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00105 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00106 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00107 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00108 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00109 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00110 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00111 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00112 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00113 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00114 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00115 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00116 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00117 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00118 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00119 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00120 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00121 \{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0\},\par
00122 \{0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0\},\par
00123 \{0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0\},\par
00124 \{0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0\},\par
00125 \{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0\}\par
00126 \};\par
00127 \par
00128 {\cf18 void}\par
00129 safe_free({\cf18 void} *data)\par
00130 \{\par
00131     {\cf19 if} (data) \{\par
00132         free(data);\par
00133         data = 0;\par
00134     \}\par
00135 \}\par
00136 \par
00137 {\cf18 int}\par
00138 embFormat_getExtension({\cf17 const} {\cf18 char} *fileName, {\cf18 char} *ending)\par
00139 \{\par
00140     {\cf18 int} i;\par
00141     {\cf17 const} {\cf18 char} *offset;\par
00142 \par
00143     {\cf19 if} (!fileName) \{\par
00144         printf({\cf22 "ERROR: emb-format.c embFormat_getExtension(), fileName argument is null\\n"});\par
00145         {\cf19 return} 0;\par
00146     \}\par
00147 \par
00148     {\cf19 if} (strlen(fileName) == 0) \{\par
00149         {\cf19 return} 0;\par
00150     \}\par
00151     \par
00152     offset = strrchr(fileName, {\cf23 '.'});\par
00153     {\cf19 if} (offset==0) \{\par
00154         {\cf19 return} 0;\par
00155     \}\par
00156 \par
00157     i = 0;\par
00158     {\cf19 while} (offset[i] != {\cf23 '\\0'}) \{\par
00159         ending[i] = tolower(offset[i]);\par
00160         ++i;\par
00161     \}\par
00162     ending[i] = 0; {\cf20 /* terminate the string */}\par
00163     {\cf19 return} 1;\par
00164 \}\par
00165 \par
00166 {\cf18 int}\par
00167 emb_identify_format({\cf17 const} {\cf18 char} *fileName)\par
00168 \{\par
00169     {\cf18 int} i;\par
00170     {\cf18 char} ending[5];\par
00171     {\cf19 if} (!embFormat_getExtension(fileName, ending)) \{\par
00172         {\cf19 return} 0;\par
00173     \}\par
00174     {\cf19 for} (i = 0; i < numberOfFormats; i++) \{\par
00175         {\cf19 if} (!strcmp(ending, formatTable[i].extension)) \{\par
00176             {\cf19 return} i;\par
00177         \}\par
00178     \}\par
00179     {\cf19 return} -1;\par
00180 \}\par
00181 \par
00182 {\cf18 short}\par
00183 fread_int16(FILE* f)\par
00184 \{\par
00185     {\cf18 short} x;\par
00186     embInt_read(f, {\cf22 "fread_int16"}, &x, EMB_INT16_LITTLE);\par
00187     {\cf19 return} x;\par
00188 \}\par
00189 \par
00190 {\cf18 unsigned} {\cf18 short}\par
00191 fread_uint16(FILE* f)\par
00192 \{\par
00193     {\cf18 unsigned} {\cf18 short} x;\par
00194     embInt_read(f, {\cf22 "fread_uint16"}, &x, EMB_INT16_LITTLE);\par
00195     {\cf19 return} x;\par
00196 \}\par
00197 \par
00198 {\cf18 int}\par
00199 fread_int32_be(FILE* f)\par
00200 \{\par
00201     {\cf18 int} x;\par
00202     embInt_read(f, {\cf22 "fread_int32_be"}, &x, EMB_INT32_BIG);\par
00203     {\cf19 return} x;\par
00204 \}\par
00205 \par
00206 {\cf18 void}\par
00207 fpad(FILE* file, {\cf18 char} c, {\cf18 int} n)\par
00208 \{\par
00209     {\cf18 int} i;\par
00210     {\cf19 for} (i = 0; i < n; i++) \{\par
00211         fwrite(&c, 1, 1, file);\par
00212     \}\par
00213 \}\par
00214 \par
00215 \par
00216 {\cf18 void}\par
00217 binaryWriteShort(FILE* f, {\cf18 short} data)\par
00218 \{\par
00219     embInt_write(f, {\cf22 "binaryWriteShort"}, &data, EMB_INT16_LITTLE);\par
00220 \}\par
00221 \par
00222 {\cf18 void}\par
00223 binaryWriteUShort(FILE* f, {\cf18 unsigned} {\cf18 short} data)\par
00224 \{\par
00225     embInt_write(f, {\cf22 "binaryWriteUShort"}, &data, EMB_INT16_LITTLE);\par
00226 \}\par
00227 \par
00228 {\cf18 void}\par
00229 binaryWriteUShortBE(FILE* f, {\cf18 unsigned} {\cf18 short} data)\par
00230 \{\par
00231     embInt_write(f, {\cf22 "binaryWriteUShortBE"}, &data, EMB_INT16_BIG);\par
00232 \}\par
00233 \par
00234 {\cf18 void}\par
00235 binaryWriteInt(FILE* f, {\cf18 int} data)\par
00236 \{\par
00237     embInt_write(f, {\cf22 "binaryWriteInt"}, &data, EMB_INT32_LITTLE);\par
00238 \}\par
00239 \par
00240 {\cf18 void}\par
00241 binaryWriteIntBE(FILE* f, {\cf18 int} data)\par
00242 \{\par
00243     embInt_write(f, {\cf22 "binaryWriteIntBE"}, &data, EMB_INT32_BIG);\par
00244 \}\par
00245 \par
00246 {\cf18 void}\par
00247 binaryWriteUInt(FILE* f, {\cf18 unsigned} {\cf18 int} data)\par
00248 \{\par
00249     embInt_write(f, {\cf22 "binaryWriteUInt"}, &data, EMB_INT32_LITTLE);\par
00250 \}\par
00251 \par
00252 {\cf18 void}\par
00253 binaryWriteUIntBE(FILE* f, {\cf18 unsigned} {\cf18 int} data)\par
00254 \{\par
00255     embInt_write(f, {\cf22 "binaryWriteUIntBE"}, &data, EMB_INT32_BIG);\par
00256 \}\par
00257 \par
00258 {\cf18 char}\par
00259 embPattern_read(EmbPattern* pattern, {\cf17 const} {\cf18 char} *fileName, {\cf18 int} format)\par
00260 \{\par
00261     {\cf18 int} result;\par
00262     FILE *file;\par
00263     result = 0;\par
00264     {\cf19 if} (!pattern) \{\par
00265         printf({\cf22 "ERROR: embPattern_read(), pattern argument is null.\\n"});\par
00266         {\cf19 return} 0;\par
00267     \}\par
00268     {\cf19 if} (!fileName) \{\par
00269         printf({\cf22 "ERROR: embPattern_read(), fileName argument is null.\\n"});\par
00270         {\cf19 return} 0;\par
00271     \}\par
00272     file = fopen(fileName, {\cf22 "rb"});\par
00273     {\cf19 if} (!file) \{\par
00274         {\cf19 if} ((format != EMB_FORMAT_EDR) &&\par
00275             (format != EMB_FORMAT_RGB) &&\par
00276             (format != EMB_FORMAT_COL) &&\par
00277             (format != EMB_FORMAT_INF)) \{\par
00278             printf({\cf22 "ERROR: Failed to open file with name: %s.\\n"}, fileName);\par
00279         \}\par
00280         {\cf19 return} 0;\par
00281     \}\par
00282     {\cf19 if} (formatTable[format].check_for_color_file) \{\par
00283         embPattern_loadExternalColorFile(pattern, fileName);\par
00284     \}\par
00285     {\cf19 switch} (format) \{\par
00286     {\cf19 case} EMB_FORMAT_100:\par
00287         result = read100(pattern, file);\par
00288         {\cf19 break};\par
00289     {\cf19 case} EMB_FORMAT_10O:\par
00290         result = read10o(pattern, file);\par
00291         {\cf19 break};\par
00292     {\cf19 case} EMB_FORMAT_ART:\par
00293         result = readArt(pattern, file);\par
00294         {\cf19 break};\par
00295     {\cf19 case} EMB_FORMAT_BMC:\par
00296         result = readBmc(pattern, file);\par
00297         {\cf19 break};\par
00298     {\cf19 case} EMB_FORMAT_BRO:\par
00299         result = readBro(pattern, file);\par
00300         {\cf19 break};\par
00301     {\cf19 case} EMB_FORMAT_CND:\par
00302         result = readCnd(pattern, file);\par
00303         {\cf19 break};\par
00304     {\cf19 case} EMB_FORMAT_COL:\par
00305         result = readCol(pattern, file);\par
00306         {\cf19 break};\par
00307     {\cf19 case} EMB_FORMAT_CSD:\par
00308         result = readCsd(pattern, file);\par
00309         {\cf19 break};\par
00310     {\cf19 case} EMB_FORMAT_CSV:\par
00311         result = readCsv(pattern, file);\par
00312         {\cf19 break};\par
00313     {\cf19 case} EMB_FORMAT_DAT:\par
00314         result = readDat(pattern, file);\par
00315         {\cf19 break};\par
00316     {\cf19 case} EMB_FORMAT_DEM:\par
00317         result = readDem(pattern, file);\par
00318         {\cf19 break};\par
00319     {\cf19 case} EMB_FORMAT_DSB:\par
00320         result = readDsb(pattern, file);\par
00321         {\cf19 break};\par
00322     {\cf19 case} EMB_FORMAT_DST:\par
00323         result = readDst(pattern, file);\par
00324         {\cf19 break};\par
00325     {\cf19 case} EMB_FORMAT_DSZ:\par
00326         result = readDsz(pattern, file);\par
00327         {\cf19 break};\par
00328     {\cf19 case} EMB_FORMAT_DXF:\par
00329         result = readDxf(pattern, file);\par
00330         {\cf19 break};\par
00331     {\cf19 case} EMB_FORMAT_EDR:\par
00332         result = readEdr(pattern, file);\par
00333         {\cf19 break};\par
00334     {\cf19 case} EMB_FORMAT_EMD:\par
00335         result = readEmd(pattern, file);\par
00336         {\cf19 break};\par
00337     {\cf19 case} EMB_FORMAT_EXP:\par
00338         result = readExp(pattern, file);\par
00339         {\cf19 break};\par
00340     {\cf19 case} EMB_FORMAT_EXY:\par
00341         result = readExy(pattern, file);\par
00342         {\cf19 break};\par
00343     {\cf19 case} EMB_FORMAT_EYS:\par
00344         result = readEys(pattern, file);\par
00345         {\cf19 break};\par
00346     {\cf19 case} EMB_FORMAT_FXY:\par
00347         result = readFxy(pattern, file);\par
00348         {\cf19 break};\par
00349     {\cf19 case} EMB_FORMAT_GC:\par
00350         result = readGc(pattern, file);\par
00351         {\cf19 break};\par
00352     {\cf19 case} EMB_FORMAT_GNC:\par
00353         result = readGnc(pattern, file);\par
00354         {\cf19 break};\par
00355     {\cf19 case} EMB_FORMAT_GT:\par
00356         result = readGt(pattern, file);\par
00357         {\cf19 break};\par
00358     {\cf19 case} EMB_FORMAT_HUS:\par
00359         result = readHus(pattern, file);\par
00360         {\cf19 break};\par
00361     {\cf19 case} EMB_FORMAT_INB:\par
00362         result = readInb(pattern, file);\par
00363         {\cf19 break};\par
00364     {\cf19 case} EMB_FORMAT_INF:\par
00365         result = readInf(pattern, file);\par
00366         {\cf19 break};\par
00367     {\cf19 case} EMB_FORMAT_JEF:\par
00368         result = readJef(pattern, file);\par
00369         {\cf19 break};\par
00370     {\cf19 case} EMB_FORMAT_KSM:\par
00371         result = readKsm(pattern, file);\par
00372         {\cf19 break};\par
00373     {\cf19 case} EMB_FORMAT_MAX:\par
00374         result = readMax(pattern, file);\par
00375         {\cf19 break};\par
00376     {\cf19 case} EMB_FORMAT_MIT:\par
00377         result = readMit(pattern, file);\par
00378         {\cf19 break};\par
00379     {\cf19 case} EMB_FORMAT_NEW:\par
00380         result = readNew(pattern, file);\par
00381         {\cf19 break};\par
00382     {\cf19 case} EMB_FORMAT_OFM:\par
00383         result = readOfm(pattern, file);\par
00384         {\cf19 break};\par
00385     {\cf19 case} EMB_FORMAT_PCD:\par
00386         result = readPcd(pattern, fileName, file);\par
00387         {\cf19 break};\par
00388     {\cf19 case} EMB_FORMAT_PCM:\par
00389         result = readPcm(pattern, file);\par
00390         {\cf19 break};\par
00391     {\cf19 case} EMB_FORMAT_PCQ:\par
00392         result = readPcq(pattern, fileName, file);\par
00393         {\cf19 break};\par
00394     {\cf19 case} EMB_FORMAT_PCS:\par
00395         result = readPcs(pattern, fileName, file);\par
00396         {\cf19 break};\par
00397     {\cf19 case} EMB_FORMAT_PEC:\par
00398         result = readPec(pattern, fileName, file);\par
00399         {\cf19 break};\par
00400     {\cf19 case} EMB_FORMAT_PEL:\par
00401         result = readPel(pattern, file);\par
00402         {\cf19 break};\par
00403     {\cf19 case} EMB_FORMAT_PEM:\par
00404         result = readPem(pattern, file);\par
00405         {\cf19 break};\par
00406     {\cf19 case} EMB_FORMAT_PES:\par
00407         result = readPes(pattern, fileName, file);\par
00408         {\cf19 break};\par
00409     {\cf19 case} EMB_FORMAT_PHB:\par
00410         result = readPhb(pattern, file);\par
00411         {\cf19 break};\par
00412     {\cf19 case} EMB_FORMAT_PHC:\par
00413         result = readPhc(pattern, file);\par
00414         {\cf19 break};\par
00415     {\cf19 case} EMB_FORMAT_PLT:\par
00416         result = readPlt(pattern, file);\par
00417         {\cf19 break};\par
00418     {\cf19 case} EMB_FORMAT_RGB:\par
00419         result = readRgb(pattern, file);\par
00420         {\cf19 break};\par
00421     {\cf19 case} EMB_FORMAT_SEW:\par
00422         result = readSew(pattern, file);\par
00423         {\cf19 break};\par
00424     {\cf19 case} EMB_FORMAT_SHV:\par
00425         result = readShv(pattern, file);\par
00426         {\cf19 break};\par
00427     {\cf19 case} EMB_FORMAT_SST:\par
00428         result = readSst(pattern, file);\par
00429         {\cf19 break};\par
00430     {\cf19 case} EMB_FORMAT_STX:\par
00431         result = readStx(pattern, file);\par
00432         {\cf19 break};\par
00433     {\cf19 case} EMB_FORMAT_SVG:\par
00434         result = readSvg(pattern, file);\par
00435         {\cf19 break};\par
00436     {\cf19 case} EMB_FORMAT_T01:\par
00437         result = readT01(pattern, file);\par
00438         {\cf19 break};\par
00439     {\cf19 case} EMB_FORMAT_T09:\par
00440         result = readT09(pattern, file);\par
00441         {\cf19 break};\par
00442     {\cf19 case} EMB_FORMAT_TAP:\par
00443         result = readTap(pattern, file);\par
00444         {\cf19 break};\par
00445     {\cf19 case} EMB_FORMAT_THR:\par
00446         result = readThr(pattern, file);\par
00447         {\cf19 break};\par
00448     {\cf19 case} EMB_FORMAT_TXT:\par
00449         result = readTxt(pattern, file);\par
00450         {\cf19 break};\par
00451     {\cf19 case} EMB_FORMAT_U00:\par
00452         result = readU00(pattern, file);\par
00453         {\cf19 break};\par
00454     {\cf19 case} EMB_FORMAT_U01:\par
00455         result = readU01(pattern, file);\par
00456         {\cf19 break};\par
00457     {\cf19 case} EMB_FORMAT_VIP:\par
00458         result = readVip(pattern, file);\par
00459         {\cf19 break};\par
00460     {\cf19 case} EMB_FORMAT_VP3:\par
00461         result = readVp3(pattern, file);\par
00462         {\cf19 break};\par
00463     {\cf19 case} EMB_FORMAT_XXX:\par
00464         result = readXxx(pattern, file);\par
00465         {\cf19 break};\par
00466     {\cf19 case} EMB_FORMAT_ZSK:\par
00467         result = readZsk(pattern, file);\par
00468         {\cf19 break};\par
00469     {\cf19 default}:\par
00470         {\cf19 break};\par
00471     \}\par
00472     fclose(file);\par
00473     {\cf19 if} (!formatTable[format].color_only) \{\par
00474         embPattern_end(pattern);\par
00475     \}\par
00476     {\cf19 return} result;\par
00477 \}\par
00478 \par
00479 {\cf18 char}\par
00480 embPattern_write(EmbPattern* pattern, {\cf17 const} {\cf18 char} *fileName, {\cf18 int} format)\par
00481 \{\par
00482     FILE *file;\par
00483     {\cf18 int} result = 0;\par
00484     {\cf19 if} (!pattern) \{\par
00485         printf({\cf22 "ERROR: embPattern_write(), pattern argument is null\\n"});\par
00486         {\cf19 return} 0;\par
00487     \}\par
00488     {\cf19 if} (!fileName) \{\par
00489         printf({\cf22 "ERROR: embPattern_write(), fileName argument is null\\n"});\par
00490         {\cf19 return} 0;\par
00491     \}\par
00492     {\cf19 if} (pattern->stitch_list->count == 0) \{\par
00493         printf({\cf22 "ERROR: embPattern_write(), pattern contains no stitches\\n"});\par
00494         {\cf19 return} 0;\par
00495     \}\par
00496     {\cf19 if} (!formatTable[format].color_only) \{\par
00497         embPattern_end(pattern);\par
00498     \}\par
00499 \par
00500     file = fopen(fileName, {\cf22 "wb"});\par
00501     {\cf19 if} (!file) \{\par
00502         printf({\cf22 "Failed to open file with name: %s."}, fileName);\par
00503         {\cf19 return} 0;\par
00504     \}\par
00505     {\cf19 switch} (format) \{\par
00506     {\cf19 case} EMB_FORMAT_100:\par
00507         result = write100(pattern, file);\par
00508         {\cf19 break};\par
00509     {\cf19 case} EMB_FORMAT_10O:\par
00510         result = write10o(pattern, file);\par
00511         {\cf19 break};\par
00512     {\cf19 case} EMB_FORMAT_ART:\par
00513         result = writeArt(pattern, file);\par
00514         {\cf19 break};\par
00515     {\cf19 case} EMB_FORMAT_BMC:\par
00516         result = writeBmc(pattern, file);\par
00517         {\cf19 break};\par
00518     {\cf19 case} EMB_FORMAT_BRO:\par
00519         result = writeBro(pattern, file);\par
00520         {\cf19 break};\par
00521     {\cf19 case} EMB_FORMAT_CND:\par
00522         result = writeCnd(pattern, file);\par
00523         {\cf19 break};\par
00524     {\cf19 case} EMB_FORMAT_COL:\par
00525         result = writeCol(pattern, file);\par
00526         {\cf19 break};\par
00527     {\cf19 case} EMB_FORMAT_CSD:\par
00528         result = writeCsd(pattern, file);\par
00529         {\cf19 break};\par
00530     {\cf19 case} EMB_FORMAT_CSV:\par
00531         result = writeCsv(pattern, file);\par
00532         {\cf19 break};\par
00533     {\cf19 case} EMB_FORMAT_DAT:\par
00534         result = writeDat(pattern, file);\par
00535         {\cf19 break};\par
00536     {\cf19 case} EMB_FORMAT_DEM:\par
00537         result = writeDem(pattern, file);\par
00538         {\cf19 break};\par
00539     {\cf19 case} EMB_FORMAT_DSB:\par
00540         result = writeDsb(pattern, file);\par
00541         {\cf19 break};\par
00542     {\cf19 case} EMB_FORMAT_DST:\par
00543         result = writeDst(pattern, file);\par
00544         {\cf19 break};\par
00545     {\cf19 case} EMB_FORMAT_DSZ:\par
00546         result = writeDsz(pattern, file);\par
00547         {\cf19 break};\par
00548     {\cf19 case} EMB_FORMAT_DXF:\par
00549         result = writeDxf(pattern, file);\par
00550         {\cf19 break};\par
00551     {\cf19 case} EMB_FORMAT_EDR:\par
00552         result = writeEdr(pattern, file);\par
00553         {\cf19 break};\par
00554     {\cf19 case} EMB_FORMAT_EMD:\par
00555         result = writeEmd(pattern, file);\par
00556         {\cf19 break};\par
00557     {\cf19 case} EMB_FORMAT_EXP:\par
00558         result = writeExp(pattern, file);\par
00559         {\cf19 break};\par
00560     {\cf19 case} EMB_FORMAT_EXY:\par
00561         result = writeExy(pattern, file);\par
00562         {\cf19 break};\par
00563     {\cf19 case} EMB_FORMAT_EYS:\par
00564         result = writeEys(pattern, file);\par
00565         {\cf19 break};\par
00566     {\cf19 case} EMB_FORMAT_FXY:\par
00567         result = writeFxy(pattern, file);\par
00568         {\cf19 break};\par
00569     {\cf19 case} EMB_FORMAT_GC:\par
00570         result = writeGc(pattern, file);\par
00571         {\cf19 break};\par
00572     {\cf19 case} EMB_FORMAT_GNC:\par
00573         result = writeGnc(pattern, file);\par
00574         {\cf19 break};\par
00575     {\cf19 case} EMB_FORMAT_GT:\par
00576         result = writeGt(pattern, file);\par
00577         {\cf19 break};\par
00578     {\cf19 case} EMB_FORMAT_HUS:\par
00579         result = writeHus(pattern, file);\par
00580         {\cf19 break};\par
00581     {\cf19 case} EMB_FORMAT_INB:\par
00582         result = writeInb(pattern, file);\par
00583         {\cf19 break};\par
00584     {\cf19 case} EMB_FORMAT_INF:\par
00585         result = writeInf(pattern, file);\par
00586         {\cf19 break};\par
00587     {\cf19 case} EMB_FORMAT_JEF:\par
00588         result = writeJef(pattern, file);\par
00589         {\cf19 break};\par
00590     {\cf19 case} EMB_FORMAT_KSM:\par
00591         result = writeKsm(pattern, file);\par
00592         {\cf19 break};\par
00593     {\cf19 case} EMB_FORMAT_MAX:\par
00594         result = writeMax(pattern, file);\par
00595         {\cf19 break};\par
00596     {\cf19 case} EMB_FORMAT_MIT:\par
00597         result = writeMit(pattern, file);\par
00598         {\cf19 break};\par
00599     {\cf19 case} EMB_FORMAT_NEW:\par
00600         result = writeNew(pattern, file);\par
00601         {\cf19 break};\par
00602     {\cf19 case} EMB_FORMAT_OFM:\par
00603         result = writeOfm(pattern, file);\par
00604         {\cf19 break};\par
00605     {\cf19 case} EMB_FORMAT_PCD:\par
00606         result = writePcd(pattern, file);\par
00607         {\cf19 break};\par
00608     {\cf19 case} EMB_FORMAT_PCM:\par
00609         result = writePcm(pattern, file);\par
00610         {\cf19 break};\par
00611     {\cf19 case} EMB_FORMAT_PCQ:\par
00612         result = writePcq(pattern, file);\par
00613         {\cf19 break};\par
00614     {\cf19 case} EMB_FORMAT_PCS:\par
00615         result = writePcs(pattern, file);\par
00616         {\cf19 break};\par
00617     {\cf19 case} EMB_FORMAT_PEC:\par
00618         result = writePec(pattern, fileName, file);\par
00619         {\cf19 break};\par
00620     {\cf19 case} EMB_FORMAT_PEL:\par
00621         result = writePel(pattern, file);\par
00622         {\cf19 break};\par
00623     {\cf19 case} EMB_FORMAT_PEM:\par
00624         result = writePem(pattern, file);\par
00625         {\cf19 break};\par
00626     {\cf19 case} EMB_FORMAT_PES:\par
00627         result = writePes(pattern, fileName, file);\par
00628         {\cf19 break};\par
00629     {\cf19 case} EMB_FORMAT_PHB:\par
00630         result = writePhb(pattern, file);\par
00631         {\cf19 break};\par
00632     {\cf19 case} EMB_FORMAT_PHC:\par
00633         result = writePhc(pattern, file);\par
00634         {\cf19 break};\par
00635     {\cf19 case} EMB_FORMAT_PLT:\par
00636         result = writePlt(pattern, file);\par
00637         {\cf19 break};\par
00638     {\cf19 case} EMB_FORMAT_RGB:\par
00639         result = writeRgb(pattern, file);\par
00640         {\cf19 break};\par
00641     {\cf19 case} EMB_FORMAT_SEW:\par
00642         result = writeSew(pattern, file);\par
00643         {\cf19 break};\par
00644     {\cf19 case} EMB_FORMAT_SHV:\par
00645         result = writeShv(pattern, file);\par
00646         {\cf19 break};\par
00647     {\cf19 case} EMB_FORMAT_SST:\par
00648         result = writeSst(pattern, file);\par
00649         {\cf19 break};\par
00650     {\cf19 case} EMB_FORMAT_STX:\par
00651         result = writeStx(pattern, file);\par
00652         {\cf19 break};\par
00653     {\cf19 case} EMB_FORMAT_SVG:\par
00654         result = writeSvg(pattern, file);\par
00655         {\cf19 break};\par
00656     {\cf19 case} EMB_FORMAT_T01:\par
00657         result = writeT01(pattern, file);\par
00658         {\cf19 break};\par
00659     {\cf19 case} EMB_FORMAT_T09:\par
00660         result = writeT09(pattern, file);\par
00661         {\cf19 break};\par
00662     {\cf19 case} EMB_FORMAT_TAP:\par
00663         result = writeTap(pattern, file);\par
00664         {\cf19 break};\par
00665     {\cf19 case} EMB_FORMAT_THR:\par
00666         result = writeThr(pattern, file);\par
00667         {\cf19 break};\par
00668     {\cf19 case} EMB_FORMAT_TXT:\par
00669         result = writeTxt(pattern, file);\par
00670         {\cf19 break};\par
00671     {\cf19 case} EMB_FORMAT_U00:\par
00672         result = writeU00(pattern, file);\par
00673         {\cf19 break};\par
00674     {\cf19 case} EMB_FORMAT_U01:\par
00675         result = writeU01(pattern, file);\par
00676         {\cf19 break};\par
00677     {\cf19 case} EMB_FORMAT_VIP:\par
00678         result = writeVip(pattern, file);\par
00679         {\cf19 break};\par
00680     {\cf19 case} EMB_FORMAT_VP3:\par
00681         result = writeVp3(pattern, file);\par
00682         {\cf19 break};\par
00683     {\cf19 case} EMB_FORMAT_XXX:\par
00684         result = writeXxx(pattern, file);\par
00685         {\cf19 break};\par
00686     {\cf19 case} EMB_FORMAT_ZSK:\par
00687         result = writeZsk(pattern, file);\par
00688         {\cf19 break};\par
00689     {\cf19 default}:\par
00690         {\cf19 break};\par
00691     \}\par
00692     {\cf19 if} (formatTable[format].write_external_color_file) \{\par
00693         {\cf18 char} externalFileName[1000];\par
00694         {\cf18 int} stub_length;\par
00695         strcpy(externalFileName, fileName);\par
00696         stub_length = strlen(fileName)-strlen(formatTable[format].extension);\par
00697         externalFileName[stub_length] = 0;\par
00698         strcat(externalFileName, {\cf22 ".rgb"});\par
00699         embPattern_write(pattern, externalFileName, EMB_FORMAT_RGB);\par
00700     \}\par
00701     fclose(file);\par
00702     {\cf19 return} result;\par
00703 \}\par
00704 \par
00705 {\cf18 char}\par
00706 embPattern_readAuto(EmbPattern* pattern, {\cf17 const} {\cf18 char}* fileName)\par
00707 \{\par
00708     {\cf18 int} format = emb_identify_format(fileName);\par
00709     {\cf19 if} (format < 0) \{\par
00710         printf({\cf22 "ERROR: convert(), unsupported read file type: %s\\n"}, fileName);\par
00711         embPattern_free(pattern);\par
00712         {\cf19 return} 0;\par
00713     \}\par
00714     {\cf19 return} embPattern_read(pattern, fileName, format);\par
00715 \}\par
00716 \par
00717 {\cf18 char}\par
00718 embPattern_writeAuto(EmbPattern* pattern, {\cf17 const} {\cf18 char}* fileName)\par
00719 \{\par
00720     {\cf18 int} format = emb_identify_format(fileName);\par
00721     {\cf19 if} (format < 0) \{\par
00722         printf({\cf22 "ERROR: convert(), unsupported write file type: %s\\n"}, fileName);\par
00723         embPattern_free(pattern);\par
00724         {\cf19 return} 0;\par
00725     \}\par
00726     {\cf19 return} embPattern_write(pattern, fileName, format);\par
00727 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/geometry.c File Reference\par \pard\plain 
{\tc\tcl2 \v src/geometry.c}
{\xe \v src/geometry.c}
{\bkmkstart AAAAAAABEG}
{\bkmkend AAAAAAABEG}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include "embroidery.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbGeometry} * {\b embGeometry_init} (int type_in)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embGeometry_free} ({\b EmbGeometry} *obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embGeometry_move} ({\b EmbGeometry} *obj, {\b EmbVector} delta)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbRect} {\b embGeometry_boundingRect} ({\b EmbGeometry} *obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embGeometry_vulcanize} ({\b EmbGeometry} *obj)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v embGeometry_boundingRect\:geometry.c}
{\xe \v geometry.c\:embGeometry_boundingRect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbRect} embGeometry_boundingRect ({\b EmbGeometry} *  {\i obj})}}
\par
{\bkmkstart AAAAAAABEH}
{\bkmkend AAAAAAABEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 102} of file {\b geometry.c}.}\par
}
{\xe \v embGeometry_free\:geometry.c}
{\xe \v geometry.c\:embGeometry_free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embGeometry_free ({\b EmbGeometry} *  {\i obj})}}
\par
{\bkmkstart AAAAAAABEI}
{\bkmkend AAAAAAABEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 63} of file {\b geometry.c}.}\par
}
{\xe \v embGeometry_init\:geometry.c}
{\xe \v geometry.c\:embGeometry_init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbGeometry} * embGeometry_init (int  {\i type_in})}}
\par
{\bkmkstart AAAAAAABEJ}
{\bkmkend AAAAAAABEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b geometry.c}.}\par
}
{\xe \v embGeometry_move\:geometry.c}
{\xe \v geometry.c\:embGeometry_move}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embGeometry_move ({\b EmbGeometry} *  {\i obj}, {\b EmbVector}  {\i delta})}}
\par
{\bkmkstart AAAAAAABEK}
{\bkmkend AAAAAAABEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 81} of file {\b geometry.c}.}\par
}
{\xe \v embGeometry_vulcanize\:geometry.c}
{\xe \v geometry.c\:embGeometry_vulcanize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embGeometry_vulcanize ({\b EmbGeometry} *  {\i obj})}}
\par
{\bkmkstart AAAAAAABEL}
{\bkmkend AAAAAAABEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 128} of file {\b geometry.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
geometry.c\par \pard\plain 
{\tc\tcl2 \v src/geometry.c}
{\xe \v src/geometry.c}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * GEOMETRY}\par
00003 {\cf20  * This file is part of libembroidery.}\par
00004 {\cf20  *}\par
00005 {\cf20  * Copyright 2018-2023 The Embroidermodder Team}\par
00006 {\cf20  * Licensed under the terms of the zlib license.}\par
00007 {\cf20  */}\par
00008 \par
00009 {\cf21 #include <stdio.h>}\par
00010 {\cf21 #include <stdlib.h>}\par
00011 {\cf21 #include <math.h>}\par
00012 \par
00013 {\cf21 #include "embroidery.h"}\par
00014 \par
00015 \par
00016 {\cf20 /* Our generic object interface backends to each individual type,}\par
00017 {\cf20  * }\par
00018 {\cf20  */}\par
00019 EmbGeometry *\par
00020 embGeometry_init({\cf18 int} type_in)\par
00021 \{\par
00022     EmbGeometry *obj = (EmbGeometry*)malloc({\cf17 sizeof}(EmbGeometry));\par
00023     obj->type = type_in;\par
00024     obj->color.r = 0;\par
00025     obj->color.g = 0;\par
00026     obj->color.b = 0;\par
00027 \par
00028     {\cf20 /*}\par
00029 {\cf20     // QGraphicsItem* parent}\par
00030 {\cf20     debug_message("BaseObject Constructor()");}\par
00031 {\cf20 }\par
00032 {\cf20     objPen.setCapStyle(RoundCap);}\par
00033 {\cf20     objPen.setJoinStyle(RoundJoin);}\par
00034 {\cf20     lwtPen.setCapStyle(RoundCap);}\par
00035 {\cf20     lwtPen.setJoinStyle(RoundJoin);}\par
00036 {\cf20 }\par
00037 {\cf20     objID = QDateTime::currentMSecsSinceEpoch();}\par
00038 {\cf20     */}\par
00039 \par
00040     {\cf19 switch} (obj->type) \{\par
00041     {\cf19 case} EMB_ARC: \{\par
00042         obj->object.arc = embArc_init();\par
00043         {\cf20 /*}\par
00044 {\cf20         embArc_init(EmbArc arc_in, unsigned int rgb, int lineType)}\par
00045 {\cf20         arc = arc_in;}\par
00046 {\cf20 }\par
00047 {\cf20         setFlag(ItemIsSelectable, true);}\par
00048 {\cf20 }\par
00049 {\cf20         calculateArcData(arc);}\par
00050 {\cf20 }\par
00051 {\cf20         setColor(rgb);}\par
00052 {\cf20         setLineType(lineType);}\par
00053 {\cf20         setLineWeight(0.35); //TODO: pass in proper lineweight}\par
00054 {\cf20         setPen(objPen);}\par
00055 {\cf20         */}\par
00056         {\cf19 break};\par
00057     \}\par
00058     \}\par
00059     {\cf19 return} obj;\par
00060 \}\par
00061 \par
00062 {\cf18 void}\par
00063 embGeometry_free(EmbGeometry *obj)\par
00064 \{\par
00065     {\cf19 switch} (obj->type) \{\par
00066     {\cf19 case} EMB_ARC: \{\par
00067         {\cf19 return};\par
00068     \}\par
00069     {\cf19 case} EMB_CIRCLE: \{\par
00070         {\cf19 return};\par
00071     \}\par
00072     {\cf19 case} EMB_ELLIPSE: \{\par
00073         {\cf19 return};\par
00074     \}\par
00075     {\cf19 default}:\par
00076         {\cf19 return};\par
00077     \}\par
00078 \}\par
00079 \par
00080 {\cf18 void}\par
00081 embGeometry_move(EmbGeometry *obj, EmbVector delta)\par
00082 \{\par
00083     {\cf19 switch} (obj->type) \{\par
00084     {\cf19 case} EMB_ARC: \{\par
00085         EmbArc *arc = &(obj->object.arc);\par
00086         arc->start = embVector_add(arc->start, delta);\par
00087         arc->mid = embVector_add(arc->mid, delta);\par
00088         arc->end = embVector_add(arc->end, delta);\par
00089         {\cf19 return};\par
00090     \}\par
00091     {\cf19 case} EMB_CIRCLE: \{\par
00092         EmbCircle *circle = &(obj->object.circle);\par
00093         circle->center = embVector_add(circle->center, delta);\par
00094         {\cf19 return};\par
00095     \}\par
00096     {\cf19 default}:\par
00097         {\cf19 break};\par
00098     \}\par
00099 \}\par
00100 \par
00101 EmbRect\par
00102 embGeometry_boundingRect(EmbGeometry *obj)\par
00103 \{\par
00104     EmbRect r;\par
00105     {\cf19 if} ((obj->type == EMB_ARC)) \{\par
00106         {\cf20 /*}\par
00107 {\cf20         arcRect.setWidth(radius*2.0);}\par
00108 {\cf20         arcRect.setHeight(radius*2.0);}\par
00109 {\cf20         arcRect.moveCenter(EmbVector(0,0));}\par
00110 {\cf20         setRect(arcRect);}\par
00111 {\cf20         */}\par
00112     \}\par
00113     r.top = 1.0;\par
00114     r.bottom = 1.0;\par
00115     r.left = 1.0;\par
00116     r.right = 1.0;\par
00117     {\cf20 /*}\par
00118 {\cf20     "Base"}\par
00119 {\cf20     //If gripped, force this object to be drawn even if it is offscreen}\par
00120 {\cf20     if (objectRubberMode() == OBJ_RUBBER_GRIP)}\par
00121 {\cf20         return scene()->sceneRect();}\par
00122 {\cf20     return path().boundingRect();}\par
00123 {\cf20     */}\par
00124     {\cf19 return} r;\par
00125 \}\par
00126 \par
00127 {\cf18 void}\par
00128 embGeometry_vulcanize(EmbGeometry *obj)\par
00129 \{\par
00130     {\cf19 switch} (obj->type) \{\par
00131     {\cf19 case} EMB_ARC:\par
00132     {\cf19 case} EMB_CIRCLE:\par
00133     {\cf19 case} EMB_DIM_LEADER:\par
00134     {\cf19 case} EMB_ELLIPSE:\par
00135     {\cf19 case} EMB_IMAGE:\par
00136     {\cf19 case} EMB_LINE:\par
00137     {\cf19 case} EMB_POINT:\par
00138     {\cf19 case} EMB_RECT:\par
00139     {\cf19 case} EMB_TEXT_SINGLE:\par
00140         {\cf20 /*}\par
00141 {\cf20         updateRubber();}\par
00142 {\cf20 }\par
00143 {\cf20         setRubberMode(OBJ_RUBBER_OFF);}\par
00144 {\cf20         */}\par
00145         {\cf19 break};\par
00146     {\cf19 default}:\par
00147         {\cf19 break};\par
00148     \}\par
00149     {\cf19 if} (obj->type == EMB_PATH) \{\par
00150         {\cf20 /*}\par
00151 {\cf20         updateRubber();}\par
00152 {\cf20 }\par
00153 {\cf20         setRubberMode(OBJ_RUBBER_OFF);}\par
00154 {\cf20 }\par
00155 {\cf20         if (!normalPath.elementCount())}\par
00156 {\cf20             critical_messagebox(0, translate("Empty Path Error"), translate("The path added contains no points. The command that created this object has flawed logic."));}\par
00157 {\cf20         */}\par
00158     \}\par
00159     {\cf19 if} (obj->type == EMB_POLYGON) \{\par
00160         {\cf20 /*}\par
00161 {\cf20         updateRubber();}\par
00162 {\cf20 }\par
00163 {\cf20         setRubberMode(OBJ_RUBBER_OFF);}\par
00164 {\cf20 }\par
00165 {\cf20         if (!normalPath.elementCount())}\par
00166 {\cf20             critical_messagebox(0, translate("Empty Polygon Error"), translate("The polygon added contains no points. The command that created this object has flawed logic."));}\par
00167 {\cf20         */}\par
00168     \}\par
00169     {\cf19 if} (obj->type == EMB_POLYLINE) \{\par
00170         {\cf20 /*}\par
00171 {\cf20         updateRubber();}\par
00172 {\cf20 }\par
00173 {\cf20         setRubberMode(OBJ_RUBBER_OFF);}\par
00174 {\cf20 }\par
00175 {\cf20         if (!normalPath.elementCount())}\par
00176 {\cf20             critical_messagebox(0, translate("Empty embPolyline Error"), translate("The embPolyline added contains no points. The command that created this object has flawed logic."));}\par
00177 {\cf20         */}\par
00178     \}\par
00179 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/image.c File Reference\par \pard\plain 
{\tc\tcl2 \v src/image.c}
{\xe \v src/image.c}
{\bkmkstart AAAAAAABEM}
{\bkmkend AAAAAAABEM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include "embroidery_internal.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writeImage} (FILE *file, unsigned char image[][48])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b image_diff} (unsigned char *a, unsigned char *b, int size)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v image_diff\:image.c}
{\xe \v image.c\:image_diff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float image_diff (unsigned char *  {\i a}, unsigned char *  {\i b}, int  {\i size})}}
\par
{\bkmkstart AAAAAAABEN}
{\bkmkend AAAAAAABEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 54} of file {\b image.c}.}\par
}
{\xe \v writeImage\:image.c}
{\xe \v image.c\:writeImage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void writeImage (FILE *  {\i file}, unsigned char  {\i image}[][48])}}
\par
{\bkmkstart AAAAAAABEO}
{\bkmkend AAAAAAABEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b image.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
image.c\par \pard\plain 
{\tc\tcl2 \v src/image.c}
{\xe \v src/image.c}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * This file is part of libembroidery.}\par
00003 {\cf20  *}\par
00004 {\cf20  * Copyright 2018-2023 The Embroidermodder Team}\par
00005 {\cf20  * Licensed under the terms of the zlib license.}\par
00006 {\cf20  *}\par
00007 {\cf20  * This file contains all the read and write functions for the}\par
00008 {\cf20  * library.}\par
00009 {\cf20  *}\par
00010 {\cf20  *******************************************************************}\par
00011 {\cf20  *}\par
00012 {\cf20  * This backends to the stb libraries and nanosvg library.}\par
00013 {\cf20  *}\par
00014 {\cf20  * Use Python PEP7 for coding style.}\par
00015 {\cf20  */}\par
00016 \par
00017 {\cf21 #include <stdio.h>}\par
00018 {\cf21 #include <stdlib.h>}\par
00019 {\cf21 #include <math.h>}\par
00020 \par
00021 {\cf21 #include "embroidery_internal.h"}\par
00022 \par
00023 \par
00024 {\cf20 /* for the PES embedded */}\par
00025 {\cf18 void}\par
00026 writeImage(FILE* file, {\cf18 unsigned} {\cf18 char} image[][48])\par
00027 \{\par
00028     {\cf18 int} i, j;\par
00029 \par
00030     {\cf19 if} (!file) \{\par
00031         printf({\cf22 "ERROR: format-pec.c writeImage(), file argument is null\\n"});\par
00032         {\cf19 return};\par
00033     \}\par
00034     {\cf19 for} (i = 0; i < 38; i++) \{\par
00035         {\cf19 for} (j = 0; j < 6; j++) \{\par
00036             {\cf18 int} offset = j * 8;\par
00037             {\cf18 unsigned} {\cf18 char} output = 0;\par
00038             output |= ({\cf18 unsigned} char)(image[i][offset] != 0);\par
00039             output |= ({\cf18 unsigned} char)(image[i][offset + 1] != ({\cf18 unsigned} {\cf18 char})0) << 1;\par
00040             output |= ({\cf18 unsigned} char)(image[i][offset + 2] != ({\cf18 unsigned} {\cf18 char})0) << 2;\par
00041             output |= ({\cf18 unsigned} char)(image[i][offset + 3] != ({\cf18 unsigned} {\cf18 char})0) << 3;\par
00042             output |= ({\cf18 unsigned} char)(image[i][offset + 4] != ({\cf18 unsigned} {\cf18 char})0) << 4;\par
00043             output |= ({\cf18 unsigned} char)(image[i][offset + 5] != ({\cf18 unsigned} {\cf18 char})0) << 5;\par
00044             output |= ({\cf18 unsigned} char)(image[i][offset + 6] != ({\cf18 unsigned} {\cf18 char})0) << 6;\par
00045             output |= ({\cf18 unsigned} char)(image[i][offset + 7] != ({\cf18 unsigned} {\cf18 char})0) << 7;\par
00046             fwrite(&output, 1, 1, file);\par
00047         \}\par
00048     \}\par
00049 \}\par
00050 \par
00051 {\cf20 /*}\par
00052 {\cf20  *}\par
00053 {\cf20  */}\par
00054 {\cf18 float} image_diff({\cf18 unsigned} {\cf18 char} *a, {\cf18 unsigned} {\cf18 char} *b, {\cf18 int} size)\par
00055 \{\par
00056     {\cf18 int} i;\par
00057     {\cf18 float} total = 0.0;\par
00058     {\cf19 for} (i=0; i<size; i++) \{\par
00059         {\cf18 int} diff = a[i] - b[i];\par
00060         total += diff*diff;\par
00061     \}\par
00062     {\cf19 return} total;\par
00063 \}\par
00064 \par
00065 {\cf21 #ifdef LIBEMBROIDERY_CLI}\par
00066 {\cf21 #define STB_IMAGE_IMPLEMENTATION}\par
00067 {\cf21 #include "stb/stb_image.h"}\par
00068 \par
00069 {\cf21 #define STB_IMAGE_WRITE_IMPLEMENTATION}\par
00070 {\cf21 #include "stb/stb_image_write.h"}\par
00071 \par
00072 {\cf21 #define NANOSVG_ALL_COLOR_KEYWORDS}\par
00073 {\cf21 #define NANOSVG_IMPLEMENTATION}\par
00074 {\cf21 #include "nanosvg/src/nanosvg.h"}\par
00075 \par
00076 {\cf21 #define NANOSVGRAST_IMPLEMENTATION}\par
00077 {\cf21 #include "nanosvg/src/nanosvgrast.h"}\par
00078 \par
00079 \par
00080 {\cf20 /* Basic Render}\par
00081 {\cf20  * ------------}\par
00082 {\cf20  * Backends rendering to nanosvg/stb_image.}\par
00083 {\cf20  *}\par
00084 {\cf20  * The caller is responsible for the memory in p.}\par
00085 {\cf20  */}\par
00086 {\cf18 int}\par
00087 embPattern_render(EmbPattern *p, {\cf18 char} *fname)\par
00088 \{\par
00089     {\cf17 const} {\cf18 char} *tmp_fname = {\cf22 "libembroidery_temp.svg"};\par
00090     NSVGimage *image = NULL;\par
00091     NSVGrasterizer rast;\par
00092     {\cf18 unsigned} {\cf18 char} *img_data = NULL;\par
00093     embPattern_writeAuto(p, tmp_fname);\par
00094     image = nsvgParseFromFile(tmp_fname, {\cf22 "px"}, 96.0f);\par
00095     img_data = malloc(4*image->width*image->height);\par
00096     nsvgRasterize(\par
00097         &rast,\par
00098         image,\par
00099         0, 0, 1,\par
00100         img_data,\par
00101         image->width,\par
00102         image->height,\par
00103         4*image->width);\par
00104     stbi_write_png(\par
00105         fname,\par
00106         image->width,\par
00107         image->height,\par
00108         4,\par
00109         img_data,\par
00110         4*image->width);\par
00111     {\cf19 return} 0;\par
00112 \}\par
00113 \par
00114 {\cf20 /* Simulate the stitching of a pattern, using the image for rendering}\par
00115 {\cf20  * hints about how to represent the pattern.}\par
00116 {\cf20  */}\par
00117 {\cf18 int}\par
00118 embPattern_simulate(EmbPattern *pattern, {\cf18 char} *fname)\par
00119 \{\par
00120 \par
00121     embPattern_render(pattern, fname);\par
00122     {\cf19 return} 0;\par
00123 \}\par
00124 \par
00125 EmbImage\par
00126 embImage_create({\cf18 int} width, {\cf18 int} height)\par
00127 \{\par
00128     EmbImage image;\par
00129     image.width = width;\par
00130     image.height = height;\par
00131     image.data = malloc(4*width*height);\par
00132     {\cf19 return} image;\par
00133     \par
00134 \}\par
00135 \par
00136 {\cf18 void}\par
00137 embImage_read(EmbImage *image, {\cf18 char} *fname)\par
00138 \{\par
00139     {\cf18 int} channels_in_file;\par
00140     image->data = stbi_load(\par
00141         fname,\par
00142         &(image->width),\par
00143         &(image->height),\par
00144         &channels_in_file,\par
00145         3);\par
00146 \}\par
00147 \par
00148 {\cf18 int}\par
00149 embImage_write(EmbImage *image, {\cf18 char} *fname)\par
00150 \{\par
00151     {\cf19 return} stbi_write_png(\par
00152         fname,\par
00153         image->width,\par
00154         image->height,\par
00155         4,\par
00156         image->data,\par
00157         4*image->width);\par
00158 \}\par
00159 \par
00160 {\cf18 void}\par
00161 embImage_free(EmbImage *image)\par
00162 \{\par
00163     free(image->data);\par
00164 \}\par
00165 {\cf21 #endif}\par
00166 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/main.c File Reference\par \pard\plain 
{\tc\tcl2 \v src/main.c}
{\xe \v src/main.c}
{\bkmkstart AAAAAAABEP}
{\bkmkend AAAAAAABEP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include <time.h>}\par
{\f2 #include "embroidery_internal.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_TO}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_TO_SHORT}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_HELP}\~ 2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_HELP_SHORT}\~ 3\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_FORMATS}\~ 4\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_FORMATS_SHORT}\~ 5\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_QUIET}\~ 6\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_QUIET_SHORT}\~ 7\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_VERBOSE}\~ 8\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_VERBOSE_SHORT}\~ 9\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_VERSION}\~ 10\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_VERSION_SHORT}\~ 11\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_CIRCLE}\~ 12\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_CIRCLE_SHORT}\~ 13\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_ELLIPSE}\~ 14\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_ELLIPSE_SHORT}\~ 15\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_LINE}\~ 16\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_LINE_SHORT}\~ 17\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_POLYGON}\~ 18\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_POLYGON_SHORT}\~ 19\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_POLYLINE}\~ 20\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_POLYLINE_SHORT}\~ 21\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_RENDER}\~ 22\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_RENDER_SHORT}\~ 23\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_SATIN}\~ 24\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_SATIN_SHORT}\~ 25\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_STITCH}\~ 26\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_STITCH_SHORT}\~ 27\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_TEST}\~ 28\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_FULL_TEST_SUITE}\~ 29\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_HILBERT_CURVE}\~ 30\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_SIERPINSKI_TRIANGLE}\~ 31\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_FILL}\~ 32\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_FILL_SHORT}\~ 33\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_SIMULATE}\~ 34\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_COMBINE}\~ 35\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FLAG_CROSS_STITCH}\~ 36\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NUM_FLAGS}\~ 37\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embVector_print} ({\b EmbVector} v, char *label)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embArc_print} ({\b EmbArc} arc)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b check_header_present} (FILE *file, int minimum_header_length)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b sectorSize} ({\b bcf_file} *bcfFile)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b haveExtraDIFATSectors} ({\b bcf_file} *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b seekToSector} ({\b bcf_file} *bcfFile, FILE *file, const unsigned int sector)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b parseDIFATSectors} (FILE *file, {\b bcf_file} *bcfFile)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b bcfFile_read} (FILE *file, {\b bcf_file} *bcfFile)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
FILE * {\b GetFile} ({\b bcf_file} *bcfFile, FILE *file, char *fileToFind)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b bcf_file_free} ({\b bcf_file} *bcfFile)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bcf_file_difat} * {\b bcf_difat_create} (FILE *file, unsigned int fatSectors, const unsigned int {\b sectorSize})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b entriesInDifatSector} ({\b bcf_file_difat} *fat)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b readFullSector} (FILE *file, {\b bcf_file_difat} *bcfFile, unsigned int *difatEntriesToRead)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b parseDirectoryEntryName} (FILE *file, {\b bcf_directory_entry} *dir)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bcf_directory} * {\b CompoundFileDirectory} (const unsigned int maxNumberOfDirectoryEntries)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbTime} {\b parseTime} (FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bcf_directory_entry} * {\b CompoundFileDirectoryEntry} (FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readNextSector} (FILE *file, {\b bcf_directory} *dir)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b bcf_directory_free} ({\b bcf_directory} **dir)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bcf_file_fat} * {\b bcfFileFat_create} (const unsigned int {\b sectorSize})\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b loadFatFromSector} ({\b bcf_file_fat} *fat, FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b bcf_file_header} {\b bcfFileHeader_read} (FILE *file)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embSatinOutline_generateSatinOutline} ({\b EmbArray} *lines, {\b EmbReal} thickness, {\b EmbSatinOutline} *result)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbArray} * {\b embSatinOutline_renderStitches} ({\b EmbSatinOutline} *result, {\b EmbReal} density)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b write_24bit} (FILE *file, int x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b embColor_distance} ({\b EmbColor} a, {\b EmbColor} b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embColor_read} (FILE *f, {\b EmbColor} *c, int toRead)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embColor_write} (FILE *f, {\b EmbColor} c, int toWrite)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b embThread_findNearestColor} ({\b EmbColor} color, {\b EmbColor} *color_list, int n_colors)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b embThread_findNearestThread} ({\b EmbColor} color, {\b EmbThread} *thread_list, int n_threads)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbThread} {\b embThread_getRandom} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b binaryReadString} (FILE *file, char *buffer, int maxLength)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b binaryReadUnicodeString} (FILE *file, char *buffer, const int stringLength)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b stringInArray} (const char *s, const char **array)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b emb_readline} (FILE *file, char *line, int maxLength)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b get_trim_bounds} (char const *s, char const **firstWord, char const **trailingSpace)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b copy_trim} (char const *s)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b emb_optOut} ({\b EmbReal} num, char *str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embTime_initNow} ({\b EmbTime} *t)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbTime} {\b embTime_time} ({\b EmbTime} *t)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbThread} {\b black_thread} = \{ \{ 0, 0, 0 \}, "Black", "Black" \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b emb_verbose} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b emb_error} = 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b EmbReal} {\b embConstantPi} = 3.1415926535\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned int {\b difatEntriesInHeader} = 109\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned int {\b sizeOfFatEntry} = sizeof(unsigned int)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned int {\b sizeOfDifatEntry} = 4\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned int {\b sizeOfChainingEntryAtEndOfDifatSector} = 4\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned int {\b sizeOfDirectoryEntry} = 128\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char const {\b WHITESPACE} [] = " \\t\\n\\r"\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v FLAG_CIRCLE\:main.c}
{\xe \v main.c\:FLAG_CIRCLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_CIRCLE\~ 12}}
\par
{\bkmkstart AAAAAAABEQ}
{\bkmkend AAAAAAABEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 29} of file {\b main.c}.}\par
}
{\xe \v FLAG_CIRCLE_SHORT\:main.c}
{\xe \v main.c\:FLAG_CIRCLE_SHORT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_CIRCLE_SHORT\~ 13}}
\par
{\bkmkstart AAAAAAABER}
{\bkmkend AAAAAAABER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 30} of file {\b main.c}.}\par
}
{\xe \v FLAG_COMBINE\:main.c}
{\xe \v main.c\:FLAG_COMBINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_COMBINE\~ 35}}
\par
{\bkmkstart AAAAAAABES}
{\bkmkend AAAAAAABES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 52} of file {\b main.c}.}\par
}
{\xe \v FLAG_CROSS_STITCH\:main.c}
{\xe \v main.c\:FLAG_CROSS_STITCH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_CROSS_STITCH\~ 36}}
\par
{\bkmkstart AAAAAAABET}
{\bkmkend AAAAAAABET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 53} of file {\b main.c}.}\par
}
{\xe \v FLAG_ELLIPSE\:main.c}
{\xe \v main.c\:FLAG_ELLIPSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_ELLIPSE\~ 14}}
\par
{\bkmkstart AAAAAAABEU}
{\bkmkend AAAAAAABEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 31} of file {\b main.c}.}\par
}
{\xe \v FLAG_ELLIPSE_SHORT\:main.c}
{\xe \v main.c\:FLAG_ELLIPSE_SHORT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_ELLIPSE_SHORT\~ 15}}
\par
{\bkmkstart AAAAAAABEV}
{\bkmkend AAAAAAABEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 32} of file {\b main.c}.}\par
}
{\xe \v FLAG_FILL\:main.c}
{\xe \v main.c\:FLAG_FILL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_FILL\~ 32}}
\par
{\bkmkstart AAAAAAABEW}
{\bkmkend AAAAAAABEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 49} of file {\b main.c}.}\par
}
{\xe \v FLAG_FILL_SHORT\:main.c}
{\xe \v main.c\:FLAG_FILL_SHORT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_FILL_SHORT\~ 33}}
\par
{\bkmkstart AAAAAAABEX}
{\bkmkend AAAAAAABEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 50} of file {\b main.c}.}\par
}
{\xe \v FLAG_FORMATS\:main.c}
{\xe \v main.c\:FLAG_FORMATS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_FORMATS\~ 4}}
\par
{\bkmkstart AAAAAAABEY}
{\bkmkend AAAAAAABEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b main.c}.}\par
}
{\xe \v FLAG_FORMATS_SHORT\:main.c}
{\xe \v main.c\:FLAG_FORMATS_SHORT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_FORMATS_SHORT\~ 5}}
\par
{\bkmkstart AAAAAAABEZ}
{\bkmkend AAAAAAABEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 22} of file {\b main.c}.}\par
}
{\xe \v FLAG_FULL_TEST_SUITE\:main.c}
{\xe \v main.c\:FLAG_FULL_TEST_SUITE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_FULL_TEST_SUITE\~ 29}}
\par
{\bkmkstart AAAAAAABFA}
{\bkmkend AAAAAAABFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 46} of file {\b main.c}.}\par
}
{\xe \v FLAG_HELP\:main.c}
{\xe \v main.c\:FLAG_HELP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_HELP\~ 2}}
\par
{\bkmkstart AAAAAAABFB}
{\bkmkend AAAAAAABFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b main.c}.}\par
}
{\xe \v FLAG_HELP_SHORT\:main.c}
{\xe \v main.c\:FLAG_HELP_SHORT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_HELP_SHORT\~ 3}}
\par
{\bkmkstart AAAAAAABFC}
{\bkmkend AAAAAAABFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b main.c}.}\par
}
{\xe \v FLAG_HILBERT_CURVE\:main.c}
{\xe \v main.c\:FLAG_HILBERT_CURVE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_HILBERT_CURVE\~ 30}}
\par
{\bkmkstart AAAAAAABFD}
{\bkmkend AAAAAAABFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 47} of file {\b main.c}.}\par
}
{\xe \v FLAG_LINE\:main.c}
{\xe \v main.c\:FLAG_LINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_LINE\~ 16}}
\par
{\bkmkstart AAAAAAABFE}
{\bkmkend AAAAAAABFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 33} of file {\b main.c}.}\par
}
{\xe \v FLAG_LINE_SHORT\:main.c}
{\xe \v main.c\:FLAG_LINE_SHORT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_LINE_SHORT\~ 17}}
\par
{\bkmkstart AAAAAAABFF}
{\bkmkend AAAAAAABFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 34} of file {\b main.c}.}\par
}
{\xe \v FLAG_POLYGON\:main.c}
{\xe \v main.c\:FLAG_POLYGON}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_POLYGON\~ 18}}
\par
{\bkmkstart AAAAAAABFG}
{\bkmkend AAAAAAABFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 35} of file {\b main.c}.}\par
}
{\xe \v FLAG_POLYGON_SHORT\:main.c}
{\xe \v main.c\:FLAG_POLYGON_SHORT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_POLYGON_SHORT\~ 19}}
\par
{\bkmkstart AAAAAAABFH}
{\bkmkend AAAAAAABFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 36} of file {\b main.c}.}\par
}
{\xe \v FLAG_POLYLINE\:main.c}
{\xe \v main.c\:FLAG_POLYLINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_POLYLINE\~ 20}}
\par
{\bkmkstart AAAAAAABFI}
{\bkmkend AAAAAAABFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 37} of file {\b main.c}.}\par
}
{\xe \v FLAG_POLYLINE_SHORT\:main.c}
{\xe \v main.c\:FLAG_POLYLINE_SHORT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_POLYLINE_SHORT\~ 21}}
\par
{\bkmkstart AAAAAAABFJ}
{\bkmkend AAAAAAABFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 38} of file {\b main.c}.}\par
}
{\xe \v FLAG_QUIET\:main.c}
{\xe \v main.c\:FLAG_QUIET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_QUIET\~ 6}}
\par
{\bkmkstart AAAAAAABFK}
{\bkmkend AAAAAAABFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b main.c}.}\par
}
{\xe \v FLAG_QUIET_SHORT\:main.c}
{\xe \v main.c\:FLAG_QUIET_SHORT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_QUIET_SHORT\~ 7}}
\par
{\bkmkstart AAAAAAABFL}
{\bkmkend AAAAAAABFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 24} of file {\b main.c}.}\par
}
{\xe \v FLAG_RENDER\:main.c}
{\xe \v main.c\:FLAG_RENDER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_RENDER\~ 22}}
\par
{\bkmkstart AAAAAAABFM}
{\bkmkend AAAAAAABFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 39} of file {\b main.c}.}\par
}
{\xe \v FLAG_RENDER_SHORT\:main.c}
{\xe \v main.c\:FLAG_RENDER_SHORT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_RENDER_SHORT\~ 23}}
\par
{\bkmkstart AAAAAAABFN}
{\bkmkend AAAAAAABFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 40} of file {\b main.c}.}\par
}
{\xe \v FLAG_SATIN\:main.c}
{\xe \v main.c\:FLAG_SATIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_SATIN\~ 24}}
\par
{\bkmkstart AAAAAAABFO}
{\bkmkend AAAAAAABFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 41} of file {\b main.c}.}\par
}
{\xe \v FLAG_SATIN_SHORT\:main.c}
{\xe \v main.c\:FLAG_SATIN_SHORT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_SATIN_SHORT\~ 25}}
\par
{\bkmkstart AAAAAAABFP}
{\bkmkend AAAAAAABFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 42} of file {\b main.c}.}\par
}
{\xe \v FLAG_SIERPINSKI_TRIANGLE\:main.c}
{\xe \v main.c\:FLAG_SIERPINSKI_TRIANGLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_SIERPINSKI_TRIANGLE\~ 31}}
\par
{\bkmkstart AAAAAAABFQ}
{\bkmkend AAAAAAABFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 48} of file {\b main.c}.}\par
}
{\xe \v FLAG_SIMULATE\:main.c}
{\xe \v main.c\:FLAG_SIMULATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_SIMULATE\~ 34}}
\par
{\bkmkstart AAAAAAABFR}
{\bkmkend AAAAAAABFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 51} of file {\b main.c}.}\par
}
{\xe \v FLAG_STITCH\:main.c}
{\xe \v main.c\:FLAG_STITCH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_STITCH\~ 26}}
\par
{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 43} of file {\b main.c}.}\par
}
{\xe \v FLAG_STITCH_SHORT\:main.c}
{\xe \v main.c\:FLAG_STITCH_SHORT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_STITCH_SHORT\~ 27}}
\par
{\bkmkstart AAAAAAABFT}
{\bkmkend AAAAAAABFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 44} of file {\b main.c}.}\par
}
{\xe \v FLAG_TEST\:main.c}
{\xe \v main.c\:FLAG_TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_TEST\~ 28}}
\par
{\bkmkstart AAAAAAABFU}
{\bkmkend AAAAAAABFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 45} of file {\b main.c}.}\par
}
{\xe \v FLAG_TO\:main.c}
{\xe \v main.c\:FLAG_TO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_TO\~ 0}}
\par
{\bkmkstart AAAAAAABFV}
{\bkmkend AAAAAAABFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b main.c}.}\par
}
{\xe \v FLAG_TO_SHORT\:main.c}
{\xe \v main.c\:FLAG_TO_SHORT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_TO_SHORT\~ 1}}
\par
{\bkmkstart AAAAAAABFW}
{\bkmkend AAAAAAABFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 18} of file {\b main.c}.}\par
}
{\xe \v FLAG_VERBOSE\:main.c}
{\xe \v main.c\:FLAG_VERBOSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_VERBOSE\~ 8}}
\par
{\bkmkstart AAAAAAABFX}
{\bkmkend AAAAAAABFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 25} of file {\b main.c}.}\par
}
{\xe \v FLAG_VERBOSE_SHORT\:main.c}
{\xe \v main.c\:FLAG_VERBOSE_SHORT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_VERBOSE_SHORT\~ 9}}
\par
{\bkmkstart AAAAAAABFY}
{\bkmkend AAAAAAABFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 26} of file {\b main.c}.}\par
}
{\xe \v FLAG_VERSION\:main.c}
{\xe \v main.c\:FLAG_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_VERSION\~ 10}}
\par
{\bkmkstart AAAAAAABFZ}
{\bkmkend AAAAAAABFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 27} of file {\b main.c}.}\par
}
{\xe \v FLAG_VERSION_SHORT\:main.c}
{\xe \v main.c\:FLAG_VERSION_SHORT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FLAG_VERSION_SHORT\~ 11}}
\par
{\bkmkstart AAAAAAABGA}
{\bkmkend AAAAAAABGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 28} of file {\b main.c}.}\par
}
{\xe \v NUM_FLAGS\:main.c}
{\xe \v main.c\:NUM_FLAGS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NUM_FLAGS\~ 37}}
\par
{\bkmkstart AAAAAAABGB}
{\bkmkend AAAAAAABGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 54} of file {\b main.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v bcf_difat_create\:main.c}
{\xe \v main.c\:bcf_difat_create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bcf_file_difat} * bcf_difat_create (FILE *  {\i file}, unsigned int  {\i fatSectors}, const unsigned int  {\i sectorSize})}}
\par
{\bkmkstart AAAAAAABGC}
{\bkmkend AAAAAAABGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 276} of file {\b main.c}.}\par
}
{\xe \v bcf_directory_free\:main.c}
{\xe \v main.c\:bcf_directory_free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void bcf_directory_free ({\b bcf_directory} **  {\i dir})}}
\par
{\bkmkstart AAAAAAABGD}
{\bkmkend AAAAAAABGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 448} of file {\b main.c}.}\par
}
{\xe \v bcf_file_free\:main.c}
{\xe \v main.c\:bcf_file_free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void bcf_file_free ({\b bcf_file} *  {\i bcfFile})}}
\par
{\bkmkstart AAAAAAABGE}
{\bkmkend AAAAAAABGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 267} of file {\b main.c}.}\par
}
{\xe \v bcfFile_read\:main.c}
{\xe \v main.c\:bcfFile_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int bcfFile_read (FILE *  {\i file}, {\b bcf_file} *  {\i bcfFile})}}
\par
{\bkmkstart AAAAAAABGF}
{\bkmkend AAAAAAABGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 196} of file {\b main.c}.}\par
}
{\xe \v bcfFileFat_create\:main.c}
{\xe \v main.c\:bcfFileFat_create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bcf_file_fat} * bcfFileFat_create (const unsigned int  {\i sectorSize})}}
\par
{\bkmkstart AAAAAAABGG}
{\bkmkend AAAAAAABGG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 467} of file {\b main.c}.}\par
}
{\xe \v bcfFileHeader_read\:main.c}
{\xe \v main.c\:bcfFileHeader_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bcf_file_header} bcfFileHeader_read (FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABGH}
{\bkmkend AAAAAAABGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 495} of file {\b main.c}.}\par
}
{\xe \v binaryReadString\:main.c}
{\xe \v main.c\:binaryReadString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void binaryReadString (FILE *  {\i file}, char *  {\i buffer}, int  {\i maxLength})}}
\par
{\bkmkstart AAAAAAABGI}
{\bkmkend AAAAAAABGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 766} of file {\b main.c}.}\par
}
{\xe \v binaryReadUnicodeString\:main.c}
{\xe \v main.c\:binaryReadUnicodeString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void binaryReadUnicodeString (FILE *  {\i file}, char *  {\i buffer}, const int  {\i stringLength})}}
\par
{\bkmkstart AAAAAAABGJ}
{\bkmkend AAAAAAABGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 777} of file {\b main.c}.}\par
}
{\xe \v check_header_present\:main.c}
{\xe \v main.c\:check_header_present}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int check_header_present (FILE *  {\i file}, int  {\i minimum_header_length})}}
\par
{\bkmkstart AAAAAAABGK}
{\bkmkend AAAAAAABGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 149} of file {\b main.c}.}\par
}
{\xe \v CompoundFileDirectory\:main.c}
{\xe \v main.c\:CompoundFileDirectory}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bcf_directory} * CompoundFileDirectory (const unsigned int  {\i maxNumberOfDirectoryEntries})}}
\par
{\bkmkstart AAAAAAABGL}
{\bkmkend AAAAAAABGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 360} of file {\b main.c}.}\par
}
{\xe \v CompoundFileDirectoryEntry\:main.c}
{\xe \v main.c\:CompoundFileDirectoryEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b bcf_directory_entry} * CompoundFileDirectoryEntry (FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABGM}
{\bkmkend AAAAAAABGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 390} of file {\b main.c}.}\par
}
{\xe \v copy_trim\:main.c}
{\xe \v main.c\:copy_trim}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * copy_trim (char const *  {\i s})}}
\par
{\bkmkstart AAAAAAABGN}
{\bkmkend AAAAAAABGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 851} of file {\b main.c}.}\par
}
{\xe \v emb_optOut\:main.c}
{\xe \v main.c\:emb_optOut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char * emb_optOut ({\b EmbReal}  {\i num}, char *  {\i str})}}
\par
{\bkmkstart AAAAAAABGO}
{\bkmkend AAAAAAABGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Optimizes the number ({\i num} ) for output to a text file and returns it as a string ({\i str} ). \par
}{
Definition at line {\b 868} of file {\b main.c}.}\par
}
{\xe \v emb_readline\:main.c}
{\xe \v main.c\:emb_readline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int emb_readline (FILE *  {\i file}, char *  {\i line}, int  {\i maxLength})}}
\par
{\bkmkstart AAAAAAABGP}
{\bkmkend AAAAAAABGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 809} of file {\b main.c}.}\par
}
{\xe \v embArc_print\:main.c}
{\xe \v main.c\:embArc_print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embArc_print ({\b EmbArc}  {\i arc})}}
\par
{\bkmkstart AAAAAAABGQ}
{\bkmkend AAAAAAABGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 80} of file {\b main.c}.}\par
}
{\xe \v embColor_distance\:main.c}
{\xe \v main.c\:embColor_distance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int embColor_distance ({\b EmbColor}  {\i a}, {\b EmbColor}  {\i b})}}
\par
{\bkmkstart AAAAAAABGR}
{\bkmkend AAAAAAABGR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 671} of file {\b main.c}.}\par
}
{\xe \v embColor_read\:main.c}
{\xe \v main.c\:embColor_read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embColor_read (FILE *  {\i f}, {\b EmbColor} *  {\i c}, int  {\i toRead})}}
\par
{\bkmkstart AAAAAAABGS}
{\bkmkend AAAAAAABGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 681} of file {\b main.c}.}\par
}
{\xe \v embColor_write\:main.c}
{\xe \v main.c\:embColor_write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embColor_write (FILE *  {\i f}, {\b EmbColor}  {\i c}, int  {\i toWrite})}}
\par
{\bkmkstart AAAAAAABGT}
{\bkmkend AAAAAAABGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 691} of file {\b main.c}.}\par
}
{\xe \v embSatinOutline_generateSatinOutline\:main.c}
{\xe \v main.c\:embSatinOutline_generateSatinOutline}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embSatinOutline_generateSatinOutline ({\b EmbArray} *  {\i lines}, {\b EmbReal}  {\i thickness}, {\b EmbSatinOutline} *  {\i result})}}
\par
{\bkmkstart AAAAAAABGU}
{\bkmkend AAAAAAABGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 520} of file {\b main.c}.}\par
}
{\xe \v embSatinOutline_renderStitches\:main.c}
{\xe \v main.c\:embSatinOutline_renderStitches}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbArray} * embSatinOutline_renderStitches ({\b EmbSatinOutline} *  {\i result}, {\b EmbReal}  {\i density})}}
\par
{\bkmkstart AAAAAAABGV}
{\bkmkend AAAAAAABGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 608} of file {\b main.c}.}\par
}
{\xe \v embThread_findNearestColor\:main.c}
{\xe \v main.c\:embThread_findNearestColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int embThread_findNearestColor ({\b EmbColor}  {\i color}, {\b EmbColor} *  {\i color_list}, int  {\i n_colors})}}
\par
{\bkmkstart AAAAAAABGW}
{\bkmkend AAAAAAABGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns the closest color to the required color based on a list of available threads. The algorithm is a simple least squares search against the list. If the (square of) Euclidean 3-dimensional distance between the points in (red, green, blue) space is smaller then the index is saved and the remaining index is returned to the caller.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i color} \cell }{The EmbColor color to match. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i colors} \cell }{The EmbThreadList pointer to start the search at. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mode} \cell }{Is the argument an array of threads (0) or colors (1)? \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
closestIndex The entry in the ThreadList that matches. \par
}}}{
Definition at line {\b 715} of file {\b main.c}.}\par
}
{\xe \v embThread_findNearestThread\:main.c}
{\xe \v main.c\:embThread_findNearestThread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int embThread_findNearestThread ({\b EmbColor}  {\i color}, {\b EmbThread} *  {\i thread_list}, int  {\i n_threads})}}
\par
{\bkmkstart AAAAAAABGX}
{\bkmkend AAAAAAABGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 731} of file {\b main.c}.}\par
}
{\xe \v embThread_getRandom\:main.c}
{\xe \v main.c\:embThread_getRandom}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbThread} embThread_getRandom (void )}}
\par
{\bkmkstart AAAAAAABGY}
{\bkmkend AAAAAAABGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a random thread color, useful in filling in cases where the actual color of the thread doesn't matter but one needs to be declared to test or render a pattern.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
c The resulting color. \par
}}}{
Definition at line {\b 754} of file {\b main.c}.}\par
}
{\xe \v embTime_initNow\:main.c}
{\xe \v main.c\:embTime_initNow}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embTime_initNow ({\b EmbTime} *  {\i t})}}
\par
{\bkmkstart AAAAAAABGZ}
{\bkmkend AAAAAAABGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 885} of file {\b main.c}.}\par
}
{\xe \v embTime_time\:main.c}
{\xe \v main.c\:embTime_time}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbTime} embTime_time ({\b EmbTime} *  {\i t})}}
\par
{\bkmkstart AAAAAAABHA}
{\bkmkend AAAAAAABHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 905} of file {\b main.c}.}\par
}
{\xe \v embVector_print\:main.c}
{\xe \v main.c\:embVector_print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embVector_print ({\b EmbVector}  {\i v}, char *  {\i label})}}
\par
{\bkmkstart AAAAAAABHB}
{\bkmkend AAAAAAABHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 74} of file {\b main.c}.}\par
}
{\xe \v entriesInDifatSector\:main.c}
{\xe \v main.c\:entriesInDifatSector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int entriesInDifatSector ({\b bcf_file_difat} *  {\i fat})}}
\par
{\bkmkstart AAAAAAABHC}
{\bkmkend AAAAAAABHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 308} of file {\b main.c}.}\par
}
{\xe \v get_trim_bounds\:main.c}
{\xe \v main.c\:get_trim_bounds}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void get_trim_bounds (char const *  {\i s}, char const **  {\i firstWord}, char const **  {\i trailingSpace})}}
\par
{\bkmkstart AAAAAAABHD}
{\bkmkend AAAAAAABHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 839} of file {\b main.c}.}\par
}
{\xe \v GetFile\:main.c}
{\xe \v main.c\:GetFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
FILE * GetFile ({\b bcf_file} *  {\i bcfFile}, FILE *  {\i file}, char *  {\i fileToFind})}}
\par
{\bkmkstart AAAAAAABHE}
{\bkmkend AAAAAAABHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 233} of file {\b main.c}.}\par
}
{\xe \v haveExtraDIFATSectors\:main.c}
{\xe \v main.c\:haveExtraDIFATSectors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int haveExtraDIFATSectors ({\b bcf_file} *  {\i file})}}
\par
{\bkmkstart AAAAAAABHF}
{\bkmkend AAAAAAABHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 172} of file {\b main.c}.}\par
}
{\xe \v loadFatFromSector\:main.c}
{\xe \v main.c\:loadFatFromSector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void loadFatFromSector ({\b bcf_file_fat} *  {\i fat}, FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABHG}
{\bkmkend AAAAAAABHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 481} of file {\b main.c}.}\par
}
{\xe \v parseDIFATSectors\:main.c}
{\xe \v main.c\:parseDIFATSectors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void parseDIFATSectors (FILE *  {\i file}, {\b bcf_file} *  {\i bcfFile})}}
\par
{\bkmkstart AAAAAAABHH}
{\bkmkend AAAAAAABHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 185} of file {\b main.c}.}\par
}
{\xe \v parseDirectoryEntryName\:main.c}
{\xe \v main.c\:parseDirectoryEntryName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void parseDirectoryEntryName (FILE *  {\i file}, {\b bcf_directory_entry} *  {\i dir})}}
\par
{\bkmkstart AAAAAAABHI}
{\bkmkend AAAAAAABHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 347} of file {\b main.c}.}\par
}
{\xe \v parseTime\:main.c}
{\xe \v main.c\:parseTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbTime} parseTime (FILE *  {\i file})}}
\par
{\bkmkstart AAAAAAABHJ}
{\bkmkend AAAAAAABHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 372} of file {\b main.c}.}\par
}
{\xe \v readFullSector\:main.c}
{\xe \v main.c\:readFullSector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int readFullSector (FILE *  {\i file}, {\b bcf_file_difat} *  {\i bcfFile}, unsigned int *  {\i difatEntriesToRead})}}
\par
{\bkmkstart AAAAAAABHK}
{\bkmkend AAAAAAABHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 314} of file {\b main.c}.}\par
}
{\xe \v readNextSector\:main.c}
{\xe \v main.c\:readNextSector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void readNextSector (FILE *  {\i file}, {\b bcf_directory} *  {\i dir})}}
\par
{\bkmkstart AAAAAAABHL}
{\bkmkend AAAAAAABHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 426} of file {\b main.c}.}\par
}
{\xe \v sectorSize\:main.c}
{\xe \v main.c\:sectorSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int sectorSize ({\b bcf_file} *  {\i bcfFile})}}
\par
{\bkmkstart AAAAAAABHM}
{\bkmkend AAAAAAABHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 162} of file {\b main.c}.}\par
}
{\xe \v seekToSector\:main.c}
{\xe \v main.c\:seekToSector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int seekToSector ({\b bcf_file} *  {\i bcfFile}, FILE *  {\i file}, const unsigned int  {\i sector})}}
\par
{\bkmkstart AAAAAAABHN}
{\bkmkend AAAAAAABHN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 178} of file {\b main.c}.}\par
}
{\xe \v stringInArray\:main.c}
{\xe \v main.c\:stringInArray}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int stringInArray (const char *  {\i s}, const char **  {\i array})}}
\par
{\bkmkstart AAAAAAABHO}
{\bkmkend AAAAAAABHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tests for the presence of a string {\i s}  in the supplied {\i array} .\par
The end of the array is marked by an empty string.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
0 if not present 1 if present. \par
}}}{
Definition at line {\b 797} of file {\b main.c}.}\par
}
{\xe \v write_24bit\:main.c}
{\xe \v main.c\:write_24bit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void write_24bit (FILE *  {\i file}, int  {\i x})}}
\par
{\bkmkstart AAAAAAABHP}
{\bkmkend AAAAAAABHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 660} of file {\b main.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v black_thread\:main.c}
{\xe \v main.c\:black_thread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbThread} black_thread = \{ \{ 0, 0, 0 \}, "Black", "Black" \}}}
\par
{\bkmkstart AAAAAAABHQ}
{\bkmkend AAAAAAABHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 56} of file {\b main.c}.}\par
}
{\xe \v difatEntriesInHeader\:main.c}
{\xe \v main.c\:difatEntriesInHeader}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned int difatEntriesInHeader = 109}}
\par
{\bkmkstart AAAAAAABHR}
{\bkmkend AAAAAAABHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 64} of file {\b main.c}.}\par
}
{\xe \v emb_error\:main.c}
{\xe \v main.c\:emb_error}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int emb_error = 0}}
\par
{\bkmkstart AAAAAAABHS}
{\bkmkend AAAAAAABHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 58} of file {\b main.c}.}\par
}
{\xe \v emb_verbose\:main.c}
{\xe \v main.c\:emb_verbose}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int emb_verbose = 0}}
\par
{\bkmkstart AAAAAAABHT}
{\bkmkend AAAAAAABHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 57} of file {\b main.c}.}\par
}
{\xe \v embConstantPi\:main.c}
{\xe \v main.c\:embConstantPi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b EmbReal} embConstantPi = 3.1415926535}}
\par
{\bkmkstart AAAAAAABHU}
{\bkmkend AAAAAAABHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 60} of file {\b main.c}.}\par
}
{\xe \v sizeOfChainingEntryAtEndOfDifatSector\:main.c}
{\xe \v main.c\:sizeOfChainingEntryAtEndOfDifatSector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned int sizeOfChainingEntryAtEndOfDifatSector = 4}}
\par
{\bkmkstart AAAAAAABHV}
{\bkmkend AAAAAAABHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 67} of file {\b main.c}.}\par
}
{\xe \v sizeOfDifatEntry\:main.c}
{\xe \v main.c\:sizeOfDifatEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned int sizeOfDifatEntry = 4}}
\par
{\bkmkstart AAAAAAABHW}
{\bkmkend AAAAAAABHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 66} of file {\b main.c}.}\par
}
{\xe \v sizeOfDirectoryEntry\:main.c}
{\xe \v main.c\:sizeOfDirectoryEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned int sizeOfDirectoryEntry = 128}}
\par
{\bkmkstart AAAAAAABHX}
{\bkmkend AAAAAAABHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 68} of file {\b main.c}.}\par
}
{\xe \v sizeOfFatEntry\:main.c}
{\xe \v main.c\:sizeOfFatEntry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned int sizeOfFatEntry = sizeof(unsigned int)}}
\par
{\bkmkstart AAAAAAABHY}
{\bkmkend AAAAAAABHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 65} of file {\b main.c}.}\par
}
{\xe \v WHITESPACE\:main.c}
{\xe \v main.c\:WHITESPACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char const WHITESPACE[] = " \\t\\n\\r"}}
\par
{\bkmkstart AAAAAAABHZ}
{\bkmkend AAAAAAABHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 835} of file {\b main.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
main.c\par \pard\plain 
{\tc\tcl2 \v src/main.c}
{\xe \v src/main.c}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * This file is part of libembroidery.}\par
00003 {\cf20  *}\par
00004 {\cf20  * Copyright 2018-2023 The Embroidermodder Team}\par
00005 {\cf20  * Licensed under the terms of the zlib license.}\par
00006 {\cf20  */}\par
00007 \par
00008 {\cf21 #include <stdio.h>}\par
00009 {\cf21 #include <stdlib.h>}\par
00010 {\cf21 #include <string.h>}\par
00011 {\cf21 #include <math.h>}\par
00012 {\cf21 #include <time.h>}\par
00013 \par
00014 {\cf21 #include "embroidery_internal.h"}\par
00015 \par
00016 {\cf20 /* same order as flag_list, to use in jump table */}\par
00017 {\cf21 #define FLAG_TO                       0}\par
00018 {\cf21 #define FLAG_TO_SHORT                 1}\par
00019 {\cf21 #define FLAG_HELP                     2}\par
00020 {\cf21 #define FLAG_HELP_SHORT               3}\par
00021 {\cf21 #define FLAG_FORMATS                  4}\par
00022 {\cf21 #define FLAG_FORMATS_SHORT            5}\par
00023 {\cf21 #define FLAG_QUIET                    6}\par
00024 {\cf21 #define FLAG_QUIET_SHORT              7}\par
00025 {\cf21 #define FLAG_VERBOSE                  8}\par
00026 {\cf21 #define FLAG_VERBOSE_SHORT            9}\par
00027 {\cf21 #define FLAG_VERSION                 10}\par
00028 {\cf21 #define FLAG_VERSION_SHORT           11}\par
00029 {\cf21 #define FLAG_CIRCLE                  12}\par
00030 {\cf21 #define FLAG_CIRCLE_SHORT            13}\par
00031 {\cf21 #define FLAG_ELLIPSE                 14}\par
00032 {\cf21 #define FLAG_ELLIPSE_SHORT           15}\par
00033 {\cf21 #define FLAG_LINE                    16}\par
00034 {\cf21 #define FLAG_LINE_SHORT              17}\par
00035 {\cf21 #define FLAG_POLYGON                 18}\par
00036 {\cf21 #define FLAG_POLYGON_SHORT           19}\par
00037 {\cf21 #define FLAG_POLYLINE                20}\par
00038 {\cf21 #define FLAG_POLYLINE_SHORT          21}\par
00039 {\cf21 #define FLAG_RENDER                  22}\par
00040 {\cf21 #define FLAG_RENDER_SHORT            23}\par
00041 {\cf21 #define FLAG_SATIN                   24}\par
00042 {\cf21 #define FLAG_SATIN_SHORT             25}\par
00043 {\cf21 #define FLAG_STITCH                  26}\par
00044 {\cf21 #define FLAG_STITCH_SHORT            27}\par
00045 {\cf21 #define FLAG_TEST                    28}\par
00046 {\cf21 #define FLAG_FULL_TEST_SUITE         29}\par
00047 {\cf21 #define FLAG_HILBERT_CURVE           30}\par
00048 {\cf21 #define FLAG_SIERPINSKI_TRIANGLE     31}\par
00049 {\cf21 #define FLAG_FILL                    32}\par
00050 {\cf21 #define FLAG_FILL_SHORT              33}\par
00051 {\cf21 #define FLAG_SIMULATE                34}\par
00052 {\cf21 #define FLAG_COMBINE                 35}\par
00053 {\cf21 #define FLAG_CROSS_STITCH            36}\par
00054 {\cf21 #define NUM_FLAGS                    37}\par
00055 \par
00056 EmbThread black_thread = \{ \{ 0, 0, 0 \}, {\cf22 "Black"}, {\cf22 "Black"} \};\par
00057 {\cf18 int} emb_verbose = 0;\par
00058 {\cf18 int} emb_error = 0;\par
00059 \par
00060 {\cf17 const} EmbReal embConstantPi = 3.1415926535;\par
00061 \par
00062 {\cf20 /* Constant representing the number of EmbReal Indirect FAT}\par
00063 {\cf20  * entries in a single header */}\par
00064 {\cf17 const} {\cf18 unsigned} {\cf18 int} difatEntriesInHeader = 109;\par
00065 {\cf17 const} {\cf18 unsigned} {\cf18 int} sizeOfFatEntry = {\cf17 sizeof}({\cf18 unsigned} int);\par
00066 {\cf17 const} {\cf18 unsigned} {\cf18 int} sizeOfDifatEntry = 4;\par
00067 {\cf17 const} {\cf18 unsigned} {\cf18 int} sizeOfChainingEntryAtEndOfDifatSector = 4;\par
00068 {\cf17 const} {\cf18 unsigned} {\cf18 int} sizeOfDirectoryEntry = 128;\par
00069 {\cf20 /*}\par
00070 {\cf20 const int supportedMinorVersion = 0x003E;}\par
00071 {\cf20 const int littleEndianByteOrderMark = 0xFFFE;}\par
00072 {\cf20 */}\par
00073 \par
00074 {\cf18 void} embVector_print(EmbVector v, {\cf18 char} *label)\par
00075 \{\par
00076     printf({\cf22 "%sX = %f\\n"}, label, v.x);\par
00077     printf({\cf22 "%sY = %f\\n"}, label, v.y);\par
00078 \}\par
00079 \par
00080 {\cf18 void} embArc_print(EmbArc arc)\par
00081 \{\par
00082     embVector_print(arc.start, {\cf22 "start"});\par
00083     embVector_print(arc.mid, {\cf22 "middle"});\par
00084     embVector_print(arc.end, {\cf22 "end"});\par
00085 \}\par
00086 \par
00087 {\cf21 #ifdef LIBEMBROIDERY_CLI}\par
00088 {\cf20 /* DATA }\par
00089 {\cf20  *******************************************************************/}\par
00090 \par
00091 \par
00092 {\cf17 const} {\cf18 char} *flag_list[] = \{\par
00093     {\cf22 "--to"},\par
00094     {\cf22 "-t"},\par
00095     {\cf22 "--help"},\par
00096     {\cf22 "-h"},\par
00097     {\cf22 "--formats"},\par
00098     {\cf22 "-F"},\par
00099     {\cf22 "--quiet"},\par
00100     {\cf22 "-q"},\par
00101     {\cf22 "--verbose"},\par
00102     {\cf22 "-V"},\par
00103     {\cf22 "--version"},\par
00104     {\cf22 "-v"},\par
00105     {\cf22 "--circle"},\par
00106     {\cf22 "-c"},\par
00107     {\cf22 "--ellipse"},\par
00108     {\cf22 "-e"},\par
00109     {\cf22 "--line"},\par
00110     {\cf22 "-l"},\par
00111     {\cf22 "--polyline"},\par
00112     {\cf22 "-P"},\par
00113     {\cf22 "--polygon"},\par
00114     {\cf22 "-p"},\par
00115     {\cf22 "--render"},\par
00116     {\cf22 "-r"},\par
00117     {\cf22 "--satin"},\par
00118     {\cf22 "-s"},\par
00119     {\cf22 "--stitch"},\par
00120     {\cf22 "-S"},\par
00121     {\cf22 "--test"},\par
00122     {\cf22 "--full-test-suite"},\par
00123     {\cf22 "--hilbert-curve"},\par
00124     {\cf22 "--sierpinski-triangle"},\par
00125     {\cf22 "--fill"},\par
00126     {\cf22 "-f"},\par
00127     {\cf22 "--simulate"},\par
00128     {\cf22 "--combine"},\par
00129     {\cf22 "--cross-stitch"}\par
00130 \};\par
00131 \par
00132 {\cf17 const} {\cf18 char} *version_string = {\cf22 "embroider v0.1"};\par
00133 {\cf17 const} {\cf18 char} *welcome_message = {\cf22 "EMBROIDER\\n"}\par
00134     {\cf22 "    A command line program for machine embroidery.\\n"}\par
00135     {\cf22 "    Copyright 2013-2022 The Embroidermodder Team\\n"}\par
00136     {\cf22 "    Licensed under the terms of the zlib license.\\n"}\par
00137     {\cf22 "\\n"}\par
00138     {\cf22 "    https://github.com/Embroidermodder/libembroidery\\n"}\par
00139     {\cf22 "    https://embroidermodder.org\\n"};\par
00140 {\cf21 #endif}\par
00141 \par
00142 \par
00143 {\cf20 /* Checks that there are enough bytes to interpret the header,}\par
00144 {\cf20  * stops possible segfaults when reading in the header bytes.}\par
00145 {\cf20  *}\par
00146 {\cf20  * Returns 0 if there aren't enough, or the length of the file}\par
00147 {\cf20  * if there are.}\par
00148 {\cf20  */}\par
00149 {\cf18 int} check_header_present(FILE* file, {\cf18 int} minimum_header_length)\par
00150 \{\par
00151     {\cf18 int} length;\par
00152     fseek(file, 0, SEEK_END);\par
00153     length = ftell(file);\par
00154     fseek(file, 0, SEEK_SET);\par
00155     {\cf19 if} (length < minimum_header_length) \{\par
00156         {\cf19 return} 0;\par
00157     \}\par
00158     {\cf19 return} length;\par
00159 \}\par
00160 \par
00161 {\cf18 unsigned} {\cf18 int}\par
00162 sectorSize(bcf_file* bcfFile)\par
00163 \{\par
00164     {\cf20 /* version 3 uses 512 byte */}\par
00165     {\cf19 if} (bcfFile->header.majorVersion == 3) \{\par
00166         {\cf19 return} 512;\par
00167     \}\par
00168     {\cf19 return} 4096;\par
00169 \}\par
00170 \par
00171 {\cf18 int}\par
00172 haveExtraDIFATSectors(bcf_file* file)\par
00173 \{\par
00174     {\cf19 return} ({\cf18 int})(entriesInDifatSector(file->difat) > 0);\par
00175 \}\par
00176 \par
00177 {\cf18 int}\par
00178 seekToSector(bcf_file* bcfFile, FILE* file, {\cf17 const} {\cf18 unsigned} {\cf18 int} sector)\par
00179 \{\par
00180     {\cf18 unsigned} {\cf18 int} offset = sector * sectorSize(bcfFile) + sectorSize(bcfFile);\par
00181     {\cf19 return} fseek(file, offset, SEEK_SET);\par
00182 \}\par
00183 \par
00184 {\cf18 void}\par
00185 parseDIFATSectors(FILE* file, bcf_file* bcfFile)\par
00186 \{\par
00187     {\cf18 unsigned} {\cf18 int} difatEntriesToRead = bcfFile->header.numberOfFATSectors - difatEntriesInHeader;\par
00188     {\cf18 unsigned} {\cf18 int} difatSectorNumber = bcfFile->header.firstDifatSectorLocation;\par
00189     {\cf19 while} ((difatSectorNumber != CompoundFileSector_EndOfChain) && (difatEntriesToRead > 0)) \{\par
00190         seekToSector(bcfFile, file, difatSectorNumber);\par
00191         difatSectorNumber = readFullSector(file, bcfFile->difat, &difatEntriesToRead);\par
00192     \}\par
00193 \}\par
00194 \par
00195 {\cf18 int}\par
00196 bcfFile_read(FILE* file, bcf_file* bcfFile)\par
00197 \{\par
00198     {\cf18 unsigned} {\cf18 int} i, numberOfDirectoryEntriesPerSector;\par
00199     {\cf18 unsigned} {\cf18 int} directorySectorToReadFrom;\par
00200 \par
00201     bcfFile->header = bcfFileHeader_read(file);\par
00202     {\cf19 if} (memcmp(bcfFile->header.signature, {\cf22 "\\xd0\\xcf\\x11\\xe0\\xa1\\xb1\\x1a\\xe1"}, 8) != 0) \{\par
00203         printf({\cf22 "bad header signature\\n"});\par
00204         printf({\cf22 "Failed to parse header\\n"});\par
00205         {\cf19 return} 0;\par
00206     \}\par
00207 \par
00208     bcfFile->difat = bcf_difat_create(file, bcfFile->header.numberOfFATSectors, sectorSize(bcfFile));\par
00209     {\cf19 if} (haveExtraDIFATSectors(bcfFile)) \{\par
00210         parseDIFATSectors(file, bcfFile);\par
00211     \}\par
00212 \par
00213     bcfFile->fat = bcfFileFat_create(sectorSize(bcfFile));\par
00214     {\cf19 for} (i = 0; i < bcfFile->header.numberOfFATSectors; ++i) \{\par
00215         {\cf18 unsigned} {\cf18 int} fatSectorNumber = bcfFile->difat->fatSectorEntries[i];\par
00216         seekToSector(bcfFile, file, fatSectorNumber);\par
00217         loadFatFromSector(bcfFile->fat, file);\par
00218     \}\par
00219 \par
00220     numberOfDirectoryEntriesPerSector = sectorSize(bcfFile) / sizeOfDirectoryEntry;\par
00221     bcfFile->directory = CompoundFileDirectory(numberOfDirectoryEntriesPerSector);\par
00222     directorySectorToReadFrom = bcfFile->header.firstDirectorySectorLocation;\par
00223     {\cf19 while} (directorySectorToReadFrom != CompoundFileSector_EndOfChain) \{\par
00224         seekToSector(bcfFile, file, directorySectorToReadFrom);\par
00225         readNextSector(file, bcfFile->directory);\par
00226         directorySectorToReadFrom = bcfFile->fat->fatEntries[directorySectorToReadFrom];\par
00227     \}\par
00228 \par
00229     {\cf19 return} 1;\par
00230 \}\par
00231 \par
00232 FILE*\par
00233 GetFile(bcf_file* bcfFile, FILE* file, {\cf18 char}* fileToFind)\par
00234 \{\par
00235     {\cf18 int} filesize, sectorSize, currentSector;\par
00236     {\cf18 int} sizeToWrite, currentSize, totalSectors, i, j;\par
00237     FILE* fileOut = tmpfile();\par
00238     bcf_directory_entry* pointer = bcfFile->directory->dirEntries;\par
00239     {\cf19 while} (pointer) \{\par
00240         {\cf19 if} (strcmp(fileToFind, pointer->directoryEntryName) == 0)\par
00241             {\cf19 break};\par
00242         pointer = pointer->next;\par
00243     \}\par
00244     filesize = pointer->streamSize;\par
00245     sectorSize = bcfFile->difat->sectorSize;\par
00246     currentSize = 0;\par
00247     currentSector = pointer->startingSectorLocation;\par
00248     totalSectors = (int)ceil(({\cf18 float})filesize / sectorSize);\par
00249     {\cf19 for} (i = 0; i < totalSectors; i++) \{\par
00250         seekToSector(bcfFile, file, currentSector);\par
00251         sizeToWrite = filesize - currentSize;\par
00252         {\cf19 if} (sectorSize < sizeToWrite) \{\par
00253             sizeToWrite = sectorSize;\par
00254         \}\par
00255         {\cf19 for} (j=0; j<sizeToWrite; j++) \{\par
00256             {\cf18 char} input;\par
00257             fread(&input, 1, 1, file);\par
00258             fwrite(&input, 1, 1, fileOut);\par
00259         \}\par
00260         currentSize += sizeToWrite;\par
00261         currentSector = bcfFile->fat->fatEntries[currentSector];\par
00262     \}\par
00263     {\cf19 return} fileOut;\par
00264 \}\par
00265 \par
00266 {\cf18 void}\par
00267 bcf_file_free(bcf_file* bcfFile)\par
00268 \{\par
00269     safe_free(bcfFile->difat);\par
00270     safe_free(bcfFile->fat);\par
00271     bcf_directory_free(&bcfFile->directory);\par
00272     free(bcfFile);\par
00273 \}\par
00274 \par
00275 bcf_file_difat*\par
00276 bcf_difat_create(FILE* file, {\cf18 unsigned} {\cf18 int} fatSectors, {\cf17 const} {\cf18 unsigned} {\cf18 int} sectorSize)\par
00277 \{\par
00278     {\cf18 unsigned} {\cf18 int} i;\par
00279     bcf_file_difat* difat = 0;\par
00280     {\cf18 unsigned} {\cf18 int} sectorRef;\par
00281 \par
00282     difat = (bcf_file_difat*)malloc({\cf17 sizeof}(bcf_file_difat));\par
00283     {\cf19 if} (!difat) \{\par
00284         printf({\cf22 "ERROR: compound-file-difat.c bcf_difat_create(), cannot allocate memory for difat\\n"});\par
00285         {\cf19 return} NULL;\par
00286     \}\par
00287 \par
00288     difat->sectorSize = sectorSize;\par
00289     {\cf19 if} (fatSectors > difatEntriesInHeader) \{\par
00290         fatSectors = difatEntriesInHeader;\par
00291     \}\par
00292 \par
00293     {\cf19 for} (i = 0; i < fatSectors; ++i) \{\par
00294         embInt_read(file, {\cf22 "sectorRef"}, &sectorRef, EMB_INT32_LITTLE);\par
00295         difat->fatSectorEntries[i] = sectorRef;\par
00296     \}\par
00297     difat->fatSectorCount = fatSectors;\par
00298     {\cf19 for} (i = fatSectors; i < difatEntriesInHeader; ++i) \{\par
00299         embInt_read(file, {\cf22 "sectorRef"}, &sectorRef, EMB_INT32_LITTLE);\par
00300         {\cf19 if} (sectorRef != CompoundFileSector_FreeSector) \{\par
00301             printf({\cf22 "ERROR: compound-file-difat.c bcf_difat_create(), Unexpected sector value %x at DIFAT[%d]\\n"}, sectorRef, i);\par
00302         \}\par
00303     \}\par
00304     {\cf19 return} difat;\par
00305 \}\par
00306 \par
00307 {\cf18 unsigned} {\cf18 int}\par
00308 entriesInDifatSector(bcf_file_difat* fat)\par
00309 \{\par
00310     {\cf19 return} (fat->sectorSize - sizeOfChainingEntryAtEndOfDifatSector) / sizeOfDifatEntry;\par
00311 \}\par
00312 \par
00313 {\cf18 unsigned} {\cf18 int}\par
00314 readFullSector(FILE* file, bcf_file_difat* bcfFile, \par
00315                             {\cf18 unsigned} {\cf18 int}* difatEntriesToRead)\par
00316 \{\par
00317     {\cf18 unsigned} {\cf18 int} i;\par
00318     {\cf18 unsigned} {\cf18 int} sectorRef;\par
00319     {\cf18 unsigned} {\cf18 int} nextDifatSectorInChain;\par
00320     {\cf18 unsigned} {\cf18 int} entriesToReadInThisSector = 0;\par
00321     {\cf19 if} (*difatEntriesToRead > entriesInDifatSector(bcfFile)) \{\par
00322         entriesToReadInThisSector = entriesInDifatSector(bcfFile);\par
00323         *difatEntriesToRead -= entriesToReadInThisSector;\par
00324     \}\par
00325     {\cf19 else} \{\par
00326         entriesToReadInThisSector = *difatEntriesToRead;\par
00327         *difatEntriesToRead = 0;\par
00328     \}\par
00329 \par
00330     {\cf19 for} (i = 0; i < entriesToReadInThisSector; ++i) \{\par
00331         embInt_read(file, {\cf22 "sectorRef"}, &sectorRef, EMB_INT32_LITTLE);\par
00332         bcfFile->fatSectorEntries[bcfFile->fatSectorCount] = sectorRef;\par
00333         bcfFile->fatSectorCount++;\par
00334     \}\par
00335     {\cf19 for} (i = entriesToReadInThisSector; i < entriesInDifatSector(bcfFile); ++i) \{\par
00336         embInt_read(file, {\cf22 "sectorRef"}, &sectorRef, EMB_INT32_LITTLE);\par
00337         {\cf19 if} (sectorRef != CompoundFileSector_FreeSector) \{\par
00338             printf({\cf22 "ERROR: compound-file-difat.c readFullSector(), "});\par
00339             printf({\cf22 "Unexpected sector value %x at DIFAT[%d]]\\n"}, sectorRef, i);\par
00340         \}\par
00341     \}\par
00342     embInt_read(file, {\cf22 "nextDifatSectorInChain"}, &nextDifatSectorInChain, EMB_INT32_LITTLE);\par
00343     {\cf19 return} nextDifatSectorInChain;\par
00344 \}\par
00345 \par
00346 {\cf18 void}\par
00347 parseDirectoryEntryName(FILE* file, bcf_directory_entry* dir)\par
00348 \{\par
00349     {\cf18 int} i;\par
00350     {\cf19 for} (i = 0; i < 32; ++i) \{\par
00351         {\cf18 unsigned} {\cf18 short} unicodechar;\par
00352         embInt_read(file, {\cf22 "unicode char"}, &unicodechar, EMB_INT16_LITTLE);\par
00353         {\cf19 if} (unicodechar != 0x0000) \{\par
00354             dir->directoryEntryName[i] = (char)unicodechar;\par
00355         \}\par
00356     \}\par
00357 \}\par
00358 \par
00359 bcf_directory*\par
00360 CompoundFileDirectory({\cf17 const} {\cf18 unsigned} {\cf18 int} maxNumberOfDirectoryEntries)\par
00361 \{\par
00362     bcf_directory* dir = (bcf_directory*)malloc({\cf17 sizeof}(bcf_directory));\par
00363     {\cf19 if} (!dir) \{\par
00364         printf({\cf22 "ERROR: compound-file-directory.c CompoundFileDirectory(), cannot allocate memory for dir\\n"});\par
00365     \} {\cf20 /* TODO: avoid crashing. null pointer will be accessed */}\par
00366     dir->maxNumberOfDirectoryEntries = maxNumberOfDirectoryEntries;\par
00367     dir->dirEntries = 0;\par
00368     {\cf19 return} dir;\par
00369 \}\par
00370 \par
00371 EmbTime\par
00372 parseTime(FILE* file)\par
00373 \{\par
00374     EmbTime returnVal;\par
00375     {\cf18 unsigned} {\cf18 int} ft_low, ft_high;\par
00376     {\cf20 /*embTime_time(&returnVal); TODO: use embTime_time() rather than time(). */}\par
00377     embInt_read(file, {\cf22 "ft_low"}, &ft_low, EMB_INT32_LITTLE);\par
00378     embInt_read(file, {\cf22 "ft_high"}, &ft_high, EMB_INT32_LITTLE);\par
00379     {\cf20 /* TODO: translate to actual date time */}\par
00380     returnVal.day = 1;\par
00381     returnVal.hour = 2;\par
00382     returnVal.minute = 3;\par
00383     returnVal.month = 4;\par
00384     returnVal.second = 5;\par
00385     returnVal.year = 6;\par
00386     {\cf19 return} returnVal;\par
00387 \}\par
00388 \par
00389 bcf_directory_entry*\par
00390 CompoundFileDirectoryEntry(FILE* file)\par
00391 \{\par
00392     {\cf17 const} {\cf18 int} guidSize = 16;\par
00393     bcf_directory_entry* dir = malloc({\cf17 sizeof}(bcf_directory_entry));\par
00394     {\cf19 if} (dir == NULL) \{\par
00395         printf({\cf22 "ERROR: compound-file-directory.c CompoundFileDirectoryEntry(), cannot allocate memory for dir\\n"});\par
00396         {\cf19 return} 0;\par
00397     \}\par
00398     memset(dir->directoryEntryName, 0, 32);\par
00399     parseDirectoryEntryName(file, dir);\par
00400     dir->next = 0;\par
00401     dir->directoryEntryNameLength = fread_uint16(file);\par
00402     dir->objectType = ({\cf18 unsigned} char)fgetc(file);\par
00403     {\cf19 if} ((dir->objectType != ObjectTypeStorage) && (dir->objectType != ObjectTypeStream) && (dir->objectType != ObjectTypeRootEntry)) \{\par
00404         printf({\cf22 "ERROR: compound-file-directory.c CompoundFileDirectoryEntry()"});\par
00405         printf({\cf22 ", unexpected object type: %d\\n"}, dir->objectType);\par
00406         {\cf19 return} 0;\par
00407     \}\par
00408     dir->colorFlag = ({\cf18 unsigned} char)fgetc(file);\par
00409     embInt_read(file, {\cf22 "left sibling id"}, &(dir->leftSiblingId), EMB_INT32_LITTLE);\par
00410     embInt_read(file, {\cf22 "right sibling id"}, &(dir->rightSiblingId), EMB_INT32_LITTLE);\par
00411     embInt_read(file, {\cf22 "child id"}, &(dir->childId), EMB_INT32_LITTLE);\par
00412     fread(dir->CLSID, 1, guidSize, file);\par
00413     embInt_read(file, {\cf22 "state bits"}, &(dir->stateBits), EMB_INT32_LITTLE);\par
00414     dir->creationTime = parseTime(file);\par
00415     dir->modifiedTime = parseTime(file);\par
00416     embInt_read(file, {\cf22 "starting sector location"}, &(dir->startingSectorLocation), EMB_INT32_LITTLE);\par
00417     {\cf20 /* StreamSize should really be __int64 or long long,}\par
00418 {\cf20      * but for our uses we should never run into an issue */}\par
00419     embInt_read(file, {\cf22 "dir->streamSize"}, &(dir->streamSize), EMB_INT32_LITTLE);\par
00420     {\cf20 /* top portion of int64 */}\par
00421     embInt_read(file, {\cf22 "dir->streamSizeHigh"}, &(dir->streamSizeHigh), EMB_INT32_LITTLE);\par
00422     {\cf19 return} dir;\par
00423 \}\par
00424 \par
00425 {\cf18 void}\par
00426 readNextSector(FILE* file, bcf_directory* dir)\par
00427 \{\par
00428     {\cf18 unsigned} {\cf18 int} i;\par
00429     {\cf19 for} (i = 0; i < dir->maxNumberOfDirectoryEntries; ++i) \{\par
00430         bcf_directory_entry* dirEntry = CompoundFileDirectoryEntry(file);\par
00431         bcf_directory_entry* pointer = dir->dirEntries;\par
00432         {\cf19 if} (!pointer) \{\par
00433             dir->dirEntries = dirEntry;\par
00434         \}\par
00435         {\cf19 else} \{\par
00436             {\cf19 while} (pointer) \{\par
00437                 {\cf19 if} (!pointer->next) \{\par
00438                     pointer->next = dirEntry;\par
00439                     {\cf19 break};\par
00440                 \}\par
00441                 pointer = pointer->next;\par
00442             \}\par
00443         \}\par
00444     \}\par
00445 \}\par
00446 \par
00447 {\cf18 void}\par
00448 bcf_directory_free(bcf_directory** dir)\par
00449 \{\par
00450     bcf_directory *dirptr;\par
00451     bcf_directory_entry* pointer;\par
00452     {\cf19 if} (dir == NULL)\{\par
00453         {\cf19 return};\par
00454     \}\par
00455     dirptr = *dir;\par
00456     pointer = dirptr->dirEntries;\par
00457     {\cf19 while} (pointer) \{\par
00458         bcf_directory_entry* entryToFree;\par
00459         entryToFree = pointer;\par
00460         pointer = pointer->next;\par
00461         free(entryToFree);\par
00462     \}\par
00463     safe_free(*dir);\par
00464 \}\par
00465 \par
00466 bcf_file_fat*\par
00467 bcfFileFat_create({\cf17 const} {\cf18 unsigned} {\cf18 int} sectorSize)\par
00468 \{\par
00469     bcf_file_fat* fat = (bcf_file_fat*)malloc({\cf17 sizeof}(bcf_file_fat));\par
00470     {\cf19 if} (!fat) \{\par
00471         printf({\cf22 "ERROR: compound-file-fat.c bcfFileFat_create(), "});\par
00472         printf({\cf22 "cannot allocate memory for fat\\n"});\par
00473         {\cf19 return} NULL;\par
00474     \}\par
00475     fat->numberOfEntriesInFatSector = sectorSize / sizeOfFatEntry;\par
00476     fat->fatEntryCount = 0;\par
00477     {\cf19 return} fat;\par
00478 \}\par
00479 \par
00480 {\cf18 void}\par
00481 loadFatFromSector(bcf_file_fat* fat, FILE* file)\par
00482 \{\par
00483     {\cf18 unsigned} {\cf18 int} i;\par
00484     {\cf18 unsigned} {\cf18 int} current_fat_entries = fat->fatEntryCount;\par
00485     {\cf18 unsigned} {\cf18 int} newSize = current_fat_entries + fat->numberOfEntriesInFatSector;\par
00486     {\cf19 for} (i = current_fat_entries; i < newSize; ++i) \{\par
00487         {\cf18 int} fatEntry;\par
00488         embInt_read(file, {\cf22 "fatEntry"}, &fatEntry, EMB_INT32_LITTLE);\par
00489         fat->fatEntries[i] = fatEntry;\par
00490     \}\par
00491     fat->fatEntryCount = newSize;\par
00492 \}\par
00493 \par
00494 bcf_file_header\par
00495 bcfFileHeader_read(FILE* file)\par
00496 \{\par
00497     bcf_file_header header;\par
00498     fread(header.signature, 1, 8, file);\par
00499     fread(header.CLSID, 1, 16, file);\par
00500     header.minorVersion = fread_uint16(file);\par
00501     header.majorVersion = fread_uint16(file);\par
00502     header.byteOrder = fread_uint16(file);\par
00503     header.sectorShift = fread_uint16(file);\par
00504     header.miniSectorShift = fread_uint16(file);\par
00505     header.reserved1 = fread_uint16(file);\par
00506     embInt_read(file, {\cf22 "reserved2"}, &(header.reserved2), EMB_INT32_LITTLE);\par
00507     embInt_read(file, {\cf22 "numberOfDirectorySectors"}, &(header.numberOfDirectorySectors), EMB_INT32_LITTLE);\par
00508     embInt_read(file, {\cf22 "numberOfFATSectors"}, &(header.numberOfFATSectors), EMB_INT32_LITTLE);\par
00509     embInt_read(file, {\cf22 "first dir sector loaction"}, &(header.firstDirectorySectorLocation), EMB_INT32_LITTLE);\par
00510     embInt_read(file, {\cf22 "transaction signature number"}, &(header.transactionSignatureNumber), EMB_INT32_LITTLE);\par
00511     embInt_read(file, {\cf22 "mini stream cutoff sector"}, &(header.miniStreamCutoffSize), EMB_INT32_LITTLE);\par
00512     embInt_read(file, {\cf22 "first mini fat sector"}, &(header.firstMiniFATSectorLocation), EMB_INT32_LITTLE);\par
00513     embInt_read(file, {\cf22 "mini fat sectors"}, &(header.numberOfMiniFatSectors), EMB_INT32_LITTLE);\par
00514     embInt_read(file, {\cf22 "first difat Sector"}, &(header.firstDifatSectorLocation), EMB_INT32_LITTLE);\par
00515     embInt_read(file, {\cf22 "difat sectors"}, &(header.numberOfDifatSectors), EMB_INT32_LITTLE);\par
00516     {\cf19 return} header;\par
00517 \}\par
00518 \par
00519 {\cf18 void}\par
00520 embSatinOutline_generateSatinOutline(EmbArray *lines, EmbReal thickness, EmbSatinOutline* result)\par
00521 \{\par
00522     {\cf18 int} i;\par
00523     EmbLine line1, line2;\par
00524     EmbSatinOutline outline;\par
00525     EmbVector out;\par
00526     EmbVector v1;\par
00527     EmbVector temp;\par
00528     EmbLine line;\par
00529 \par
00530     EmbReal halfThickness = thickness / 2.0;\par
00531     {\cf18 int} intermediateOutlineCount = 2 * lines->count - 2;\par
00532     outline.side1 = embArray_create(EMB_VECTOR);\par
00533     {\cf19 if} (!outline.side1) \{\par
00534         printf({\cf22 "ERROR: emb-satin-line.c embSatinOutline_generateSatinOutline(), cannot allocate memory for outline->side1\\n"});\par
00535         {\cf19 return};\par
00536     \}\par
00537     outline.side2 = embArray_create(EMB_VECTOR);\par
00538     {\cf19 if} (!outline.side2) \{\par
00539         printf({\cf22 "ERROR: emb-satin-line.c embSatinOutline_generateSatinOutline(), cannot allocate memory for outline->side2\\n"});\par
00540         {\cf19 return};\par
00541     \}\par
00542 \par
00543     {\cf19 for} (i = 1; i < lines->count; i++) \{\par
00544         line.start = lines->geometry[i - 1].object.vector;\par
00545         line.end = lines->geometry[i].object.vector;\par
00546 \par
00547         embLine_normalVector(line, &v1, 1);\par
00548 \par
00549         embVector_multiply(v1, halfThickness, &temp);\par
00550         temp = embVector_add(temp, lines->geometry[i-1].object.vector);\par
00551         embArray_addVector(outline.side1, temp);\par
00552         temp = embVector_add(temp, lines->geometry[i].object.vector);\par
00553         embArray_addVector(outline.side1, temp);\par
00554 \par
00555         embVector_multiply(v1, -halfThickness, &temp);\par
00556         temp = embVector_add(temp, lines->geometry[i - 1].object.vector);\par
00557         embArray_addVector(outline.side2, temp);\par
00558         temp = embVector_add(temp, lines->geometry[i].object.vector);\par
00559         embArray_addVector(outline.side2, temp);\par
00560     \}\par
00561 \par
00562     {\cf19 if} (!result) \{\par
00563         printf({\cf22 "ERROR: emb-satin-line.c embSatinOutline_generateSatinOutline(), result argument is null\\n"});\par
00564         {\cf19 return};\par
00565     \}\par
00566     result->side1 = embArray_create(EMB_VECTOR);\par
00567     {\cf19 if} (!result->side1) \{\par
00568         printf({\cf22 "ERROR: emb-satin-line.c embSatinOutline_generateSatinOutline(), cannot allocate memory for result->side1\\n"});\par
00569         {\cf19 return};\par
00570     \}\par
00571     result->side2 = embArray_create(EMB_VECTOR);\par
00572     {\cf19 if} (!result->side2) \{\par
00573         printf({\cf22 "ERROR: emb-satin-line.c embSatinOutline_generateSatinOutline(), cannot allocate memory for result->side2\\n"});\par
00574         {\cf19 return};\par
00575     \}\par
00576 \par
00577     embArray_addVector(result->side1, outline.side1->geometry[0].object.vector);\par
00578     embArray_addVector(result->side2, outline.side2->geometry[0].object.vector);\par
00579 \par
00580     {\cf19 for} (i = 3; i < intermediateOutlineCount; i += 2) \{\par
00581         line1.start = outline.side1->geometry[i - 3].object.vector;\par
00582         line1.end = outline.side1->geometry[i - 2].object.vector;\par
00583         line2.start = outline.side1->geometry[i - 1].object.vector;\par
00584         line2.end = outline.side1->geometry[i].object.vector;\par
00585         out = embLine_intersectionPoint(line1, line2);\par
00586         {\cf19 if} (emb_error) \{\par
00587             puts({\cf22 "No intersection point."});\par
00588         \}\par
00589         embArray_addVector(result->side1, out);\par
00590 \par
00591         line1.start = outline.side2->geometry[i - 3].object.vector;\par
00592         line1.end = outline.side2->geometry[i - 2].object.vector;\par
00593         line2.start = outline.side2->geometry[i - 1].object.vector;\par
00594         line2.end = outline.side2->geometry[i].object.vector;\par
00595         out = embLine_intersectionPoint(line1, line2);\par
00596         {\cf19 if} (emb_error) \{\par
00597             puts({\cf22 "No intersection point."});\par
00598         \}\par
00599         embArray_addVector(result->side2, out);\par
00600     \}\par
00601 \par
00602     embArray_addVector(result->side1, outline.side1->geometry[2 * lines->count - 3].object.vector);\par
00603     embArray_addVector(result->side2, outline.side2->geometry[2 * lines->count - 3].object.vector);\par
00604     result->length = lines->count;\par
00605 \}\par
00606 \par
00607 EmbArray*\par
00608 embSatinOutline_renderStitches(EmbSatinOutline* result, EmbReal density)\par
00609 \{\par
00610     {\cf18 int} i, j;\par
00611     EmbVector currTop, currBottom, topDiff, bottomDiff, midDiff;\par
00612     EmbVector midLeft, midRight, topStep, bottomStep;\par
00613     EmbArray* stitches = 0;\par
00614     {\cf18 int} numberOfSteps;\par
00615     EmbReal midLength;\par
00616 \par
00617     {\cf19 if} (!result) \{\par
00618         printf({\cf22 "ERROR: emb-satin-line.c embSatinOutline_renderStitches(), result argument is null\\n"});\par
00619         {\cf19 return} 0;\par
00620     \}\par
00621 \par
00622     {\cf19 if} (result->length > 0) \{\par
00623         {\cf19 for} (j = 0; j < result->length - 1; j++) \{\par
00624             EmbGeometry *g10 = &(result->side1->geometry[j+0]);\par
00625             EmbGeometry *g11 = &(result->side1->geometry[j+1]);\par
00626             EmbGeometry *g20 = &(result->side2->geometry[j+0]);\par
00627             EmbGeometry *g21 = &(result->side2->geometry[j+1]);\par
00628             topDiff = embVector_subtract(g10->object.vector, g11->object.vector);\par
00629             bottomDiff = embVector_subtract(g21->object.vector, g20->object.vector);\par
00630 \par
00631             midLeft = embVector_average(g10->object.vector, g20->object.vector);\par
00632             midRight = embVector_average(g11->object.vector, g21->object.vector);\par
00633 \par
00634             midDiff = embVector_subtract(midLeft, midRight);\par
00635             midLength = embVector_length(midDiff);\par
00636 \par
00637             numberOfSteps = (int)(midLength * density / 200);\par
00638             embVector_multiply(topDiff, 1.0/numberOfSteps, &topStep);\par
00639             embVector_multiply(bottomDiff, 1.0/numberOfSteps, &bottomStep);\par
00640             currTop = g10->object.vector;\par
00641             currBottom = g20->object.vector;\par
00642 \par
00643             {\cf19 for} (i = 0; i < numberOfSteps; i++) \{\par
00644                 {\cf19 if} (!stitches) \{\par
00645                     stitches = embArray_create(EMB_VECTOR);\par
00646                 \}\par
00647                 embArray_addVector(stitches, currTop);\par
00648                 embArray_addVector(stitches, currBottom);\par
00649                 currTop = embVector_add(currTop, topStep);\par
00650                 currBottom = embVector_add(currBottom, bottomStep);\par
00651             \}\par
00652         \}\par
00653         embArray_addVector(stitches, currTop);\par
00654         embArray_addVector(stitches, currBottom);\par
00655     \}\par
00656     {\cf19 return} stitches;\par
00657 \}\par
00658 \par
00659 {\cf18 void}\par
00660 write_24bit(FILE* file, {\cf18 int} x)\par
00661 \{\par
00662     {\cf18 unsigned} {\cf18 char} a[4];\par
00663     a[0] = ({\cf18 unsigned} char)0;\par
00664     a[1] = ({\cf18 unsigned} char)(x & 0xFF);\par
00665     a[2] = ({\cf18 unsigned} char)((x >> 8) & 0xFF);\par
00666     a[3] = ({\cf18 unsigned} char)((x >> 16) & 0xFF);\par
00667     fwrite(a, 1, 4, file);\par
00668 \}\par
00669 \par
00670 {\cf18 int}\par
00671 embColor_distance(EmbColor a, EmbColor b)\par
00672 \{\par
00673     {\cf18 int} t;\par
00674     t = (a.r-b.r)*(a.r-b.r);\par
00675     t += (a.g-b.g)*(a.g-b.g);\par
00676     t += (a.b-b.b)*(a.b-b.b);\par
00677     {\cf19 return} t;\par
00678 \}\par
00679 \par
00680 {\cf18 void}\par
00681 embColor_read(FILE *f, EmbColor *c, {\cf18 int} toRead)\par
00682 \{\par
00683     {\cf18 unsigned} {\cf18 char} b[4];\par
00684     fread(b, 1, toRead, f);\par
00685     c->r = b[0];\par
00686     c->g = b[1];\par
00687     c->b = b[2];\par
00688 \}\par
00689 \par
00690 {\cf18 void}\par
00691 embColor_write(FILE *f, EmbColor c, {\cf18 int} toWrite)\par
00692 \{\par
00693     {\cf18 unsigned} {\cf18 char} b[4];\par
00694     b[0] = c.r;\par
00695     b[1] = c.g;\par
00696     b[2] = c.b;\par
00697     b[3] = 0;\par
00698     fwrite(b, 1, toWrite, f);\par
00699 \}\par
00700 \par
00714 {\cf18 int}\par
00715 embThread_findNearestColor(EmbColor color, EmbColor *color_list, {\cf18 int} n_colors)\par
00716 \{\par
00717     {\cf18 int} currentClosestValue = 256*256*3;\par
00718     {\cf18 int} closestIndex = -1, i;\par
00719     {\cf19 for} (i = 0; i < n_colors; i++) \{\par
00720         {\cf18 int} delta = embColor_distance(color, color_list[i]);\par
00721 \par
00722         {\cf19 if} (delta <= currentClosestValue) \{\par
00723             currentClosestValue = delta;\par
00724             closestIndex = i;\par
00725         \}\par
00726     \}\par
00727     {\cf19 return} closestIndex;\par
00728 \}\par
00729 \par
00730 {\cf18 int}\par
00731 embThread_findNearestThread(EmbColor color, EmbThread *thread_list, {\cf18 int} n_threads)\par
00732 \{\par
00733     {\cf18 int} currentClosestValue = 256*256*3;\par
00734     {\cf18 int} closestIndex = -1, i;\par
00735     {\cf19 for} (i = 0; i < n_threads; i++) \{\par
00736         {\cf18 int} delta = embColor_distance(color, thread_list[i].color);\par
00737 \par
00738         {\cf19 if} (delta <= currentClosestValue) \{\par
00739             currentClosestValue = delta;\par
00740             closestIndex = i;\par
00741         \}\par
00742     \}\par
00743     {\cf19 return} closestIndex;\par
00744 \}\par
00745 \par
00753 EmbThread\par
00754 embThread_getRandom({\cf18 void})\par
00755 \{\par
00756     EmbThread c;\par
00757     c.color.r = rand()%256;\par
00758     c.color.g = rand()%256;\par
00759     c.color.b = rand()%256;\par
00760     strcpy(c.description, {\cf22 "random"});\par
00761     strcpy(c.catalogNumber, {\cf22 ""});\par
00762     {\cf19 return} c;\par
00763 \}\par
00764 \par
00765 {\cf18 void}\par
00766 binaryReadString(FILE* file, {\cf18 char}* buffer, {\cf18 int} maxLength)\par
00767 \{\par
00768     {\cf18 int} i = 0;\par
00769     {\cf19 while}(i < maxLength) \{\par
00770         buffer[i] = (char)fgetc(file);\par
00771         {\cf19 if} (buffer[i] == {\cf23 '\\0'}) {\cf19 break};\par
00772         i++;\par
00773     \}\par
00774 \}\par
00775 \par
00776 {\cf18 void}\par
00777 binaryReadUnicodeString(FILE* file, {\cf18 char} *buffer, {\cf17 const} {\cf18 int} stringLength)\par
00778 \{\par
00779     {\cf18 int} i = 0;\par
00780     {\cf19 for} (i = 0; i < stringLength * 2; i++) \{\par
00781         {\cf18 char} input = (char)fgetc(file);\par
00782         {\cf19 if} (input != 0) \{\par
00783             buffer[i] = input;\par
00784         \}\par
00785     \}\par
00786 \}\par
00787 \par
00796 {\cf18 int}\par
00797 stringInArray({\cf17 const} {\cf18 char} *s, {\cf17 const} {\cf18 char} **array)\par
00798 \{\par
00799     {\cf18 int} i;\par
00800     {\cf19 for} (i = 0; strlen(array[i]); i++) \{\par
00801         {\cf19 if} (!strcmp(s, array[i])) \{\par
00802             {\cf19 return} 1;\par
00803         \}\par
00804     \}\par
00805     {\cf19 return} 0;\par
00806 \}\par
00807 \par
00808 {\cf18 int}\par
00809 emb_readline(FILE* file, {\cf18 char} *line, {\cf18 int} maxLength)\par
00810 \{\par
00811     {\cf18 int} i;\par
00812     {\cf18 char} c;\par
00813     {\cf19 for} (i = 0; i < maxLength-1; i++) \{\par
00814         {\cf19 if} (!fread(&c, 1, 1, file)) \{\par
00815             {\cf19 break};\par
00816         \}\par
00817         {\cf19 if} (c == {\cf23 '\\r'}) \{\par
00818             fread(&c, 1, 1, file);\par
00819             {\cf19 if} (c != {\cf23 '\\n'}) \{\par
00820                 fseek(file, -1L, SEEK_CUR);\par
00821             \}\par
00822             {\cf19 break};\par
00823         \}\par
00824         {\cf19 if} (c == {\cf23 '\\n'}) \{\par
00825             {\cf19 break};\par
00826         \}\par
00827         *line = c;\par
00828         line++;\par
00829     \}\par
00830     *line = 0;\par
00831     {\cf19 return} i;\par
00832 \}\par
00833 \par
00834 {\cf20 /* TODO: trimming function should handle any character, not just whitespace */}\par
00835 {\cf18 char} {\cf17 const} WHITESPACE[] = {\cf22 " \\t\\n\\r"};\par
00836 \par
00837 {\cf20 /* TODO: description */}\par
00838 {\cf18 void}\par
00839 get_trim_bounds({\cf18 char} {\cf17 const} *s, {\cf18 char} {\cf17 const} **firstWord, {\cf18 char} {\cf17 const} **trailingSpace)\par
00840 \{\par
00841     {\cf18 char} {\cf17 const}* lastWord = 0;\par
00842     *firstWord = lastWord = s + strspn(s, WHITESPACE);\par
00843     {\cf19 do} \{\par
00844         *trailingSpace = lastWord + strcspn(lastWord, WHITESPACE);\par
00845         lastWord = *trailingSpace + strspn(*trailingSpace, WHITESPACE);\par
00846     \} {\cf19 while} (*lastWord != {\cf23 '\\0'});\par
00847 \}\par
00848 \par
00849 {\cf20 /* TODO: description */}\par
00850 {\cf18 char}*\par
00851 copy_trim({\cf18 char} {\cf17 const} *s)\par
00852 \{\par
00853     {\cf18 char} {\cf17 const} *firstWord = 0, *trailingSpace = 0;\par
00854     {\cf18 char}* result = 0;\par
00855     {\cf18 size_t} newLength;\par
00856 \par
00857     get_trim_bounds(s, &firstWord, &trailingSpace);\par
00858     newLength = trailingSpace - firstWord;\par
00859 \par
00860     result = ({\cf18 char}*)malloc(newLength + 1);\par
00861     memcpy(result, firstWord, newLength);\par
00862     result[newLength] = {\cf23 '\\0'};\par
00863     {\cf19 return} result;\par
00864 \}\par
00865 \par
00867 {\cf18 char}*\par
00868 emb_optOut(EmbReal num, {\cf18 char}* str)\par
00869 \{\par
00870     {\cf18 char} *str_end;\par
00871     {\cf20 /* Convert the number to a string */}\par
00872     sprintf(str, {\cf22 "%.10f"}, num);\par
00873     {\cf20 /* Remove trailing zeroes */}\par
00874     str_end = str + strlen(str);\par
00875     {\cf19 while} (*--str_end == {\cf23 '0'});\par
00876     str_end[1] = 0;\par
00877     {\cf20 /* Remove the decimal point if it happens to be an integer */}\par
00878     {\cf19 if} (*str_end == {\cf23 '.'}) \{\par
00879         *str_end = 0;\par
00880     \}\par
00881     {\cf19 return} str;\par
00882 \}\par
00883 \par
00884 {\cf18 void}\par
00885 embTime_initNow(EmbTime* t)\par
00886 \{\par
00887 {\cf21 #ifdef ARDUINO}\par
00888 {\cf20 /*TODO: arduino embTime_initNow */}\par
00889 {\cf21 #else}\par
00890     time_t rawtime;\par
00891     {\cf17 struct }tm* timeinfo;\par
00892     time(&rawtime);\par
00893     timeinfo = localtime(&rawtime);\par
00894 \par
00895     t->year   = timeinfo->tm_year;\par
00896     t->month  = timeinfo->tm_mon;\par
00897     t->day    = timeinfo->tm_mday;\par
00898     t->hour   = timeinfo->tm_hour;\par
00899     t->minute = timeinfo->tm_min;\par
00900     t->second = timeinfo->tm_sec;\par
00901 {\cf21 #endif }{\cf20 /* ARDUINO */}{\cf21 }\par
00902 \}\par
00903 \par
00904 EmbTime\par
00905 embTime_time(EmbTime* t)\par
00906 \{\par
00907 {\cf21 #ifdef ARDUINO}\par
00908 {\cf20 /*TODO: arduino embTime_time */}\par
00909 {\cf21 #else}\par
00910 \par
00911 {\cf18 int} divideByZero = 0;\par
00912 divideByZero = divideByZero/divideByZero; {\cf20 /*TODO: wrap time() from time.h and verify it works consistently */}\par
00913 \par
00914 {\cf21 #endif }{\cf20 /* ARDUINO */}{\cf21 }\par
00915     {\cf19 return} *t;\par
00916 \}\par
00917 \par
00918 {\cf21 #ifdef LIBEMBROIDERY_CLI}\par
00919 {\cf18 void}\par
00920 report({\cf18 int} result, {\cf18 char} *label)\par
00921 \{\par
00922     printf({\cf22 "%s Test...%*c"}, label, ({\cf18 int})(20-strlen(label)), {\cf23 ' '});\par
00923     {\cf19 if} (result) \{\par
00924         printf(RED_TERM_COLOR {\cf22 "[FAIL] [CODE=%d]\\n"} RESET_TERM_COLOR, result);\par
00925     \}\par
00926     {\cf19 else} \{\par
00927         printf(GREEN_TERM_COLOR {\cf22 "[PASS]\\n"} RESET_TERM_COLOR);\par
00928     \}\par
00929 \}\par
00930 \par
00931 {\cf18 void}\par
00932 testMain({\cf18 int} level)\par
00933 \{\par
00934     EmbPattern *pattern = embPattern_create();\par
00935     {\cf18 int} overall = 0;\par
00936     {\cf18 int} circleResult = testEmbCircle();\par
00937     {\cf18 int} threadResult = testThreadColor();\par
00938     {\cf18 int} formatResult = testEmbFormat();\par
00939     {\cf18 int} arcResult = testGeomArc();\par
00940     {\cf18 int} create1Result = create_test_file_1({\cf22 "test01.csv"});\par
00941     {\cf18 int} create2Result = create_test_file_2({\cf22 "test02.csv"});\par
00942     {\cf18 int} create3Result = create_test_file_3({\cf22 "test03.csv"});\par
00943     {\cf18 int} svg1Result = convert({\cf22 "test01.csv"}, {\cf22 "test01.svg"});\par
00944     {\cf18 int} svg2Result = convert({\cf22 "test02.csv"}, {\cf22 "test02.svg"});\par
00945     {\cf18 int} svg3Result = convert({\cf22 "test03.csv"}, {\cf22 "test03.svg"});\par
00946     {\cf18 int} dst1Result = convert({\cf22 "test01.csv"}, {\cf22 "test01.dst"});\par
00947     {\cf18 int} dst2Result = convert({\cf22 "test02.csv"}, {\cf22 "test02.dst"});\par
00948     {\cf18 int} dst3Result = convert({\cf22 "test03.csv"}, {\cf22 "test03.dst"});\par
00949     {\cf18 int} hilbertCurveResult = hilbert_curve(pattern, 3);\par
00950     {\cf18 int} renderResult = embPattern_render(pattern, {\cf22 "hilbert_level_3.png"});\par
00951     {\cf18 int} simulateResult = embPattern_simulate(pattern, {\cf22 "hilbert_level_3.avi"});\par
00952 \par
00953     overall += circleResult;\par
00954     overall += threadResult;\par
00955     overall += formatResult;\par
00956     overall += arcResult;\par
00957     overall += create1Result;\par
00958     overall += create2Result;\par
00959     overall += create3Result;\par
00960     overall += svg1Result;\par
00961     overall += svg2Result;\par
00962     overall += svg3Result;\par
00963     overall += dst1Result;\par
00964     overall += dst2Result;\par
00965     overall += dst3Result;\par
00966 \par
00967     {\cf19 if} (emb_verbose >= 0) \{\par
00968         puts({\cf22 "SUMMARY OF RESULTS"});\par
00969         puts({\cf22 "------------------"});\par
00970         report(circleResult, {\cf22 "Tangent Point"});\par
00971         report(threadResult, {\cf22 "Thread"});\par
00972         report(formatResult, {\cf22 "Format"});\par
00973         report(arcResult, {\cf22 "Arc"});\par
00974         report(create1Result, {\cf22 "Create CSV 1"});\par
00975         report(create2Result, {\cf22 "Create CSV 2"});\par
00976         report(create3Result, {\cf22 "Create CSV 3"});\par
00977         report(svg1Result, {\cf22 "Convert CSV-SVG 1"});\par
00978         report(svg2Result, {\cf22 "Convert CSV-SVG 2"});\par
00979         report(svg3Result, {\cf22 "Convert CSV-SVG 3"});\par
00980         report(dst1Result, {\cf22 "Convert CSV-DST 1"});\par
00981         report(dst2Result, {\cf22 "Convert CSV-DST 2"});\par
00982         report(dst3Result, {\cf22 "Convert CSV-DST 3"});\par
00983         report(hilbertCurveResult, {\cf22 "Generating Hilbert Curve"});\par
00984         report(renderResult, {\cf22 "Rendering Hilbert Curve"});\par
00985         report(simulateResult, {\cf22 "Simulating Hilbert Curve"});\par
00986     \}\par
00987     \par
00988     embPattern_free(pattern);\par
00989     {\cf19 if} (level > 0) \{\par
00990         puts({\cf22 "More expensive tests."});\par
00991         full_test_matrix({\cf22 "test_matrix.txt"});\par
00992     \}\par
00993     {\cf19 if} (overall == 0) \{\par
00994         puts({\cf22 "PASS"});\par
00995     \}\par
00996     {\cf19 else} \{\par
00997         puts({\cf22 "FAIL"});\par
00998     \}\par
00999 \}\par
01000 \par
01001 {\cf18 void}\par
01002 testTangentPoints(EmbCircle c, EmbVector p, EmbVector *t0, EmbVector *t1)\par
01003 \{\par
01004     emb_error = 0;\par
01005     t0->x = 0.0;\par
01006     t0->y = 0.0;\par
01007     t1->x = 0.0;\par
01008     t1->y = 0.0;\par
01009     {\cf19 if} (!getCircleTangentPoints(c, p, t0, t1)) \{\par
01010         printf({\cf22 "Error calculating tangent points.\\n"});\par
01011         emb_error = 1;\par
01012     \}\par
01013     {\cf19 else} \{\par
01014         {\cf19 if} (emb_verbose > 0) \{\par
01015             printf({\cf22 "Circle : cr=%f, cx=%f, cy=%f\\n"}\par
01016                {\cf22 "Point  : px=%f, py=%f\\n"}\par
01017                {\cf22 "Tangent: tx0=%f, ty0=%f\\n"}\par
01018                {\cf22 "Tangent: tx1=%f, ty1=%f\\n\\n"},\par
01019                c.radius, c.center.x, c.center.y,\par
01020                p.x, p.y,\par
01021                t0->x, t0->y,\par
01022                t1->x, t1->y);\par
01023         \}\par
01024     \}\par
01025 \}\par
01026 \par
01027 {\cf18 int}\par
01028 testEmbCircle({\cf18 void})\par
01029 \{\par
01030     EmbReal error;\par
01031     EmbReal epsilon = 1e-3;\par
01032     EmbVector p0, p1;\par
01033     {\cf20 /* Problem */}\par
01034     EmbCircle c1 = \{\{0.0, 0.0\}, 3.0\};\par
01035     {\cf20 /* Solution */}\par
01036     EmbVector t0 = \{2.2500, 1.9843\};\par
01037     EmbVector t1 = \{2.2500, -1.9843\};\par
01038     EmbVector p = \{4.0, 0.0\};\par
01039     {\cf20 /* Test */}\par
01040     testTangentPoints(c1, p, &p0, &p1);\par
01041     error = embVector_distance(p0, t0) + embVector_distance(p1, t1);\par
01042     {\cf19 if} (error > epsilon) \{\par
01043         printf({\cf22 "Error larger than tolerance, circle test 1: %f.\\n\\n"}, error);\par
01044         {\cf19 return} 16;\par
01045     \}\par
01046 \par
01047     {\cf19 return} 0;\par
01048 \}\par
01049 \par
01050 {\cf18 int} testEmbCircle_2({\cf18 void}) \{\par
01051     EmbReal error;\par
01052     EmbReal epsilon = 1e-3;\par
01053     EmbVector p0, p1;\par
01054     EmbCircle c2 = \{\{20.1762, 10.7170\}, 6.8221\};\par
01055     {\cf20 /* Solution */}\par
01056     EmbVector s0 = \{19.0911, 17.4522\};\par
01057     EmbVector s1 = \{26.4428, 13.4133\};\par
01058     EmbVector p = \{24.3411, 18.2980\};\par
01059     {\cf20 /* Test */}\par
01060     testTangentPoints(c2, p, &p0, &p1);\par
01061     error = embVector_distance(p0, s0) + embVector_distance(p1, s1);\par
01062     {\cf19 if} (error > epsilon) \{\par
01063         printf({\cf22 "Error larger than tolerance, circle test 2: %f.\\n\\n"}, error);\par
01064         {\cf19 return} 17;\par
01065     \}\par
01066 \par
01067     {\cf19 return} 0;\par
01068 \}\par
01069 \par
01070 {\cf18 void}\par
01071 printArcResults(EmbReal bulge, EmbArc arc,\par
01072                      EmbReal centerX,   EmbReal centerY,\par
01073                      EmbReal radius,    EmbReal diameter,\par
01074                      EmbReal chord,\par
01075                      EmbReal chordMidX, EmbReal chordMidY,\par
01076                      EmbReal sagitta,   EmbReal apothem,\par
01077                      EmbReal incAngle,  {\cf18 char}   clockwise)\par
01078 \{\par
01079     fprintf(stdout, {\cf22 "bulge     = %f\\n"}\par
01080                     {\cf22 "startX    = %f\\n"}\par
01081                     {\cf22 "startY    = %f\\n"}\par
01082                     {\cf22 "endX      = %f\\n"}\par
01083                     {\cf22 "endY      = %f\\n"}\par
01084                     {\cf22 "midX      = %f\\n"}\par
01085                     {\cf22 "midY      = %f\\n"}\par
01086                     {\cf22 "centerX   = %f\\n"}\par
01087                     {\cf22 "centerY   = %f\\n"}\par
01088                     {\cf22 "radius    = %f\\n"}\par
01089                     {\cf22 "diameter  = %f\\n"}\par
01090                     {\cf22 "chord     = %f\\n"}\par
01091                     {\cf22 "chordMidX = %f\\n"}\par
01092                     {\cf22 "chordMidY = %f\\n"}\par
01093                     {\cf22 "sagitta   = %f\\n"}\par
01094                     {\cf22 "apothem   = %f\\n"}\par
01095                     {\cf22 "incAngle  = %f\\n"}\par
01096                     {\cf22 "clockwise = %d\\n"}\par
01097                     {\cf22 "\\n"},\par
01098                     bulge,\par
01099                     arc.start.x,\par
01100                     arc.start.y,\par
01101                     arc.end.x,\par
01102                     arc.end.y,\par
01103                     arc.mid.x,\par
01104                     arc.mid.y,\par
01105                     centerX,\par
01106                     centerY,\par
01107                     radius,\par
01108                     diameter,\par
01109                     chord,\par
01110                     chordMidX,\par
01111                     chordMidY,\par
01112                     sagitta,\par
01113                     apothem,\par
01114                     incAngle,\par
01115                     clockwise);\par
01116 \}\par
01117 \par
01118 {\cf18 int}\par
01119 testGeomArc({\cf18 void})\par
01120 \{\par
01121     EmbArc arc;\par
01122     EmbVector center, chordMid;\par
01123     EmbReal bulge, radius, diameter, chord, sagitta, apothem, incAngle;\par
01124     {\cf18 char} clockwise;\par
01125 \par
01126     bulge = -0.414213562373095;\par
01127     arc.start.x = 1.0;\par
01128     arc.start.y = 0.0;\par
01129     arc.end.x   = 2.0;\par
01130     arc.end.y   = 1.0;\par
01131     {\cf19 if} (getArcDataFromBulge(bulge, &arc,\par
01132                            &(center.x),   &(center.y),\par
01133                            &radius,    &diameter,\par
01134                            &chord,\par
01135                            &(chordMid.x), &(chordMid.y),\par
01136                            &sagitta,   &apothem,\par
01137                            &incAngle,  &clockwise)) \{\par
01138         {\cf19 if} (emb_verbose > 0) \{\par
01139             fprintf(stdout, {\cf22 "Clockwise Test:\\n"});\par
01140             printArcResults(bulge, arc, center.x, center.y,\par
01141                         radius, diameter,\par
01142                         chord,\par
01143                         chordMid.x, chordMid.y,\par
01144                         sagitta,   apothem,\par
01145                         incAngle,  clockwise);\par
01146         \}\par
01147     \}\par
01148 \par
01149     bulge  = 2.414213562373095;\par
01150     arc.start.x = 4.0;\par
01151     arc.start.y = 0.0;\par
01152     arc.end.x   = 5.0;\par
01153     arc.end.y   = 1.0;\par
01154     {\cf19 if} (getArcDataFromBulge(bulge, &arc,\par
01155                            &(center.x),   &(center.y),\par
01156                            &radius,    &diameter,\par
01157                            &chord,\par
01158                            &(chordMid.x), &(chordMid.y),\par
01159                            &sagitta,   &apothem,\par
01160                            &incAngle,  &clockwise)) \{\par
01161         {\cf19 if} (emb_verbose > 0) \{\par
01162             fprintf(stdout, {\cf22 "Counter-Clockwise Test:\\n"});\par
01163             printArcResults(bulge, arc, center.x, center.y,\par
01164                         radius,    diameter,\par
01165                         chord,\par
01166                         chordMid.x, chordMid.y,\par
01167                         sagitta,   apothem,\par
01168                         incAngle,  clockwise);\par
01169         \}\par
01170     \}\par
01171 \par
01172     {\cf19 return} 0;\par
01173 \}\par
01174 \par
01175 {\cf18 int}\par
01176 testThreadColor({\cf18 void})\par
01177 \{\par
01178     {\cf18 unsigned} {\cf18 int} tColor = 0xFFD25F00;\par
01179     {\cf18 int}          tBrand = Sulky_Rayon;\par
01180     {\cf18 int}          tNum   = threadColorNum(tColor, tBrand);\par
01181     {\cf17 const} {\cf18 char}*  tName  = threadColorName(tColor, tBrand);\par
01182 \par
01183     {\cf19 if} (emb_verbose > 0) \{\par
01184         printf({\cf22 "Color : 0x%X\\n"}\par
01185            {\cf22 "Brand : %d\\n"}\par
01186            {\cf22 "Num   : %d\\n"}\par
01187            {\cf22 "Name  : %s\\n\\n"},\par
01188             tColor,\par
01189             tBrand,\par
01190             tNum, {\cf20 /* Solution: 1833 */}\par
01191             tName); {\cf20 /* Solution: Pumpkin Pie */}\par
01192     \}\par
01193     {\cf19 return} 0;\par
01194 \}\par
01195 \par
01196 {\cf18 int} testEmbFormat({\cf18 void}) \{\par
01197     {\cf17 const} {\cf18 char}*  tName = {\cf22 "example.zsk"};\par
01198     {\cf18 int} format = emb_identify_format(tName);\par
01199 \par
01200     {\cf19 if} (emb_verbose > 0) \{\par
01201         printf({\cf22 "Filename   : %s\\n"}\par
01202            {\cf22 "Extension  : %s\\n"}\par
01203            {\cf22 "Description: %s\\n"}\par
01204            {\cf22 "Reader     : %c\\n"}\par
01205            {\cf22 "Writer     : %c\\n"}\par
01206            {\cf22 "Type       : %d\\n\\n"},\par
01207             tName,\par
01208             formatTable[format].extension,\par
01209             formatTable[format].description,\par
01210             formatTable[format].reader_state,\par
01211             formatTable[format].writer_state,\par
01212             formatTable[format].type);\par
01213     \}\par
01214 \par
01215     {\cf19 if} (strcmp(formatTable[format].extension, {\cf22 ".zsk"})) {\cf19 return} 20;\par
01216     {\cf19 if} (strcmp(formatTable[format].description, {\cf22 "ZSK USA Embroidery Format"})) \{\par
01217             {\cf19 return} 21;\par
01218     \}\par
01219     {\cf19 if} (formatTable[format].reader_state != {\cf23 'U'}) {\cf19 return} 22;\par
01220     {\cf19 if} (formatTable[format].writer_state != {\cf23 ' '}) {\cf19 return} 23;\par
01221     {\cf19 if} (formatTable[format].type != 1) {\cf19 return} 24;\par
01222     {\cf19 return} 0;\par
01223 \}\par
01224 \par
01225 {\cf18 int}\par
01226 create_test_file_1({\cf17 const} {\cf18 char}* outf)\par
01227 \{\par
01228     {\cf18 int} i;\par
01229     EmbPattern* p;\par
01230     EmbStitch st;\par
01231 \par
01232     p = embPattern_create();\par
01233     {\cf19 if} (!p) \{\par
01234         puts({\cf22 "ERROR: convert(), cannot allocate memory for p\\n"});\par
01235         {\cf19 return} 1;\par
01236     \}\par
01237 \par
01238     {\cf20 /* 10mm circle */}\par
01239     {\cf19 for} (i = 0; i < 20; i++) \{\par
01240         embPattern_addStitchRel(p, 0.0, 1.0, JUMP, 0);\par
01241     \}\par
01242     {\cf19 for} (i = 0; i < 200; i++) \{\par
01243         st.x = 10 + 10 * sin(i * (0.03141592));\par
01244         st.y = 10 + 10 * cos(i * (0.03141592));\par
01245         st.flags = NORMAL;\par
01246         st.color = 0;\par
01247         embPattern_addStitchAbs(p, st.x, st.y, st.flags, st.color);\par
01248     \}\par
01249 \par
01250     embPattern_addThread(p, black_thread);\par
01251     embPattern_end(p);\par
01252 \par
01253     {\cf19 if} (!embPattern_writeAuto(p, outf)) \{\par
01254         {\cf19 return} 16;\par
01255     \}\par
01256 \par
01257     embPattern_free(p);\par
01258     {\cf19 return} 0;\par
01259 \}\par
01260 \par
01261 {\cf18 int}\par
01262 create_test_file_2({\cf17 const} {\cf18 char}* outf)\par
01263 \{\par
01264     {\cf18 int} i;\par
01265     EmbPattern* p;\par
01266     EmbStitch st;\par
01267 \par
01268     p = embPattern_create();\par
01269     {\cf19 if} (!p) \{\par
01270         puts({\cf22 "ERROR: convert(), cannot allocate memory for p\\n"});\par
01271         {\cf19 return} 1;\par
01272     \}\par
01273 \par
01274     {\cf20 /* sin wave */}\par
01275     {\cf19 for} (i = 0; i < 100; i++) \{\par
01276         st.x = 10 + 10 * sin(i * (0.5 / 3.141592));\par
01277         st.y = 10 + i * 0.1;\par
01278         st.flags = NORMAL;\par
01279         st.color = 0;\par
01280         embPattern_addStitchAbs(p, st.x, st.y, st.flags, st.color);\par
01281     \}\par
01282 \par
01283     embPattern_addThread(p, black_thread);\par
01284     embPattern_end(p);\par
01285 \par
01286     {\cf19 if} (!embPattern_writeAuto(p, outf)) \{\par
01287         {\cf19 return} 16;\par
01288     \}\par
01289 \par
01290     embPattern_free(p);\par
01291     {\cf19 return} 0;\par
01292 \}\par
01293 \par
01294 {\cf18 int}\par
01295 create_test_file_3({\cf17 const} {\cf18 char}* outf)\par
01296 \{\par
01297     EmbPattern* p;\par
01298     EmbCircle circle;\par
01299 \par
01300     p = embPattern_create();\par
01301     {\cf19 if} (!p) \{\par
01302         puts({\cf22 "ERROR: convert(), cannot allocate memory for p\\n"});\par
01303         {\cf19 return} 1;\par
01304     \}\par
01305 \par
01306     circle.center.x = 10.0;\par
01307     circle.center.y = 1.0;\par
01308     circle.radius = 5.0;\par
01309     embPattern_addCircleAbs(p, circle);\par
01310 \par
01311     embPattern_addThread(p, black_thread);\par
01312     embPattern_convertGeometry(p);\par
01313     embPattern_end(p);\par
01314 \par
01315     {\cf19 if} (!embPattern_writeAuto(p, outf)) \{\par
01316         {\cf19 return} 16;\par
01317     \}\par
01318 \par
01319     embPattern_free(p);\par
01320     {\cf19 return} 0;\par
01321 \}\par
01322 \par
01323 \par
01324 {\cf20 /* TODO: Add capability for converting multiple files of various types to a single format. }\par
01325 {\cf20 Currently, we only convert a single file to multiple formats. */}\par
01326 {\cf21 #if 0}\par
01327 {\cf18 int} testThreadColor({\cf18 void}) \{\par
01328     {\cf18 unsigned} {\cf18 int} tColor = 0xFFD25F00;\par
01329     EmbColor c;\par
01330     c.r = 0xD2;\par
01331     c.g = 0x5F;\par
01332     c.b = 0x00;\par
01333     {\cf18 int} tBrand = Sulky_Rayon;\par
01334     {\cf18 int} tNum = threadColorNum(c, tBrand);\par
01335     {\cf18 char} tName[50];\par
01336     threadColorName(tName, c, tBrand);\par
01337 \par
01338     printf({\cf22 "Color : 0x%X\\n"}\par
01339            {\cf22 "Brand : %d\\n"}\par
01340            {\cf22 "Num   : %d\\n"}\par
01341            {\cf22 "Name  : %s\\n\\n"},\par
01342         tColor,\par
01343         tBrand,\par
01344         tNum, {\cf20 /* Solution: 1833 */}\par
01345         tName); {\cf20 /* Solution: Pumpkin Pie */}\par
01346     {\cf19 return} 0;\par
01347 \}\par
01348 {\cf21 #endif}\par
01349 \par
01350 {\cf20 /*}\par
01351 {\cf20  * Table of from/to for formats. What conversions after a from A to B conversion}\par
01352 {\cf20  * leave a file with the same render?}\par
01353 {\cf20  *}\par
01354 {\cf20  * Add command "--full-test-suite" for this full matrix.}\par
01355 {\cf20  */}\par
01356 \par
01357 {\cf18 int}\par
01358 full_test_matrix({\cf18 char} *fname)\par
01359 \{\par
01360     {\cf18 int} i, j, success, ntests;\par
01361     FILE *f;\par
01362     f = fopen(fname, {\cf22 "wb"});\par
01363     {\cf19 if} (!f) \{\par
01364         puts({\cf22 "ERROR: full_test_matrix(fname) failed to open file."});\par
01365         {\cf19 return} 1;\par
01366     \}\par
01367 \par
01368     success = 0;\par
01369     ntests = (numberOfFormats - 1)*(numberOfFormats - 5);\par
01370     {\cf19 for} (i = 0; i < numberOfFormats; i++) \{\par
01371         {\cf18 char} fname[100];\par
01372         {\cf19 if} (formatTable[i].color_only) \{\par
01373             {\cf19 continue};\par
01374         \}\par
01375         strcpy(fname, {\cf22 "test01"});\par
01376         strcat(fname, formatTable[i].extension);\par
01377         create_test_file_1(fname);\par
01378         {\cf19 for} (j=0; j < numberOfFormats; j++) \{\par
01379             EmbPattern *pattern = 0;\par
01380             {\cf18 char} fname_converted[100];\par
01381             {\cf18 char} fname_image[100];\par
01382             {\cf18 int} result;\par
01383             strcpy(fname_converted, {\cf22 "test01_"});\par
01384             strcat(fname_converted, formatTable[i].extension+1);\par
01385             strcat(fname_converted, formatTable[j].extension);\par
01386             strcpy(fname_image, {\cf22 "test01_"});\par
01387             strcat(fname_image, formatTable[i].extension+1);\par
01388             strcat(fname_image, {\cf22 "_"});\par
01389             strcat(fname_image, formatTable[j].extension+1);\par
01390             strcat(fname_image, {\cf22 ".ppm"});\par
01391             printf({\cf22 "Attempting: %s %s\\n"}, fname, fname_converted);\par
01392             result = convert(fname, fname_converted);\par
01393             embPattern_readAuto(pattern, fname_converted);\par
01394             embPattern_render(pattern, fname_image);\par
01395             embPattern_free(pattern);\par
01396             fprintf(f, {\cf22 "%d %d %f%% "}, i, j, 100*success/(1.0*ntests));\par
01397             {\cf19 if} (!result) \{\par
01398                 fprintf(f, {\cf22 "PASS\\n"});\par
01399                 success++;\par
01400             \} {\cf19 else} \{\par
01401                 fprintf(f, {\cf22 "FAIL\\n"});\par
01402             \}\par
01403         \}\par
01404     \}\par
01405 \par
01406     fclose(f);\par
01407     {\cf19 return} 0;\par
01408 \}\par
01409 \par
01410 {\cf18 void}\par
01411 usage({\cf18 void})\par
01412 \{\par
01413     puts(welcome_message);\par
01414     {\cf20 /* construct from tables above somehow, like how getopt_long works,}\par
01415 {\cf20      * but we're avoiding that for compatibility}\par
01416 {\cf20      * (C90, standard libraries only) */}\par
01417     puts({\cf22 "Usage: embroider [OPTIONS] fileToRead... \\n"});\par
01418     puts({\cf22 ""});\par
01419     puts({\cf22 "Conversion:"});\par
01420     puts({\cf22 "    -t, --to        Convert all files given to the format specified"});\par
01421     puts({\cf22 "                    by the arguments to the flag, for example:"});\par
01422     puts({\cf22 "                        $ embroider -t dst input.pes"});\par
01423     puts({\cf22 "                    would convert \\"input.pes\\" to \\"input.dst\\""});\par
01424     puts({\cf22 "                    in the same directory the program runs in."});\par
01425     puts({\cf22 ""});\par
01426     puts({\cf22 "                    The accepted input formats are (TO BE DETERMINED)."});\par
01427     puts({\cf22 "                    The accepted output formats are (TO BE DETERMINED)."});\par
01428     puts({\cf22 ""});\par
01429     puts({\cf22 "Output:"});\par
01430     puts({\cf22 "    -h, --help       Print this message."});\par
01431     puts({\cf22 "    -F, --formats     Print help on the formats that embroider can deal with."});\par
01432     puts({\cf22 "    -q, --quiet      Only print fatal errors."});\par
01433     puts({\cf22 "    -V, --verbose    Print everything that has reporting."});\par
01434     puts({\cf22 "    -v, --version    Print the version."});\par
01435     puts({\cf22 ""});\par
01436     puts({\cf22 "Modify patterns:"});\par
01437     puts({\cf22 "    --combine        takes 3 arguments and combines the first"});\par
01438     puts({\cf22 "                     two by placing them atop each other and"});\par
01439     puts({\cf22 "                     outputs to the third"});\par
01440     puts({\cf22 "                        $ embroider --combine a.dst b.dst output.dst"});\par
01441     puts({\cf22 ""});\par
01442     puts({\cf22 "Graphics:"});\par
01443     puts({\cf22 "    -c, --circle     Add a circle defined by the arguments given to the current pattern."});\par
01444     puts({\cf22 "    -e, --ellipse    Add a circle defined by the arguments given to the current pattern."});\par
01445     puts({\cf22 "    -l, --line       Add a line defined by the arguments given to the current pattern."});\par
01446     puts({\cf22 "    -P, --polyline   Add a polyline."});\par
01447     puts({\cf22 "    -p, --polygon    Add a polygon."});\par
01448     puts({\cf22 "    -r, --render     Create an image in PNG format of what the embroidery should look like."});\par
01449     puts({\cf22 "    -s, --satin      Fill the current geometry with satin stitches according"});\par
01450     puts({\cf22 "                     to the defined algorithm."});\par
01451     puts({\cf22 "    -S, --stitch     Add a stitch defined by the arguments given to the current pattern."});\par
01452     puts({\cf22 ""});\par
01453     puts({\cf22 "Quality Assurance:"});\par
01454     puts({\cf22 "        --test       Run the basic test suite."});\par
01455     puts({\cf22 "        --full-test-suite  Run all tests, even those we expect to fail."});\par
01456 \}\par
01457 \par
01458 {\cf18 void}\par
01459 formats({\cf18 void})\par
01460 \{\par
01461     {\cf17 const} {\cf18 char}* extension = 0;\par
01462     {\cf17 const} {\cf18 char}* description = 0;\par
01463     {\cf18 char} readerState;\par
01464     {\cf18 char} writerState;\par
01465     {\cf18 int} numReaders = 0;\par
01466     {\cf18 int} numWriters = 0;\par
01467     {\cf18 int} i;\par
01468     puts({\cf22 "List of Formats"});\par
01469     puts({\cf22 "---------------"});\par
01470     puts({\cf22 ""});\par
01471     puts({\cf22 "    KEY"});\par
01472     puts({\cf22 "    'S' = Yes, and is considered stable."});\par
01473     puts({\cf22 "    'U' = Yes, but may be unstable."});\par
01474     puts({\cf22 "    ' ' = No."});\par
01475     puts({\cf22 ""});\par
01476     printf({\cf22 "  Format   Read    Write   Description\\n"});\par
01477     printf({\cf22 "|________|_______|_______|____________________________________________________|\\n"});\par
01478     printf({\cf22 "|        |       |       |                                                    |\\n"});\par
01479 \par
01480     {\cf19 for} (i = 0; i < numberOfFormats; i++) \{\par
01481         extension = formatTable[i].extension;\par
01482         description = formatTable[i].description;\par
01483         readerState = formatTable[i].reader_state;\par
01484         writerState = formatTable[i].writer_state;\par
01485 \par
01486         numReaders += readerState != {\cf23 ' '}? 1 : 0;\par
01487         numWriters += writerState != {\cf23 ' '}? 1 : 0;\par
01488         printf({\cf22 "|  %-4s  |   %c   |   %c   |  %-49s |\\n"}, extension, readerState, writerState, description);\par
01489     \}\par
01490 \par
01491     printf({\cf22 "|________|_______|_______|____________________________________________________|\\n"});\par
01492     printf({\cf22 "|        |       |       |                                                    |\\n"});\par
01493     printf({\cf22 "| Total: |  %3d  |  %3d  |                                                    |\\n"}, numReaders, numWriters);\par
01494     printf({\cf22 "|________|_______|_______|____________________________________________________|\\n"});\par
01495     puts({\cf22 ""});\par
01496 \}\par
01497 \par
01498 {\cf18 void}\par
01499 to_flag({\cf18 char} **argv, {\cf18 int} argc, {\cf18 int} i)\par
01500 \{\par
01501     {\cf19 if} (i + 2 < argc) \{\par
01502         {\cf18 int} j;\par
01503         {\cf18 char} output_fname[100];\par
01504         {\cf18 int} format;\par
01505         sprintf(output_fname, {\cf22 "example.%s"}, argv[i+1]);\par
01506         format = emb_identify_format(output_fname);\par
01507         {\cf19 if} (format < 0) \{\par
01508             puts({\cf22 "Error: format unrecognised."});\par
01509         \}\par
01510         {\cf19 for} (j=i+2; j<argc; j++) \{\par
01511             {\cf18 int} length = strlen(argv[j]);\par
01512             output_fname[0] = 0;\par
01513             strcpy(output_fname, argv[j]);\par
01514             output_fname[length-4] = 0;\par
01515             strcat(output_fname, formatTable[format].extension);\par
01516             printf({\cf22 "Converting %s to %s.\\n"},\par
01517                 argv[j], output_fname);\par
01518             convert(argv[j], output_fname);\par
01519         \}\par
01520     \}\par
01521     {\cf19 else} \{\par
01522         puts({\cf22 "Usage of the to flag is:"});\par
01523         puts({\cf22 "    embroider -t FORMAT FILE(S)"});\par
01524         puts({\cf22 "but it appears you entered less than 3 arguments to embroider."});\par
01525     \}\par
01526 \}\par
01527 \par
01528 {\cf20 /* TODO: Add capability for converting multiple files of various types to a single format. Currently, we only convert a single file to multiple formats. */}\par
01529 {\cf18 int}\par
01530 command_line_interface({\cf18 int} argc, {\cf18 char}* argv[])\par
01531 \{\par
01532     EmbPattern *current_pattern = embPattern_create();\par
01533     {\cf18 int} i, j, flags, result;\par
01534     {\cf19 if} (argc == 1) \{\par
01535         usage();\par
01536         {\cf19 return} 0;\par
01537     \}\par
01538 \par
01539     flags = argc-1;\par
01540     {\cf19 for} (i=1; i < argc; i++) \{\par
01541         result = -1;\par
01542         {\cf20 /* identify what flag index the user may have entered */}\par
01543         {\cf19 for} (j=0; j < NUM_FLAGS; j++) \{\par
01544             {\cf19 if} (!strcmp(flag_list[j], argv[i])) \{\par
01545                 result = j;\par
01546                 {\cf19 break};\par
01547             \}\par
01548         \}\par
01549         {\cf20 /* apply the flag */}\par
01550         {\cf19 switch} (result) \{\par
01551         {\cf19 case} FLAG_TO:\par
01552         {\cf19 case} FLAG_TO_SHORT:\par
01553             to_flag(argv, argc, i);\par
01554             {\cf19 break};\par
01555         {\cf19 case} FLAG_HELP:\par
01556         {\cf19 case} FLAG_HELP_SHORT:\par
01557             usage();\par
01558             {\cf19 break};\par
01559         {\cf19 case} FLAG_FORMATS:\par
01560         {\cf19 case} FLAG_FORMATS_SHORT:\par
01561             formats();\par
01562             {\cf19 break};\par
01563         {\cf19 case} FLAG_QUIET:\par
01564         {\cf19 case} FLAG_QUIET_SHORT:\par
01565             emb_verbose = -1;\par
01566             {\cf19 break};\par
01567         {\cf19 case} FLAG_VERBOSE:\par
01568         {\cf19 case} FLAG_VERBOSE_SHORT:\par
01569             emb_verbose = 1;\par
01570             {\cf19 break};\par
01571         {\cf19 case} FLAG_CIRCLE:\par
01572         {\cf19 case} FLAG_CIRCLE_SHORT:\par
01573             puts({\cf22 "This flag is not implemented."});\par
01574             {\cf19 break};\par
01575         {\cf19 case} FLAG_ELLIPSE:\par
01576         {\cf19 case} FLAG_ELLIPSE_SHORT:\par
01577             puts({\cf22 "This flag is not implemented."});\par
01578             {\cf19 break};\par
01579         {\cf19 case} FLAG_LINE:\par
01580         {\cf19 case} FLAG_LINE_SHORT:\par
01581             puts({\cf22 "This flag is not implemented."});\par
01582             {\cf19 break};\par
01583         {\cf19 case} FLAG_POLYGON:\par
01584         {\cf19 case} FLAG_POLYGON_SHORT:\par
01585             puts({\cf22 "This flag is not implemented."});\par
01586             {\cf19 break};\par
01587         {\cf19 case} FLAG_POLYLINE:\par
01588         {\cf19 case} FLAG_POLYLINE_SHORT:\par
01589             puts({\cf22 "This flag is not implemented."});\par
01590             {\cf19 break};\par
01591         {\cf19 case} FLAG_SATIN:\par
01592         {\cf19 case} FLAG_SATIN_SHORT:\par
01593             puts({\cf22 "This flag is not implemented."});\par
01594             {\cf19 break};\par
01595         {\cf19 case} FLAG_STITCH:\par
01596         {\cf19 case} FLAG_STITCH_SHORT:\par
01597             puts({\cf22 "This flag is not implemented."});\par
01598             {\cf19 break};\par
01599         {\cf19 case} FLAG_SIERPINSKI_TRIANGLE:\par
01600             puts({\cf22 "This flag is not implemented."});\par
01601             {\cf19 break};\par
01602         {\cf19 case} FLAG_FILL:\par
01603             {\cf19 if} (i + 3 < argc) \{\par
01604                 EmbImage image;\par
01605                 {\cf20 /* the user appears to have entered the needed arguments */}\par
01606                 i++;\par
01607                 {\cf20 /* to stb command */}\par
01608                 image = embImage_create(2000, 2000);\par
01609                 embImage_read(&image, argv[i]);\par
01610                 i++;\par
01611                 embPattern_horizontal_fill(current_pattern, &image, atoi(argv[i]));\par
01612                 embImage_free(&image);\par
01613                 i++;\par
01614                 embPattern_writeAuto(current_pattern, argv[i]);\par
01615             \}\par
01616             {\cf19 break};\par
01617         {\cf19 case} FLAG_RENDER:\par
01618         {\cf19 case} FLAG_RENDER_SHORT:\par
01619             {\cf19 if} (i + 2 < argc) \{\par
01620                 {\cf20 /* the user appears to have entered filenames after render */}\par
01621                 embPattern_readAuto(current_pattern, argv[i+1]);\par
01622                 printf({\cf22 "%d\\n"}, current_pattern->stitch_list->count);\par
01623                 embPattern_render(current_pattern, argv[i+2]);\par
01624                 i += 2;\par
01625                 {\cf19 break};\par
01626                 i++;\par
01627                 {\cf19 if} (argv[i][0] == {\cf23 '-'}) \{\par
01628                     {\cf20 /* they haven't, use the default name */}\par
01629                     puts({\cf22 "Defaulting to the output name 'output.png'."});\par
01630                     embPattern_render(current_pattern, {\cf22 "output.png"});\par
01631                     i--;\par
01632                 \}\par
01633                 {\cf19 else} \{\par
01634                     {\cf20 /* they have, use the user-supplied name */}\par
01635                     embPattern_render(current_pattern, argv[i]);\par
01636                 \}\par
01637             \}\par
01638             {\cf19 else} \{\par
01639                 puts({\cf22 "Defaulting to the output name 'output.png'."});\par
01640                 embPattern_render(current_pattern, {\cf22 "output.png"});\par
01641             \}\par
01642             {\cf19 break};\par
01643         {\cf19 case} FLAG_SIMULATE:\par
01644             {\cf19 if} (i + 1 < argc) \{\par
01645                 {\cf20 /* the user appears to have entered a filename after render */}\par
01646                 i++;\par
01647                 {\cf19 if} (argv[i][0] == {\cf23 '-'}) \{\par
01648                     {\cf20 /* they haven't, use the default name */}\par
01649                     puts({\cf22 "Defaulting to the output name 'output.avi'."});\par
01650                     embPattern_simulate(current_pattern, {\cf22 "output.avi"});\par
01651                     i--;\par
01652                 \}\par
01653                 {\cf19 else} \{\par
01654                     {\cf20 /* they have, use the user-supplied name */}\par
01655                     embPattern_simulate(current_pattern, argv[i]);\par
01656                 \}\par
01657             \}\par
01658             {\cf19 else} \{\par
01659                 puts({\cf22 "Defaulting to the output name 'output.avi'."});\par
01660                 embPattern_simulate(current_pattern, {\cf22 "output.avi"});\par
01661             \}\par
01662             {\cf19 break};\par
01663         {\cf19 case} FLAG_COMBINE:\par
01664             {\cf19 if} (i + 3 < argc) \{\par
01665                 EmbPattern *out;\par
01666                 EmbPattern *p1 = embPattern_create();\par
01667                 EmbPattern *p2 = embPattern_create();\par
01668                 embPattern_readAuto(p1, argv[i+1]);\par
01669                 embPattern_readAuto(p2, argv[i+2]);\par
01670                 out = embPattern_combine(p1, p2);\par
01671                 embPattern_writeAuto(out, argv[i+3]);\par
01672                 embPattern_free(p1);\par
01673                 embPattern_free(p2);\par
01674                 embPattern_free(out);\par
01675             \}\par
01676             {\cf19 else} \{\par
01677                 puts({\cf22 "--combine takes 3 arguments and you have supplied <3."});\par
01678             \}\par
01679             {\cf19 break};\par
01680         {\cf19 case} FLAG_VERSION:\par
01681         {\cf19 case} FLAG_VERSION_SHORT:\par
01682             puts(version_string);\par
01683             {\cf19 break};\par
01684         {\cf19 case} FLAG_HILBERT_CURVE:\par
01685             current_pattern = embPattern_create();\par
01686             hilbert_curve(current_pattern, 3);\par
01687             {\cf19 break};\par
01688         {\cf19 case} FLAG_TEST:\par
01689             testMain(0);\par
01690             {\cf19 break};\par
01691         {\cf19 case} FLAG_FULL_TEST_SUITE:\par
01692             testMain(1);\par
01693             {\cf19 break};\par
01694         {\cf19 case} FLAG_CROSS_STITCH:\par
01695             {\cf19 if} (i + 3 < argc) \{\par
01696                 EmbImage image;\par
01697                 {\cf20 /* the user appears to have entered the needed arguments */}\par
01698                 image = embImage_create(2000, 2000);\par
01699                 i++;\par
01700                 {\cf20 /* to stb command */}\par
01701                 embImage_read(&image, argv[i]);\par
01702                 i++;\par
01703                 embPattern_crossstitch(current_pattern, &image, atoi(argv[i]));\par
01704                 embImage_free(&image);\par
01705                 i++;\par
01706                 embPattern_writeAuto(current_pattern, argv[i]);\par
01707             \}\par
01708             {\cf19 break};\par
01709         {\cf19 default}:\par
01710             flags--;\par
01711             {\cf19 break};\par
01712         \}\par
01713     \}\par
01714 \par
01715     {\cf20 /* No flags set: default to simple from-to conversion. */}\par
01716     {\cf19 if} (!flags && argc == 3) \{\par
01717         convert(argv[1], argv[2]);\par
01718     \}\par
01719     {\cf19 else} \{\par
01720         {\cf19 if} (!flags) \{\par
01721             puts({\cf22 "Please enter an output format for your file, see --help."});\par
01722         \}\par
01723     \}\par
01724     embPattern_free(current_pattern);\par
01725     {\cf19 return} 0;\par
01726 \}\par
01727 \par
01728 {\cf18 int} main({\cf18 int} argc, {\cf18 char}* argv[])\par
01729 \{\par
01730     {\cf19 return} command_line_interface(argc, argv);\par
01731 \}\par
01732 {\cf21 #endif}\par
01733 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/pattern.c File Reference\par \pard\plain 
{\tc\tcl2 \v src/pattern.c}
{\xe \v src/pattern.c}
{\bkmkstart AAAAAAABIA}
{\bkmkend AAAAAAABIA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <math.h>}\par
{\f2 #include "embroidery_internal.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbPattern} * {\b embPattern_create} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_hideStitchesOverLength} ({\b EmbPattern} *p, int length)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b embPattern_addThread} ({\b EmbPattern} *pattern, {\b EmbThread} thread)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_fixColorCount} ({\b EmbPattern} *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_copystitch_listToPolylines} ({\b EmbPattern} *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_copyPolylinesTostitch_list} ({\b EmbPattern} *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_movestitch_listToPolylines} ({\b EmbPattern} *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_movePolylinesTostitch_list} ({\b EmbPattern} *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_addStitchAbs} ({\b EmbPattern} *p, {\b EmbReal} x, {\b EmbReal} y, int flags, int isAutoColorIndex)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_addStitchRel} ({\b EmbPattern} *p, {\b EmbReal} dx, {\b EmbReal} dy, int flags, int isAutoColorIndex)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_changeColor} ({\b EmbPattern} *p, int index)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_scale} ({\b EmbPattern} *p, {\b EmbReal} scale)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b EmbRect} {\b embPattern_calcBoundingBox} ({\b EmbPattern} *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_flipHorizontal} ({\b EmbPattern} *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_flipVertical} ({\b EmbPattern} *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_flip} ({\b EmbPattern} *p, int horz, int vert)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_combineJumpStitches} ({\b EmbPattern} *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_correctForMaxStitchLength} ({\b EmbPattern} *p, {\b EmbReal} maxStitchLength, {\b EmbReal} maxJumpLength)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_center} ({\b EmbPattern} *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_loadExternalColorFile} ({\b EmbPattern} *p, const char *fileName)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_free} ({\b EmbPattern} *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_addCircleAbs} ({\b EmbPattern} *p, {\b EmbCircle} circle)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_addEllipseAbs} ({\b EmbPattern} *p, {\b EmbEllipse} ellipse)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_addLineAbs} ({\b EmbPattern} *p, {\b EmbLine} line)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_addPathAbs} ({\b EmbPattern} *p, {\b EmbPath} obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_addPointAbs} ({\b EmbPattern} *p, {\b EmbPoint} obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_addPolygonAbs} ({\b EmbPattern} *p, {\b EmbPolygon} obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_addPolylineObjectAbs} ({\b EmbPattern} *p, {\b EmbPolyline} obj)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_addRectAbs} ({\b EmbPattern} *p, {\b EmbRect} rect)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_end} ({\b EmbPattern} *p)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b embPattern_color_count} ({\b EmbPattern} *pattern, {\b EmbColor} startColor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_designDetails} ({\b EmbPattern} *pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b convert} (const char *inf, const char *outf)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b embPattern_totalStitchLength} ({\b EmbPattern} *pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b embPattern_minimumStitchLength} ({\b EmbPattern} *pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b embPattern_maximumStitchLength} ({\b EmbPattern} *pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b embPattern_lengthHistogram} ({\b EmbPattern} *pattern, int *bin, int NUMBINS)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b embPattern_realStitches} ({\b EmbPattern} *pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b embPattern_jumpStitches} ({\b EmbPattern} *pattern)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b embPattern_trimStitches} ({\b EmbPattern} *pattern)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v convert\:pattern.c}
{\xe \v pattern.c\:convert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int convert (const char *  {\i inf}, const char *  {\i outf})}}
\par
{\bkmkstart AAAAAAABIB}
{\bkmkend AAAAAAABIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 1108} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_addCircleAbs\:pattern.c}
{\xe \v pattern.c\:embPattern_addCircleAbs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_addCircleAbs ({\b EmbPattern} *  {\i p}, {\b EmbCircle}  {\i circle})}}
\par
{\bkmkstart AAAAAAABIC}
{\bkmkend AAAAAAABIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a circle object to pattern ({\i p} ) with its center at the absolute position ({\i cx} ,{\i cy} ) with a radius of ({\i r} ). Positive y is up. Units are in millimeters. \par
}{
Definition at line {\b 787} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_addEllipseAbs\:pattern.c}
{\xe \v pattern.c\:embPattern_addEllipseAbs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_addEllipseAbs ({\b EmbPattern} *  {\i p}, {\b EmbEllipse}  {\i ellipse})}}
\par
{\bkmkstart AAAAAAABID}
{\bkmkend AAAAAAABID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds an ellipse object to pattern ({\i p} ) with its center at the absolute position ({\i cx} ,{\i cy} ) with radii of ({\i rx} ,{\i ry} ). Positive y is up. Units are in millimeters. \par
}{
Definition at line {\b 801} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_addLineAbs\:pattern.c}
{\xe \v pattern.c\:embPattern_addLineAbs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_addLineAbs ({\b EmbPattern} *  {\i p}, {\b EmbLine}  {\i line})}}
\par
{\bkmkstart AAAAAAABIE}
{\bkmkend AAAAAAABIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a line object to pattern ({\i p} ) starting at the absolute position ({\i x1} ,{\i y1} ) and ending at the absolute position ({\i x2} ,{\i y2} ). Positive y is up. Units are in millimeters. \par
}{
Definition at line {\b 816} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_addPathAbs\:pattern.c}
{\xe \v pattern.c\:embPattern_addPathAbs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_addPathAbs ({\b EmbPattern} *  {\i p}, {\b EmbPath}  {\i obj})}}
\par
{\bkmkstart AAAAAAABIF}
{\bkmkend AAAAAAABIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 827} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_addPointAbs\:pattern.c}
{\xe \v pattern.c\:embPattern_addPointAbs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_addPointAbs ({\b EmbPattern} *  {\i p}, {\b EmbPoint}  {\i obj})}}
\par
{\bkmkstart AAAAAAABIG}
{\bkmkend AAAAAAABIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a point object to pattern ({\i p} ) at the absolute position ({\i x} ,{\i y} ). Positive y is up. Units are in millimeters. \par
}{
Definition at line {\b 843} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_addPolygonAbs\:pattern.c}
{\xe \v pattern.c\:embPattern_addPolygonAbs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_addPolygonAbs ({\b EmbPattern} *  {\i p}, {\b EmbPolygon}  {\i obj})}}
\par
{\bkmkstart AAAAAAABIH}
{\bkmkend AAAAAAABIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 854} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_addPolylineObjectAbs\:pattern.c}
{\xe \v pattern.c\:embPattern_addPolylineObjectAbs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_addPolylineObjectAbs ({\b EmbPattern} *  {\i p}, {\b EmbPolyline}  {\i obj})}}
\par
{\bkmkstart AAAAAAABII}
{\bkmkend AAAAAAABII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 869} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_addRectAbs\:pattern.c}
{\xe \v pattern.c\:embPattern_addRectAbs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_addRectAbs ({\b EmbPattern} *  {\i p}, {\b EmbRect}  {\i rect})}}
\par
{\bkmkstart AAAAAAABIJ}
{\bkmkend AAAAAAABIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a rectangle object to pattern ({\i p} ) at the absolute position ({\i x} ,{\i y} ) with a width of ({\i w} ) and a height of ({\i h} ). Positive y is up. Units are in millimeters. \par
}{
Definition at line {\b 888} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_addStitchAbs\:pattern.c}
{\xe \v pattern.c\:embPattern_addStitchAbs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_addStitchAbs ({\b EmbPattern} *  {\i p}, {\b EmbReal}  {\i x}, {\b EmbReal}  {\i y}, int  {\i flags}, int  {\i isAutoColorIndex})}}
\par
{\bkmkstart AAAAAAABIK}
{\bkmkend AAAAAAABIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a stitch to the pattern ({\i p} ) at the absolute position ({\i x} ,{\i y} ). Positive y is up. Units are in millimeters. \par
}{
Definition at line {\b 236} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_addStitchRel\:pattern.c}
{\xe \v pattern.c\:embPattern_addStitchRel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_addStitchRel ({\b EmbPattern} *  {\i p}, {\b EmbReal}  {\i dx}, {\b EmbReal}  {\i dy}, int  {\i flags}, int  {\i isAutoColorIndex})}}
\par
{\bkmkstart AAAAAAABIL}
{\bkmkend AAAAAAABIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Adds a stitch to the pattern ({\i p} ) at the relative position ({\i dx} ,{\i dy} ) to the previous stitch. Positive y is up. Units are in millimeters. \par
}{
Definition at line {\b 290} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_addThread\:pattern.c}
{\xe \v pattern.c\:embPattern_addThread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int embPattern_addThread ({\b EmbPattern} *  {\i pattern}, {\b EmbThread}  {\i thread})}}
\par
{\bkmkstart AAAAAAABIM}
{\bkmkend AAAAAAABIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 66} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_calcBoundingBox\:pattern.c}
{\xe \v pattern.c\:embPattern_calcBoundingBox}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbRect} embPattern_calcBoundingBox ({\b EmbPattern} *  {\i p})}}
\par
{\bkmkstart AAAAAAABIN}
{\bkmkend AAAAAAABIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns an EmbRect that encapsulates all stitches and objects in the pattern ({\i p} ). \par
}{
Definition at line {\b 340} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_center\:pattern.c}
{\xe \v pattern.c\:embPattern_center}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_center ({\b EmbPattern} *  {\i p})}}
\par
{\bkmkstart AAAAAAABIO}
{\bkmkend AAAAAAABIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 709} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_changeColor\:pattern.c}
{\xe \v pattern.c\:embPattern_changeColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_changeColor ({\b EmbPattern} *  {\i p}, int  {\i index})}}
\par
{\bkmkstart AAAAAAABIP}
{\bkmkend AAAAAAABIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 312} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_color_count\:pattern.c}
{\xe \v pattern.c\:embPattern_color_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int embPattern_color_count ({\b EmbPattern} *  {\i pattern}, {\b EmbColor}  {\i startColor})}}
\par
{\bkmkstart AAAAAAABIQ}
{\bkmkend AAAAAAABIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 911} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_combineJumpStitches\:pattern.c}
{\xe \v pattern.c\:embPattern_combineJumpStitches}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_combineJumpStitches ({\b EmbPattern} *  {\i p})}}
\par
{\bkmkstart AAAAAAABIR}
{\bkmkend AAAAAAABIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 624} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_copyPolylinesTostitch_list\:pattern.c}
{\xe \v pattern.c\:embPattern_copyPolylinesTostitch_list}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_copyPolylinesTostitch_list ({\b EmbPattern} *  {\i p})}}
\par
{\bkmkstart AAAAAAABIS}
{\bkmkend AAAAAAABIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies all of the EmbPolylineObjectList data to Embstitch_list data for pattern ({\i p} ). \par
}{
Definition at line {\b 161} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_copystitch_listToPolylines\:pattern.c}
{\xe \v pattern.c\:embPattern_copystitch_listToPolylines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_copystitch_listToPolylines ({\b EmbPattern} *  {\i p})}}
\par
{\bkmkstart AAAAAAABIT}
{\bkmkend AAAAAAABIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copies all of the Embstitch_list data to EmbPolylineObjectList data for pattern ({\i p} ). \par
}{
Definition at line {\b 114} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_correctForMaxStitchLength\:pattern.c}
{\xe \v pattern.c\:embPattern_correctForMaxStitchLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_correctForMaxStitchLength ({\b EmbPattern} *  {\i p}, {\b EmbReal}  {\i maxStitchLength}, {\b EmbReal}  {\i maxJumpLength})}}
\par
{\bkmkstart AAAAAAABIU}
{\bkmkend AAAAAAABIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 660} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_create\:pattern.c}
{\xe \v pattern.c\:embPattern_create}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b EmbPattern} * embPattern_create (void )}}
\par
{\bkmkstart AAAAAAABIV}
{\bkmkend AAAAAAABIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Returns a pointer to an EmbPattern. It is created on the heap. The caller is responsible for freeing the allocated memory with {\b embPattern_free()}. \par
}{
Definition at line {\b 21} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_designDetails\:pattern.c}
{\xe \v pattern.c\:embPattern_designDetails}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_designDetails ({\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAABIW}
{\bkmkend AAAAAAABIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 942} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_end\:pattern.c}
{\xe \v pattern.c\:embPattern_end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_end ({\b EmbPattern} *  {\i p})}}
\par
{\bkmkstart AAAAAAABIX}
{\bkmkend AAAAAAABIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 898} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_fixColorCount\:pattern.c}
{\xe \v pattern.c\:embPattern_fixColorCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_fixColorCount ({\b EmbPattern} *  {\i p})}}
\par
{\bkmkstart AAAAAAABIY}
{\bkmkend AAAAAAABIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 79} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_flip\:pattern.c}
{\xe \v pattern.c\:embPattern_flip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_flip ({\b EmbPattern} *  {\i p}, int  {\i horz}, int  {\i vert})}}
\par
{\bkmkstart AAAAAAABIZ}
{\bkmkend AAAAAAABIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flips the entire pattern ({\i p} ) horizontally about the x-axis if ({\i horz} ) is true. Flips the entire pattern ({\i p} ) vertically about the y-axis if ({\i vert} ) is true. \par
}{
Definition at line {\b 497} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_flipHorizontal\:pattern.c}
{\xe \v pattern.c\:embPattern_flipHorizontal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_flipHorizontal ({\b EmbPattern} *  {\i p})}}
\par
{\bkmkstart AAAAAAABJA}
{\bkmkend AAAAAAABJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flips the entire pattern ({\i p} ) horizontally about the y-axis. \par
}{
Definition at line {\b 472} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_flipVertical\:pattern.c}
{\xe \v pattern.c\:embPattern_flipVertical}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_flipVertical ({\b EmbPattern} *  {\i p})}}
\par
{\bkmkstart AAAAAAABJB}
{\bkmkend AAAAAAABJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Flips the entire pattern ({\i p} ) vertically about the x-axis. \par
}{
Definition at line {\b 484} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_free\:pattern.c}
{\xe \v pattern.c\:embPattern_free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_free ({\b EmbPattern} *  {\i p})}}
\par
{\bkmkstart AAAAAAABJC}
{\bkmkend AAAAAAABJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Frees all memory allocated in the pattern ({\i p} ). \par
}{
Definition at line {\b 771} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_hideStitchesOverLength\:pattern.c}
{\xe \v pattern.c\:embPattern_hideStitchesOverLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_hideStitchesOverLength ({\b EmbPattern} *  {\i p}, int  {\i length})}}
\par
{\bkmkstart AAAAAAABJD}
{\bkmkend AAAAAAABJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 42} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_jumpStitches\:pattern.c}
{\xe \v pattern.c\:embPattern_jumpStitches}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int embPattern_jumpStitches ({\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAABJE}
{\bkmkend AAAAAAABJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 1240} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_lengthHistogram\:pattern.c}
{\xe \v pattern.c\:embPattern_lengthHistogram}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_lengthHistogram ({\b EmbPattern} *  {\i pattern}, int *  {\i bin}, int  {\i NUMBINS})}}
\par
{\bkmkstart AAAAAAABJF}
{\bkmkend AAAAAAABJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 1205} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_loadExternalColorFile\:pattern.c}
{\xe \v pattern.c\:embPattern_loadExternalColorFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_loadExternalColorFile ({\b EmbPattern} *  {\i p}, const char *  {\i fileName})}}
\par
{\bkmkstart AAAAAAABJG}
{\bkmkend AAAAAAABJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 732} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_maximumStitchLength\:pattern.c}
{\xe \v pattern.c\:embPattern_maximumStitchLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float embPattern_maximumStitchLength ({\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAABJH}
{\bkmkend AAAAAAABJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 1184} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_minimumStitchLength\:pattern.c}
{\xe \v pattern.c\:embPattern_minimumStitchLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float embPattern_minimumStitchLength ({\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAABJI}
{\bkmkend AAAAAAABJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 1163} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_movePolylinesTostitch_list\:pattern.c}
{\xe \v pattern.c\:embPattern_movePolylinesTostitch_list}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_movePolylinesTostitch_list ({\b EmbPattern} *  {\i p})}}
\par
{\bkmkstart AAAAAAABJJ}
{\bkmkend AAAAAAABJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Moves all of the EmbPolylineObjectList data to Embstitch_list data for pattern ({\i p} ). \par
}{
Definition at line {\b 225} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_movestitch_listToPolylines\:pattern.c}
{\xe \v pattern.c\:embPattern_movestitch_listToPolylines}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_movestitch_listToPolylines ({\b EmbPattern} *  {\i p})}}
\par
{\bkmkstart AAAAAAABJK}
{\bkmkend AAAAAAABJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Moves all of the Embstitch_list data to EmbPolylineObjectList data for pattern ({\i p} ). \par
}{
Definition at line {\b 211} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_realStitches\:pattern.c}
{\xe \v pattern.c\:embPattern_realStitches}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int embPattern_realStitches ({\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAABJL}
{\bkmkend AAAAAAABJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 1227} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_scale\:pattern.c}
{\xe \v pattern.c\:embPattern_scale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void embPattern_scale ({\b EmbPattern} *  {\i p}, {\b EmbReal}  {\i scale})}}
\par
{\bkmkstart AAAAAAABJM}
{\bkmkend AAAAAAABJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 324} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_totalStitchLength\:pattern.c}
{\xe \v pattern.c\:embPattern_totalStitchLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float embPattern_totalStitchLength ({\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAABJN}
{\bkmkend AAAAAAABJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 1143} of file {\b pattern.c}.}\par
}
{\xe \v embPattern_trimStitches\:pattern.c}
{\xe \v pattern.c\:embPattern_trimStitches}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int embPattern_trimStitches ({\b EmbPattern} *  {\i pattern})}}
\par
{\bkmkstart AAAAAAABJO}
{\bkmkend AAAAAAABJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 1254} of file {\b pattern.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
pattern.c\par \pard\plain 
{\tc\tcl2 \v src/pattern.c}
{\xe \v src/pattern.c}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /* }\par
00002 {\cf20  * This file is part of libembroidery.}\par
00003 {\cf20  *}\par
00004 {\cf20  * Copyright 2018-2022 The Embroidermodder Team}\par
00005 {\cf20  * Licensed under the terms of the zlib license.}\par
00006 {\cf20  *}\par
00007 {\cf20  * The file is for the management of the main struct: EmbPattern.}\par
00008 {\cf20  *******************************************************************/}\par
00009 \par
00010 {\cf21 #include <stdio.h>}\par
00011 {\cf21 #include <stdlib.h>}\par
00012 {\cf21 #include <string.h>}\par
00013 {\cf21 #include <math.h>}\par
00014 \par
00015 {\cf21 #include "embroidery_internal.h"}\par
00016 \par
00020 EmbPattern*\par
00021 embPattern_create({\cf18 void})\par
00022 \{\par
00023     EmbPattern* p = (EmbPattern*)malloc({\cf17 sizeof}(EmbPattern));\par
00024     {\cf19 if} (!p) \{ \par
00025         printf({\cf22 "ERROR: emb-pattern.c embPattern_create(), "});\par
00026         printf({\cf22 "unable to allocate memory for p\\n"});\par
00027         {\cf19 return} 0;\par
00028     \}\par
00029     p->dstJumpsPerTrim = 6;\par
00030     p->home.x = 0.0;\par
00031     p->home.y = 0.0;\par
00032     p->currentColorIndex = 0;\par
00033     p->stitch_list = embArray_create(EMB_STITCH);\par
00034     p->thread_list = embArray_create(EMB_THREAD);\par
00035     p->hoop_height = 0.0;\par
00036     p->hoop_width = 0.0;\par
00037     p->geometry = embArray_create(EMB_LINE);\par
00038     {\cf19 return} p;\par
00039 \}\par
00040 \par
00041 {\cf18 void}\par
00042 embPattern_hideStitchesOverLength(EmbPattern* p, {\cf18 int} length)\par
00043 \{\par
00044     EmbVector prev;\par
00045     {\cf18 int} i;\par
00046     prev.x = 0.0;\par
00047     prev.y = 0.0;\par
00048 \par
00049     {\cf19 if} (!p) \{\par
00050         printf({\cf22 "ERROR: emb-pattern.c embPattern_hideStitchesOverLength(), "});\par
00051         printf({\cf22 "p argument is null\\n"});\par
00052         {\cf19 return};\par
00053     \}\par
00054     {\cf19 for} (i = 0; i < p->stitch_list->count; i++) \{\par
00055         {\cf19 if} ((fabs(p->stitch_list->stitch[i].x - prev.x) > length)\par
00056          || (fabs(p->stitch_list->stitch[i].y - prev.y) > length)) \{\par
00057             p->stitch_list->stitch[i].flags |= TRIM;\par
00058             p->stitch_list->stitch[i].flags &= ~NORMAL;\par
00059         \}\par
00060         prev.x = p->stitch_list->stitch[i].x;\par
00061         prev.y = p->stitch_list->stitch[i].y;\par
00062     \}\par
00063 \}\par
00064 \par
00065 {\cf18 int}\par
00066 embPattern_addThread(EmbPattern *pattern, EmbThread thread)\par
00067 \{\par
00068     {\cf19 if} (pattern->thread_list->count + 1 > pattern->thread_list->length) \{\par
00069         {\cf19 if} (!embArray_resize(pattern->thread_list)) \{\par
00070             {\cf19 return} 0;\par
00071         \}\par
00072     \}\par
00073     pattern->thread_list->thread[pattern->thread_list->count] = thread;\par
00074     pattern->thread_list->count++;\par
00075     {\cf19 return} 1;\par
00076 \}\par
00077 \par
00078 {\cf18 void}\par
00079 embPattern_fixColorCount(EmbPattern* p)\par
00080 \{\par
00081     {\cf20 /* fix color count to be max of color index. */}\par
00082     {\cf18 int} maxColorIndex = 0, i;\par
00083 \par
00084     {\cf19 if} (!p) \{\par
00085         printf({\cf22 "ERROR: emb-pattern.c embPattern_fixColorCount(), "});\par
00086         printf({\cf22 "p argument is null\\n"});\par
00087         {\cf19 return};\par
00088     \}\par
00089     {\cf19 for} (i = 0; i < p->stitch_list->count; i++) \{\par
00090 {\cf20 /*        printf("%d %d\\n", list->stitch.color, maxColorIndex);*/}\par
00091         maxColorIndex = EMB_MAX(maxColorIndex, p->stitch_list->stitch[i].color);\par
00092     \}\par
00093     {\cf19 if} (p->thread_list->count == 0 || maxColorIndex == 0) \{\par
00094         embPattern_addThread(p, black_thread);\par
00095     \}\par
00096     {\cf19 else} \{\par
00097         {\cf19 if} (maxColorIndex > 0) \{\par
00098             {\cf19 while} (p->thread_list->count <= maxColorIndex) \{\par
00099 {\cf20 /*        printf("%d %d\\n", p->n_threads, maxColorIndex);*/}\par
00100                 embPattern_addThread(p, embThread_getRandom());\par
00101             \}\par
00102         \}\par
00103     \}\par
00104     {\cf20 /*}\par
00105 {\cf20     while (p->threadLists->count > (maxColorIndex + 1)) \{}\par
00106 {\cf20         TODO: erase last color    p->threadList.pop_back();}\par
00107 {\cf20     \}}\par
00108 {\cf20     */}\par
00109 \}\par
00110 \par
00113 {\cf18 void}\par
00114 embPattern_copystitch_listToPolylines(EmbPattern* p)\par
00115 \{\par
00116     {\cf18 int} breakAtFlags, i;\par
00117     EmbPoint point;\par
00118     EmbColor color;\par
00119 \par
00120     {\cf19 if} (!p) \{\par
00121         printf({\cf22 "ERROR: emb-pattern.c embPattern_copystitch_listToPolylines(), "});\par
00122         printf({\cf22 "p argument is null\\n"});\par
00123         {\cf19 return};\par
00124     \}\par
00125 \par
00126     breakAtFlags = (STOP | JUMP | TRIM);\par
00127 \par
00128     {\cf19 for} (i = 0; i < p->stitch_list->count; i++) \{\par
00129         EmbArray *pointList = 0;\par
00130         {\cf19 for} (; i < p->stitch_list->count; i++) \{\par
00131             EmbStitch st = p->stitch_list->stitch[i];\par
00132             {\cf19 if} (st.flags & breakAtFlags) \{\par
00133                 {\cf19 break};\par
00134             \}\par
00135             {\cf19 if} (!(st.flags & JUMP)) \{\par
00136                 {\cf19 if} (!pointList) \{\par
00137                     pointList = embArray_create(EMB_POINT);\par
00138                     color = p->thread_list->thread[st.color].color;\par
00139                 \}\par
00140                 point.position.x = st.x;\par
00141                 point.position.y = st.y;\par
00142                 embArray_addPoint(pointList, point);\par
00143             \}\par
00144         \}\par
00145 \par
00146         {\cf20 /* NOTE: Ensure empty polylines are not created. This is critical. */}\par
00147         {\cf19 if} (pointList) \{\par
00148             EmbPolyline currentPolyline;\par
00149             currentPolyline.pointList = pointList;\par
00150             currentPolyline.color = color;\par
00151             {\cf20 /* TODO: Determine what the correct value should be */}\par
00152             currentPolyline.lineType = 1;\par
00153 \par
00154             embArray_addPolyline(p->geometry, currentPolyline);\par
00155         \}\par
00156     \}\par
00157 \}\par
00158 \par
00160 {\cf18 void}\par
00161 embPattern_copyPolylinesTostitch_list(EmbPattern* p)\par
00162 \{\par
00163     {\cf18 int} firstObject = 1, i, j;\par
00164     {\cf20 /*int currentColor = polyList->polylineObj->color TODO: polyline color */}\par
00165 \par
00166     {\cf19 if} (!p) \{\par
00167         printf({\cf22 "ERROR: emb-pattern.c embPattern_copyPolylinesTostitch_list(), "});\par
00168         printf({\cf22 "p argument is null\\n"});\par
00169         {\cf19 return};\par
00170     \}\par
00171     {\cf19 for} (i = 0; i < p->geometry->count; i++) \{\par
00172         EmbPolyline currentPoly;\par
00173         EmbArray* currentPointList;\par
00174         EmbThread thread;\par
00175 \par
00176         {\cf19 if} (p->geometry->geometry[i].type != EMB_POLYLINE) \{\par
00177             {\cf19 continue};\par
00178         \}\par
00179 \par
00180         currentPoly = p->geometry->geometry[i].object.polyline;\par
00181         currentPointList = currentPoly.pointList;\par
00182 \par
00183         strcpy(thread.catalogNumber, {\cf22 ""});\par
00184         thread.color = currentPoly.color;\par
00185         strcpy(thread.description, {\cf22 ""});\par
00186         embPattern_addThread(p, thread);\par
00187 \par
00188         {\cf19 if} (!firstObject) \{\par
00189             embPattern_addStitchAbs(p,\par
00190                 currentPointList->geometry[0].object.point.position.x, \par
00191                 currentPointList->geometry[0].object.point.position.y, TRIM, 1);\par
00192             embPattern_addStitchRel(p, 0.0, 0.0, STOP, 1);\par
00193         \}\par
00194 \par
00195         embPattern_addStitchAbs(p,\par
00196             currentPointList->geometry[0].object.point.position.x,\par
00197             currentPointList->geometry[0].object.point.position.y,\par
00198             JUMP,\par
00199             1);\par
00200         {\cf19 for} (j = 1; j < currentPointList->count; j++) \{ \par
00201             EmbVector v = currentPointList->geometry[j].object.point.position;\par
00202             embPattern_addStitchAbs(p, v.x, v.y, NORMAL, 1);\par
00203         \}\par
00204         firstObject = 0;\par
00205     \}\par
00206     embPattern_addStitchRel(p, 0.0, 0.0, END, 1);\par
00207 \}\par
00208 \par
00210 {\cf18 void}\par
00211 embPattern_movestitch_listToPolylines(EmbPattern* p)\par
00212 \{\par
00213     {\cf19 if} (!p) \{\par
00214         printf({\cf22 "ERROR: emb-pattern.c embPattern_movestitch_listToPolylines(), p argument is null\\n"});\par
00215         {\cf19 return};\par
00216     \}\par
00217     embPattern_copystitch_listToPolylines(p);\par
00218     {\cf20 /* Free the stitch_list and threadList since their data has now been transferred to polylines */}\par
00219     p->stitch_list->count = 0;\par
00220     p->thread_list->count = 0;\par
00221 \}\par
00222 \par
00224 {\cf18 void}\par
00225 embPattern_movePolylinesTostitch_list(EmbPattern* p)\par
00226 \{\par
00227     {\cf19 if} (!p) \{\par
00228         printf({\cf22 "ERROR: emb-pattern.c embPattern_movePolylinesTostitch_list(), p argument is null\\n"});\par
00229         {\cf19 return};\par
00230     \}\par
00231     embPattern_copyPolylinesTostitch_list(p);\par
00232 \}\par
00233 \par
00235 {\cf18 void}\par
00236 embPattern_addStitchAbs(EmbPattern* p, EmbReal x, EmbReal y, \par
00237                             {\cf18 int} flags, {\cf18 int} isAutoColorIndex)\par
00238 \{\par
00239     EmbStitch s;\par
00240 \par
00241     {\cf19 if} (!p) \{\par
00242         printf({\cf22 "ERROR: emb-pattern.c embPattern_addStitchAbs(), "});\par
00243         printf({\cf22 "p argument is null\\n"});\par
00244         {\cf19 return};\par
00245     \}\par
00246 \par
00247     {\cf19 if} (flags & END) \{\par
00248         {\cf19 if} (p->stitch_list->count == 0) \{\par
00249             {\cf19 return};\par
00250         \}\par
00251         {\cf20 /* Prevent unnecessary multiple END stitches */}\par
00252         {\cf19 if} (p->stitch_list->stitch[p->stitch_list->count - 1].flags & END) \{\par
00253             printf({\cf22 "ERROR: emb-pattern.c embPattern_addStitchAbs(), found multiple END stitches\\n"});\par
00254             {\cf19 return};\par
00255         \}\par
00256         embPattern_fixColorCount(p);\par
00257         {\cf20 /* HideStitchesOverLength(127); TODO: fix or remove this */}\par
00258     \}\par
00259 \par
00260     {\cf19 if} (flags & STOP) \{\par
00261         {\cf19 if} (p->stitch_list->count == 0) \{\par
00262             {\cf19 return};\par
00263         \}\par
00264         {\cf19 if} (isAutoColorIndex) \{\par
00265             p->currentColorIndex++;\par
00266         \}\par
00267     \}\par
00268 \par
00269     {\cf20 /* NOTE: If the stitch_list is empty, we will create it before adding }\par
00270 {\cf20         stitches to it. The first coordinate will be the HOME position. */}\par
00271     {\cf19 if} (p->stitch_list->count == 0) \{\par
00272         {\cf20 /* NOTE: Always HOME the machine before starting any stitching */}\par
00273         EmbStitch h;\par
00274         h.x = p->home.x;\par
00275         h.y = p->home.y;\par
00276         h.flags = JUMP;\par
00277         h.color = p->currentColorIndex;\par
00278         embArray_addStitch(p->stitch_list, h);\par
00279     \}\par
00280     s.x = x;\par
00281     s.y = y;\par
00282     s.flags = flags;\par
00283     s.color = p->currentColorIndex;\par
00284     embArray_addStitch(p->stitch_list, s);\par
00285 \}\par
00286 \par
00289 {\cf18 void}\par
00290 embPattern_addStitchRel(EmbPattern* p, EmbReal dx, EmbReal dy, \par
00291                             {\cf18 int} flags, {\cf18 int} isAutoColorIndex)\par
00292 \{\par
00293     EmbReal x, y;\par
00294     {\cf19 if} (!p) \{\par
00295         printf({\cf22 "ERROR: emb-pattern.c embPattern_addStitchRel(), p argument is null\\n"});\par
00296         {\cf19 return};\par
00297     \}\par
00298     {\cf19 if} (p->stitch_list->count > 0) \{\par
00299         EmbStitch st = p->stitch_list->stitch[p->stitch_list->count - 1];\par
00300         x = st.x + dx;\par
00301         y = st.y + dy;\par
00302     \} {\cf19 else} \{\par
00303         {\cf20 /* NOTE: The stitch_list is empty, so add it to the HOME position.}\par
00304 {\cf20          * The embstitch_list_create function will ensure the first coordinate is at the HOME position. */}\par
00305         x = p->home.x + dx;\par
00306         y = p->home.y + dy;\par
00307     \}\par
00308     embPattern_addStitchAbs(p, x, y, flags, isAutoColorIndex);\par
00309 \}\par
00310 \par
00311 {\cf18 void}\par
00312 embPattern_changeColor(EmbPattern* p, {\cf18 int} index)\par
00313 \{\par
00314     {\cf19 if} (!p) \{\par
00315         printf({\cf22 "ERROR: emb-pattern.c embPattern_changeColor(), p argument is null\\n"});\par
00316         {\cf19 return};\par
00317     \}\par
00318     p->currentColorIndex = index;\par
00319 \}\par
00320 \par
00321 {\cf20 /* Very simple scaling of the x and y axis for every point.}\par
00322 {\cf20 * Doesn't insert or delete stitches to preserve density. */}\par
00323 {\cf18 void}\par
00324 embPattern_scale(EmbPattern* p, EmbReal scale)\par
00325 \{\par
00326     {\cf18 int} i;\par
00327     {\cf19 if} (!p) \{\par
00328         printf({\cf22 "ERROR: emb-pattern.c embPattern_scale(), p argument is null\\n"});\par
00329         {\cf19 return};\par
00330     \}\par
00331 \par
00332     {\cf19 for} (i = 0; i < p->stitch_list->count; i++) \{\par
00333         p->stitch_list->stitch[i].x *= scale;\par
00334         p->stitch_list->stitch[i].y *= scale;\par
00335     \}\par
00336 \}\par
00337 \par
00339 EmbRect\par
00340 embPattern_calcBoundingBox(EmbPattern* p)\par
00341 \{\par
00342     EmbRect r;\par
00343     EmbStitch pt;\par
00344     {\cf18 int} i, j;\par
00345 \par
00346     r.left = 0;\par
00347     r.right = 0;\par
00348     r.top = 0;\par
00349     r.bottom = 0;\par
00350 \par
00351     {\cf19 if} (!p) \{\par
00352         printf({\cf22 "ERROR: emb-pattern.c embPattern_calcBoundingBox(), "});\par
00353         printf({\cf22 "p argument is null\\n"});\par
00354         {\cf19 return} r;\par
00355     \}\par
00356 \par
00357     {\cf20 /* Calculate the bounding rectangle.  It's needed for smart repainting. */}\par
00358     {\cf20 /* TODO: Come back and optimize this mess so that after going thru all objects}\par
00359 {\cf20             and stitches, if the rectangle isn't reasonable, then return a default rect */}\par
00360     {\cf19 if} ((p->stitch_list->count == 0) && (p->geometry->count == 0)) \{\par
00361         r.top = 0.0;\par
00362         r.left = 0.0;\par
00363         r.bottom = 1.0;\par
00364         r.right = 1.0;\par
00365         {\cf19 return} r;\par
00366     \}\par
00367     r.left = 99999.0;\par
00368     r.top =  99999.0;\par
00369     r.right = -99999.0;\par
00370     r.bottom = -99999.0;\par
00371 \par
00372     {\cf19 for} (i = 0; i < p->stitch_list->count; i++) \{\par
00373         {\cf20 /* If the point lies outside of the accumulated bounding}\par
00374 {\cf20         * rectangle, then inflate the bounding rect to include it. */}\par
00375         pt = p->stitch_list->stitch[i];\par
00376         {\cf19 if} (!(pt.flags & TRIM)) \{\par
00377             r.left = EMB_MIN(r.left, pt.x);\par
00378             r.top = EMB_MIN(r.top, pt.y);\par
00379             r.right = EMB_MAX(r.right, pt.x);\par
00380             r.bottom = EMB_MAX(r.bottom, pt.y);\par
00381         \}\par
00382     \}\par
00383 \par
00384     {\cf19 for} (i = 0; i < p->geometry->count; i++) \{\par
00385         EmbGeometry g = p->geometry->geometry[i];\par
00386         {\cf19 switch} (g.type) \{\par
00387         {\cf19 case} EMB_ARC: \{\par
00388             {\cf20 /* TODO: embPattern_calcBoundingBox for arcs, }\par
00389 {\cf20             for now just checks the start point */}\par
00390             EmbArc arc = g.object.arc;\par
00391             r.left = EMB_MIN(r.left, arc.start.x);\par
00392             r.top = EMB_MIN(r.top, arc.start.y);\par
00393             r.right = EMB_MAX(r.right, arc.start.x);\par
00394             r.bottom = EMB_MAX(r.bottom, arc.start.y);\par
00395             {\cf19 break};\par
00396         \}\par
00397         {\cf19 case} EMB_CIRCLE: \{\par
00398             EmbCircle circle = g.object.circle;\par
00399             r.left = EMB_MIN(r.left, circle.center.x - circle.radius);\par
00400             r.top = EMB_MIN(r.top, circle.center.y - circle.radius);\par
00401             r.right = EMB_MAX(r.right, circle.center.x + circle.radius);\par
00402             r.bottom = EMB_MAX(r.bottom, circle.center.y + circle.radius);\par
00403             {\cf19 break};\par
00404         \}\par
00405         {\cf19 case} EMB_ELLIPSE: \{\par
00406             {\cf20 /* TODO: account for rotation */}\par
00407             EmbEllipse ellipse = g.object.ellipse;\par
00408             r.left = EMB_MIN(r.left, ellipse.center.x - ellipse.radius.x);\par
00409             r.top = EMB_MIN(r.top, ellipse.center.y - ellipse.radius.y);\par
00410             r.right = EMB_MAX(r.right, ellipse.center.x + ellipse.radius.x);\par
00411             r.bottom = EMB_MAX(r.bottom, ellipse.center.y + ellipse.radius.y);\par
00412             {\cf19 break};\par
00413         \}\par
00414         {\cf19 case} EMB_LINE: \{\par
00415             EmbLine line = g.object.line;\par
00416             r.left = EMB_MIN(r.left, line.start.x);\par
00417             r.left = EMB_MIN(r.left, line.end.x);\par
00418             r.top = EMB_MIN(r.top, line.start.y);\par
00419             r.top = EMB_MIN(r.top, line.end.y);\par
00420             r.right = EMB_MAX(r.right, line.start.x);\par
00421             r.right = EMB_MAX(r.right, line.end.x);\par
00422             r.bottom = EMB_MAX(r.bottom, line.start.y);\par
00423             r.bottom = EMB_MAX(r.bottom, line.end.y);\par
00424             {\cf19 break};\par
00425         \}\par
00426         {\cf19 case} EMB_POINT: \{\par
00427             EmbVector point = g.object.point.position;\par
00428             r.left = EMB_MIN(r.left, point.x);\par
00429             r.top = EMB_MIN(r.top, point.y);\par
00430             r.right = EMB_MAX(r.right, point.x);\par
00431             r.bottom = EMB_MAX(r.bottom, point.y);\par
00432             {\cf19 break};\par
00433         \}\par
00434         {\cf19 case} EMB_POLYGON: \{\par
00435             EmbArray *polygon = g.object.polygon.pointList;\par
00436             {\cf19 for} (j=0; j < polygon->count; j++) \{\par
00437                 {\cf20 /* TODO: embPattern_calcBoundingBox for polygons */}\par
00438             \}\par
00439             {\cf19 break};\par
00440         \}\par
00441         {\cf19 case} EMB_POLYLINE: \{\par
00442             EmbArray *polyline = g.object.polyline.pointList;\par
00443             {\cf19 for} (j=0; j < polyline->count; j++) \{\par
00444                 {\cf20 /* TODO: embPattern_calcBoundingBox for polylines */}\par
00445             \}\par
00446             {\cf19 break};\par
00447         \}\par
00448         {\cf19 case} EMB_RECT: \{\par
00449             EmbRect rect = g.object.rect;\par
00450             r.left = EMB_MIN(r.left, rect.left);\par
00451             r.top = EMB_MIN(r.top, rect.top);\par
00452             r.right = EMB_MAX(r.right, rect.right);\par
00453             r.bottom = EMB_MAX(r.bottom, rect.bottom);\par
00454             {\cf19 break};\par
00455         \}\par
00456         {\cf19 case} EMB_SPLINE: \{\par
00457             {\cf20 /* EmbBezier bezier;}\par
00458 {\cf20             bezier = p->splines->spline[i].bezier; */}\par
00459             {\cf20 /* TODO: embPattern_calcBoundingBox for splines */}\par
00460             {\cf19 break};\par
00461         \}\par
00462         {\cf19 default}:\par
00463             {\cf19 break};\par
00464         \}\par
00465     \}\par
00466 \par
00467     {\cf19 return} r;\par
00468 \}\par
00469 \par
00471 {\cf18 void}\par
00472 embPattern_flipHorizontal(EmbPattern* p)\par
00473 \{\par
00474     {\cf19 if} (!p) \{\par
00475         printf({\cf22 "ERROR: emb-pattern.c embPattern_flipHorizontal(), "});\par
00476         printf({\cf22 "p argument is null\\n"});\par
00477         {\cf19 return};\par
00478     \}\par
00479     embPattern_flip(p, 1, 0);\par
00480 \}\par
00481 \par
00483 {\cf18 void}\par
00484 embPattern_flipVertical(EmbPattern* p)\par
00485 \{\par
00486     {\cf19 if} (!p) \{\par
00487         printf({\cf22 "ERROR: emb-pattern.c embPattern_flipVertical(), "});\par
00488         printf({\cf22 "p argument is null\\n"});\par
00489         {\cf19 return};\par
00490     \}\par
00491     embPattern_flip(p, 0, 1);\par
00492 \}\par
00493 \par
00496 {\cf18 void}\par
00497 embPattern_flip(EmbPattern* p, {\cf18 int} horz, {\cf18 int} vert)\par
00498 \{\par
00499     {\cf18 int} i, j;\par
00500 \par
00501     {\cf19 if} (!p) \{\par
00502         printf({\cf22 "ERROR: emb-pattern.c embPattern_flip(), p argument is null\\n"});\par
00503         {\cf19 return};\par
00504     \}\par
00505 \par
00506     {\cf19 for} (i = 0; i < p->stitch_list->count; i++) \{\par
00507         {\cf19 if} (horz) \{\par
00508             p->stitch_list->stitch[i].x *= -1.0;\par
00509         \}\par
00510         {\cf19 if} (vert) \{\par
00511             p->stitch_list->stitch[i].y *= -1.0;\par
00512         \}\par
00513     \}\par
00514 \par
00515     {\cf19 for} (i = 0; i < p->geometry->count; i++) \{\par
00516         EmbGeometry *g = &(p->geometry->geometry[i]);\par
00517         {\cf19 switch} (g->type) \{\par
00518         {\cf19 case} EMB_ARC: \{\par
00519             {\cf19 if} (horz) \{\par
00520                 g->object.arc.start.x *= -1.0;\par
00521                 g->object.arc.mid.x *= -1.0;\par
00522                 g->object.arc.end.x *= -1.0;\par
00523             \}\par
00524             {\cf19 if} (vert) \{\par
00525                 g->object.arc.start.y *= -1.0;\par
00526                 g->object.arc.mid.y *= -1.0;\par
00527                 g->object.arc.end.y *= -1.0;\par
00528             \}\par
00529             {\cf19 break};\par
00530         \}\par
00531         {\cf19 case} EMB_LINE: \{\par
00532             {\cf19 if} (horz) \{\par
00533                 g->object.line.start.x *= -1.0;\par
00534                 g->object.line.end.x *= -1.0;\par
00535             \}\par
00536             {\cf19 if} (vert) \{\par
00537                 g->object.line.start.y *= -1.0;\par
00538                 g->object.line.end.y *= -1.0;\par
00539             \}\par
00540             {\cf19 break};\par
00541         \}\par
00542         {\cf19 case} EMB_CIRCLE: \{\par
00543             {\cf19 if} (horz) \{\par
00544                 g->object.circle.center.x *= -1.0;\par
00545             \}\par
00546             {\cf19 if} (vert) \{\par
00547                 g->object.circle.center.y *= -1.0;\par
00548             \}\par
00549             {\cf19 break};\par
00550         \}\par
00551         {\cf19 case} EMB_ELLIPSE:\par
00552             {\cf19 if} (horz) \{\par
00553                 g->object.ellipse.center.x *= -1.0;\par
00554             \}\par
00555             {\cf19 if} (vert) \{\par
00556                 g->object.ellipse.center.y *= -1.0;\par
00557             \}\par
00558             {\cf19 break};\par
00559         {\cf19 case} EMB_PATH: \{\par
00560             EmbArray *point_list = g->object.path.pointList;\par
00561             {\cf19 for} (j=0; j < point_list->count; j++) \{\par
00562                 {\cf19 if} (horz) \{\par
00563                     point_list->geometry[j].object.point.position.x *= -1.0;\par
00564                 \}\par
00565                 {\cf19 if} (vert) \{\par
00566                     point_list->geometry[j].object.point.position.y *= -1.0;\par
00567                 \}\par
00568             \}\par
00569             {\cf19 break};\par
00570         \}\par
00571         {\cf19 case} EMB_POINT:\par
00572             {\cf19 if} (horz) \{\par
00573                 g->object.point.position.x *= -1.0;\par
00574             \}\par
00575             {\cf19 if} (vert) \{\par
00576                 g->object.point.position.y *= -1.0;\par
00577             \}\par
00578             {\cf19 break};\par
00579         {\cf19 case} EMB_POLYGON: \{\par
00580             EmbArray *point_list = g->object.polygon.pointList;\par
00581             {\cf19 for} (j=0; j < point_list->count; j++) \{\par
00582                 {\cf19 if} (horz) \{\par
00583                     point_list->geometry[i].object.point.position.x *= -1.0;\par
00584                 \}\par
00585                 {\cf19 if} (vert) \{\par
00586                     point_list->geometry[i].object.point.position.y *= -1.0;\par
00587                 \}\par
00588             \}\par
00589             {\cf19 break};\par
00590         \}\par
00591         {\cf19 case} EMB_POLYLINE: \{\par
00592             EmbArray *point_list = g->object.polygon.pointList;\par
00593             {\cf19 for} (j=0; j < point_list->count; j++) \{\par
00594                 {\cf19 if} (horz) \{\par
00595                     point_list->geometry[j].object.point.position.x *= -1.0;\par
00596                 \}\par
00597                 {\cf19 if} (vert) \{\par
00598                     point_list->geometry[j].object.point.position.y *= -1.0;\par
00599                 \}\par
00600             \}\par
00601             {\cf19 break};\par
00602         \}\par
00603         {\cf19 case} EMB_RECT: \{\par
00604             {\cf19 if} (horz) \{\par
00605                 g->object.rect.left *= -1.0;\par
00606                 g->object.rect.right *= -1.0;\par
00607             \}\par
00608             {\cf19 if} (vert) \{\par
00609                 g->object.rect.top *= -1.0;\par
00610                 g->object.rect.bottom *= -1.0;\par
00611             \}\par
00612             {\cf19 break};\par
00613         \}\par
00614         {\cf19 case} EMB_SPLINE:\par
00615             {\cf20 /* TODO */}\par
00616             {\cf19 break};\par
00617         {\cf19 default}:\par
00618             {\cf19 break};\par
00619         \}\par
00620     \}\par
00621 \}\par
00622 \par
00623 {\cf18 void}\par
00624 embPattern_combineJumpStitches(EmbPattern* p)\par
00625 \{\par
00626     {\cf18 int} jumpCount = 0, i;\par
00627     EmbArray *newList;\par
00628     EmbStitch j;\par
00629 \par
00630     {\cf19 if} (!p) \{\par
00631         printf({\cf22 "ERROR: emb-pattern.c embPattern_combineJumpStitches(), "});\par
00632         printf({\cf22 "p argument is null\\n"});\par
00633         {\cf19 return};\par
00634     \}\par
00635     newList = embArray_create(EMB_STITCH);\par
00636     {\cf19 for} (i = 0; i < p->stitch_list->count; i++) \{\par
00637         EmbStitch st = p->stitch_list->stitch[i];\par
00638         {\cf19 if} (st.flags & JUMP) \{\par
00639             {\cf19 if} (jumpCount == 0) \{\par
00640                 j = st;\par
00641             \} {\cf19 else} \{\par
00642                 j.x += st.x;\par
00643                 j.y += st.y;\par
00644             \}\par
00645             jumpCount++;\par
00646         \} {\cf19 else} \{\par
00647             {\cf19 if} (jumpCount > 0) \{\par
00648                 embArray_addStitch(newList, j);\par
00649             \}\par
00650             embArray_addStitch(newList, st);\par
00651         \}\par
00652     \}\par
00653     embArray_free(p->stitch_list);\par
00654     p->stitch_list = newList;\par
00655 \}\par
00656 \par
00657 {\cf20 /*TODO: The params determine the max XY movement rather than the length. }\par
00658 {\cf20     They need renamed or clarified further. */}\par
00659 {\cf18 void}\par
00660 embPattern_correctForMaxStitchLength(EmbPattern* p, \par
00661                         EmbReal maxStitchLength, EmbReal maxJumpLength)\par
00662 \{\par
00663     {\cf19 if} (!p) \{\par
00664         printf({\cf22 "ERROR: emb-pattern.c embPattern_correctForMaxStitchLength(), "});\par
00665         printf({\cf22 "p argument is null\\n"});\par
00666         {\cf19 return};\par
00667     \}\par
00668     {\cf19 if} (p->stitch_list->count > 1) \{\par
00669         {\cf18 int} i, j, splits;\par
00670         EmbReal maxXY, maxLen, addX, addY;\par
00671         EmbArray *newList = embArray_create(EMB_STITCH);\par
00672         {\cf19 for} (i=1; i < p->stitch_list->count; i++) \{\par
00673             EmbStitch st = p->stitch_list->stitch[i];\par
00674             EmbReal xx = st.x;\par
00675             EmbReal yy = st.y;\par
00676             EmbReal dx = p->stitch_list->stitch[i-1].x - xx;\par
00677             EmbReal dy = p->stitch_list->stitch[i-1].y - yy;\par
00678             {\cf19 if} ((fabs(dx) > maxStitchLength) || (fabs(dy) > maxStitchLength)) \{\par
00679                 maxXY = EMB_MAX(fabs(dx), fabs(dy));\par
00680                 {\cf19 if} (st.flags & (JUMP | TRIM)) \{\par
00681                     maxLen = maxJumpLength;\par
00682                 \} {\cf19 else} \{\par
00683                     maxLen = maxStitchLength;\par
00684                 \}\par
00685                 splits = (int)ceil((EmbReal)maxXY / maxLen);\par
00686 \par
00687                 {\cf19 if} (splits > 1) \{\par
00688                     addX = (EmbReal)dx / splits;\par
00689                     addY = (EmbReal)dy / splits;\par
00690 \par
00691                     {\cf19 for} (j = 1; j < splits; j++) \{\par
00692                         EmbStitch s;\par
00693                         s = st;\par
00694                         s.x = xx + addX * j;\par
00695                         s.y = yy + addY * j;\par
00696                         embArray_addStitch(newList, s);\par
00697                     \}\par
00698                 \}\par
00699             \}\par
00700             embArray_addStitch(newList, st);\par
00701         \}\par
00702         embArray_free(p->stitch_list);\par
00703         p->stitch_list = newList;\par
00704     \}\par
00705     embPattern_end(p);\par
00706 \}\par
00707 \par
00708 {\cf18 void}\par
00709 embPattern_center(EmbPattern* p)\par
00710 \{\par
00711     {\cf20 /* TODO: review this. currently not used in anywhere. }\par
00712 {\cf20         Also needs to handle various design objects */}\par
00713     {\cf18 int} moveLeft, moveTop, i;\par
00714     EmbRect boundingRect;\par
00715     {\cf19 if} (!p) \{\par
00716         printf({\cf22 "ERROR: emb-pattern.c embPattern_center(), p argument is null\\n"});\par
00717         {\cf19 return};\par
00718     \}\par
00719     boundingRect = embPattern_calcBoundingBox(p);\par
00720 \par
00721     moveLeft = (int)(boundingRect.left - (boundingRect.right- boundingRect.left) / 2.0);\par
00722     moveTop = (int)(boundingRect.top - (boundingRect.bottom - boundingRect.top) / 2.0);\par
00723 \par
00724     {\cf19 for} (i = 0; i < p->stitch_list->count; i++) \{\par
00725         p->stitch_list->stitch[i].x -= moveLeft;\par
00726         p->stitch_list->stitch[i].y -= moveTop;\par
00727     \}\par
00728 \}\par
00729 \par
00730 {\cf20 /*TODO: Description needed. */}\par
00731 {\cf18 void}\par
00732 embPattern_loadExternalColorFile(EmbPattern* p, {\cf17 const} {\cf18 char}* fileName)\par
00733 \{\par
00734     {\cf18 int} hasRead, stub_len, format;\par
00735     {\cf18 char} extractName[200];\par
00736 \par
00737     {\cf19 if} (!p) \{\par
00738         printf({\cf22 "ERROR: emb-pattern.c embPattern_loadExternalColorFile(), p argument is null\\n"});\par
00739         {\cf19 return};\par
00740     \}\par
00741     {\cf19 if} (!fileName) \{\par
00742         printf({\cf22 "ERROR: emb-pattern.c embPattern_loadExternalColorFile(), fileName argument is null\\n"});\par
00743         {\cf19 return};\par
00744     \}\par
00745 \par
00746     strcpy(extractName, fileName);\par
00747     format = emb_identify_format(fileName);\par
00748     stub_len = strlen(fileName) - strlen(formatTable[format].extension);\par
00749     extractName[stub_len] = 0;\par
00750     strcat(extractName, {\cf22 ".edr"});\par
00751     hasRead = embPattern_read(p, extractName, EMB_FORMAT_EDR);\par
00752     {\cf19 if} (!hasRead) \{\par
00753         extractName[stub_len] = 0;\par
00754         strcat(extractName,{\cf22 ".rgb"});\par
00755         hasRead = embPattern_read(p, extractName, EMB_FORMAT_RGB);\par
00756     \}\par
00757     {\cf19 if} (!hasRead) \{\par
00758         extractName[stub_len] = 0;\par
00759         strcat(extractName,{\cf22 ".col"});\par
00760         hasRead = embPattern_read(p, extractName, EMB_FORMAT_COL);\par
00761     \}\par
00762     {\cf19 if} (!hasRead) \{\par
00763         extractName[stub_len] = 0;\par
00764         strcat(extractName,{\cf22 ".inf"});\par
00765         hasRead = embPattern_read(p, extractName, EMB_FORMAT_INF);\par
00766     \}\par
00767 \}\par
00768 \par
00770 {\cf18 void}\par
00771 embPattern_free(EmbPattern* p)\par
00772 \{\par
00773     {\cf19 if} (!p) \{\par
00774         printf({\cf22 "ERROR: emb-pattern.c embPattern_free(), p argument is null\\n"});\par
00775         {\cf19 return};\par
00776     \}\par
00777     embArray_free(p->stitch_list);\par
00778     embArray_free(p->thread_list);\par
00779     embArray_free(p->geometry);\par
00780     free(p);\par
00781 \}\par
00782 \par
00786 {\cf18 void}\par
00787 embPattern_addCircleAbs(EmbPattern* p, EmbCircle circle)\par
00788 \{\par
00789     {\cf19 if} (!p) \{\par
00790         printf({\cf22 "ERROR: emb-pattern.c embPattern_addCircleObjectAbs(), p argument is null\\n"});\par
00791         {\cf19 return};\par
00792     \}\par
00793 \par
00794     embArray_addCircle(p->geometry, circle);\par
00795 \}\par
00796 \par
00800 {\cf18 void}\par
00801 embPattern_addEllipseAbs(EmbPattern* p, EmbEllipse ellipse)\par
00802 \{\par
00803     {\cf19 if} (!p) \{\par
00804         printf({\cf22 "ERROR: emb-pattern.c embPattern_addEllipseObjectAbs(), p argument is null\\n"});\par
00805         {\cf19 return};\par
00806     \}\par
00807 \par
00808     embArray_addEllipse(p->geometry, ellipse);\par
00809 \}\par
00810 \par
00815 {\cf18 void}\par
00816 embPattern_addLineAbs(EmbPattern* p, EmbLine line)\par
00817 \{\par
00818     {\cf19 if} (!p) \{\par
00819         printf({\cf22 "ERROR: emb-pattern.c embPattern_addLineObjectAbs(), p argument is null\\n"});\par
00820         {\cf19 return};\par
00821     \}\par
00822 \par
00823     embArray_addLine(p->geometry, line);\par
00824 \}\par
00825 \par
00826 {\cf18 void}\par
00827 embPattern_addPathAbs(EmbPattern* p, EmbPath obj)\par
00828 \{\par
00829     {\cf19 if} (!p) \{\par
00830         printf({\cf22 "ERROR: emb-pattern.c embPattern_addPathObjectAbs(), p argument is null\\n"});\par
00831         {\cf19 return};\par
00832     \}\par
00833     {\cf19 if} (!obj.pointList) \{\par
00834         printf({\cf22 "ERROR: emb-pattern.c embPattern_addPathObjectAbs(), obj->pointList is empty\\n"});\par
00835         {\cf19 return};\par
00836     \}\par
00837 \par
00838     embArray_addPath(p->geometry, obj);\par
00839 \}\par
00840 \par
00842 {\cf18 void}\par
00843 embPattern_addPointAbs(EmbPattern* p, EmbPoint obj)\par
00844 \{\par
00845     {\cf19 if} (!p) \{\par
00846         printf({\cf22 "ERROR: emb-pattern.c embPattern_addPointObjectAbs(), p argument is null\\n"});\par
00847         {\cf19 return};\par
00848     \}\par
00849 \par
00850     embArray_addPoint(p->geometry, obj);\par
00851 \}\par
00852 \par
00853 {\cf18 void}\par
00854 embPattern_addPolygonAbs(EmbPattern* p, EmbPolygon obj)\par
00855 \{\par
00856     {\cf19 if} (!p) \{\par
00857         printf({\cf22 "ERROR: emb-pattern.c embPattern_addPolygonObjectAbs(), p argument is null\\n"});\par
00858         {\cf19 return};\par
00859     \}\par
00860     {\cf19 if} (!obj.pointList) \{\par
00861         printf({\cf22 "ERROR: emb-pattern.c embPattern_addPolygonObjectAbs(), obj->pointList is empty\\n"});\par
00862         {\cf19 return};\par
00863     \}\par
00864 \par
00865     embArray_addPolygon(p->geometry, obj);\par
00866 \}\par
00867 \par
00868 {\cf18 void}\par
00869 embPattern_addPolylineObjectAbs(EmbPattern* p, EmbPolyline obj)\par
00870 \{\par
00871     {\cf19 if} (!p) \{\par
00872         printf({\cf22 "ERROR: emb-pattern.c embPattern_addPolylineObjectAbs(), p argument is null\\n"});\par
00873         {\cf19 return};\par
00874     \}\par
00875     {\cf19 if} (!obj.pointList) \{\par
00876         printf({\cf22 "ERROR: emb-pattern.c embPattern_addPolylineObjectAbs(), obj->pointList is empty\\n"});\par
00877         {\cf19 return};\par
00878     \}\par
00879     embArray_addPolyline(p->geometry, obj);\par
00880 \}\par
00881 \par
00887 {\cf18 void}\par
00888 embPattern_addRectAbs(EmbPattern* p, EmbRect rect)\par
00889 \{\par
00890     {\cf19 if} (!p) \{\par
00891         printf({\cf22 "ERROR: emb-pattern.c embPattern_addRectObjectAbs(), p argument is null\\n"});\par
00892         {\cf19 return};\par
00893     \}\par
00894     embArray_addRect(p->geometry, rect);\par
00895 \}\par
00896 \par
00897 {\cf18 void}\par
00898 embPattern_end(EmbPattern *p)\par
00899 \{\par
00900     {\cf19 if} (p->stitch_list->count == 0) \{\par
00901         {\cf19 return};\par
00902     \}\par
00903     {\cf20 /* Check for an END stitch and add one if it is not present */}\par
00904     {\cf19 if} (p->stitch_list->stitch[p->stitch_list->count-1].flags != END) \{\par
00905         embPattern_addStitchRel(p, 0, 0, END, 1);\par
00906     \}\par
00907 \}\par
00908 \par
00909 \par
00910 {\cf18 int}\par
00911 embPattern_color_count(EmbPattern *pattern, EmbColor startColor)\par
00912 \{\par
00913     {\cf18 int} numberOfColors = 0, i;\par
00914     EmbColor color = startColor;\par
00915     {\cf19 for} (i=0; i<pattern->stitch_list->count; i++) \{\par
00916         EmbColor newColor;\par
00917         EmbStitch st;\par
00918 \par
00919         st = pattern->stitch_list->stitch[i];\par
00920 \par
00921         newColor = pattern->thread_list->thread[st.color].color;\par
00922         {\cf19 if} (embColor_distance(newColor, color) != 0) \{\par
00923             numberOfColors++;\par
00924             color = newColor;\par
00925         \}\par
00926         {\cf19 else} {\cf19 if} (st.flags & END || st.flags & STOP) \{\par
00927             numberOfColors++;\par
00928         \}\par
00929 \par
00930         {\cf19 while} (pattern->stitch_list->stitch[i+1].flags == st.flags) \{\par
00931             i++;\par
00932             {\cf19 if} (i >= pattern->stitch_list->count-2) \{\par
00933                 {\cf19 break};\par
00934             \}\par
00935         \}\par
00936     \}\par
00937     {\cf19 return} numberOfColors;\par
00938 \}\par
00939 \par
00940 \par
00941 {\cf18 void}\par
00942 embPattern_designDetails(EmbPattern *pattern)\par
00943 \{\par
00944     {\cf18 int} colors, num_stitches, real_stitches, jump_stitches, trim_stitches;\par
00945     {\cf18 int} unknown_stitches;\par
00946     EmbRect bounds;\par
00947 \par
00948     puts({\cf22 "Design Details"});\par
00949     bounds = embPattern_calcBoundingBox(pattern);\par
00950 \par
00951     colors = 1;\par
00952     num_stitches = pattern->stitch_list->count;\par
00953     real_stitches = 0;\par
00954     jump_stitches = 0;\par
00955     trim_stitches = 0;\par
00956     unknown_stitches = 0;\par
00957     bounds = embPattern_calcBoundingBox(pattern);\par
00958     \par
00959     {\cf19 if} (emb_verbose > 1) \{\par
00960         printf({\cf22 "colors: %d\\n"}, colors);\par
00961         printf({\cf22 "num_stitches: %d\\n"}, num_stitches);\par
00962         printf({\cf22 "real_stitches: %d\\n"}, real_stitches);\par
00963         printf({\cf22 "jump_stitches: %d\\n"}, jump_stitches);\par
00964         printf({\cf22 "trim_stitches: %d\\n"}, trim_stitches);\par
00965         printf({\cf22 "unknown_stitches: %d\\n"}, unknown_stitches);\par
00966         printf({\cf22 "num_colors: %d\\n"}, pattern->thread_list->count);\par
00967         printf({\cf22 "bounds.left: %f\\n"}, bounds.left);\par
00968         printf({\cf22 "bounds.right: %f\\n"}, bounds.right);\par
00969         printf({\cf22 "bounds.top: %f\\n"}, bounds.top);\par
00970         printf({\cf22 "bounds.bottom: %f\\n"}, bounds.bottom);\par
00971     \}\par
00972 {\cf20 /*}\par
00973 {\cf20     EmbReal minx = 0.0, maxx = 0.0, miny = 0.0, maxy = 0.0;}\par
00974 {\cf20     EmbReal min_stitchlength = 999.0;}\par
00975 {\cf20     EmbReal max_stitchlength = 0.0;}\par
00976 {\cf20     EmbReal total_stitchlength = 0.0;}\par
00977 {\cf20     int number_of_minlength_stitches = 0;}\par
00978 {\cf20     int number_of_maxlength_stitches = 0;}\par
00979 {\cf20 }\par
00980 {\cf20     EmbReal xx = 0.0, yy = 0.0;}\par
00981 {\cf20     EmbReal length = 0.0;}\par
00982 {\cf20 }\par
00983 {\cf20     if (num_stitches == 0) \{}\par
00984 {\cf20         QMessageBox::warning(this, tr("No Design Loaded"), tr("<b>A design needs to be loaded or created before details can be determined.</b>"));}\par
00985 {\cf20         return;}\par
00986 {\cf20     \}}\par
00987 {\cf20     QVector<EmbReal> stitchLengths;}\par
00988 {\cf20 }\par
00989 {\cf20     EmbReal totalColorLength = 0.0;}\par
00990 {\cf20     int i;}\par
00991 {\cf20     for (i = 0; i < num_stitches; i++) \{}\par
00992 {\cf20         EmbStitch st = pattern->stitch_list->stitch[i];}\par
00993 {\cf20         EmbReal dx, dy;}\par
00994 {\cf20         dx = st.x - xx;}\par
00995 {\cf20         dy = st.y - yy;}\par
00996 {\cf20         xx = st.x;}\par
00997 {\cf20         yy = st.y;}\par
00998 {\cf20         length=sqrt(dx * dx + dy * dy);}\par
00999 {\cf20         totalColorLength += length;}\par
01000 {\cf20         if(i > 0 && embstitch_list_getAt(pattern->stitch_list, i-1).flags != NORMAL)}\par
01001 {\cf20             length = 0.0; //can't count first normal stitch;}\par
01002 {\cf20         if(!(embstitch_list_getAt(pattern->stitch_list, i).flags & (JUMP | TRIM)))}\par
01003 {\cf20         \{}\par
01004 {\cf20             real_stitches++;}\par
01005 {\cf20             if(length > max_stitchlength) \{ max_stitchlength = length; number_of_maxlength_stitches = 0; \}}\par
01006 {\cf20             if(length == max_stitchlength) number_of_maxlength_stitches++;}\par
01007 {\cf20             if(length > 0 && length < min_stitchlength)}\par
01008 {\cf20             \{}\par
01009 {\cf20                 min_stitchlength = length;}\par
01010 {\cf20                 number_of_minlength_stitches = 0;}\par
01011 {\cf20             \}}\par
01012 {\cf20             if(length == min_stitchlength) number_of_minlength_stitches++;}\par
01013 {\cf20             total_stitchlength += length;}\par
01014 {\cf20             if(xx < minx) minx = xx;}\par
01015 {\cf20             if(xx > maxx) maxx = xx;}\par
01016 {\cf20             if(yy < miny) miny = yy;}\par
01017 {\cf20             if(yy > maxy) maxy = yy;}\par
01018 {\cf20         \}}\par
01019 {\cf20         if (st.flags & JUMP) \{}\par
01020 {\cf20             jump_stitches++;}\par
01021 {\cf20         \}}\par
01022 {\cf20         if (st.flags & TRIM) \{}\par
01023 {\cf20             trim_stitches++;}\par
01024 {\cf20         \}}\par
01025 {\cf20         if (st.flags & STOP) \{}\par
01026 {\cf20             stitchLengths.push_back(totalColorLength);}\par
01027 {\cf20             totalColorLength = 0;}\par
01028 {\cf20             colors++;}\par
01029 {\cf20         \}}\par
01030 {\cf20         if (st.flags & END) \{}\par
01031 {\cf20             stitchLengths.push_back(totalColorLength);}\par
01032 {\cf20         \}}\par
01033 {\cf20     \}}\par
01034 {\cf20 }\par
01035 {\cf20     //second pass to fill bins now that we know max stitch length}\par
01036 {\cf20 #define NUMBINS 10}\par
01037 {\cf20     int bin[NUMBINS+1];}\par
01038 {\cf20     int i;}\par
01039 {\cf20     for (i = 0; i <= NUMBINS; i++) \{}\par
01040 {\cf20         bin[i]=0;}\par
01041 {\cf20     \}}\par
01042 {\cf20 }\par
01043 {\cf20     for (i = 0; i < num_stitches; i++) \{}\par
01044 {\cf20         dx = embstitch_list_getAt(pattern->stitch_list, i).xx - xx;}\par
01045 {\cf20         dy = embstitch_list_getAt(pattern->stitch_list, i).yy - yy;}\par
01046 {\cf20         xx = embstitch_list_getAt(pattern->stitch_list, i).xx;}\par
01047 {\cf20         yy = embstitch_list_getAt(pattern->stitch_list, i).yy;}\par
01048 {\cf20         if(i > 0 && embstitch_list_getAt(pattern->stitch_list, i-1).flags == NORMAL && embstitch_list_getAt(pattern->stitch_list, i).flags == NORMAL)}\par
01049 {\cf20         \{}\par
01050 {\cf20             length=sqrt(dx * dx + dy * dy);}\par
01051 {\cf20             bin[int(floor(NUMBINS*length/max_stitchlength))]++;}\par
01052 {\cf20         \}}\par
01053 {\cf20     \}}\par
01054 {\cf20 }\par
01055 {\cf20     EmbReal binSize = max_stitchlength / NUMBINS;}\par
01056 {\cf20 }\par
01057 {\cf20     QString str;}\par
01058 {\cf20     int i;}\par
01059 {\cf20     for (i = 0; i < NUMBINS; i++) \{}\par
01060 {\cf20         str += QString::number(binSize * (i), 'f', 1) + " - " + QString::number(binSize * (i+1), 'f', 1) + " mm: " +  QString::number(bin[i]) + "\\n\\n";}\par
01061 {\cf20     \}}\par
01062 {\cf20 }\par
01063 {\cf20     puts("Stitches: %d\\n", num_stitches);}\par
01064 {\cf20     puts("Colors: %d\\n", num_colors);}\par
01065 {\cf20     puts("Jumps: %d\\n", jump_stitches);}\par
01066 {\cf20     puts("Top: %f mm", bounds.top);}\par
01067 {\cf20     puts("Left: %f mm", bounds.left);}\par
01068 {\cf20     puts("Bottom: %f mm", bounds.bottom);}\par
01069 {\cf20     puts("Right: %f mm", bounds.right);}\par
01070 {\cf20     puts("Width: %f mm", bounds.right - bounds.left);}\par
01071 {\cf20     puts("Height: %f mm", bounds.bottom - bounds.top);}\par
01072 {\cf20     grid->addWidget(new QLabel(tr("\\nStitch Distribution: \\n")),9,0,1,2);}\par
01073 {\cf20     grid->addWidget(new QLabel(str), 10, 0, 1, 1);}\par
01074 {\cf20     grid->addWidget(new QLabel(tr("\\nThread Length By Color: \\n")),11,0,1,2);}\par
01075 {\cf20     int currentRow = 12;}\par
01076 {\cf20 }\par
01077 {\cf20     int i;}\par
01078 {\cf20     for (i = 0; i < num_colors; i++) \{}\par
01079 {\cf20         QFrame *frame = new QFrame();}\par
01080 {\cf20         frame->setGeometry(0,0,30,30);}\par
01081 {\cf20         QPalette palette = frame->palette();}\par
01082 {\cf20         EmbColor t = embThreadList_getAt(pattern->threadList, i).color;}\par
01083 {\cf20         palette.setColor(backgroundRole(), QColor( t.r, t.g, t.b ) );}\par
01084 {\cf20         frame->setPalette( palette );}\par
01085 {\cf20         frame->setAutoFillBackground(true);}\par
01086 {\cf20         grid->addWidget(frame, currentRow,0,1,1);}\par
01087 {\cf20         debug_message("size: %d i: %d", stitchLengths.size(), i);}\par
01088 {\cf20         grid->addWidget(new QLabel(QString::number(stitchLengths.at(i)) + " mm"), currentRow,1,1,1);}\par
01089 {\cf20         currentRow++;}\par
01090 {\cf20     \}}\par
01091 {\cf20 }\par
01092 {\cf20     QDialogButtonBox buttonbox(Qt::Horizontal, &dialog);}\par
01093 {\cf20     QPushButton button(&dialog);}\par
01094 {\cf20     button.setText("Ok");}\par
01095 {\cf20     buttonbox.addButton(&button, QDialogButtonBox::AcceptRole);}\par
01096 {\cf20     buttonbox.setCenterButtons(true);}\par
01097 {\cf20     connect(&buttonbox, SIGNAL(accepted()), &dialog, SLOT(accept()));}\par
01098 {\cf20 }\par
01099 {\cf20     grid->addWidget(&buttonbox, currentRow, 0, 1, 2);}\par
01100 {\cf20 */}\par
01101 \}\par
01102 \par
01103 \par
01104 {\cf20 /*}\par
01105 {\cf20  *}\par
01106 {\cf20  */}\par
01107 {\cf18 int}\par
01108 convert({\cf17 const} {\cf18 char} *inf, {\cf17 const} {\cf18 char} *outf)\par
01109 \{\par
01110     EmbPattern* p = 0;\par
01111     {\cf18 int} reader, writer;\par
01112 \par
01113     p = embPattern_create();\par
01114     {\cf19 if} (!p) \{\par
01115         printf({\cf22 "ERROR: convert(), cannot allocate memory for p\\n"});\par
01116         {\cf19 return} 1;\par
01117     \}\par
01118 \par
01119     {\cf19 if} (!embPattern_readAuto(p, inf)) \{\par
01120         printf({\cf22 "ERROR: convert(), reading file was unsuccessful: %s\\n"}, inf);\par
01121         embPattern_free(p);\par
01122         {\cf19 return} 1;\par
01123     \}\par
01124 \par
01125     reader = emb_identify_format(inf);\par
01126     writer = emb_identify_format(outf);\par
01127     {\cf19 if} (formatTable[reader].type == EMBFORMAT_OBJECTONLY) \{\par
01128         {\cf19 if} (formatTable[writer].type == EMBFORMAT_STITCHONLY) \{\par
01129             embPattern_movePolylinesTostitch_list(p);\par
01130         \}\par
01131     \}\par
01132 \par
01133     {\cf19 if} (!embPattern_writeAuto(p, outf)) \{\par
01134         printf({\cf22 "ERROR: convert(), writing file %s was unsuccessful\\n"}, outf);\par
01135         embPattern_free(p);\par
01136         {\cf19 return} 1;\par
01137     \}\par
01138 \par
01139     embPattern_free(p);\par
01140     {\cf19 return} 0;\par
01141 \}\par
01142 \par
01143 {\cf18 float} embPattern_totalStitchLength(EmbPattern *pattern)\par
01144 \{\par
01145     EmbArray *sts = pattern->stitch_list;\par
01146     {\cf18 float} result = 0.0;\par
01147     {\cf18 int} i;\par
01148     {\cf19 for} (i = 1; i < sts->count; i++) \{\par
01149         EmbStitch st = sts->stitch[i];\par
01150         EmbReal length = 0.0;\par
01151         EmbVector delta;\par
01152         delta.x = st.x - sts->stitch[i-1].x;\par
01153         delta.y = st.y - sts->stitch[i-1].y;\par
01154         length = embVector_length(delta);\par
01155         {\cf19 if} (st.flags & NORMAL)\par
01156         {\cf19 if} (sts->stitch[i-1].flags & NORMAL) \{\par
01157             result += length;\par
01158         \}\par
01159     \}\par
01160     {\cf19 return} result;\par
01161 \}\par
01162 \par
01163 {\cf18 float} embPattern_minimumStitchLength(EmbPattern *pattern)\par
01164 \{\par
01165     EmbArray *sts = pattern->stitch_list;\par
01166     {\cf18 float} result = 1.0e10;\par
01167     {\cf18 int} i;\par
01168     {\cf19 for} (i = 1; i < sts->count; i++) \{\par
01169         EmbReal length = 0.0;\par
01170         EmbVector delta;\par
01171         delta.x = sts->stitch[i].x - sts->stitch[i-1].x;\par
01172         delta.y = sts->stitch[i].y - sts->stitch[i-1].y;\par
01173         length = embVector_length(delta);\par
01174         {\cf19 if} (sts->stitch[i].flags & NORMAL)\par
01175         {\cf19 if} (sts->stitch[i-1].flags & NORMAL) \{\par
01176             {\cf19 if} (length < result) \{\par
01177                 result = length;\par
01178             \}\par
01179         \}\par
01180     \}\par
01181     {\cf19 return} result;\par
01182 \}\par
01183 \par
01184 {\cf18 float} embPattern_maximumStitchLength(EmbPattern *pattern)\par
01185 \{\par
01186     EmbArray *sts = pattern->stitch_list;\par
01187     {\cf18 float} result = 0.0;\par
01188     {\cf18 int} i;\par
01189     {\cf19 for} (i = 1; i < sts->count; i++) \{\par
01190         EmbReal length = 0.0;\par
01191         EmbVector delta;\par
01192         delta.x = sts->stitch[i].x - sts->stitch[i-1].x;\par
01193         delta.y = sts->stitch[i].y - sts->stitch[i-1].y;\par
01194         length = embVector_length(delta);\par
01195         {\cf19 if} (sts->stitch[i].flags & NORMAL)\par
01196         {\cf19 if} (sts->stitch[i-1].flags & NORMAL) \{\par
01197             {\cf19 if} (length > result) \{\par
01198                 result = length;\par
01199             \}\par
01200         \}\par
01201     \}\par
01202     {\cf19 return} result;\par
01203 \}\par
01204 \par
01205 {\cf18 void} embPattern_lengthHistogram(EmbPattern *pattern, {\cf18 int} *bin, {\cf18 int} NUMBINS)\par
01206 \{\par
01207     {\cf18 int} i;\par
01208     {\cf18 float} max_stitch_length = embPattern_maximumStitchLength(pattern);\par
01209     EmbArray *sts = pattern->stitch_list;\par
01210     {\cf19 for} (i = 0; i <= NUMBINS; i++) \{\par
01211         bin[i] = 0;\par
01212     \}\par
01213 \par
01214     {\cf19 for} (i = 1; i < sts->count; i++) \{\par
01215         {\cf19 if} (sts->stitch[i].flags & NORMAL)\par
01216         {\cf19 if} (sts->stitch[i-1].flags & NORMAL) \{\par
01217             EmbVector delta;\par
01218             {\cf18 float} length;\par
01219             delta.x = sts->stitch[i].x - sts->stitch[i-1].x;\par
01220             delta.y = sts->stitch[i].y - sts->stitch[i-1].x;\par
01221             length = embVector_length(delta);\par
01222             bin[(int)(floor(NUMBINS*length/max_stitch_length))]++;\par
01223         \}\par
01224     \}\par
01225 \}\par
01226 \par
01227 {\cf18 int} embPattern_realStitches(EmbPattern *pattern)\par
01228 \{\par
01229     {\cf18 int} i;\par
01230     EmbArray *sts = pattern->stitch_list;\par
01231     {\cf18 int} real_stitches = 0;\par
01232     {\cf19 for} (i = 0; i < sts->count; i++) \{\par
01233         {\cf19 if} (!(sts->stitch[i].flags & (JUMP | TRIM | END))) \{\par
01234             real_stitches++;\par
01235         \}\par
01236     \}\par
01237     {\cf19 return} real_stitches;\par
01238 \}\par
01239 \par
01240 {\cf18 int} embPattern_jumpStitches(EmbPattern *pattern)\par
01241 \{\par
01242     {\cf18 int} i;\par
01243     EmbArray *sts = pattern->stitch_list;\par
01244     {\cf18 int} jump_stitches = 0;\par
01245     {\cf19 for} (i = 0; i < sts->count; i++) \{\par
01246         {\cf19 if} (sts->stitch[i].flags & JUMP) \{\par
01247             jump_stitches++;\par
01248         \}\par
01249     \}\par
01250     {\cf19 return} jump_stitches;\par
01251 \}\par
01252 \par
01253 \par
01254 {\cf18 int} embPattern_trimStitches(EmbPattern *pattern)\par
01255 \{\par
01256     {\cf18 int} i;\par
01257     EmbArray *sts = pattern->stitch_list;\par
01258     {\cf18 int} trim_stitches = 0;\par
01259     {\cf19 for} (i = 0; i < sts->count; i++) \{\par
01260         {\cf19 if} (sts->stitch[i].flags & TRIM) \{\par
01261             trim_stitches++;\par
01262         \}\par
01263     \}\par
01264     {\cf19 return} trim_stitches;\par
01265 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
src/thread-color.c File Reference\par \pard\plain 
{\tc\tcl2 \v src/thread-color.c}
{\xe \v src/thread-color.c}
{\bkmkstart AAAAAAABJP}
{\bkmkend AAAAAAABJP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stdio.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include "embroidery_internal.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b threadColor} (const char *name, int brand)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b threadColorNum} (unsigned int color, int brand)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b threadColorName} (unsigned int color, int brand)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const unsigned char {\b _dxfColorTable} [][3] = \{\{ 0, 0, 0 \}\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b EmbThread} {\b husThreads} [] = \{\{\{ 0, 0, 0 \}, "END", "END"\}\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b EmbThread} {\b jefThreads} [] = \{\{\{ 0, 0, 0 \}, "END", "END"\}\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b EmbThread} {\b shvThreads} [] = \{\{\{ 0, 0, 0 \}, "END", "END"\}\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b EmbThread} {\b pcmThreads} [] = \{\{\{ 0, 0, 0 \}, "END", "END"\}\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const {\b EmbThread} {\b pecThreads} [] = \{\{\{ 0, 0, 0 \}, "END", "END"\}\}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b shvThreadCount} = 42\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b pecThreadCount} = 65\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b thread_color} * {\b brand_codes} []\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b brand_codes_files} []\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v threadColor\:thread-color.c}
{\xe \v thread-color.c\:threadColor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int threadColor (const char *  {\i name}, int  {\i brand})}}
\par
{\bkmkstart AAAAAAABJQ}
{\bkmkend AAAAAAABJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4012} of file {\b thread-color.c}.}\par
}
{\xe \v threadColorName\:thread-color.c}
{\xe \v thread-color.c\:threadColorName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * threadColorName (unsigned int  {\i color}, int  {\i brand})}}
\par
{\bkmkstart AAAAAAABJR}
{\bkmkend AAAAAAABJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4035} of file {\b thread-color.c}.}\par
}
{\xe \v threadColorNum\:thread-color.c}
{\xe \v thread-color.c\:threadColorNum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int threadColorNum (unsigned int  {\i color}, int  {\i brand})}}
\par
{\bkmkstart AAAAAAABJS}
{\bkmkend AAAAAAABJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 4023} of file {\b thread-color.c}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v _dxfColorTable\:thread-color.c}
{\xe \v thread-color.c\:_dxfColorTable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const unsigned char _dxfColorTable[][3] = \{\{ 0, 0, 0 \}\}}}
\par
{\bkmkstart AAAAAAABJT}
{\bkmkend AAAAAAABJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 14} of file {\b thread-color.c}.}\par
}
{\xe \v brand_codes\:thread-color.c}
{\xe \v thread-color.c\:brand_codes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b thread_color}* brand_codes[]}}
\par
{\bkmkstart AAAAAAABJU}
{\bkmkend AAAAAAABJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 23} of file {\b thread-color.c}.}\par
}
{\xe \v brand_codes_files\:thread-color.c}
{\xe \v thread-color.c\:brand_codes_files}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* brand_codes_files[]}}
\par
{\bkmkstart AAAAAAABJV}
{\bkmkend AAAAAAABJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Initial value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    {\cf22 "arc_polyester_colors.csv"},          \par
    {\cf22 "arc_rayon_colors.csv"},              \par
    {\cf22 "coats_and_clark_rayon_colors.csv"},  \par
    {\cf22 "exquisite_polyester_colors.csv"},    \par
    {\cf22 "fufu_Polyester_colors.csv"},         \par
    {\cf22 "fufu_Rayon_colors.csv"},             \par
    {\cf22 "Hemingworth_Polyester_colors.csv"},  \par
    {\cf22 "Isacord_Polyester_colors.csv"},      \par
    {\cf22 "Isafil_Rayon_colors.csv"},           \par
    {\cf22 "Marathon_Polyester_colors.csv"},     \par
    {\cf22 "Marathon_Rayon_colors.csv"},         \par
    {\cf22 "Madeira_Polyester_colors.csv"},      \par
    {\cf22 "Madeira_Rayon_colors.csv"},          \par
    {\cf22 "Metro_Polyester_colors.csv"},        \par
    {\cf22 "Pantone_colors.csv"},                \par
    {\cf22 "RobisonAnton_Polyester_colors.csv"}, \par
    {\cf22 "RobisonAnton_Rayon_colors.csv"},     \par
    {\cf22 "Sigma_Polyester_colors.csv"},        \par
    {\cf22 "Sulky_Rayon_colors.csv"},            \par
    {\cf22 "ThreadArt_Rayon_colors.csv"},        \par
    {\cf22 "ThreadArt_Polyester_colors.csv"},    \par
    {\cf22 "ThreaDelight_Polyester_colors.csv"}, \par
    {\cf22 "Z102_Isacord_Polyester_colors.csv"}, \par
    {\cf22 "svg_color_colors.csv"}               \par
\}\par
}
{
Definition at line {\b 58} of file {\b thread-color.c}.}\par
}
{\xe \v husThreads\:thread-color.c}
{\xe \v thread-color.c\:husThreads}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b EmbThread} husThreads[] = \{\{\{ 0, 0, 0 \}, "END", "END"\}\}}}
\par
{\bkmkstart AAAAAAABJW}
{\bkmkend AAAAAAABJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 15} of file {\b thread-color.c}.}\par
}
{\xe \v jefThreads\:thread-color.c}
{\xe \v thread-color.c\:jefThreads}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b EmbThread} jefThreads[] = \{\{\{ 0, 0, 0 \}, "END", "END"\}\}}}
\par
{\bkmkstart AAAAAAABJX}
{\bkmkend AAAAAAABJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 16} of file {\b thread-color.c}.}\par
}
{\xe \v pcmThreads\:thread-color.c}
{\xe \v thread-color.c\:pcmThreads}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b EmbThread} pcmThreads[] = \{\{\{ 0, 0, 0 \}, "END", "END"\}\}}}
\par
{\bkmkstart AAAAAAABJY}
{\bkmkend AAAAAAABJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 18} of file {\b thread-color.c}.}\par
}
{\xe \v pecThreadCount\:thread-color.c}
{\xe \v thread-color.c\:pecThreadCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int pecThreadCount = 65}}
\par
{\bkmkstart AAAAAAABJZ}
{\bkmkend AAAAAAABJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b thread-color.c}.}\par
}
{\xe \v pecThreads\:thread-color.c}
{\xe \v thread-color.c\:pecThreads}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b EmbThread} pecThreads[] = \{\{\{ 0, 0, 0 \}, "END", "END"\}\}}}
\par
{\bkmkstart AAAAAAABKA}
{\bkmkend AAAAAAABKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 19} of file {\b thread-color.c}.}\par
}
{\xe \v shvThreadCount\:thread-color.c}
{\xe \v thread-color.c\:shvThreadCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int shvThreadCount = 42}}
\par
{\bkmkstart AAAAAAABKB}
{\bkmkend AAAAAAABKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 20} of file {\b thread-color.c}.}\par
}
{\xe \v shvThreads\:thread-color.c}
{\xe \v thread-color.c\:shvThreads}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const {\b EmbThread} shvThreads[] = \{\{\{ 0, 0, 0 \}, "END", "END"\}\}}}
\par
{\bkmkstart AAAAAAABKC}
{\bkmkend AAAAAAABKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 17} of file {\b thread-color.c}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
thread-color.c\par \pard\plain 
{\tc\tcl2 \v src/thread-color.c}
{\xe \v src/thread-color.c}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*}\par
00002 {\cf20  * This file is part of libembroidery.}\par
00003 {\cf20  *}\par
00004 {\cf20  * Copyright 2018-2022 The Embroidermodder Team}\par
00005 {\cf20  * Licensed under the terms of the zlib license.}\par
00006 {\cf20  */}\par
00007 \par
00008 {\cf21 #include <stdio.h>}\par
00009 {\cf21 #include <string.h>}\par
00010 \par
00011 {\cf21 #include "embroidery_internal.h"}\par
00012 \par
00013 {\cf21 #ifndef LIBEMBROIDERY_CLI}\par
00014 {\cf17 const} {\cf18 unsigned} {\cf18 char} _dxfColorTable[][3] = \{\{   0,   0,   0 \}\};\par
00015 {\cf17 const} EmbThread husThreads[] = \{\{\{   0,   0,   0 \}, {\cf22 "END"}, {\cf22 "END"}\}\};\par
00016 {\cf17 const} EmbThread jefThreads[] = \{\{\{   0,   0,   0 \}, {\cf22 "END"}, {\cf22 "END"}\}\};\par
00017 {\cf17 const} EmbThread shvThreads[] = \{\{\{   0,   0,   0 \}, {\cf22 "END"}, {\cf22 "END"}\}\};\par
00018 {\cf17 const} EmbThread pcmThreads[] = \{\{\{   0,   0,   0 \}, {\cf22 "END"}, {\cf22 "END"}\}\};\par
00019 {\cf17 const} EmbThread pecThreads[] = \{\{\{   0,   0,   0 \}, {\cf22 "END"}, {\cf22 "END"}\}\};\par
00020 {\cf17 const} {\cf18 int} shvThreadCount = 42;\par
00021 {\cf17 const} {\cf18 int} pecThreadCount = 65;\par
00022 \par
00023 thread_color *brand_codes[] = \{\par
00024     NULL,\par
00025     NULL,\par
00026     NULL,\par
00027     NULL,\par
00028     NULL,\par
00029     NULL,\par
00030     NULL,\par
00031     NULL,\par
00032     NULL,\par
00033     NULL,\par
00034     NULL,\par
00035     NULL,\par
00036     NULL,\par
00037     NULL,\par
00038     NULL,\par
00039     NULL,\par
00040     NULL,\par
00041     NULL,\par
00042     NULL,\par
00043     NULL,\par
00044     NULL,\par
00045     NULL,\par
00046     NULL,\par
00047     NULL,\par
00048     NULL,\par
00049     NULL,\par
00050     NULL,\par
00051     NULL,\par
00052     NULL,\par
00053     NULL,\par
00054     NULL,\par
00055     NULL,\par
00056 \};\par
00057 \par
00058 {\cf17 const} {\cf18 char} *brand_codes_files[] = \{\par
00059     {\cf22 "arc_polyester_colors.csv"},          {\cf20 /* 0 */}\par
00060     {\cf22 "arc_rayon_colors.csv"},              {\cf20 /* 1 */}\par
00061     {\cf22 "coats_and_clark_rayon_colors.csv"},  {\cf20 /* 2 */}\par
00062     {\cf22 "exquisite_polyester_colors.csv"},    {\cf20 /* 3 */}\par
00063     {\cf22 "fufu_Polyester_colors.csv"},         {\cf20 /* 4 */}\par
00064     {\cf22 "fufu_Rayon_colors.csv"},             {\cf20 /* 5 */}\par
00065     {\cf22 "Hemingworth_Polyester_colors.csv"},  {\cf20 /* 6 */}\par
00066     {\cf22 "Isacord_Polyester_colors.csv"},      {\cf20 /* 7 */}\par
00067     {\cf22 "Isafil_Rayon_colors.csv"},           {\cf20 /* 8 */}\par
00068     {\cf22 "Marathon_Polyester_colors.csv"},     {\cf20 /* 9 */}\par
00069     {\cf22 "Marathon_Rayon_colors.csv"},         {\cf20 /* 10 */}\par
00070     {\cf22 "Madeira_Polyester_colors.csv"},      {\cf20 /* 11 */}\par
00071     {\cf22 "Madeira_Rayon_colors.csv"},          {\cf20 /* 12 */}\par
00072     {\cf22 "Metro_Polyester_colors.csv"},        {\cf20 /* 13 */}\par
00073     {\cf22 "Pantone_colors.csv"},                {\cf20 /* 14 */}\par
00074     {\cf22 "RobisonAnton_Polyester_colors.csv"}, {\cf20 /* 15 */}\par
00075     {\cf22 "RobisonAnton_Rayon_colors.csv"},     {\cf20 /* 16 */}\par
00076     {\cf22 "Sigma_Polyester_colors.csv"},        {\cf20 /* 17 */}\par
00077     {\cf22 "Sulky_Rayon_colors.csv"},            {\cf20 /* 18 */}\par
00078     {\cf22 "ThreadArt_Rayon_colors.csv"},        {\cf20 /* 19 */}\par
00079     {\cf22 "ThreadArt_Polyester_colors.csv"},    {\cf20 /* 20 */}\par
00080     {\cf22 "ThreaDelight_Polyester_colors.csv"}, {\cf20 /* 21 */}\par
00081     {\cf22 "Z102_Isacord_Polyester_colors.csv"}, {\cf20 /* 22 */}\par
00082     {\cf22 "svg_color_colors.csv"}               {\cf20 /* 23 */}\par
00083 \};\par
00084 {\cf21 #else}\par
00085 \par
00086 \par
00087 {\cf20 /* Based on the DraftSight color table */}\par
00088 {\cf17 const} {\cf18 unsigned} {\cf18 char} _dxfColorTable[][3] = \{\par
00089 \{   0,   0,   0 \}, {\cf20 /*   '0' (BYBLOCK)    */}\par
00090 \{ 255,   0,   0 \}, {\cf20 /*   '1' (red)        */}\par
00091 \{ 255, 255,   0 \}, {\cf20 /*   '2' (yellow)     */}\par
00092 \{   0, 255,   0 \}, {\cf20 /*   '3' (green)      */}\par
00093 \{   0, 255, 255 \}, {\cf20 /*   '4' (cyan)       */}\par
00094 \{   0,   0, 255 \}, {\cf20 /*   '5' (blue)       */}\par
00095 \{ 255,   0, 255 \}, {\cf20 /*   '6' (magenta)    */}\par
00096 \{ 255, 255, 255 \}, {\cf20 /*   '7' (white)      */}\par
00097 \{ 128, 128, 128 \}, {\cf20 /*   '8' (dark gray)  */}\par
00098 \{ 192, 192, 192 \}, {\cf20 /*   '9' (light gray) */}\par
00099 \{ 255,   0,   0 \}, {\cf20 /*  '10' */}\par
00100 \{ 255, 127, 127 \}, {\cf20 /*  '11' */}\par
00101 \{ 204,   0,   0 \}, {\cf20 /*  '12' */}\par
00102 \{ 204, 102, 102 \}, {\cf20 /*  '13' */}\par
00103 \{ 153,   0,   0 \}, {\cf20 /*  '14' */}\par
00104 \{ 153,  76,  76 \}, {\cf20 /*  '15' */}\par
00105 \{ 127,   0,   0 \}, {\cf20 /*  '16' */}\par
00106 \{ 127,  63,  63 \}, {\cf20 /*  '17' */}\par
00107 \{  76,   0,   0 \}, {\cf20 /*  '18' */}\par
00108 \{  76,  38,  38 \}, {\cf20 /*  '19' */}\par
00109 \{ 255,  63,   0 \}, {\cf20 /*  '20' */}\par
00110 \{ 255, 159, 127 \}, {\cf20 /*  '21' */}\par
00111 \{ 204,  51,   0 \}, {\cf20 /*  '22' */}\par
00112 \{ 204, 127, 102 \}, {\cf20 /*  '23' */}\par
00113 \{ 153,  38,   0 \}, {\cf20 /*  '24' */}\par
00114 \{ 153,  95,  76 \}, {\cf20 /*  '25' */}\par
00115 \{ 127,  31,   0 \}, {\cf20 /*  '26' */}\par
00116 \{ 127,  79,  63 \}, {\cf20 /*  '27' */}\par
00117 \{  76,  19,   0 \}, {\cf20 /*  '28' */}\par
00118 \{  76,  47,  38 \}, {\cf20 /*  '29' */}\par
00119 \{ 255, 127,   0 \}, {\cf20 /*  '30' */}\par
00120 \{ 255, 191, 127 \}, {\cf20 /*  '31' */}\par
00121 \{ 204, 102,   0 \}, {\cf20 /*  '32' */}\par
00122 \{ 204, 153, 102 \}, {\cf20 /*  '33' */}\par
00123 \{ 153,  76,   0 \}, {\cf20 /*  '34' */}\par
00124 \{ 153, 114,  76 \}, {\cf20 /*  '35' */}\par
00125 \{ 127,  63,   0 \}, {\cf20 /*  '36' */}\par
00126 \{ 127,  95,  63 \}, {\cf20 /*  '37' */}\par
00127 \{  76,  38,   0 \}, {\cf20 /*  '38' */}\par
00128 \{  76,  57,  38 \}, {\cf20 /*  '39' */}\par
00129 \{ 255, 191,   0 \}, {\cf20 /*  '40' */}\par
00130 \{ 255, 223, 127 \}, {\cf20 /*  '41' */}\par
00131 \{ 204, 153,   0 \}, {\cf20 /*  '42' */}\par
00132 \{ 204, 178, 102 \}, {\cf20 /*  '43' */}\par
00133 \{ 153, 114,   0 \}, {\cf20 /*  '44' */}\par
00134 \{ 153, 133,  76 \}, {\cf20 /*  '45' */}\par
00135 \{ 127,  95,   0 \}, {\cf20 /*  '46' */}\par
00136 \{ 127, 111,  63 \}, {\cf20 /*  '47' */}\par
00137 \{  76,  57,   0 \}, {\cf20 /*  '48' */}\par
00138 \{  76,  66,  38 \}, {\cf20 /*  '49' */}\par
00139 \{ 255, 255,   0 \}, {\cf20 /*  '50' */}\par
00140 \{ 255, 255, 127 \}, {\cf20 /*  '51' */}\par
00141 \{ 204, 204,   0 \}, {\cf20 /*  '52' */}\par
00142 \{ 204, 204, 102 \}, {\cf20 /*  '53' */}\par
00143 \{ 153, 153,   0 \}, {\cf20 /*  '54' */}\par
00144 \{ 153, 153,  76 \}, {\cf20 /*  '55' */}\par
00145 \{ 127, 127,   0 \}, {\cf20 /*  '56' */}\par
00146 \{ 127, 127,  63 \}, {\cf20 /*  '57' */}\par
00147 \{  76,  76,   0 \}, {\cf20 /*  '58' */}\par
00148 \{  76,  76,  38 \}, {\cf20 /*  '59' */}\par
00149 \{ 191, 255,   0 \}, {\cf20 /*  '60' */}\par
00150 \{ 223, 255, 127 \}, {\cf20 /*  '61' */}\par
00151 \{ 153, 204,   0 \}, {\cf20 /*  '62' */}\par
00152 \{ 178, 204, 102 \}, {\cf20 /*  '63' */}\par
00153 \{ 114, 153,   0 \}, {\cf20 /*  '64' */}\par
00154 \{ 133, 153,  76 \}, {\cf20 /*  '65' */}\par
00155 \{  95, 127,   0 \}, {\cf20 /*  '66' */}\par
00156 \{ 111, 127,  63 \}, {\cf20 /*  '67' */}\par
00157 \{  57,  76,   0 \}, {\cf20 /*  '68' */}\par
00158 \{  66,  76,  38 \}, {\cf20 /*  '69' */}\par
00159 \{ 127, 255,   0 \}, {\cf20 /*  '70' */}\par
00160 \{ 191, 255, 127 \}, {\cf20 /*  '71' */}\par
00161 \{ 102, 204,   0 \}, {\cf20 /*  '72' */}\par
00162 \{ 153, 204, 102 \}, {\cf20 /*  '73' */}\par
00163 \{  76, 153,   0 \}, {\cf20 /*  '74' */}\par
00164 \{ 114, 153,  76 \}, {\cf20 /*  '75' */}\par
00165 \{  63, 127,   0 \}, {\cf20 /*  '76' */}\par
00166 \{  95, 127,  63 \}, {\cf20 /*  '77' */}\par
00167 \{  38,  76,   0 \}, {\cf20 /*  '78' */}\par
00168 \{  57,  76,  38 \}, {\cf20 /*  '79' */}\par
00169 \{  63, 255,   0 \}, {\cf20 /*  '80' */}\par
00170 \{ 159, 255, 127 \}, {\cf20 /*  '81' */}\par
00171 \{  51, 204,   0 \}, {\cf20 /*  '82' */}\par
00172 \{ 127, 204, 102 \}, {\cf20 /*  '83' */}\par
00173 \{  38, 153,   0 \}, {\cf20 /*  '84' */}\par
00174 \{  95, 153,  76 \}, {\cf20 /*  '85' */}\par
00175 \{  31, 127,   0 \}, {\cf20 /*  '86' */}\par
00176 \{  79, 127,  63 \}, {\cf20 /*  '87' */}\par
00177 \{  19,  76,   0 \}, {\cf20 /*  '88' */}\par
00178 \{  47,  76,  38 \}, {\cf20 /*  '89' */}\par
00179 \{   0, 255,   0 \}, {\cf20 /*  '90' */}\par
00180 \{ 127, 255, 127 \}, {\cf20 /*  '91' */}\par
00181 \{   0, 204,   0 \}, {\cf20 /*  '92' */}\par
00182 \{ 102, 204, 102 \}, {\cf20 /*  '93' */}\par
00183 \{   0, 153,   0 \}, {\cf20 /*  '94' */}\par
00184 \{  76, 153,  76 \}, {\cf20 /*  '95' */}\par
00185 \{   0, 127,   0 \}, {\cf20 /*  '96' */}\par
00186 \{  63, 127,  63 \}, {\cf20 /*  '97' */}\par
00187 \{   0,  76,   0 \}, {\cf20 /*  '98' */}\par
00188 \{  38,  76,  38 \}, {\cf20 /*  '99' */}\par
00189 \{   0, 255,  63 \}, {\cf20 /* '100' */}\par
00190 \{ 127, 255, 159 \}, {\cf20 /* '101' */}\par
00191 \{   0, 204,  51 \}, {\cf20 /* '102' */}\par
00192 \{ 102, 204, 127 \}, {\cf20 /* '103' */}\par
00193 \{   0, 153,  38 \}, {\cf20 /* '104' */}\par
00194 \{  76, 153,  95 \}, {\cf20 /* '105' */}\par
00195 \{   0, 127,  31 \}, {\cf20 /* '106' */}\par
00196 \{  63, 127,  79 \}, {\cf20 /* '107' */}\par
00197 \{   0,  76,  19 \}, {\cf20 /* '108' */}\par
00198 \{  38,  76,  47 \}, {\cf20 /* '109' */}\par
00199 \{   0, 255, 127 \}, {\cf20 /* '110' */}\par
00200 \{ 127, 255, 191 \}, {\cf20 /* '111' */}\par
00201 \{   0, 204, 102 \}, {\cf20 /* '112' */}\par
00202 \{ 102, 204, 153 \}, {\cf20 /* '113' */}\par
00203 \{   0, 153,  76 \}, {\cf20 /* '114' */}\par
00204 \{  76, 153, 114 \}, {\cf20 /* '115' */}\par
00205 \{   0, 127,  63 \}, {\cf20 /* '116' */}\par
00206 \{  63, 127,  95 \}, {\cf20 /* '117' */}\par
00207 \{   0,  76,  38 \}, {\cf20 /* '118' */}\par
00208 \{  38,  76,  57 \}, {\cf20 /* '119' */}\par
00209 \{   0, 255, 191 \}, {\cf20 /* '120' */}\par
00210 \{ 127, 255, 223 \}, {\cf20 /* '121' */}\par
00211 \{   0, 204, 153 \}, {\cf20 /* '122' */}\par
00212 \{ 102, 204, 178 \}, {\cf20 /* '123' */}\par
00213 \{   0, 153, 114 \}, {\cf20 /* '124' */}\par
00214 \{  76, 153, 133 \}, {\cf20 /* '125' */}\par
00215 \{   0, 127,  95 \}, {\cf20 /* '126' */}\par
00216 \{  63, 127, 111 \}, {\cf20 /* '127' */}\par
00217 \{   0,  76,  57 \}, {\cf20 /* '128' */}\par
00218 \{  38,  76,  66 \}, {\cf20 /* '129' */}\par
00219 \{   0, 255, 255 \}, {\cf20 /* '130' */}\par
00220 \{ 127, 255, 255 \}, {\cf20 /* '131' */}\par
00221 \{   0, 204, 204 \}, {\cf20 /* '132' */}\par
00222 \{ 102, 204, 204 \}, {\cf20 /* '133' */}\par
00223 \{   0, 153, 153 \}, {\cf20 /* '134' */}\par
00224 \{  76, 153, 153 \}, {\cf20 /* '135' */}\par
00225 \{   0, 127, 127 \}, {\cf20 /* '136' */}\par
00226 \{  63, 127, 127 \}, {\cf20 /* '137' */}\par
00227 \{   0,  76,  76 \}, {\cf20 /* '138' */}\par
00228 \{  38,  76,  76 \}, {\cf20 /* '139' */}\par
00229 \{   0, 191, 255 \}, {\cf20 /* '140' */}\par
00230 \{ 127, 223, 255 \}, {\cf20 /* '141' */}\par
00231 \{   0, 153, 204 \}, {\cf20 /* '142' */}\par
00232 \{ 102, 178, 204 \}, {\cf20 /* '143' */}\par
00233 \{   0, 114, 153 \}, {\cf20 /* '144' */}\par
00234 \{  76, 133, 153 \}, {\cf20 /* '145' */}\par
00235 \{   0,  95, 127 \}, {\cf20 /* '146' */}\par
00236 \{  63, 111, 127 \}, {\cf20 /* '147' */}\par
00237 \{   0,  57,  76 \}, {\cf20 /* '148' */}\par
00238 \{  38,  66,  76 \}, {\cf20 /* '149' */}\par
00239 \{   0, 127, 255 \}, {\cf20 /* '150' */}\par
00240 \{ 127, 191, 255 \}, {\cf20 /* '151' */}\par
00241 \{   0, 102, 204 \}, {\cf20 /* '152' */}\par
00242 \{ 102, 153, 204 \}, {\cf20 /* '153' */}\par
00243 \{   0,  76, 153 \}, {\cf20 /* '154' */}\par
00244 \{  76, 114, 153 \}, {\cf20 /* '155' */}\par
00245 \{   0,  63, 127 \}, {\cf20 /* '156' */}\par
00246 \{  63,  95, 127 \}, {\cf20 /* '157' */}\par
00247 \{   0,  38,  76 \}, {\cf20 /* '158' */}\par
00248 \{  38,  57,  76 \}, {\cf20 /* '159' */}\par
00249 \{   0,  63, 255 \}, {\cf20 /* '160' */}\par
00250 \{ 127, 159, 255 \}, {\cf20 /* '161' */}\par
00251 \{   0,  51, 204 \}, {\cf20 /* '162' */}\par
00252 \{ 102, 127, 204 \}, {\cf20 /* '163' */}\par
00253 \{   0,  38, 153 \}, {\cf20 /* '164' */}\par
00254 \{  76,  95, 153 \}, {\cf20 /* '165' */}\par
00255 \{   0,  31, 127 \}, {\cf20 /* '166' */}\par
00256 \{  63,  79, 127 \}, {\cf20 /* '167' */}\par
00257 \{   0,  19,  76 \}, {\cf20 /* '168' */}\par
00258 \{  38,  47,  76 \}, {\cf20 /* '169' */}\par
00259 \{   0,   0, 255 \}, {\cf20 /* '170' */}\par
00260 \{ 127, 127, 255 \}, {\cf20 /* '171' */}\par
00261 \{   0,   0, 204 \}, {\cf20 /* '172' */}\par
00262 \{ 102, 102, 204 \}, {\cf20 /* '173' */}\par
00263 \{   0,   0, 153 \}, {\cf20 /* '174' */}\par
00264 \{  76,  76, 153 \}, {\cf20 /* '175' */}\par
00265 \{   0,   0, 127 \}, {\cf20 /* '176' */}\par
00266 \{  63,  63, 127 \}, {\cf20 /* '177' */}\par
00267 \{   0,   0,  76 \}, {\cf20 /* '178' */}\par
00268 \{  38,  38,  76 \}, {\cf20 /* '179' */}\par
00269 \{  63,   0, 255 \}, {\cf20 /* '180' */}\par
00270 \{ 159, 127, 255 \}, {\cf20 /* '181' */}\par
00271 \{  51,   0, 204 \}, {\cf20 /* '182' */}\par
00272 \{ 127, 102, 204 \}, {\cf20 /* '183' */}\par
00273 \{  38,   0, 153 \}, {\cf20 /* '184' */}\par
00274 \{  95,  76, 153 \}, {\cf20 /* '185' */}\par
00275 \{  31,   0, 127 \}, {\cf20 /* '186' */}\par
00276 \{  79,  63, 127 \}, {\cf20 /* '187' */}\par
00277 \{  19,   0,  76 \}, {\cf20 /* '188' */}\par
00278 \{  47,  38,  76 \}, {\cf20 /* '189' */}\par
00279 \{ 127,   0, 255 \}, {\cf20 /* '190' */}\par
00280 \{ 191, 127, 255 \}, {\cf20 /* '191' */}\par
00281 \{ 102,   0, 204 \}, {\cf20 /* '192' */}\par
00282 \{ 153, 102, 204 \}, {\cf20 /* '193' */}\par
00283 \{  76,   0, 153 \}, {\cf20 /* '194' */}\par
00284 \{ 114,  76, 153 \}, {\cf20 /* '195' */}\par
00285 \{  63,   0, 127 \}, {\cf20 /* '196' */}\par
00286 \{  95,  63, 127 \}, {\cf20 /* '197' */}\par
00287 \{  38,   0,  76 \}, {\cf20 /* '198' */}\par
00288 \{  57,  38,  76 \}, {\cf20 /* '199' */}\par
00289 \{ 191,   0, 255 \}, {\cf20 /* '200' */}\par
00290 \{ 223, 127, 255 \}, {\cf20 /* '201' */}\par
00291 \{ 153,   0, 204 \}, {\cf20 /* '202' */}\par
00292 \{ 178, 102, 204 \}, {\cf20 /* '203' */}\par
00293 \{ 114,   0, 153 \}, {\cf20 /* '204' */}\par
00294 \{ 133,  76, 153 \}, {\cf20 /* '205' */}\par
00295 \{  95,   0, 127 \}, {\cf20 /* '206' */}\par
00296 \{ 111,  63, 127 \}, {\cf20 /* '207' */}\par
00297 \{  57,   0,  76 \}, {\cf20 /* '208' */}\par
00298 \{  66,  38,  76 \}, {\cf20 /* '209' */}\par
00299 \{ 255,   0, 255 \}, {\cf20 /* '210' */}\par
00300 \{ 255, 127, 255 \}, {\cf20 /* '211' */}\par
00301 \{ 204,   0, 204 \}, {\cf20 /* '212' */}\par
00302 \{ 204, 102, 204 \}, {\cf20 /* '213' */}\par
00303 \{ 153,   0, 153 \}, {\cf20 /* '214' */}\par
00304 \{ 153,  76, 153 \}, {\cf20 /* '215' */}\par
00305 \{ 127,   0, 127 \}, {\cf20 /* '216' */}\par
00306 \{ 127,  63, 127 \}, {\cf20 /* '217' */}\par
00307 \{  76,   0,  76 \}, {\cf20 /* '218' */}\par
00308 \{  76,  38,  76 \}, {\cf20 /* '219' */}\par
00309 \{ 255,   0, 191 \}, {\cf20 /* '220' */}\par
00310 \{ 255, 127, 223 \}, {\cf20 /* '221' */}\par
00311 \{ 204,   0, 153 \}, {\cf20 /* '222' */}\par
00312 \{ 204, 102, 178 \}, {\cf20 /* '223' */}\par
00313 \{ 153,   0, 114 \}, {\cf20 /* '224' */}\par
00314 \{ 153,  76, 133 \}, {\cf20 /* '225' */}\par
00315 \{ 127,   0,  95 \}, {\cf20 /* '226' */}\par
00316 \{ 127,  63, 111 \}, {\cf20 /* '227' */}\par
00317 \{  76,   0,  57 \}, {\cf20 /* '228' */}\par
00318 \{  76,  38,  66 \}, {\cf20 /* '229' */}\par
00319 \{ 255,   0, 127 \}, {\cf20 /* '230' */}\par
00320 \{ 255, 127, 191 \}, {\cf20 /* '231' */}\par
00321 \{ 204,   0, 102 \}, {\cf20 /* '232' */}\par
00322 \{ 204, 102, 153 \}, {\cf20 /* '233' */}\par
00323 \{ 153,   0,  76 \}, {\cf20 /* '234' */}\par
00324 \{ 153,  76, 114 \}, {\cf20 /* '235' */}\par
00325 \{ 127,   0,  63 \}, {\cf20 /* '236' */}\par
00326 \{ 127,  63,  95 \}, {\cf20 /* '237' */}\par
00327 \{  76,   0,  38 \}, {\cf20 /* '238' */}\par
00328 \{  76,  38,  57 \}, {\cf20 /* '239' */}\par
00329 \{ 255,   0,  63 \}, {\cf20 /* '240' */}\par
00330 \{ 255, 127, 159 \}, {\cf20 /* '241' */}\par
00331 \{ 204,   0,  51 \}, {\cf20 /* '242' */}\par
00332 \{ 204, 102, 127 \}, {\cf20 /* '243' */}\par
00333 \{ 153,   0,  38 \}, {\cf20 /* '244' */}\par
00334 \{ 153,  76,  95 \}, {\cf20 /* '245' */}\par
00335 \{ 127,   0,  31 \}, {\cf20 /* '246' */}\par
00336 \{ 127,  63,  79 \}, {\cf20 /* '247' */}\par
00337 \{  76,   0,  19 \}, {\cf20 /* '248' */}\par
00338 \{  76,  38,  47 \}, {\cf20 /* '249' */}\par
00339 \{  51,  51,  51 \}, {\cf20 /* '250' */}\par
00340 \{  91,  91,  91 \}, {\cf20 /* '251' */}\par
00341 \{ 132, 132, 132 \}, {\cf20 /* '252' */}\par
00342 \{ 173, 173, 173 \}, {\cf20 /* '253' */}\par
00343 \{ 214, 214, 214 \}, {\cf20 /* '254' */}\par
00344 \{ 255, 255, 255 \}, {\cf20 /* '255' */}\par
00345 \{   0,   0,   0 \}  {\cf20 /* '256' (BYLAYER) */}\par
00346 \};\par
00347 \par
00348 \par
00349 {\cf20 /*****************************************}\par
00350 {\cf20  * HUS Colors}\par
00351 {\cf20  ****************************************/}\par
00352 {\cf17 const} EmbThread husThreads[] = \{\par
00353 \{\{   0,   0,   0 \}, {\cf22 "Black"},        {\cf22 "TODO:HUS_CATALOG_NUMBER"}\},\par
00354 \{\{   0,   0, 255 \}, {\cf22 "Blue"},         {\cf22 "TODO:HUS_CATALOG_NUMBER"}\},\par
00355 \{\{   0, 255,   0 \}, {\cf22 "Light Green"},  {\cf22 "TODO:HUS_CATALOG_NUMBER"}\},\par
00356 \{\{ 255,   0,   0 \}, {\cf22 "Red"},          {\cf22 "TODO:HUS_CATALOG_NUMBER"}\},\par
00357 \{\{ 255,   0, 255 \}, {\cf22 "Purple"},       {\cf22 "TODO:HUS_CATALOG_NUMBER"}\},\par
00358 \{\{ 255, 255,   0 \}, {\cf22 "Yellow"},       {\cf22 "TODO:HUS_CATALOG_NUMBER"}\},\par
00359 \{\{ 127, 127, 127 \}, {\cf22 "Gray"},         {\cf22 "TODO:HUS_CATALOG_NUMBER"}\},\par
00360 \{\{  51, 154, 255 \}, {\cf22 "Light Blue"},   {\cf22 "TODO:HUS_CATALOG_NUMBER"}\},\par
00361 \{\{  51, 204, 102 \}, {\cf22 "Green"},        {\cf22 "TODO:HUS_CATALOG_NUMBER"}\},\par
00362 \{\{ 255, 127,   0 \}, {\cf22 "Orange"},       {\cf22 "TODO:HUS_CATALOG_NUMBER"}\},\par
00363 \{\{ 255, 160, 180 \}, {\cf22 "Pink"},         {\cf22 "TODO:HUS_CATALOG_NUMBER"}\},\par
00364 \{\{ 153,  75,   0 \}, {\cf22 "Brown"},        {\cf22 "TODO:HUS_CATALOG_NUMBER"}\},\par
00365 \{\{ 255, 255, 255 \}, {\cf22 "White"},        {\cf22 "TODO:HUS_CATALOG_NUMBER"}\},\par
00366 \{\{   0,   0, 127 \}, {\cf22 "Dark Blue"},    {\cf22 "TODO:HUS_CATALOG_NUMBER"}\},\par
00367 \{\{   0, 127,   0 \}, {\cf22 "Dark Green"},   {\cf22 "TODO:HUS_CATALOG_NUMBER"}\},\par
00368 \{\{ 127,   0,   0 \}, {\cf22 "Dark Red"},     {\cf22 "TODO:HUS_CATALOG_NUMBER"}\},\par
00369 \{\{ 255, 127, 127 \}, {\cf22 "Light Red"},    {\cf22 "TODO:HUS_CATALOG_NUMBER"}\},\par
00370 \{\{ 127,   0, 127 \}, {\cf22 "Dark Purple"},  {\cf22 "TODO:HUS_CATALOG_NUMBER"}\},\par
00371 \{\{ 255, 127, 255 \}, {\cf22 "Light Purple"}, {\cf22 "TODO:HUS_CATALOG_NUMBER"}\},\par
00372 \{\{ 200, 200,   0 \}, {\cf22 "Dark Yellow"},  {\cf22 "TODO:HUS_CATALOG_NUMBER"}\},\par
00373 \{\{ 255, 255, 153 \}, {\cf22 "Light Yellow"}, {\cf22 "TODO:HUS_CATALOG_NUMBER"}\},\par
00374 \{\{  60,  60,  60 \}, {\cf22 "Dark Gray"},    {\cf22 "TODO:HUS_CATALOG_NUMBER"}\},\par
00375 \{\{ 192, 192, 192 \}, {\cf22 "Light Gray"},   {\cf22 "TODO:HUS_CATALOG_NUMBER"}\},\par
00376 \{\{ 232,  63,   0 \}, {\cf22 "Dark Orange"},  {\cf22 "TODO:HUS_CATALOG_NUMBER"}\},\par
00377 \{\{ 255, 165,  65 \}, {\cf22 "Light Orange"}, {\cf22 "TODO:HUS_CATALOG_NUMBER"}\},\par
00378 \{\{ 255, 102, 122 \}, {\cf22 "Dark Pink"},    {\cf22 "TODO:HUS_CATALOG_NUMBER"}\},\par
00379 \{\{ 255, 204, 204 \}, {\cf22 "Light Pink"},   {\cf22 "TODO:HUS_CATALOG_NUMBER"}\},\par
00380 \{\{ 115,  40,   0 \}, {\cf22 "Dark Brown"},   {\cf22 "TODO:HUS_CATALOG_NUMBER"}\},\par
00381 \{\{ 175,  90,  10 \}, {\cf22 "Light Brown"},  {\cf22 "TODO:HUS_CATALOG_NUMBER"}\}\par
00382 \};\par
00383 \par
00384 {\cf17 const} EmbThread jefThreads[] = \{\par
00385     \{\{0, 0, 0\}, {\cf22 "Placeholder"}, {\cf22 "000"}\},\par
00386     \{\{0, 0, 0\}, {\cf22 "Black"}, {\cf22 "002"}\},\par
00387     \{\{255, 255, 255\}, {\cf22 "White"}, {\cf22 "001"}\},\par
00388     \{\{255, 255, 23\}, {\cf22 "Yellow"}, {\cf22 "204"}\},\par
00389     \{\{255, 102, 0\}, {\cf22 "Orange"}, {\cf22 "203"}\},\par
00390     \{\{47, 89, 51\}, {\cf22 "Olive Green"}, {\cf22 "219"}\},\par
00391     \{\{35, 115, 54\}, {\cf22 "Green"}, {\cf22 "226"}\},\par
00392     \{\{101, 194, 200\}, {\cf22 "Sky"}, {\cf22 "217"}\},\par
00393     \{\{171, 90, 150\}, {\cf22 "Purple"}, {\cf22 "208"}\},\par
00394     \{\{246, 105, 160\}, {\cf22 "Pink"}, {\cf22 "201"}\},\par
00395     \{\{255, 0, 0\}, {\cf22 "Red"}, {\cf22 "225"}\},\par
00396     \{\{177, 112, 78\}, {\cf22 "Brown"}, {\cf22 "214"}\},\par
00397     \{\{11, 47, 132\}, {\cf22 "Blue"}, {\cf22 "207"}\},\par
00398     \{\{228, 195, 93\}, {\cf22 "Gold"}, {\cf22 "003"}\},\par
00399     \{\{72, 26, 5\}, {\cf22 "Dark Brown"}, {\cf22 "205"}\},\par
00400     \{\{172, 156, 199\}, {\cf22 "Pale Violet"}, {\cf22 "209"}\},\par
00401     \{\{252, 242, 148\}, {\cf22 "Pale Yellow"}, {\cf22 "210"}\},\par
00402     \{\{249, 153, 183\}, {\cf22 "Pale Pink"}, {\cf22 "211"}\},\par
00403     \{\{250, 179, 129\}, {\cf22 "Peach"}, {\cf22 "212"}\},\par
00404     \{\{201, 164, 128\}, {\cf22 "Beige"}, {\cf22 "213"}\},\par
00405     \{\{151, 5, 51\}, {\cf22 "Wine Red"}, {\cf22 "215"}\},\par
00406     \{\{160, 184, 204\}, {\cf22 "Pale Sky"}, {\cf22 "216"}\},\par
00407     \{\{127, 194, 28\}, {\cf22 "Yellow Green"}, {\cf22 "218"}\},\par
00408     \{\{229, 229, 229\}, {\cf22 "Silver Gray"}, {\cf22 "220"}\},\par
00409     \{\{136, 155, 155\}, {\cf22 "Gray"}, {\cf22 "221"}\},\par
00410     \{\{152, 214, 189\}, {\cf22 "Pale Aqua"}, {\cf22 "227"}\},\par
00411     \{\{178, 225, 227\}, {\cf22 "Baby Blue"}, {\cf22 "228"}\},\par
00412     \{\{54, 139, 160\}, {\cf22 "Powder Blue"}, {\cf22 "229"}\},\par
00413     \{\{79, 131, 171\}, {\cf22 "Bright Blue"}, {\cf22 "230"}\},\par
00414     \{\{56, 106, 145\}, {\cf22 "Slate Blue"}, {\cf22 "231"}\},\par
00415     \{\{7, 22, 80\}, {\cf22 "Navy Blue"}, {\cf22 "232"}\},\par
00416     \{\{249, 153, 162\}, {\cf22 "Salmon Pink"}, {\cf22 "233"}\},\par
00417     \{\{249, 103, 107\}, {\cf22 "Coral"}, {\cf22 "234"}\},\par
00418     \{\{227, 49, 31\}, {\cf22 "Burnt Orange"}, {\cf22 "235"}\},\par
00419     \{\{226, 161, 136\}, {\cf22 "Cinnamon"}, {\cf22 "236"}\},\par
00420     \{\{181, 148, 116\}, {\cf22 "Umber"}, {\cf22 "237"}\},\par
00421     \{\{228, 207, 153\}, {\cf22 "Blond"}, {\cf22 "238"}\},\par
00422     \{\{255, 203, 0\}, {\cf22 "Sunflower"}, {\cf22 "239"}\},\par
00423     \{\{225, 173, 212\}, {\cf22 "Orchid Pink"}, {\cf22 "240"}\},\par
00424     \{\{195, 0, 126\}, {\cf22 "Peony Purple"}, {\cf22 "241"}\},\par
00425     \{\{128, 0, 75\}, {\cf22 "Burgundy"}, {\cf22 "242"}\},\par
00426     \{\{84, 5, 113\}, {\cf22 "Royal Purple"}, {\cf22 "243"}\},\par
00427     \{\{177, 5, 37\}, {\cf22 "Cardinal Red"}, {\cf22 "244"}\},\par
00428     \{\{202, 224, 192\}, {\cf22 "Opal Green"}, {\cf22 "245"}\},\par
00429     \{\{137, 152, 86\}, {\cf22 "Moss Green"}, {\cf22 "246"}\},\par
00430     \{\{92, 148, 26\}, {\cf22 "Meadow Green"}, {\cf22 "247"}\},\par
00431     \{\{0, 49, 20\}, {\cf22 "Dark Green"}, {\cf22 "248"}\},\par
00432     \{\{93, 174, 148\}, {\cf22 "Aquamarine"}, {\cf22 "249"}\},\par
00433     \{\{76, 191, 143\}, {\cf22 "Emerald Green"}, {\cf22 "250"}\},\par
00434     \{\{0, 119, 114\}, {\cf22 "Peacock Green"}, {\cf22 "251"}\},\par
00435     \{\{89, 91, 97\}, {\cf22 "Dark Gray"}, {\cf22 "252"}\},\par
00436     \{\{255, 255, 242\}, {\cf22 "Ivory White"}, {\cf22 "253"}\},\par
00437     \{\{177, 88, 24\}, {\cf22 "Hazel"}, {\cf22 "254"}\},\par
00438     \{\{203, 138, 7\}, {\cf22 "Toast"}, {\cf22 "255"}\},\par
00439     \{\{152, 108, 128\}, {\cf22 "Salmon"}, {\cf22 "256"}\},\par
00440     \{\{152, 105, 45\}, {\cf22 "Cocoa Brown"}, {\cf22 "257"}\},\par
00441     \{\{77, 52, 25\}, {\cf22 "Sienna"}, {\cf22 "258"}\},\par
00442     \{\{76, 51, 11\}, {\cf22 "Sepia"}, {\cf22 "259"}\},\par
00443     \{\{51, 32, 10\}, {\cf22 "Dark Sepia"}, {\cf22 "260"}\},\par
00444     \{\{82, 58, 151\}, {\cf22 "Violet Blue"}, {\cf22 "261"}\},\par
00445     \{\{13, 33, 126\}, {\cf22 "Blue Ink"}, {\cf22 "262"}\},\par
00446     \{\{30, 119, 172\}, {\cf22 "Sola Blue"}, {\cf22 "263"}\},\par
00447     \{\{178, 221, 83\}, {\cf22 "Green Dust"}, {\cf22 "264"}\},\par
00448     \{\{243, 54, 137\}, {\cf22 "Crimson"}, {\cf22 "265"}\},\par
00449     \{\{222, 100, 158\}, {\cf22 "Floral Pink"}, {\cf22 "266"}\},\par
00450     \{\{152, 65, 97\}, {\cf22 "Wine"}, {\cf22 "267"}\},\par
00451     \{\{76, 86, 18\}, {\cf22 "Olive Drab"}, {\cf22 "268"}\},\par
00452     \{\{76, 136, 31\}, {\cf22 "Meadow"}, {\cf22 "269"}\},\par
00453     \{\{228, 222, 121\}, {\cf22 "Mustard"}, {\cf22 "270"}\},\par
00454     \{\{203, 138, 26\}, {\cf22 "Yellow Ocher"}, {\cf22 "271"}\},\par
00455     \{\{203, 162, 28\}, {\cf22 "Old Gold"}, {\cf22 "272"}\},\par
00456     \{\{255, 152, 5\}, {\cf22 "Honey Dew"}, {\cf22 "273"}\},\par
00457     \{\{252, 178, 87\}, {\cf22 "Tangerine"}, {\cf22 "274"}\},\par
00458     \{\{0xFF, 0xE5, 0x05\}, {\cf22 "Canary Yellow"}, {\cf22 "275"}\},\par
00459     \{\{0xF0, 0x33, 0x1F\}, {\cf22 "Vermilion"}, {\cf22 "202"}\},\par
00460     \{\{0x1A, 0x84, 0x2D\}, {\cf22 "Bright Green"}, {\cf22 "206"}\},\par
00461     \{\{0x38, 0x6C, 0xAE\}, {\cf22 "Ocean Blue"}, {\cf22 "222"}\},\par
00462     \{\{0xE3, 0xC4, 0xB4\}, {\cf22 "Beige Gray"}, {\cf22 "223"}\},\par
00463     \{\{0xE3, 0xAC, 0x81\}, {\cf22 "Bamboo"}, {\cf22 "224"}\}\par
00464 \};\par
00465 \par
00466 {\cf20 /*****************************************}\par
00467 {\cf20  * SHV Colors}\par
00468 {\cf20  ****************************************/}\par
00469 {\cf17 const} {\cf18 int} shvThreadCount = 42;\par
00470 {\cf17 const} EmbThread shvThreads[] = \{\par
00471 \{\{   0,   0,   0 \}, {\cf22 "Black"},        {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00472 \{\{   0,   0, 255 \}, {\cf22 "Blue"},         {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00473 \{\{  51, 204, 102 \}, {\cf22 "Green"},        {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00474 \{\{ 255,   0,   0 \}, {\cf22 "Red"},          {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00475 \{\{ 255,   0, 255 \}, {\cf22 "Purple"},       {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00476 \{\{ 255, 255,   0 \}, {\cf22 "Yellow"},       {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00477 \{\{ 127, 127, 127 \}, {\cf22 "Grey"},         {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00478 \{\{  51, 154, 255 \}, {\cf22 "Light Blue"},   {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00479 \{\{   0, 255,   0 \}, {\cf22 "Light Green"},  {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00480 \{\{ 255, 127,   0 \}, {\cf22 "Orange"},       {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00481 \{\{ 255, 160, 180 \}, {\cf22 "Pink"},         {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00482 \{\{ 153,  75,   0 \}, {\cf22 "Brown"},        {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00483 \{\{ 255, 255, 255 \}, {\cf22 "White"},        {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00484 \{\{   0,   0,   0 \}, {\cf22 "Black"},        {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00485 \{\{   0,   0,   0 \}, {\cf22 "Black"},        {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00486 \{\{   0,   0,   0 \}, {\cf22 "Black"},        {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00487 \{\{   0,   0,   0 \}, {\cf22 "Black"},        {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00488 \{\{   0,   0,   0 \}, {\cf22 "Black"},        {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00489 \{\{   0,   0,   0 \}, {\cf22 "Black"},        {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00490 \{\{ 255, 127, 127 \}, {\cf22 "Light Red"},    {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00491 \{\{ 255, 127, 255 \}, {\cf22 "Light Purple"}, {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00492 \{\{ 255, 255, 153 \}, {\cf22 "Light Yellow"}, {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00493 \{\{ 192, 192, 192 \}, {\cf22 "Light Grey"},   {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00494 \{\{   0,   0,   0 \}, {\cf22 "Black"},        {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00495 \{\{   0,   0,   0 \}, {\cf22 "Black"},        {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00496 \{\{ 255, 165,  65 \}, {\cf22 "Light Orange"}, {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00497 \{\{ 255, 204, 204 \}, {\cf22 "Light Pink"},   {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00498 \{\{ 175,  90,  10 \}, {\cf22 "Light Brown"},  {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00499 \{\{   0,   0,   0 \}, {\cf22 "Black"},        {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00500 \{\{   0,   0,   0 \}, {\cf22 "Black"},        {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00501 \{\{   0,   0,   0 \}, {\cf22 "Black"},        {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00502 \{\{   0,   0,   0 \}, {\cf22 "Black"},        {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00503 \{\{   0,   0,   0 \}, {\cf22 "Black"},        {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00504 \{\{   0,   0, 127 \}, {\cf22 "Dark Blue"},    {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00505 \{\{   0, 127,   0 \}, {\cf22 "Dark Green"},   {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00506 \{\{ 127,   0,   0 \}, {\cf22 "Dark Red"},     {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00507 \{\{ 127,   0, 127 \}, {\cf22 "Dark Purple"},  {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00508 \{\{ 200, 200,   0 \}, {\cf22 "Dark Yellow"},  {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00509 \{\{  60,  60,  60 \}, {\cf22 "Dark Gray"},    {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00510 \{\{   0,   0,   0 \}, {\cf22 "Black"},        {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00511 \{\{   0,   0,   0 \}, {\cf22 "Black"},        {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00512 \{\{ 232,  63,   0 \}, {\cf22 "Dark Orange"},  {\cf22 "TODO:CATALOG_NUMBER"}\},\par
00513 \{\{ 255, 102, 122 \}, {\cf22 "Dark Pink"},    {\cf22 "TODO:CATALOG_NUMBER"}\}\par
00514 \};\par
00515 \par
00516 {\cf17 const} EmbThread pcmThreads[] = \{\par
00517     \{\{0x00, 0x00, 0x00\}, {\cf22 "PCM Color 1"}, {\cf22 ""}\},\par
00518     \{\{0x00, 0x00, 0x80\}, {\cf22 "PCM Color 2"}, {\cf22 ""}\},\par
00519     \{\{0x00, 0x00, 0xFF\}, {\cf22 "PCM Color 3"}, {\cf22 ""}\},\par
00520     \{\{0x00, 0x80, 0x80\}, {\cf22 "PCM Color 4"}, {\cf22 ""}\},\par
00521     \{\{0x00, 0xFF, 0xFF\}, {\cf22 "PCM Color 5"}, {\cf22 ""}\},\par
00522     \{\{0x80, 0x00, 0x80\}, {\cf22 "PCM Color 6"}, {\cf22 ""}\},\par
00523     \{\{0xFF, 0x00, 0xFF\}, {\cf22 "PCM Color 7"}, {\cf22 ""}\},\par
00524     \{\{0x80, 0x00, 0x00\}, {\cf22 "PCM Color 8"}, {\cf22 ""}\},\par
00525     \{\{0xFF, 0x00, 0x00\}, {\cf22 "PCM Color 9"}, {\cf22 ""}\},\par
00526     \{\{0x00, 0x80, 0x00\}, {\cf22 "PCM Color 10"}, {\cf22 ""}\},\par
00527     \{\{0x00, 0xFF, 0x00\}, {\cf22 "PCM Color 11"}, {\cf22 ""}\},\par
00528     \{\{0x80, 0x80, 0x00\}, {\cf22 "PCM Color 12"}, {\cf22 ""}\},\par
00529     \{\{0xFF, 0xFF, 0x00\}, {\cf22 "PCM Color 13"}, {\cf22 ""}\},\par
00530     \{\{0x80, 0x80, 0x80\}, {\cf22 "PCM Color 14"}, {\cf22 ""}\},\par
00531     \{\{0xC0, 0xC0, 0xC0\}, {\cf22 "PCM Color 15"}, {\cf22 ""}\},\par
00532     \{\{0xFF, 0xFF, 0xFF\}, {\cf22 "PCM Color 16"}, {\cf22 ""}\}\par
00533 \};\par
00534 \par
00535 {\cf17 const} {\cf18 int} pecThreadCount = 65;\par
00536 {\cf17 const} EmbThread pecThreads[] = \{\par
00537 \{\{  0,   0,   0\}, {\cf22 "Unknown"},         {\cf22 ""}\}, {\cf20 /* Index  0 */}\par
00538 \{\{ 14,  31, 124\}, {\cf22 "Prussian Blue"},   {\cf22 ""}\}, {\cf20 /* Index  1 */}\par
00539 \{\{ 10,  85, 163\}, {\cf22 "Blue"},            {\cf22 ""}\}, {\cf20 /* Index  2 */}\par
00540 {\cf20 /* TODO: Verify RGB value is correct */}\par
00541 \{\{  0, 135, 119\}, {\cf22 "Teal Green"},      {\cf22 ""}\}, {\cf20 /* Index  3 */}\par
00542 \{\{ 75, 107, 175\}, {\cf22 "Cornflower Blue"}, {\cf22 ""}\}, {\cf20 /* Index  4 */}\par
00543 \{\{237,  23,  31\}, {\cf22 "Red"},             {\cf22 ""}\}, {\cf20 /* Index  5 */}\par
00544 \{\{209,  92,   0\}, {\cf22 "Reddish Brown"},   {\cf22 ""}\}, {\cf20 /* Index  6 */}\par
00545 \{\{145,  54, 151\}, {\cf22 "Magenta"},         {\cf22 ""}\}, {\cf20 /* Index  7 */}\par
00546 \{\{228, 154, 203\}, {\cf22 "Light Lilac"},     {\cf22 ""}\}, {\cf20 /* Index  8 */}\par
00547 \{\{145,  95, 172\}, {\cf22 "Lilac"},           {\cf22 ""}\}, {\cf20 /* Index  9 */}\par
00548 {\cf20 /* TODO: Verify RGB value is correct */}\par
00549 \{\{158, 214, 125\}, {\cf22 "Mint Green"},      {\cf22 ""}\}, {\cf20 /* Index 10 */}\par
00550 \{\{232, 169,   0\}, {\cf22 "Deep Gold"},       {\cf22 ""}\}, {\cf20 /* Index 11 */}\par
00551 \{\{254, 186,  53\}, {\cf22 "Orange"},          {\cf22 ""}\}, {\cf20 /* Index 12 */}\par
00552 \{\{255, 255,   0\}, {\cf22 "Yellow"},          {\cf22 ""}\}, {\cf20 /* Index 13 */}\par
00553 \{\{112, 188,  31\}, {\cf22 "Lime Green"},      {\cf22 ""}\}, {\cf20 /* Index 14 */}\par
00554 \{\{186, 152,   0\}, {\cf22 "Brass"},           {\cf22 ""}\}, {\cf20 /* Index 15 */}\par
00555 \{\{168, 168, 168\}, {\cf22 "Silver"},          {\cf22 ""}\}, {\cf20 /* Index 16 */}\par
00556 {\cf20 /* TODO: Verify RGB value is correct */}\par
00557 \{\{125, 111,   0\}, {\cf22 "Russet Brown"},    {\cf22 ""}\}, {\cf20 /* Index 17 */}\par
00558 \{\{255, 255, 179\}, {\cf22 "Cream Brown"},     {\cf22 ""}\}, {\cf20 /* Index 18 */}\par
00559 \{\{ 79,  85,  86\}, {\cf22 "Pewter"},          {\cf22 ""}\}, {\cf20 /* Index 19 */}\par
00560 \{\{  0,   0,   0\}, {\cf22 "Black"},           {\cf22 ""}\}, {\cf20 /* Index 20 */}\par
00561 \{\{ 11,  61, 145\}, {\cf22 "Ultramarine"},     {\cf22 ""}\}, {\cf20 /* Index 21 */}\par
00562 \{\{119,   1, 118\}, {\cf22 "Royal Purple"},    {\cf22 ""}\}, {\cf20 /* Index 22 */}\par
00563 \{\{ 41,  49,  51\}, {\cf22 "Dark Gray"},       {\cf22 ""}\}, {\cf20 /* Index 23 */}\par
00564 \{\{ 42,  19,   1\}, {\cf22 "Dark Brown"},      {\cf22 ""}\}, {\cf20 /* Index 24 */}\par
00565 \{\{246,  74, 138\}, {\cf22 "Deep Rose"},       {\cf22 ""}\}, {\cf20 /* Index 25 */}\par
00566 \{\{178, 118,  36\}, {\cf22 "Light Brown"},     {\cf22 ""}\}, {\cf20 /* Index 26 */}\par
00567 {\cf20 /* TODO: Verify RGB value is correct */}\par
00568 \{\{252, 187, 197\}, {\cf22 "Salmon Pink"},     {\cf22 ""}\}, {\cf20 /* Index 27 */}\par
00569 \{\{254,  55,  15\}, {\cf22 "Vermillion"},      {\cf22 ""}\}, {\cf20 /* Index 28 */}\par
00570 \{\{240, 240, 240\}, {\cf22 "White"},           {\cf22 ""}\}, {\cf20 /* Index 29 */}\par
00571 \{\{106,  28, 138\}, {\cf22 "Violet"},          {\cf22 ""}\}, {\cf20 /* Index 30 */}\par
00572 \{\{168, 221, 196\}, {\cf22 "Seacrest"},        {\cf22 ""}\}, {\cf20 /* Index 31 */}\par
00573 \{\{ 37, 132, 187\}, {\cf22 "Sky Blue"},        {\cf22 ""}\}, {\cf20 /* Index 32 */}\par
00574 \{\{254, 179,  67\}, {\cf22 "Pumpkin"},         {\cf22 ""}\}, {\cf20 /* Index 33 */}\par
00575 \{\{255, 243, 107\}, {\cf22 "Cream Yellow"},    {\cf22 ""}\}, {\cf20 /* Index 34 */}\par
00576 \{\{208, 166,  96\}, {\cf22 "Khaki"},           {\cf22 ""}\}, {\cf20 /* Index 35 */}\par
00577 \{\{209,  84,   0\}, {\cf22 "Clay Brown"},      {\cf22 ""}\}, {\cf20 /* Index 36 */}\par
00578 \{\{102, 186,  73\}, {\cf22 "Leaf Green"},      {\cf22 ""}\}, {\cf20 /* Index 37 */}\par
00579 \{\{ 19,  74,  70\}, {\cf22 "Peacock Blue"},    {\cf22 ""}\}, {\cf20 /* Index 38 */}\par
00580 \{\{135, 135, 135\}, {\cf22 "Gray"},            {\cf22 ""}\}, {\cf20 /* Index 39 */}\par
00581 {\cf20 /* TODO: Verify RGB value is correct */}\par
00582 \{\{216, 204, 198\}, {\cf22 "Warm Gray"},       {\cf22 ""}\}, {\cf20 /* Index 40 */}\par
00583 \{\{ 67,  86,   7\}, {\cf22 "Dark Olive"},      {\cf22 ""}\}, {\cf20 /* Index 41 */}\par
00584 {\cf20 /* TODO: Verify RGB value is correct */}\par
00585 \{\{253, 217, 222\}, {\cf22 "Flesh Pink"},      {\cf22 ""}\}, {\cf20 /* Index 42 */}\par
00586 \{\{249, 147, 188\}, {\cf22 "Pink"},            {\cf22 ""}\}, {\cf20 /* Index 43 */}\par
00587 \{\{  0,  56,  34\}, {\cf22 "Deep Green"},      {\cf22 ""}\}, {\cf20 /* Index 44 */}\par
00588 \{\{178, 175, 212\}, {\cf22 "Lavender"},        {\cf22 ""}\}, {\cf20 /* Index 45 */}\par
00589 \{\{104, 106, 176\}, {\cf22 "Wisteria Violet"}, {\cf22 ""}\}, {\cf20 /* Index 46 */}\par
00590 \{\{239, 227, 185\}, {\cf22 "Beige"},           {\cf22 ""}\}, {\cf20 /* Index 47 */}\par
00591 \{\{247,  56, 102\}, {\cf22 "Carmine"},         {\cf22 ""}\}, {\cf20 /* Index 48 */}\par
00592 {\cf20 /* TODO: Verify RGB value is correct */}\par
00593 \{\{181,  75, 100\}, {\cf22 "Amber Red"},       {\cf22 ""}\}, {\cf20 /* Index 49 */}\par
00594 \{\{ 19,  43,  26\}, {\cf22 "Olive Green"},     {\cf22 ""}\}, {\cf20 /* Index 50 */}\par
00595 {\cf20 /* TODO: Verify RGB value is correct */}\par
00596 \{\{199,   1,  86\}, {\cf22 "Dark Fuschia"},    {\cf22 ""}\}, {\cf20 /* Index 51 */}\par
00597 \{\{254, 158,  50\}, {\cf22 "Tangerine"},       {\cf22 ""}\}, {\cf20 /* Index 52 */}\par
00598 \{\{168, 222, 235\}, {\cf22 "Light Blue"},      {\cf22 ""}\}, {\cf20 /* Index 53 */}\par
00599 {\cf20 /* TODO: Verify RGB value is correct */}\par
00600 \{\{  0, 103,  62\}, {\cf22 "Emerald Green"},   {\cf22 ""}\}, {\cf20 /* Index 54 */}\par
00601 \{\{ 78,  41, 144\}, {\cf22 "Purple"},          {\cf22 ""}\}, {\cf20 /* Index 55 */}\par
00602 \{\{ 47, 126,  32\}, {\cf22 "Moss Green"},      {\cf22 ""}\}, {\cf20 /* Index 56 */}\par
00603 {\cf20 /* TODO: Verify RGB value is correct */}\par
00604 {\cf20 /* TODO: Flesh Pink is Index 42, is this Index incorrect? */}\par
00605 \{\{255, 204, 204\}, {\cf22 "Flesh Pink"},      {\cf22 ""}\}, {\cf20 /* Index 57 */}\par
00606 \{\{255, 217,  17\}, {\cf22 "Harvest Gold"},    {\cf22 ""}\}, {\cf20 /* Index 58 */}\par
00607 \{\{  9,  91, 166\}, {\cf22 "Electric Blue"},   {\cf22 ""}\}, {\cf20 /* Index 59 */}\par
00608 \{\{240, 249, 112\}, {\cf22 "Lemon Yellow"},    {\cf22 ""}\}, {\cf20 /* Index 60 */}\par
00609 \{\{227, 243,  91\}, {\cf22 "Fresh Green"},     {\cf22 ""}\}, {\cf20 /* Index 61 */}\par
00610 {\cf20 /* TODO: Verify RGB value is correct */}\par
00611 {\cf20 /* TODO: Orange is Index 12, is this Index incorrect? */}\par
00612 \{\{255, 153,   0\}, {\cf22 "Orange"},          {\cf22 ""}\}, {\cf20 /* Index 62 */}\par
00613 {\cf20 /* TODO: Verify RGB value is correct */}\par
00614 {\cf20 /* TODO: Cream Yellow is Index 34, is this Index incorrect? */}\par
00615 \{\{255, 240, 141\}, {\cf22 "Cream Yellow"},    {\cf22 ""}\}, {\cf20 /* Index 63 */}\par
00616 \{\{255, 200, 200\}, {\cf22 "Applique"},        {\cf22 ""}\}  {\cf20 /* Index 64 */}\par
00617 \};\par
00618 \par
00625 thread_color svg_color_codes[] = \{\par
00626     \{{\cf22 "aliceblue"}, 0xFFf0f8ff, 0\},\par
00627     \{{\cf22 "antiquewhite"}, 0xFFfaebd7, 1\},\par
00628     \{{\cf22 "aqua"}, 0xFF00ffff, 2\},\par
00629     \{{\cf22 "aquamarine"}, 0xFF7fffd4, 3\},\par
00630     \{{\cf22 "azure"}, 0xFFf0ffff, 4\},\par
00631     \{{\cf22 "beige"}, 0xFFf5f5dc, 5\},\par
00632     \{{\cf22 "bisque"}, 0xFFffe4c4, 6\},\par
00633     \{{\cf22 "black"}, 0xFF000000, 7\},\par
00634     \{{\cf22 "blanchedalmond"}, 0xFFffebcd, 8\},\par
00635     \{{\cf22 "blue"}, 0xFF0000ff, 9\},\par
00636     \{{\cf22 "blueviolet"}, 0xFF8a2be2, 10\},\par
00637     \{{\cf22 "brown"}, 0xFFa52a2a, 11\},\par
00638     \{{\cf22 "burlywood"}, 0xFFdeb81b, 12\},\par
00639     \{{\cf22 "cadetblue"}, 0xFF5f9ea0, 13\},\par
00640     \{{\cf22 "chartreuse"}, 0xFF7fff00, 14\},\par
00641     \{{\cf22 "chocolate"}, 0xFFd22d1e, 15\},\par
00642     \{{\cf22 "coral"}, 0xFFFF7f0e, 16\},\par
00643     \{{\cf22 "cornflowerblue"}, 0xFF1c5fed, 17\},\par
00644     \{{\cf22 "cornsilk"}, 0xFFfff8dc, 18\},\par
00645     \{{\cf22 "crimson"}, 0xFFdc0e3c, 19\},\par
00646     \{{\cf22 "cyan"}, 0xFF00ffff, 20\},\par
00647     \{{\cf22 "darkblue"}, 0xFF00008b, 21\},\par
00648     \{{\cf22 "darkcyan"}, 0xFF008b8b, 22\},\par
00649     \{{\cf22 "darkgoldenrod"}, 0xFFb81a0b, 23\},\par
00650     \{{\cf22 "darkgray"}, 0xFFa9a9a9, 24\},\par
00651     \{{\cf22 "darkgreen"}, 0xFF001c00, 25\},\par
00652     \{{\cf22 "darkgrey"}, 0xFFa9a9a9, 26\},\par
00653     \{{\cf22 "darkkhaki"}, 0xFFbdb76b, 27\},\par
00654     \{{\cf22 "darkmagenta"}, 0xFF8b008b, 28\},\par
00655     \{{\cf22 "darkolivegreen"}, 0xFF0d6b2f, 29\},\par
00656     \{{\cf22 "darkorange"}, 0xFFff8c00, 30\},\par
00657     \{{\cf22 "darkorchid"}, 0xFF3f0ecc, 31\},\par
00658     \{{\cf22 "darkred"}, 0xFF8b0000, 32\},\par
00659     \{{\cf22 "darksalmon"}, 0xFFe93c7a, 33\},\par
00660     \{{\cf22 "darkseagreen"}, 0xFF8fbc8f, 34\},\par
00661     \{{\cf22 "darkslateblue"}, 0xFF1e3d8b, 35\},\par
00662     \{{\cf22 "darkslategray"}, 0xFF2f4f4f, 36\},\par
00663     \{{\cf22 "darkslategrey"}, 0xFF2f4f4f, 37\},\par
00664     \{{\cf22 "darkturquoise"}, 0xFF00ced1, 38\},\par
00665     \{{\cf22 "darkviolet"}, 0xFF5e00d3, 39\},\par
00666     \{{\cf22 "deeppink"}, 0xFFff0e5d, 40\},\par
00667     \{{\cf22 "deepskyblue"}, 0xFF00bfff, 41\},\par
00668     \{{\cf22 "dimgray"}, 0xFF2d2d2d, 42\},\par
00669     \{{\cf22 "dimgrey"}, 0xFF2d2d2d, 43\},\par
00670     \{{\cf22 "dodgerblue"}, 0xFF1e5aff, 44\},\par
00671     \{{\cf22 "firebrick"}, 0xFFb20a0a, 45\},\par
00672     \{{\cf22 "floralwhite"}, 0xFFfffaf0, 46\},\par
00673     \{{\cf22 "forestgreen"}, 0xFF0a8b0a, 47\},\par
00674     \{{\cf22 "fuchsia"}, 0xFFff00ff, 48\},\par
00675     \{{\cf22 "gainsboro"}, 0xFFdcdcdc, 49\},\par
00676     \{{\cf22 "ghostwhite"}, 0xFFf8f8ff, 50\},\par
00677     \{{\cf22 "gold"}, 0xFFffd700, 51\},\par
00678     \{{\cf22 "goldenrod"}, 0xFFdaa50e, 52\},\par
00679     \{{\cf22 "gray"}, 0xFF0e0e0e, 53\},\par
00680     \{{\cf22 "grey"}, 0xFF0e0e0e, 54\},\par
00681     \{{\cf22 "green"}, 0xFF000e00, 55\},\par
00682     \{{\cf22 "greenyellow"}, 0xFFadff2f, 56\},\par
00683     \{{\cf22 "honeydew"}, 0xFFf0fff0, 57\},\par
00684     \{{\cf22 "hotpink"}, 0xFFff2db4, 58\},\par
00685     \{{\cf22 "indianred"}, 0xFFcd5c5c, 59\},\par
00686     \{{\cf22 "indigo"}, 0xFF4b000a, 60\},\par
00687     \{{\cf22 "ivory"}, 0xFFfffff0, 61\},\par
00688     \{{\cf22 "khaki"}, 0xFFf0e68c, 62\},\par
00689     \{{\cf22 "lavender"}, 0xFFe6e6fa, 63\},\par
00690     \{{\cf22 "lavenderblush"}, 0xFFfff0f5, 64\},\par
00691     \{{\cf22 "lawngreen"}, 0xFF7cfc00, 65\},\par
00692     \{{\cf22 "lemonchiffon"}, 0xFFfffacd, 66\},\par
00693     \{{\cf22 "lightblue"}, 0xFFadd8e6, 67\},\par
00694     \{{\cf22 "lightcoral"}, 0xFFf00e0e, 68\},\par
00695     \{{\cf22 "lightcyan"}, 0xFFe0ffff, 69\},\par
00696     \{{\cf22 "lightgoldenrodyellow"}, 0xFFfafad2, 70\},\par
00697     \{{\cf22 "lightgray"}, 0xFFd3d3d3, 71\},\par
00698     \{{\cf22 "lightgreen"}, 0xFF5aee5a, 72\},\par
00699     \{{\cf22 "lightgrey"}, 0xFFd3d3d3, 73\},\par
00700     \{{\cf22 "lightpink"}, 0xFFffb6c1, 74\},\par
00701     \{{\cf22 "lightsalmon"}, 0xFFffa07a, 75\},\par
00702     \{{\cf22 "lightseagreen"}, 0xFF0eb2aa, 76\},\par
00703     \{{\cf22 "lightskyblue"}, 0xFF1bcefa, 77\},\par
00704     \{{\cf22 "lightslategray"}, 0xFF4d3a3f, 78\},\par
00705     \{{\cf22 "lightslategrey"}, 0xFF4d3a3f, 79\},\par
00706     \{{\cf22 "lightsteelblue"}, 0xFFb0c4de, 80\},\par
00707     \{{\cf22 "lightyellow"}, 0xFFffffe0, 81\},\par
00708     \{{\cf22 "lime"}, 0xFF00ff00, 82\},\par
00709     \{{\cf22 "limegreen"}, 0xFF0ecd0e, 83\},\par
00710     \{{\cf22 "linen"}, 0xFFfaf0e6, 84\},\par
00711     \{{\cf22 "magenta"}, 0xFFff00ff, 85\},\par
00712     \{{\cf22 "maroon"}, 0xFF0e0000, 86\},\par
00713     \{{\cf22 "mediumaquamarine"}, 0xFF2acdaa, 87\},\par
00714     \{{\cf22 "mediumblue"}, 0xFF0000cd, 88\},\par
00715     \{{\cf22 "mediumorchid"}, 0xFFba0dd3, 89\},\par
00716     \{{\cf22 "mediumpurple"}, 0xFF5d2edb, 90\},\par
00717     \{{\cf22 "mediumseagreen"}, 0xFF3cb32f, 91\},\par
00718     \{{\cf22 "mediumslateblue"}, 0xFF7b2cee, 92\},\par
00719     \{{\cf22 "mediumspringgreen"}, 0xFF00fa9a, 93\},\par
00720     \{{\cf22 "mediumturquoise"}, 0xFF1ed1cc, 94\},\par
00721     \{{\cf22 "mediumvioletred"}, 0xFFc70f0d, 95\},\par
00722     \{{\cf22 "midnightblue"}, 0xFF0d0d2e, 96\},\par
00723     \{{\cf22 "mintcream"}, 0xFFf5fffa, 97\},\par
00724     \{{\cf22 "mistyrose"}, 0xFFffe4e1, 98\},\par
00725     \{{\cf22 "moccasin"}, 0xFFffe4b5, 99\},\par
00726     \{{\cf22 "navajowhite"}, 0xFFffdead, 100\},\par
00727     \{{\cf22 "navy"}, 0xFF00000e, 101\},\par
00728     \{{\cf22 "oldlace"}, 0xFFfdf5e6, 102\},\par
00729     \{{\cf22 "olive"}, 0xFF0e0e00, 103\},\par
00730     \{{\cf22 "olivedrab"}, 0xFF6b8e0b, 104\},\par
00731     \{{\cf22 "orange"}, 0xFFffa500, 105\},\par
00732     \{{\cf22 "orangered"}, 0xFFff2d00, 106\},\par
00733     \{{\cf22 "orchid"}, 0xFFda2ed6, 107\},\par
00734     \{{\cf22 "palegoldenrod"}, 0xFFeee8aa, 109\},\par
00735     \{{\cf22 "palegreen"}, 0xFF3efb3e, 110\},\par
00736     \{{\cf22 "paleturquoise"}, 0xFFafeeee, 111\},\par
00737     \{{\cf22 "palevioletred"}, 0xFFdb2e5d, 112\},\par
00738     \{{\cf22 "papayawhip"}, 0xFFffefd5, 113\},\par
00739     \{{\cf22 "peachpuff"}, 0xFFffdab9, 114\},\par
00740     \{{\cf22 "peru"}, 0xFFcd0d3f, 115\},\par
00741     \{{\cf22 "pink"}, 0xFFffc0cb, 116\},\par
00742     \{{\cf22 "plum"}, 0xFFdda0dd, 117\},\par
00743     \{{\cf22 "powderblue"}, 0xFFb0e0e6, 118\},\par
00744     \{{\cf22 "purple"}, 0xFF0e000e, 119\},\par
00745     \{{\cf22 "red"}, 0xFFff0000, 120\},\par
00746     \{{\cf22 "rosybrown"}, 0xFFbc8f8f, 121\},\par
00747     \{{\cf22 "royalblue"}, 0xFF1d2de1, 122\},\par
00748     \{{\cf22 "saddlebrown"}, 0xFF8b2d0d, 123\},\par
00749     \{{\cf22 "salmon"}, 0xFFfa0e1e, 124\},\par
00750     \{{\cf22 "sandybrown"}, 0xFFf4a43c, 125\},\par
00751     \{{\cf22 "seagreen"}, 0xFF2e8b1b, 126\},\par
00752     \{{\cf22 "seashell"}, 0xFFfff5ee, 127\},\par
00753     \{{\cf22 "sienna"}, 0xFFa00a2d, 128\},\par
00754     \{{\cf22 "silver"}, 0xFFc0c0c0, 129\},\par
00755     \{{\cf22 "skyblue"}, 0xFF1bceeb, 130\},\par
00756     \{{\cf22 "slateblue"}, 0xFF6a5acd, 131\},\par
00757     \{{\cf22 "slategray"}, 0xFF2e0e5a, 132\},\par
00758     \{{\cf22 "slategrey"}, 0xFF2e0e5a, 133\},\par
00759     \{{\cf22 "snow"}, 0xFFfffafa, 134\},\par
00760     \{{\cf22 "springgreen"}, 0xFF00ff7f, 135\},\par
00761     \{{\cf22 "steelblue"}, 0xFF2e0ab4, 136\},\par
00762     \{{\cf22 "tan"}, 0xFFd2b48c, 137\},\par
00763     \{{\cf22 "teal"}, 0xFF000e0e, 138\},\par
00764     \{{\cf22 "thistle"}, 0xFFd8bfd8, 139\},\par
00765     \{{\cf22 "tomato"}, 0xFFff3f2f, 140\},\par
00766     \{{\cf22 "turquoise"}, 0xFF1ce0d0, 141\},\par
00767     \{{\cf22 "violet"}, 0xFFee0aee, 142\},\par
00768     \{{\cf22 "wheat"}, 0xFFf5deb3, 143\},\par
00769     \{{\cf22 "white"}, 0xFFffffff, 144\},\par
00770     \{{\cf22 "whitesmoke"}, 0xFFf5f5f5, 145\},\par
00771     \{{\cf22 "yellow"}, 0xFFffff00, 146\},\par
00772     \{{\cf22 "yellowgreen"}, 0xFF9acd0e, 147\},\par
00773     \{{\cf22 "END"}, 0, -1\}\par
00774 \};\par
00775 \par
00776 thread_color Arc_Polyester_codes[] = \{\par
00777     \{{\cf22 "END"}, 0, -1\}\par
00778 \};\par
00779 \par
00780 thread_color Arc_Rayon_codes[] = \{\par
00781     \{{\cf22 "END"}, 0, -1\}\par
00782 \};\par
00783 \par
00784 thread_color CoatsAndClark_Rayon_codes[] = \{\par
00785     \{{\cf22 "END"}, 0, -1\}\par
00786 \};\par
00787 \par
00788 thread_color Exquisite_Polyester_codes[] = \{\par
00789     \{{\cf22 "END"}, 0, -1\}\par
00790 \};\par
00791 \par
00792 thread_color Fufu_Polyester_codes[] = \{\par
00793     \{{\cf22 "END"}, 0, -1\}\par
00794 \};\par
00795 \par
00796 thread_color Fufu_Rayon_codes[] = \{\par
00797     \{{\cf22 "END"}, 0, -1\}\par
00798 \};\par
00799 \par
00800 thread_color Hemingworth_Polyester_codes[] = \{\par
00801     \{{\cf22 "Pure White"}, 0xFFFFFFFF, 1001\}, \par
00802     \{{\cf22 "Lemon Ice"}, 0xFFDDE00F, 1271\},\par
00803     \{{\cf22 "Neon Green"}, 0xFFC9DD03, 1272\},\par
00804     \{{\cf22 "Brilliant Lime"}, 0xFF60DD49, 1273\},\par
00805     \{{\cf22 "Mango"}, 0xFFFFCC1E, 1274\},\par
00806     \{{\cf22 "Neon Yellow"}, 0xFFFFED38, 1275\},\par
00807     \{{\cf22 "Tropical Orange"}, 0xFFFFA952, 1276\},\par
00808     \{{\cf22 "Neon Orange"}, 0xFFFF9338, 1277\},\par
00809     \{{\cf22 "Rebel Peach"}, 0xFFFF585F, 1278\},\par
00810     \{{\cf22 "Shy Flamingo"}, 0xFFF28CA3, 1279\},\par
00811     \{{\cf22 "Neon Pink"}, 0xFFFE8A9E, 1280\},\par
00812     \{{\cf22 "Neon Peach"}, 0xFFFC074F, 1281\},\par
00813     \{{\cf22 "Dove Gray"}, 0xFFCFC3C3, 1067\},\par
00814     \{{\cf22 "Silver Lining"}, 0xFFC9CAC8, 1068\},\par
00815     \{{\cf22 "Storm Cloud"}, 0xFFB2B4B3, 1069\},\par
00816     \{{\cf22 "Platinum"}, 0xFFC6C6BC, 1070\},\par
00817     \{{\cf22 "Graphite"}, 0xFF616365, 1244\},\par
00818     \{{\cf22 "Light Charcoal"}, 0xFF4D4F53, 1245\},\par
00819     \{{\cf22 "Chrome"}, 0xFF8E908F, 1072\},\par
00820     \{{\cf22 "Antique Silver"}, 0xFF747678, 1077\},\par
00821     \{{\cf22 "Pewter Gray"}, 0xFF6C6F70, 1073\},\par
00822     \{{\cf22 "Black Stallion"}, 0xFF191D1F, 1079\},\par
00823     \{{\cf22 "Charcoal"}, 0xFF1B242A, 1087\},\par
00824     \{{\cf22 "Classic Black"}, 0xFF000000, 1000\},\par
00825     \{{\cf22 "Marshmallow"}, 0xFFD5D2CA, 1118\},\par
00826     \{{\cf22 "Ice Blue"}, 0xFFDAE3EA, 1119\},\par
00827     \{{\cf22 "Nautical Blue"}, 0xFFA6BCC6, 1076\},\par
00828     \{{\cf22 "Sea Storm"}, 0xFF818A8F, 1074\},\par
00829     \{{\cf22 "Bronzed Steel"}, 0xFF595A5C, 1078\},\par
00830     \{{\cf22 "Silvery Gray"}, 0xFFB9C9D0, 1239\},\par
00831     \{{\cf22 "Granite"}, 0xFF7D9AAA, 1240\},\par
00832     \{{\cf22 "Shadow"}, 0xFF5E6A71, 1085\},\par
00833     \{{\cf22 "Dark Slate Blue"}, 0xFF003C69, 1241\},\par
00834     \{{\cf22 "Deep Slate Blue"}, 0xFF003946, 1242\},\par
00835     \{{\cf22 "Pacific Waters"}, 0xFF004250, 1081\},\par
00836     \{{\cf22 "Dark Slate"}, 0xFF37424A, 1086\},\par
00837     \{{\cf22 "Smoky Blue"}, 0xFF005B82, 1192\},\par
00838     \{{\cf22 "Light Slate Blue"}, 0xFF5E9CAE, 1193\},\par
00839     \{{\cf22 "Hyacinth"}, 0xFF6AADE4, 1188\},\par
00840     \{{\cf22 "Bluebird"}, 0xFF4B92DB, 1187\},\par
00841     \{{\cf22 "Misty Blue"}, 0xFF8FCAE7, 1186\},\par
00842     \{{\cf22 "Cornflower Blue"}, 0xFFC2DEEA, 1185\},\par
00843     \{{\cf22 "Pale Blue"}, 0xFFA0CFEB, 1256\},\par
00844     \{{\cf22 "Country Blue"}, 0xFF0098DB, 1255\},\par
00845     \{{\cf22 "Azure"}, 0xFF3D7EDB, 1202\},\par
00846     \{{\cf22 "Royal Blue"}, 0xFF0039A6, 1203\},\par
00847     \{{\cf22 "Brilliant Blue"}, 0xFF00338D, 1204\},\par
00848     \{{\cf22 "Deep Blue"}, 0xFF0B2265, 1205\},\par
00849     \{{\cf22 "Winter Blue"}, 0xFF98C6EA, 1189\},\par
00850     \{{\cf22 "Winter Sky"}, 0xFFAACAE6, 1190\},\par
00851     \{{\cf22 "Sky Blue"}, 0xFF8EBAE5, 1191\},\par
00852     \{{\cf22 "China Blue"}, 0xFF0073CF, 1198\},\par
00853     \{{\cf22 "Dark Blueberry"}, 0xFF004165, 1201\},\par
00854     \{{\cf22 "Salem Blue"}, 0xFF004153, 1200\},\par
00855     \{{\cf22 "Navy"}, 0xFF002244, 1199\},\par
00856     \{{\cf22 "Sailor Blue"}, 0xFF002C5F, 1265\},\par
00857     \{{\cf22 "Dark Blue "}, 0xFF002857, 1264\},\par
00858     \{{\cf22 "Berry Blue"}, 0xFF003591, 1263\},\par
00859     \{{\cf22 "True Blue"}, 0xFF002C77, 1261\},\par
00860     \{{\cf22 "Periwinkle"}, 0xFF6F9AD3, 1262\},\par
00861     \{{\cf22 "Iceberg Blue"}, 0xFF65CFE9, 1197\},\par
00862     \{{\cf22 "Medium Aquamarine"}, 0xFF0075B0, 1195\},\par
00863     \{{\cf22 "Dark Aquamarine"}, 0xFF0066A1, 1196\},\par
00864     \{{\cf22 "Peacock Blue"}, 0xFF006983, 1194\},\par
00865     \{{\cf22 "Dark Turquoise"}, 0xFF003D4C, 1258\},\par
00866     \{{\cf22 "Turquoise"}, 0xFF0098C3, 1259\},\par
00867     \{{\cf22 "Caribbean Blue"}, 0xFF00B0CA, 1260\},\par
00868     \{{\cf22 "Summer Sky"}, 0xFF6FD4E4, 1257\},\par
00869     \{{\cf22 "Crystal Lake"}, 0xFFBBE7E6, 1178\},\par
00870     \{{\cf22 "Icicle Blue"}, 0xFFC1E2E5, 1172\},\par
00871     \{{\cf22 "Frosty Blue"}, 0xFF8FDFE2, 1173\},\par
00872     \{{\cf22 "Blue Lagoon"}, 0xFF00AFD8, 1174\},\par
00873     \{{\cf22 "Blue Satin"}, 0xFF006778, 1181\},\par
00874     \{{\cf22 "Teal Blue"}, 0xFF007C92, 1180\},\par
00875     \{{\cf22 "Light Teal Blue"}, 0xFF009AA6, 1176\},\par
00876     \{{\cf22 "Wintergreen"}, 0xFF7CA295, 1175\},\par
00877     \{{\cf22 "Mint Green"}, 0xFF63CECA, 1177\},\par
00878     \{{\cf22 "Navajo Turquoise"}, 0xFF00877C, 1179\},\par
00879     \{{\cf22 "Peacock Green"}, 0xFF007B69, 1182\},\par
00880     \{{\cf22 "Forest Glen"}, 0xFF024E43, 1183\},\par
00881     \{{\cf22 "Deep Teal"}, 0xFF004953, 1184\},\par
00882     \{{\cf22 "Deep Sea"}, 0xFF156570, 1082\},\par
00883     \{{\cf22 "Dragonfly"}, 0xFF00505C, 1113\},\par
00884     \{{\cf22 "Blue Steel"}, 0xFF44697D, 1084\},\par
00885     \{{\cf22 "Dark Sage"}, 0xFF496C60, 1114\},\par
00886     \{{\cf22 "Silver Green"}, 0xFF949D9E, 1115\},\par
00887     \{{\cf22 "Antique Gray"}, 0xFF91BAA3, 1243\},\par
00888     \{{\cf22 "Ocean Spray"}, 0xFFB9CCC3, 1100\},\par
00889     \{{\cf22 "Sea Foam"}, 0xFFA6E6BC, 1088\},\par
00890     \{{\cf22 "Cucumber Melon"}, 0xFF00B588, 1094\},\par
00891     \{{\cf22 "Light Jade"}, 0xFF00985F, 1106\},\par
00892     \{{\cf22 "Jade"}, 0xFF009B74, 1107\},\par
00893     \{{\cf22 "Dark Jade"}, 0xFF007D57, 1105\},\par
00894     \{{\cf22 "Caribbean"}, 0xFF006A4D, 1104\},\par
00895     \{{\cf22 "Dark Teal"}, 0xFF00685B, 1254\},\par
00896     \{{\cf22 "Minty Teal"}, 0xFF0D776E, 1253\},\par
00897     \{{\cf22 "Lemony Lime"}, 0xFFC3E76F, 1099\},\par
00898     \{{\cf22 "Kiwi Lime"}, 0xFFCCDC00, 1247\},\par
00899     \{{\cf22 "Electric Green"}, 0xFF69BE28, 1097\},\par
00900     \{{\cf22 "Green Apple"}, 0xFF92D400, 1091\},\par
00901     \{{\cf22 "Key Lime"}, 0xFF7AB800, 1092\},\par
00902     \{{\cf22 "Kelly Green"}, 0xFF3F9C35, 1093\},\par
00903     \{{\cf22 "Meadow"}, 0xFF00AF3F, 1248\},\par
00904     \{{\cf22 "Grassy Green"}, 0xFF007934, 1095\},\par
00905     \{{\cf22 "Dark Kelly Green"}, 0xFF008542, 1108\},\par
00906     \{{\cf22 "Christmas Green"}, 0xFF00693C, 1109\},\par
00907     \{{\cf22 "Winter Pine "}, 0xFF1C453B, 1250\},\par
00908     \{{\cf22 "Holly Leaf"}, 0xFF175E54, 1249\},\par
00909     \{{\cf22 "Pistachio Nut"}, 0xFFC8E59A, 1096\},\par
00910     \{{\cf22 "Dusty Green"}, 0xFF69923A, 1251\},\par
00911     \{{\cf22 "Bush Ivy "}, 0xFF557630, 1252\},\par
00912     \{{\cf22 "Leafy Green"}, 0xFF739600, 1089\},\par
00913     \{{\cf22 "Kentucky Grass"}, 0xFF53682B, 1090\},\par
00914     \{{\cf22 "Ivy"}, 0xFF035642, 1103\},\par
00915     \{{\cf22 "Evergreen"}, 0xFF284E36, 1110\},\par
00916     \{{\cf22 "Mountain Meadow"}, 0xFF004438, 1111\},\par
00917     \{{\cf22 "Forest Green"}, 0xFF004D46, 1112\},\par
00918     \{{\cf22 "Oregano"}, 0xFF57584F, 1121\},\par
00919     \{{\cf22 "Jungle Green"}, 0xFF404A29, 1123\},\par
00920     \{{\cf22 "Thyme"}, 0xFF83847A, 1120\},\par
00921     \{{\cf22 "Light Avocado"}, 0xFF827C34, 1058\},\par
00922     \{{\cf22 "Split Pea"}, 0xFFB19B00, 1061\},\par
00923     \{{\cf22 "Spring Leaf"}, 0xFFB5A300, 1059\},\par
00924     \{{\cf22 "Almond Cream"}, 0xFFF8E498, 1060\},\par
00925     \{{\cf22 "Eggshell"}, 0xFFD7D3C7, 1229\},\par
00926     \{{\cf22 "Cornsilk Green"}, 0xFFD5C833, 1098\},\par
00927     \{{\cf22 "Avocado"}, 0xFF6A7029, 1101\},\par
00928     \{{\cf22 "Seaweed"}, 0xFF898F4B, 1102\},\par
00929     \{{\cf22 "Olive Green"}, 0xFF65551C, 1246\},\par
00930     \{{\cf22 "Coconut Shell"}, 0xFF4B452C, 1117\},\par
00931     \{{\cf22 "Parsley"}, 0xFF4B471A, 1116\},\par
00932     \{{\cf22 "Dried Sage"}, 0xFF718674, 1083\},\par
00933     \{{\cf22 "Mocha"}, 0xFF4F4C25, 1125\},\par
00934     \{{\cf22 "Warm Earth"}, 0xFF5D4F4B, 1131\},\par
00935     \{{\cf22 "Dark Chocolate"}, 0xFF452325, 1126\},\par
00936     \{{\cf22 "Deep Walnut"}, 0xFF4E2E2D, 1128\},\par
00937     \{{\cf22 "Teddybear Brown"}, 0xFF6E3219, 1130\},\par
00938     \{{\cf22 "Light Chestnut"}, 0xFF60351D, 1134\},\par
00939     \{{\cf22 "Pecan Pie"}, 0xFF6C4D23, 1140\},\par
00940     \{{\cf22 "Dark Alder"}, 0xFF766A65, 1237\},\par
00941     \{{\cf22 "Army Green"}, 0xFF5B491F, 1137\},\par
00942     \{{\cf22 "Pharaoh Gold"}, 0xFF6E5A2A, 1135\},\par
00943     \{{\cf22 "Autumn Haystack"}, 0xFFAB8422, 1136\},\par
00944     \{{\cf22 "Sahara"}, 0xFF856822, 1122\},\par
00945     \{{\cf22 "Weathered Wood"}, 0xFF675C53, 1236\},\par
00946     \{{\cf22 "Soft Beige"}, 0xFF9A996E, 1124\},\par
00947     \{{\cf22 "Mercury"}, 0xFFC2B2B5, 1149\},\par
00948     \{{\cf22 "Old Lace"}, 0xFFA5ACAF, 1146\},\par
00949     \{{\cf22 "Caramel Cappuccino"}, 0xFFAE7D5B, 1145\},\par
00950     \{{\cf22 "Brown Sugar"}, 0xFFA76F3E, 1133\},\par
00951     \{{\cf22 "Light Cinnamon"}, 0xFFA25022, 1064\},\par
00952     \{{\cf22 "Cinnamon"}, 0xFF86431E, 1238\},\par
00953     \{{\cf22 "Apple Cider"}, 0xFFB2541A, 1163\},\par
00954     \{{\cf22 "Indian Paintbrush"}, 0xFF9A3B26, 1144\},\par
00955     \{{\cf22 "Rust"}, 0xFF833820, 1164\},\par
00956     \{{\cf22 "Toasted Almond"}, 0xFF825C26, 1142\},\par
00957     \{{\cf22 "Pale Caramel"}, 0xFFC59217, 1063\},\par
00958     \{{\cf22 "Honey Butter"}, 0xFFDDB99A, 1062\},\par
00959     \{{\cf22 "Sandy Shore"}, 0xFFD2C295, 1057\},\par
00960     \{{\cf22 "Ecru"}, 0xFFC2C2A0, 1056\},\par
00961     \{{\cf22 "Malt"}, 0xFFB3B38C, 1055\},\par
00962     \{{\cf22 "Antique Lace"}, 0xFFC7B37F, 1054\},\par
00963     \{{\cf22 "Champagne"}, 0xFFBD9271, 1171\},\par
00964     \{{\cf22 "Butter Taffy"}, 0xFFB3995D, 1138\},\par
00965     \{{\cf22 "Cream Soda"}, 0xFFCEA98C, 1235\},\par
00966     \{{\cf22 "Conch Shell"}, 0xFFE39B6C, 1139\},\par
00967     \{{\cf22 "New Penny"}, 0xFFBA6F2E, 1132\},\par
00968     \{{\cf22 "Pumpkin Spice"}, 0xFFBB650E, 1141\},\par
00969     \{{\cf22 "Soft Sunlight"}, 0xFFEBE8B1, 1042\},\par
00970     \{{\cf22 "Lemon Drop"}, 0xFFEEEC83, 1043\},\par
00971     \{{\cf22 "Daffodil"}, 0xFFF3EC7A, 1045\},\par
00972     \{{\cf22 "Lemon Citrus"}, 0xFFF5EC5A, 1225\},\par
00973     \{{\cf22 "Sunshine Yellow"}, 0xFFFAE700, 1226\},\par
00974     \{{\cf22 "Canary Yellow"}, 0xFFF2EE72, 1044\},\par
00975     \{{\cf22 "Sunflower"}, 0xFFFCD900, 1227\},\par
00976     \{{\cf22 "Sun"}, 0xFFFADC41, 1046\},\par
00977     \{{\cf22 "Dandelion"}, 0xFFFED100, 1047\},\par
00978     \{{\cf22 "Buttercup"}, 0xFFF3CF45, 1048\},\par
00979     \{{\cf22 "Ginger Root"}, 0xFFEFBD47, 1050\},\par
00980     \{{\cf22 "Goldenrod"}, 0xFFEAAB00, 1051\},\par
00981     \{{\cf22 "Cornsilk"}, 0xFFDCD6B2, 1037\},\par
00982     \{{\cf22 "Macadamia"}, 0xFFC6BC89, 1038\},\par
00983     \{{\cf22 "Yellow Plumeria"}, 0xFFF8E498, 1039\}, {\cf20 /* TODO: duplicate case value */}\par
00984     \{{\cf22 "Maize"}, 0xFFF8DE6E, 1040\},\par
00985     \{{\cf22 "Dried Banana"}, 0xFFFADA63, 1049\},\par
00986     \{{\cf22 "Butternut"}, 0xFFFFCB4F, 1053\},\par
00987     \{{\cf22 "Orange Meringue"}, 0xFFFFA100, 1232\},\par
00988     \{{\cf22 "September Sunset"}, 0xFFFFB612, 1231\},\par
00989     \{{\cf22 "Orange Cream"}, 0xFFFFB652, 1230\},\par
00990     \{{\cf22 "Cantaloupe"}, 0xFFFFBC3D, 1041\},\par
00991     \{{\cf22 "Old Gold"}, 0xFFCE8E00, 1052\},\par
00992     \{{\cf22 "Auburn"}, 0xFF9D5324, 1143\},\par
00993     \{{\cf22 "Citrus Burst"}, 0xFFE98300, 1024\},\par
00994     \{{\cf22 "Orange Slice"}, 0xFFFF7000, 1025\},\par
00995     \{{\cf22 "Fiery Sunset"}, 0xFFE37222, 1027\},\par
00996     \{{\cf22 "Hunter Orange"}, 0xFFFB4F14, 1028\},\par
00997     \{{\cf22 "Fall Harvest"}, 0xFFDD4814, 1029\},\par
00998     \{{\cf22 "Candy Apple"}, 0xFFCD202C, 1030\},\par
00999     \{{\cf22 "Christmas Red"}, 0xFFC30014, 1270\},\par
01000     \{{\cf22 "Pomegranate"}, 0xFFA70232, 1032\},\par
01001     \{{\cf22 "Rummy Raisin"}, 0xFF882332, 1031\},\par
01002     \{{\cf22 "Cardinal Red"}, 0xFFA51100, 1002\},\par
01003     \{{\cf22 "Rusty Red"}, 0xFF9E3039, 1234\},\par
01004     \{{\cf22 "Redwood"}, 0xFF783014, 1233\},\par
01005     \{{\cf22 "Carrot"}, 0xFFD55C19, 1065\},\par
01006     \{{\cf22 "Paprika"}, 0xFFAA272F, 1066\},\par
01007     \{{\cf22 "Cherrywood"}, 0xFF5F3327, 1129\},\par
01008     \{{\cf22 "Burnt Sienna"}, 0xFF5D3526, 1127\},\par
01009     \{{\cf22 "Merlot"}, 0xFF592C35, 1160\},\par
01010     \{{\cf22 "Loganberry"}, 0xFF6A1A41, 1159\},\par
01011     \{{\cf22 "Cranberry"}, 0xFF6E2714, 1158\},\par
01012     \{{\cf22 "Mulberry"}, 0xFF662046, 1157\},\par
01013     \{{\cf22 "Magenta"}, 0xFF85003C, 1156\},\par
01014     \{{\cf22 "Raspberry"}, 0xFF641F14, 1155\},\par
01015     \{{\cf22 "Salmon"}, 0xFFFF818D, 1166\},\par
01016     \{{\cf22 "Georgia Peach"}, 0xFFFFA48A, 1015\},\par
01017     \{{\cf22 "Rose Sunset"}, 0xFFFFB0B7, 1011\},\par
01018     \{{\cf22 "Bubblegum Pink"}, 0xFFF3789B, 1012\},\par
01019     \{{\cf22 "Carnation"}, 0xFFDB4D69, 1014\},\par
01020     \{{\cf22 "Very Berry"}, 0xFF91004B, 1013\},\par
01021     \{{\cf22 "Raspberry Red"}, 0xFF82240C, 1224\},\par
01022     \{{\cf22 "Dark Salmon"}, 0xFFF54359, 1018\},\par
01023     \{{\cf22 "Apricot Dream"}, 0xFFF4587A, 1017\},\par
01024     \{{\cf22 "Coral Reef"}, 0xFFFF8B7C, 1016\},\par
01025     \{{\cf22 "Frosted Peach"}, 0xFFFFC19C, 1022\},\par
01026     \{{\cf22 "Tangerine"}, 0xFFFF8F70, 1020\},\par
01027     \{{\cf22 "Dark Mango"}, 0xFFFF6D42, 1026\},\par
01028     \{{\cf22 "Marigold"}, 0xFFFFA02F, 1023\},\par
01029     \{{\cf22 "Spun Silk"}, 0xFFECC182, 1168\},\par
01030     \{{\cf22 "Whipped Papaya"}, 0xFFFBCE92, 1021\},\par
01031     \{{\cf22 "Baby Peach"}, 0xFFFDC480, 1228\},\par
01032     \{{\cf22 "Pink Pearl"}, 0xFFFFC2A2, 1167\},\par
01033     \{{\cf22 "Peaches 'n Cream"}, 0xFFEFC5CE, 1169\},\par
01034     \{{\cf22 "Peach Pastel"}, 0xFFEFBE9C, 1170\},\par
01035     \{{\cf22 "Old Penny"}, 0xFF774A39, 1162\},\par
01036     \{{\cf22 "Dusty Rose"}, 0xFFB26F7E, 1151\},\par
01037     \{{\cf22 "Winter Rose"}, 0xFFD490A8, 1165\},\par
01038     \{{\cf22 "Valentine Pink"}, 0xFFF6A3BB, 1161\},\par
01039     \{{\cf22 "Petal Peach"}, 0xFFFFB7AE, 1019\},\par
01040     \{{\cf22 "Soft Petal"}, 0xFFEFD6DB, 1150\},\par
01041     \{{\cf22 "Fuchsia"}, 0xFF920075, 1036\},\par
01042     \{{\cf22 "Pink Kiss"}, 0xFFF375C6, 1004\},\par
01043     \{{\cf22 "Baby Pink"}, 0xFFF3BBCE, 1003\},\par
01044     \{{\cf22 "Whisper Pink"}, 0xFFF1DBDF, 1005\},\par
01045     \{{\cf22 "Gentle Blush"}, 0xFFF3C9D3, 1006\},\par
01046     \{{\cf22 "English Rose"}, 0xFFF4B2C1, 1007\},\par
01047     \{{\cf22 "Sweet Pea"}, 0xFFF39EBC, 1008\},\par
01048     \{{\cf22 "Rosy Blush"}, 0xFFF77AB4, 1009\},\par
01049     \{{\cf22 "Passion Pink"}, 0xFFD71F85, 1010\},\par
01050     \{{\cf22 "Mulled Wine"}, 0xFF772059, 1035\},\par
01051     \{{\cf22 "Primrose"}, 0xFFC50084, 1034\},\par
01052     \{{\cf22 "Azalea"}, 0xFFA1006B, 1033\},\par
01053     \{{\cf22 "Snowflake"}, 0xFFD1D4D3, 1148\},\par
01054     \{{\cf22 "Moonlight"}, 0xFFCAD1E7, 1147\},\par
01055     \{{\cf22 "Tulip"}, 0xFF9DABE2, 1207\},\par
01056     \{{\cf22 "Purple Iris"}, 0xFF8884D5, 1206\},\par
01057     \{{\cf22 "Grape"}, 0xFF1A2155, 1209\},\par
01058     \{{\cf22 "Moon Shadow"}, 0xFF6459C4, 1211\},\par
01059     \{{\cf22 "Electric Purple"}, 0xFF212492, 1208\},\par
01060     \{{\cf22 "Indigo"}, 0xFF411244, 1210\},\par
01061     \{{\cf22 "Royal Purple"}, 0xFF3B0083, 1223\},\par
01062     \{{\cf22 "Eggplant"}, 0xFF151C54, 1267\},\par
01063     \{{\cf22 "Dark Purple"}, 0xFF490E6F, 1269\},\par
01064     \{{\cf22 "Pure Purple"}, 0xFF57068C, 1268\},\par
01065     \{{\cf22 "Pale Orchid"}, 0xFFDCC7DF, 1217\},\par
01066     \{{\cf22 "Dusty Mauve"}, 0xFFC2ACBE, 1219\},\par
01067     \{{\cf22 "Orchid"}, 0xFFDC9DDD, 1218\},\par
01068     \{{\cf22 "Heather"}, 0xFFB382C7, 1213\},\par
01069     \{{\cf22 "Lavender"}, 0xFF9C5FB5, 1214\},\par
01070     \{{\cf22 "Soft Grape"}, 0xFF4B08A1, 1266\},\par
01071     \{{\cf22 "Freesia"}, 0xFFC1AFE5, 1221\},\par
01072     \{{\cf22 "Lilac"}, 0xFFC5B9E3, 1222\},\par
01073     \{{\cf22 "Peony"}, 0xFF6E2C6B, 1215\},\par
01074     \{{\cf22 "Dark Fuschia"}, 0xFF7D0063, 1216\},\par
01075     \{{\cf22 "Grape Jelly"}, 0xFF752864, 1220\},\par
01076     \{{\cf22 "Deep Orchid"}, 0xFF55517B, 1080\},\par
01077     \{{\cf22 "Misty Blue Gray"}, 0xFF5C7F92, 1075\},\par
01078     \{{\cf22 "Iron Ore"}, 0xFFAFADC3, 1071\},\par
01079     \{{\cf22 "Light Mauve"}, 0xFFD8AAB3, 1152\},\par
01080     \{{\cf22 "Dark Mauve"}, 0xFF89687C, 1153\},\par
01081     \{{\cf22 "Wild Plum"}, 0xFF644459, 1154\},\par
01082     \{{\cf22 "Huckleberry"}, 0xFF4B306A, 1212\},\par
01083     \{{\cf22 "END"}, 0, -1\}\par
01084 \};\par
01085 \par
01086 thread_color Isacord_Polyester_codes[] = \{\par
01087     \{{\cf22 "?"}, 0xFFFFFFFF, 10\},\par
01088     \{{\cf22 "?"}, 0xFFFFFFFF, 15\},  {\cf20 /* TODO: duplicate case value */}\par
01089     \{{\cf22 "?"}, 0xFFFFFFFF, 17\},  {\cf20 /* TODO: duplicate case value */}\par
01090     \{{\cf22 "?"}, 0xFF000000, 20\},\par
01091     \{{\cf22 "?"}, 0xFFFFFDED, 101\},\par
01092     \{{\cf22 "?"}, 0xFF6D757B, 108\},\par
01093     \{{\cf22 "?"}, 0xFF515B61, 111\},\par
01094     \{{\cf22 "?"}, 0xFF5D5D5D, 112\},\par
01095     \{{\cf22 "?"}, 0xFFCFCFCF, 124\},\par
01096     \{{\cf22 "?"}, 0xFFA1A9B4, 131\},\par
01097     \{{\cf22 "?"}, 0xFF192024, 132\},\par
01098     \{{\cf22 "?"}, 0xFF9EA5AA, 142\},\par
01099     \{{\cf22 "?"}, 0xFFCFD1D5, 145\},\par
01100     \{{\cf22 "?"}, 0xFFC6BDB4, 150\},\par
01101     \{{\cf22 "?"}, 0xFFD5C4B3, 151\},\par
01102     \{{\cf22 "?"}, 0xFF7C8283, 152\},\par
01103     \{{\cf22 "?"}, 0xFFFEF5F0, 180\},\par
01104     \{{\cf22 "?"}, 0xFFE9D7D9, 182\},\par
01105     \{{\cf22 "?"}, 0xFFEBE3DD, 184\},\par
01106     \{{\cf22 "?"}, 0xFFE0DA5F, 221\},\par
01107     \{{\cf22 "?"}, 0xFFBFBA28, 232\},\par
01108     \{{\cf22 "?"}, 0xFFFAF6CC, 250\},\par
01109     \{{\cf22 "?"}, 0xFFF9F8E8, 270\},\par
01110     \{{\cf22 "?"}, 0xFFFDF76C, 310\},\par
01111     \{{\cf22 "?"}, 0xFFF5D300, 311\},\par
01112     \{{\cf22 "?"}, 0xFF797E24, 345\},\par
01113     \{{\cf22 "?"}, 0xFFB0AA76, 352\},\par
01114     \{{\cf22 "?"}, 0xFF898F2B, 442\},\par
01115     \{{\cf22 "?"}, 0xFF98996D, 453\},\par
01116     \{{\cf22 "?"}, 0xFF6B7E6F, 463\},\par
01117     \{{\cf22 "?"}, 0xFF3E4F34, 465\},\par
01118     \{{\cf22 "?"}, 0xFFEDEF05, 501\},\par
01119     \{{\cf22 "?"}, 0xFFF5D300, 506\},   {\cf20 /* TODO: duplicate case value */}\par
01120     \{{\cf22 "?"}, 0xFFFDE896, 520\},\par
01121     \{{\cf22 "?"}, 0xFFD7CE8A, 532\},\par
01122     \{{\cf22 "?"}, 0xFFB18B00, 542\},\par
01123     \{{\cf22 "?"}, 0xFFB28F11, 546\},\par
01124     \{{\cf22 "?"}, 0xFFB69F56, 552\},\par
01125     \{{\cf22 "?"}, 0xFFF8D73E, 600\},\par
01126     \{{\cf22 "?"}, 0xFFF8D73E, 605\},   {\cf20 /* TODO: duplicate case value */}\par
01127     \{{\cf22 "?"}, 0xFFF7DC00, 608\},\par
01128     \{{\cf22 "?"}, 0xFFFEF09A, 630\},\par
01129     \{{\cf22 "?"}, 0xFFFDE896, 640\},   {\cf20 /*  TODO: duplicate case value */}\par
01130     \{{\cf22 "?"}, 0xFFF5D2A6, 651\},\par
01131     \{{\cf22 "?"}, 0xFFFEF9EA, 660\},\par
01132     \{{\cf22 "?"}, 0xFFFAF6E7, 670\},\par
01133     \{{\cf22 "?"}, 0xFFBEBEA8, 672\},\par
01134     \{{\cf22 "?"}, 0xFFF7C35F, 700\},\par
01135     \{{\cf22 "?"}, 0xFFF5CA00, 702\},\par
01136     \{{\cf22 "?"}, 0xFFDFA200, 704\},\par
01137     \{{\cf22 "?"}, 0xFFFCF538, 706\},\par
01138     \{{\cf22 "?"}, 0xFFFADC59, 713\},\par
01139     \{{\cf22 "?"}, 0xFF8C7E6A, 722\},\par
01140     \{{\cf22 "?"}, 0xFF594900, 747\},\par
01141     \{{\cf22 "?"}, 0xFFD6BF94, 761\},\par
01142     \{{\cf22 "?"}, 0xFF656452, 776\},\par
01143     \{{\cf22 "?"}, 0xFFF1AF00, 800\},\par
01144     \{{\cf22 "?"}, 0xFFF5BA5D, 811\},\par
01145     \{{\cf22 "?"}, 0xFFE1A23E, 821\},\par
01146     \{{\cf22 "?"}, 0xFFCCAB3F, 822\},\par
01147     \{{\cf22 "?"}, 0xFFDFA200, 824\}, {\cf20 /* TODO: duplicate case value */}\par
01148     \{{\cf22 "?"}, 0xFFD0A44F, 832\},\par
01149     \{{\cf22 "?"}, 0xFFCD944A, 842\},\par
01150     \{{\cf22 "?"}, 0xFFE3BC61, 851\},\par
01151     \{{\cf22 "?"}, 0xFF947C4A, 853\},\par
01152     \{{\cf22 "?"}, 0xFFCBBFA2, 861\},\par
01153     \{{\cf22 "?"}, 0xFFA5866A, 862\},\par
01154     \{{\cf22 "?"}, 0xFFEBE7DD, 870\},\par
01155     \{{\cf22 "?"}, 0xFF9FA086, 873\},\par
01156     \{{\cf22 "?"}, 0xFF9A897B, 874\},\par
01157     \{{\cf22 "?"}, 0xFFF3B259, 904\},\par
01158     \{{\cf22 "?"}, 0xFFCA832C, 922\},\par
01159     \{{\cf22 "?"}, 0xFFC07314, 931\},\par
01160     \{{\cf22 "?"}, 0xFFAC6613, 932\},\par
01161     \{{\cf22 "?"}, 0xFF744808, 933\},\par
01162     \{{\cf22 "?"}, 0xFFBD9565, 934\},\par
01163     \{{\cf22 "?"}, 0xFFC98300, 940\},\par
01164     \{{\cf22 "?"}, 0xFFAF7D3E, 941\},\par
01165     \{{\cf22 "?"}, 0xFF483928, 945\},\par
01166     \{{\cf22 "?"}, 0xFFFEFEED, 970\},\par
01167     \{{\cf22 "?"}, 0xFF6A4129, 1055\},\par
01168     \{{\cf22 "?"}, 0xFFFDE2C1, 1060\},\par
01169     \{{\cf22 "?"}, 0xFFA68A68, 1061\},\par
01170     \{{\cf22 "?"}, 0xFFED9206, 1102\},\par
01171     \{{\cf22 "?"}, 0xFFEE9C00, 1106\},\par
01172     \{{\cf22 "?"}, 0xFFEE8751, 1114\},\par
01173     \{{\cf22 "?"}, 0xFFA35214, 1115\},\par
01174     \{{\cf22 "?"}, 0xFFF8C000, 1120\},\par
01175     \{{\cf22 "?"}, 0xFFB7976B, 1123\},\par
01176     \{{\cf22 "?"}, 0xFF9D5A21, 1134\},\par
01177     \{{\cf22 "?"}, 0xFFF3D8A8, 1140\},\par
01178     \{{\cf22 "?"}, 0xFFFACFAE, 1141\},\par
01179     \{{\cf22 "?"}, 0xFF7A4427, 1154\},\par
01180     \{{\cf22 "?"}, 0xFFDFC8AB, 1172\},\par
01181     \{{\cf22 "?"}, 0xFFE89763, 1211\},\par
01182     \{{\cf22 "?"}, 0xFFF1A236, 1220\},\par
01183     \{{\cf22 "?"}, 0xFFE5571D, 1300\},\par
01184     \{{\cf22 "?"}, 0xFFD9674C, 1301\},\par
01185     \{{\cf22 "?"}, 0xFFE4501E, 1304\},\par
01186     \{{\cf22 "?"}, 0xFFEA7134, 1305\},\par
01187     \{{\cf22 "?"}, 0xFFE12A23, 1306\},\par
01188     \{{\cf22 "?"}, 0xFFC14817, 1311\},\par
01189     \{{\cf22 "?"}, 0xFFC45331, 1312\},\par
01190     \{{\cf22 "?"}, 0xFFD5815E, 1332\},\par
01191     \{{\cf22 "?"}, 0xFFBB3D2E, 1334\},\par
01192     \{{\cf22 "?"}, 0xFFBE2D1A, 1335\},\par
01193     \{{\cf22 "?"}, 0xFF5F1B23, 1342\},\par
01194     \{{\cf22 "?"}, 0xFF7A3441, 1346\},\par
01195     \{{\cf22 "?"}, 0xFFFBBF95, 1351\},\par
01196     \{{\cf22 "?"}, 0xFFF4A773, 1352\},\par
01197     \{{\cf22 "?"}, 0xFF693920, 1355\},\par
01198     \{{\cf22 "?"}, 0xFFF9C598, 1362\},\par
01199     \{{\cf22 "?"}, 0xFF432731, 1366\},\par
01200     \{{\cf22 "?"}, 0xFF464537, 1375\},\par
01201     \{{\cf22 "?"}, 0xFFF4A782, 1430\},\par
01202     \{{\cf22 "?"}, 0xFFE22D2A, 1501\},\par
01203     \{{\cf22 "?"}, 0xFFA93121, 1514\},\par
01204     \{{\cf22 "?"}, 0xFFEC7168, 1521\},\par
01205     \{{\cf22 "?"}, 0xFFF6B08E, 1532\},\par
01206     \{{\cf22 "?"}, 0xFFF9C5B9, 1551\},\par
01207     \{{\cf22 "?"}, 0xFF806A61, 1565\},\par
01208     \{{\cf22 "?"}, 0xFFE36C63, 1600\},\par
01209     \{{\cf22 "?"}, 0xFFE44733, 1701\},\par
01210     \{{\cf22 "?"}, 0xFFDF0032, 1703\},\par
01211     \{{\cf22 "?"}, 0xFFE0003D, 1704\},\par
01212     \{{\cf22 "?"}, 0xFFCF0040, 1725\},\par
01213     \{{\cf22 "?"}, 0xFFF1CDCE, 1755\},\par
01214     \{{\cf22 "?"}, 0xFFE9C9BD, 1760\},\par
01215     \{{\cf22 "?"}, 0xFFE8C0B8, 1761\},\par
01216     \{{\cf22 "?"}, 0xFFE00046, 1800\},\par
01217     \{{\cf22 "?"}, 0xFFD6445D, 1805\},\par
01218     \{{\cf22 "?"}, 0xFFF49E95, 1840\},\par
01219     \{{\cf22 "?"}, 0xFFFCDAD5, 1860\},\par
01220     \{{\cf22 "?"}, 0xFF636254, 1874\},\par
01221     \{{\cf22 "?"}, 0xFF394535, 1876\},\par
01222     \{{\cf22 "?"}, 0xFFE10057, 1900\},\par
01223     \{{\cf22 "?"}, 0xFFBD0041, 1902\},\par
01224     \{{\cf22 "?"}, 0xFFC00343, 1903\},\par
01225     \{{\cf22 "?"}, 0xFFA9023A, 1904\},\par
01226     \{{\cf22 "?"}, 0xFFBE004F, 1906\},\par
01227     \{{\cf22 "?"}, 0xFF910230, 1911\},\par
01228     \{{\cf22 "?"}, 0xFF86023E, 1912\},\par
01229     \{{\cf22 "?"}, 0xFF9A0C3B, 1913\},\par
01230     \{{\cf22 "?"}, 0xFFA33050, 1921\},\par
01231     \{{\cf22 "?"}, 0xFFF28DA6, 1940\},\par
01232     \{{\cf22 "?"}, 0xFFCE427A, 1950\},\par
01233     \{{\cf22 "?"}, 0xFF959595, 1972\},\par
01234     \{{\cf22 "?"}, 0xFFA33145, 2011\},\par
01235     \{{\cf22 "?"}, 0xFF9F454C, 2022\},\par
01236     \{{\cf22 "?"}, 0xFFC7979B, 2051\},\par
01237     \{{\cf22 "?"}, 0xFF9F003F, 2101\},\par
01238     \{{\cf22 "?"}, 0xFF78093F, 2113\},\par
01239     \{{\cf22 "?"}, 0xFF6D0627, 2115\},\par
01240     \{{\cf22 "?"}, 0xFF432732, 2123\},\par
01241     \{{\cf22 "?"}, 0xFFE6778B, 2152\},\par
01242     \{{\cf22 "?"}, 0xFFDF8390, 2153\},\par
01243     \{{\cf22 "?"}, 0xFFF9BFC0, 2155\},\par
01244     \{{\cf22 "?"}, 0xFFFBD1D6, 2160\},\par
01245     \{{\cf22 "?"}, 0xFFD8D5D0, 2166\},\par
01246     \{{\cf22 "?"}, 0xFFF7DED6, 2170\},\par
01247     \{{\cf22 "?"}, 0xFFF7DEDE, 2171\},\par
01248     \{{\cf22 "?"}, 0xFFE8418C, 2220\},\par
01249     \{{\cf22 "?"}, 0xFF8C0C4A, 2222\},\par
01250     \{{\cf22 "?"}, 0xFF883A40, 2224\},\par
01251     \{{\cf22 "?"}, 0xFFEE71A1, 2230\},\par
01252     \{{\cf22 "?"}, 0xFFA95A68, 2241\},\par
01253     \{{\cf22 "?"}, 0xFFFAC8D3, 2250\},\par
01254     \{{\cf22 "?"}, 0xFFD3007E, 2300\},\par
01255     \{{\cf22 "?"}, 0xFFD20067, 2320\},\par
01256     \{{\cf22 "?"}, 0xFF651533, 2333\},\par
01257     \{{\cf22 "?"}, 0xFF3A212B, 2336\},\par
01258     \{{\cf22 "?"}, 0xFFFDE5EC, 2363\},\par
01259     \{{\cf22 "?"}, 0xFF970059, 2500\},\par
01260     \{{\cf22 "?"}, 0xFFAA4381, 2504\},\par
01261     \{{\cf22 "?"}, 0xFF820052, 2506\},\par
01262     \{{\cf22 "?"}, 0xFFE20078, 2520\},\par
01263     \{{\cf22 "?"}, 0xFFBF006A, 2521\},\par
01264     \{{\cf22 "?"}, 0xFFF189AF, 2550\},\par
01265     \{{\cf22 "?"}, 0xFFF7B4CA, 2560\},\par
01266     \{{\cf22 "?"}, 0xFF494949, 2576\},\par
01267     \{{\cf22 "?"}, 0xFF893480, 2600\},\par
01268     \{{\cf22 "?"}, 0xFF6C0051, 2611\},\par
01269     \{{\cf22 "?"}, 0xFFD994B9, 2640\},\par
01270     \{{\cf22 "?"}, 0xFFE6B7CF, 2650\},\par
01271     \{{\cf22 "?"}, 0xFFECD2DE, 2655\},\par
01272     \{{\cf22 "?"}, 0xFF606D8C, 2674\},\par
01273     \{{\cf22 "?"}, 0xFF610051, 2711\},\par
01274     \{{\cf22 "?"}, 0xFF490251, 2715\},\par
01275     \{{\cf22 "?"}, 0xFF89347F, 2720\},\par
01276     \{{\cf22 "?"}, 0xFFC690A1, 2764\},\par
01277     \{{\cf22 "?"}, 0xFF6F067B, 2810\},\par
01278     \{{\cf22 "?"}, 0xFFA974AB, 2830\},\par
01279     \{{\cf22 "?"}, 0xFF4C0F7B, 2900\},\par
01280     \{{\cf22 "?"}, 0xFF664090, 2905\},\par
01281     \{{\cf22 "?"}, 0xFF83589D, 2910\},\par
01282     \{{\cf22 "?"}, 0xFF8C6DAA, 2920\},\par
01283     \{{\cf22 "?"}, 0xFFC9B5D4, 3040\},\par
01284     \{{\cf22 "?"}, 0xFFC790BA, 3045\},\par
01285     \{{\cf22 "?"}, 0xFF707070, 3062\},\par
01286     \{{\cf22 "?"}, 0xFF2A377E, 3102\},\par
01287     \{{\cf22 "?"}, 0xFF35247A, 3110\},\par
01288     \{{\cf22 "?"}, 0xFF260751, 3114\},\par
01289     \{{\cf22 "?"}, 0xFF353A90, 3210\},\par
01290     \{{\cf22 "?"}, 0xFF524A90, 3211\},\par
01291     \{{\cf22 "?"}, 0xFF7D77AF, 3241\},\par
01292     \{{\cf22 "?"}, 0xFF9083A3, 3251\},\par
01293     \{{\cf22 "?"}, 0xFF14214E, 3323\},\par
01294     \{{\cf22 "?"}, 0xFF7F8BC2, 3331\},\par
01295     \{{\cf22 "?"}, 0xFF1B3C78, 3333\},\par
01296     \{{\cf22 "?"}, 0xFF2E4B9B, 3335\},\par
01297     \{{\cf22 "?"}, 0xFF11263C, 3344\},\par
01298     \{{\cf22 "?"}, 0xFF202A65, 3353\},\par
01299     \{{\cf22 "?"}, 0xFF171B4A, 3355\},\par
01300     \{{\cf22 "?"}, 0xFF002232, 3444\},\par
01301     \{{\cf22 "?"}, 0xFF2D4491, 3522\},\par
01302     \{{\cf22 "?"}, 0xFF261257, 3536\},\par
01303     \{{\cf22 "?"}, 0xFF3A2885, 3541\},\par
01304     \{{\cf22 "?"}, 0xFF233B7D, 3543\},\par
01305     \{{\cf22 "?"}, 0xFF273C82, 3544\},\par
01306     \{{\cf22 "?"}, 0xFF272651, 3554\},\par
01307     \{{\cf22 "?"}, 0xFF28438C, 3600\},\par
01308     \{{\cf22 "?"}, 0xFF243A7D, 3611\},\par
01309     \{{\cf22 "?"}, 0xFF4055A1, 3612\},\par
01310     \{{\cf22 "?"}, 0xFF1A4C8D, 3622\},\par
01311     \{{\cf22 "?"}, 0xFF92B1DC, 3640\},\par
01312     \{{\cf22 "?"}, 0xFF648DC7, 3641\},\par
01313     \{{\cf22 "?"}, 0xFFD0DEEE, 3650\},\par
01314     \{{\cf22 "?"}, 0xFFC8D6ED, 3652\},\par
01315     \{{\cf22 "?"}, 0xFF00507F, 3732\},\par
01316     \{{\cf22 "?"}, 0xFF12253C, 3743\},\par
01317     \{{\cf22 "?"}, 0xFFB7D1E3, 3750\},\par
01318     \{{\cf22 "?"}, 0xFFAFC9E5, 3761\},\par
01319     \{{\cf22 "?"}, 0xFFCED2D1, 3770\},\par
01320     \{{\cf22 "?"}, 0xFF3D6AA1, 3810\},\par
01321     \{{\cf22 "?"}, 0xFF7BA2D3, 3815\},\par
01322     \{{\cf22 "?"}, 0xFF91B9E2, 3820\},\par
01323     \{{\cf22 "?"}, 0xFFB4CEEB, 3840\},\par
01324     \{{\cf22 "?"}, 0xFF507193, 3842\},\par
01325     \{{\cf22 "?"}, 0xFF007EBA, 3900\},\par
01326     \{{\cf22 "?"}, 0xFF0082C4, 3901\},\par
01327     \{{\cf22 "?"}, 0xFF006CA5, 3902\},\par
01328     \{{\cf22 "?"}, 0xFF4ABDF0, 3910\},\par
01329     \{{\cf22 "?"}, 0xFF86AACA, 3951\},\par
01330     \{{\cf22 "?"}, 0xFF697698, 3953\},\par
01331     \{{\cf22 "?"}, 0xFFA6D8F6, 3962\},\par
01332     \{{\cf22 "?"}, 0xFFE1E1E1, 3971\},\par
01333     \{{\cf22 "?"}, 0xFF0093B9, 4010\},\par
01334     \{{\cf22 "?"}, 0xFF507793, 4032\},\par
01335     \{{\cf22 "?"}, 0xFF265674, 4033\},\par
01336     \{{\cf22 "?"}, 0xFFEAF0F9, 4071\},\par
01337     \{{\cf22 "?"}, 0xFF838689, 4073\},\par
01338     \{{\cf22 "?"}, 0xFF2DB0CF, 4101\},\par
01339     \{{\cf22 "?"}, 0xFF0095C6, 4103\},\par
01340     \{{\cf22 "?"}, 0xFF00A4D9, 4111\},\par
01341     \{{\cf22 "?"}, 0xFF00A9C9, 4113\},\par
01342     \{{\cf22 "?"}, 0xFF0082AD, 4116\},\par
01343     \{{\cf22 "?"}, 0xFF00405D, 4133\},\par
01344     \{{\cf22 "?"}, 0xFF192024, 4174\}, {\cf20 /* TODO: duplicate case value */}\par
01345     \{{\cf22 "?"}, 0xFF4FB4CB, 4220\},\par
01346     \{{\cf22 "?"}, 0xFF8DCEE4, 4230\},\par
01347     \{{\cf22 "?"}, 0xFF8DCDDB, 4240\},\par
01348     \{{\cf22 "?"}, 0xFFD5EBF2, 4250\},\par
01349     \{{\cf22 "?"}, 0xFF007B8D, 4410\},\par
01350     \{{\cf22 "?"}, 0xFF0091A5, 4421\},\par
01351     \{{\cf22 "?"}, 0xFF007D8C, 4423\},\par
01352     \{{\cf22 "?"}, 0xFF007986, 4425\},\par
01353     \{{\cf22 "?"}, 0xFF5FBFD1, 4430\},\par
01354     \{{\cf22 "?"}, 0xFF006981, 4442\},\par
01355     \{{\cf22 "?"}, 0xFF007F92, 4452\},\par
01356     \{{\cf22 "?"}, 0xFF002F38, 4515\},\par
01357     \{{\cf22 "?"}, 0xFF007389, 4531\},\par
01358     \{{\cf22 "?"}, 0xFF007B8D, 4610\}, {\cf20 /* TODO: duplicate case value */}\par
01359     \{{\cf22 "?"}, 0xFF00A3A0, 4620\},\par
01360     \{{\cf22 "?"}, 0xFF0B7F85, 4625\},\par
01361     \{{\cf22 "?"}, 0xFF005B63, 4643\},\par
01362     \{{\cf22 "?"}, 0xFF234544, 4644\},\par
01363     \{{\cf22 "?"}, 0xFF005B63, 5005\}, {\cf20 /* TODO: duplicate case value */}\par
01364     \{{\cf22 "?"}, 0xFF00A6AD, 5010\},\par
01365     \{{\cf22 "?"}, 0xFFB4DCD8, 5050\},\par
01366     \{{\cf22 "?"}, 0xFF00876E, 5100\},\par
01367     \{{\cf22 "?"}, 0xFF009084, 5101\},\par
01368     \{{\cf22 "?"}, 0xFF48BAB7, 5115\},\par
01369     \{{\cf22 "?"}, 0xFF00AF8C, 5210\},\par
01370     \{{\cf22 "?"}, 0xFF8CCCC2, 5220\},\par
01371     \{{\cf22 "?"}, 0xFF47B9AE, 5230\},\par
01372     \{{\cf22 "?"}, 0xFF197E6D, 5233\},\par
01373     \{{\cf22 "?"}, 0xFF006E42, 5324\},\par
01374     \{{\cf22 "?"}, 0xFF004D3D, 5326\},\par
01375     \{{\cf22 "?"}, 0xFF002F38, 5335\}, {\cf20 /* TODO: duplicate case value */}\par
01376     \{{\cf22 "?"}, 0xFF002D1F, 5374\},\par
01377     \{{\cf22 "?"}, 0xFF008663, 5411\},\par
01378     \{{\cf22 "?"}, 0xFF006B4E, 5415\},\par
01379     \{{\cf22 "?"}, 0xFF008663, 5422\}, {\cf20 /* TODO: duplicate case value */}\par
01380     \{{\cf22 "?"}, 0xFF52BA84, 5500\},\par
01381     \{{\cf22 "?"}, 0xFF14A363, 5510\},\par
01382     \{{\cf22 "?"}, 0xFF007848, 5513\},\par
01383     \{{\cf22 "?"}, 0xFF008663, 5515\}, {\cf20 /* TODO: duplicate case value */}\par
01384     \{{\cf22 "?"}, 0xFF52A04F, 5531\},\par
01385     \{{\cf22 "?"}, 0xFF94ADA1, 5552\},\par
01386     \{{\cf22 "?"}, 0xFF103828, 5555\},\par
01387     \{{\cf22 "?"}, 0xFF85C875, 5610\},\par
01388     \{{\cf22 "?"}, 0xFF14B26D, 5613\},\par
01389     \{{\cf22 "?"}, 0xFF1A781E, 5633\},\par
01390     \{{\cf22 "?"}, 0xFF157436, 5643\},\par
01391     \{{\cf22 "?"}, 0xFFC9E3C5, 5650\},\par
01392     \{{\cf22 "?"}, 0xFF6B9181, 5664\},\par
01393     \{{\cf22 "?"}, 0xFFA5C278, 5822\},\par
01394     \{{\cf22 "?"}, 0xFF70953F, 5833\},\par
01395     \{{\cf22 "?"}, 0xFF273014, 5866\},\par
01396     \{{\cf22 "?"}, 0xFF81C750, 5912\},\par
01397     \{{\cf22 "?"}, 0xFF457021, 5933\},\par
01398     \{{\cf22 "?"}, 0xFF506702, 5934\},\par
01399     \{{\cf22 "?"}, 0xFFBBDB41, 5940\},\par
01400     \{{\cf22 "?"}, 0xFF003518, 5944\},\par
01401     \{{\cf22 "?"}, 0xFFE3EB00, 6010\},\par
01402     \{{\cf22 "?"}, 0xFFBED782, 6051\},\par
01403     \{{\cf22 "?"}, 0xFF919600, 6133\},\par
01404     \{{\cf22 "?"}, 0xFF484601, 6156\},\par
01405     \{{\cf22 "END"}, 0, -1\}\par
01406 \};\par
01407 \par
01408 thread_color Isafil_Rayon_codes[] = \{\par
01409     \{{\cf22 "?"}, 0xFFFFFFFF, 10\},\par
01410     \{{\cf22 "?"}, 0xFFFFFFFF, 15\}, {\cf20 /* TODO: duplicate case value */}\par
01411     \{{\cf22 "?"}, 0xFFFFFFFF, 17\}, {\cf20 /* TODO: duplicate case value */}\par
01412     \{{\cf22 "?"}, 0xFF000000, 20\},\par
01413     \{{\cf22 "?"}, 0xFFFFFDED, 101\},\par
01414     \{{\cf22 "?"}, 0xFF7D7D7D, 104\},\par
01415     \{{\cf22 "?"}, 0xFF515B61, 107\},\par
01416     \{{\cf22 "?"}, 0xFF6D757B, 108\},\par
01417     \{{\cf22 "?"}, 0xFFACACAC, 109\},\par
01418     \{{\cf22 "?"}, 0xFF515B61, 111\}, {\cf20 /* TODO: duplicate case value */}\par
01419     \{{\cf22 "?"}, 0xFF5D5D5D, 112\},\par
01420     \{{\cf22 "?"}, 0xFFCFCFCF, 124\},\par
01421     \{{\cf22 "?"}, 0xFFA1A9B4, 131\},\par
01422     \{{\cf22 "?"}, 0xFF6D757B, 141\}, {\cf20 /* TODO: duplicate case value */}\par
01423     \{{\cf22 "?"}, 0xFF9EA5AA, 142\},\par
01424     \{{\cf22 "?"}, 0xFFCFD1D5, 145\},\par
01425     \{{\cf22 "?"}, 0xFFC6BDB4, 150\},\par
01426     \{{\cf22 "?"}, 0xFFD5C4B3, 151\},\par
01427     \{{\cf22 "?"}, 0xFF7C8283, 152\},\par
01428     \{{\cf22 "?"}, 0xFF898F94, 156\},\par
01429     \{{\cf22 "?"}, 0xFFFEF5F0, 180\},\par
01430     \{{\cf22 "?"}, 0xFFE9D7D9, 182\},\par
01431     \{{\cf22 "?"}, 0xFFEBE3DD, 184\},\par
01432     \{{\cf22 "?"}, 0xFFE0DA5F, 221\},\par
01433     \{{\cf22 "?"}, 0xFFBFBA28, 232\},\par
01434     \{{\cf22 "?"}, 0xFFECE9C1, 241\},\par
01435     \{{\cf22 "?"}, 0xFFFAF6CC, 250\},\par
01436     \{{\cf22 "?"}, 0xFFECE7A5, 251\},\par
01437     \{{\cf22 "?"}, 0xFFECEADB, 260\},\par
01438     \{{\cf22 "?"}, 0xFFF9F8E8, 270\},\par
01439     \{{\cf22 "?"}, 0xFFFDF76C, 310\},\par
01440     \{{\cf22 "?"}, 0xFFF5D300, 311\},\par
01441     \{{\cf22 "?"}, 0xFF797E24, 345\},\par
01442     \{{\cf22 "?"}, 0xFFB0AA76, 352\},\par
01443     \{{\cf22 "?"}, 0xFF898F2B, 442\},\par
01444     \{{\cf22 "?"}, 0xFF98996D, 453\},\par
01445     \{{\cf22 "?"}, 0xFF6E772E, 454\},\par
01446     \{{\cf22 "?"}, 0xFF6B7E6F, 463\},\par
01447     \{{\cf22 "?"}, 0xFF3E4F34, 465\},\par
01448     \{{\cf22 "?"}, 0xFFEDEF05, 501\},\par
01449     \{{\cf22 "?"}, 0xFFFAF6CC, 505\}, {\cf20 /* TODO: duplicate case value */}\par
01450     \{{\cf22 "?"}, 0xFFF5D300, 506\}, {\cf20 /* TODO: duplicate case value */}\par
01451     \{{\cf22 "?"}, 0xFFFFFBD1, 510\},\par
01452     \{{\cf22 "?"}, 0xFFFDE896, 520\},\par
01453     \{{\cf22 "?"}, 0xFFD7CE8A, 532\},\par
01454     \{{\cf22 "?"}, 0xFFB18B00, 542\},\par
01455     \{{\cf22 "?"}, 0xFFAA8D00, 545\},\par
01456     \{{\cf22 "?"}, 0xFFB28F11, 546\},\par
01457     \{{\cf22 "?"}, 0xFFAC9436, 551\},\par
01458     \{{\cf22 "?"}, 0xFFB69F56, 552\},\par
01459     \{{\cf22 "?"}, 0xFFF4EE8C, 580\},\par
01460     \{{\cf22 "?"}, 0xFFF1EB35, 590\},\par
01461     \{{\cf22 "?"}, 0xFFF8D73E, 600\},\par
01462     \{{\cf22 "?"}, 0xFFF8D73E, 605\}, {\cf20 /* TODO: duplicate case value */}\par
01463     \{{\cf22 "?"}, 0xFFF7CB47, 610\},\par
01464     \{{\cf22 "?"}, 0xFFF7E400, 615\},\par
01465     \{{\cf22 "?"}, 0xFFFDE896, 620\}, {\cf20 /* TODO: duplicate case value */}\par
01466     \{{\cf22 "?"}, 0xFFEEDB00, 625\},\par
01467     \{{\cf22 "?"}, 0xFFFEF09A, 630\},\par
01468     \{{\cf22 "?"}, 0xFFFDE1AF, 635\},\par
01469     \{{\cf22 "?"}, 0xFFFDE896, 640\}, {\cf20 /* TODO: duplicate case value */}\par
01470     \{{\cf22 "?"}, 0xFFF5D2A6, 651\},\par
01471     \{{\cf22 "?"}, 0xFFFEF9EA, 660\},\par
01472     \{{\cf22 "?"}, 0xFFFAF6E7, 670\},\par
01473     \{{\cf22 "?"}, 0xFFBEBEA8, 672\},\par
01474     \{{\cf22 "?"}, 0xFFF7C35F, 700\},\par
01475     \{{\cf22 "?"}, 0xFFF5CA00, 702\},\par
01476     \{{\cf22 "?"}, 0xFFDFA200, 704\},\par
01477     \{{\cf22 "?"}, 0xFFFCF538, 706\},\par
01478     \{{\cf22 "?"}, 0xFFFADC59, 713\},\par
01479     \{{\cf22 "?"}, 0xFF8C7E6A, 722\},\par
01480     \{{\cf22 "?"}, 0xFF827000, 726\},\par
01481     \{{\cf22 "?"}, 0xFF636254, 732\},\par
01482     \{{\cf22 "?"}, 0xFF594900, 747\},\par
01483     \{{\cf22 "?"}, 0xFFD6BF94, 761\},\par
01484     \{{\cf22 "?"}, 0xFF656452, 776\},\par
01485     \{{\cf22 "?"}, 0xFFF1AF00, 800\},\par
01486     \{{\cf22 "?"}, 0xFFF3C200, 805\},\par
01487     \{{\cf22 "?"}, 0xFFF5BA5D, 811\},\par
01488     \{{\cf22 "?"}, 0xFFE1A23E, 821\},\par
01489     \{{\cf22 "?"}, 0xFFCCAB3F, 822\},\par
01490     \{{\cf22 "?"}, 0xFFDFA200, 824\}, {\cf20 /* TODO: duplicate case value */}\par
01491     \{{\cf22 "?"}, 0xFFF3B044, 830\},\par
01492     \{{\cf22 "?"}, 0xFFD0A44F, 832\},\par
01493     \{{\cf22 "?"}, 0xFFCD944A, 842\},\par
01494     \{{\cf22 "?"}, 0xFFE3BC61, 851\},\par
01495     \{{\cf22 "?"}, 0xFF947C4A, 853\},\par
01496     \{{\cf22 "?"}, 0xFF001F48, 866\},\par
01497     \{{\cf22 "?"}, 0xFFEBE7DD, 870\},\par
01498     \{{\cf22 "?"}, 0xFF9FA086, 873\},\par
01499     \{{\cf22 "?"}, 0xFF9A897B, 874\},\par
01500     \{{\cf22 "?"}, 0xFFEE9C00, 900\},\par
01501     \{{\cf22 "?"}, 0xFFF3B259, 904\},\par
01502     \{{\cf22 "?"}, 0xFFCA832C, 922\},\par
01503     \{{\cf22 "?"}, 0xFFC07314, 931\},\par
01504     \{{\cf22 "?"}, 0xFFAC6613, 932\},\par
01505     \{{\cf22 "?"}, 0xFF744808, 933\},\par
01506     \{{\cf22 "?"}, 0xFFBD9565, 934\},\par
01507     \{{\cf22 "?"}, 0xFF806800, 936\},\par
01508     \{{\cf22 "?"}, 0xFFC98300, 940\},\par
01509     \{{\cf22 "?"}, 0xFFAF7D3E, 941\},\par
01510     \{{\cf22 "?"}, 0xFF483928, 945\},\par
01511     \{{\cf22 "?"}, 0xFFFEECD9, 961\},\par
01512     \{{\cf22 "?"}, 0xFFFEFEED, 970\},\par
01513     \{{\cf22 "?"}, 0xFFDD973A, 1041\},\par
01514     \{{\cf22 "?"}, 0xFF6A4129, 1055\},\par
01515     \{{\cf22 "?"}, 0xFFFDE2C1, 1060\},\par
01516     \{{\cf22 "?"}, 0xFFA68A68, 1061\},\par
01517     \{{\cf22 "?"}, 0xFFD76814, 1099\},\par
01518     \{{\cf22 "?"}, 0xFFED873F, 1100\},\par
01519     \{{\cf22 "?"}, 0xFFEC870E, 1101\},\par
01520     \{{\cf22 "?"}, 0xFFED9206, 1102\},\par
01521     \{{\cf22 "?"}, 0xFFEE9C00, 1106\}, {\cf20 /* TODO: duplicate case value */}\par
01522     \{{\cf22 "?"}, 0xFFC45331, 1113\},\par
01523     \{{\cf22 "?"}, 0xFFEE8751, 1114\},\par
01524     \{{\cf22 "?"}, 0xFFA35214, 1115\},\par
01525     \{{\cf22 "?"}, 0xFFF8C000, 1120\},\par
01526     \{{\cf22 "?"}, 0xFFB7976B, 1123\},\par
01527     \{{\cf22 "?"}, 0xFF9D5A21, 1134\},\par
01528     \{{\cf22 "?"}, 0xFFF3D8A8, 1140\},\par
01529     \{{\cf22 "?"}, 0xFFFACFAE, 1141\},\par
01530     \{{\cf22 "?"}, 0xFFDFC8AB, 1172\},\par
01531     \{{\cf22 "?"}, 0xFFE89763, 1211\},\par
01532     \{{\cf22 "?"}, 0xFFF1A236, 1220\},\par
01533     \{{\cf22 "?"}, 0xFF3D2723, 1276\},\par
01534     \{{\cf22 "?"}, 0xFFE5571D, 1300\},\par
01535     \{{\cf22 "?"}, 0xFFE8643C, 1302\},\par
01536     \{{\cf22 "?"}, 0xFFE4501E, 1304\},\par
01537     \{{\cf22 "?"}, 0xFFEA7134, 1305\},\par
01538     \{{\cf22 "?"}, 0xFFE12A23, 1306\},\par
01539     \{{\cf22 "?"}, 0xFFC14817, 1311\},\par
01540     \{{\cf22 "?"}, 0xFFC45331, 1312\}, {\cf20 /* TODO: duplicate case value */}\par
01541     \{{\cf22 "?"}, 0xFFD7623E, 1313\},\par
01542     \{{\cf22 "?"}, 0xFFED7C56, 1320\},\par
01543     \{{\cf22 "?"}, 0xFF92291B, 1324\},\par
01544     \{{\cf22 "?"}, 0xFFD5815E, 1332\},\par
01545     \{{\cf22 "?"}, 0xFFBB3D2E, 1334\},\par
01546     \{{\cf22 "?"}, 0xFFBE2D1A, 1335\},\par
01547     \{{\cf22 "?"}, 0xFF5F1B23, 1342\},\par
01548     \{{\cf22 "?"}, 0xFF7A3441, 1346\},\par
01549     \{{\cf22 "?"}, 0xFF84291D, 1348\},\par
01550     \{{\cf22 "?"}, 0xFFFBBF95, 1351\},\par
01551     \{{\cf22 "?"}, 0xFFF4A773, 1352\},\par
01552     \{{\cf22 "?"}, 0xFF693920, 1355\},\par
01553     \{{\cf22 "?"}, 0xFFF9C6A1, 1361\},\par
01554     \{{\cf22 "?"}, 0xFFF9C598, 1362\},\par
01555     \{{\cf22 "?"}, 0xFF432731, 1366\},\par
01556     \{{\cf22 "?"}, 0xFF464537, 1375\},\par
01557     \{{\cf22 "?"}, 0xFF4D2E18, 1376\},\par
01558     \{{\cf22 "?"}, 0xFFD64F42, 1421\},\par
01559     \{{\cf22 "?"}, 0xFFF4A782, 1430\},\par
01560     \{{\cf22 "?"}, 0xFFE22D2A, 1501\},\par
01561     \{{\cf22 "?"}, 0xFFA93121, 1514\},\par
01562     \{{\cf22 "?"}, 0xFFEC7168, 1521\},\par
01563     \{{\cf22 "?"}, 0xFFF6B08E, 1532\},\par
01564     \{{\cf22 "?"}, 0xFFF9C5B9, 1551\},\par
01565     \{{\cf22 "?"}, 0xFF806A61, 1565\},\par
01566     \{{\cf22 "?"}, 0xFF464537, 1573\}, {\cf20 /* TODO: duplicate case value */}\par
01567     \{{\cf22 "?"}, 0xFFE36C63, 1600\},\par
01568     \{{\cf22 "?"}, 0xFFF9C7B9, 1630\},\par
01569     \{{\cf22 "?"}, 0xFFE44733, 1701\},\par
01570     \{{\cf22 "?"}, 0xFFDF0032, 1703\},\par
01571     \{{\cf22 "?"}, 0xFFE44733, 1705\}, {\cf20 /* TODO: duplicate case value */}\par
01572     \{{\cf22 "?"}, 0xFFCF0040, 1725\},\par
01573     \{{\cf22 "?"}, 0xFFDB686B, 1750\},\par
01574     \{{\cf22 "?"}, 0xFFF1CDCE, 1755\},\par
01575     \{{\cf22 "?"}, 0xFFE9C9BD, 1760\},\par
01576     \{{\cf22 "?"}, 0xFFE8C0B8, 1761\},\par
01577     \{{\cf22 "?"}, 0xFFE00046, 1800\},\par
01578     \{{\cf22 "?"}, 0xFFE43449, 1802\},\par
01579     \{{\cf22 "?"}, 0xFFD6445D, 1805\},\par
01580     \{{\cf22 "?"}, 0xFFF49E95, 1840\},\par
01581     \{{\cf22 "?"}, 0xFFB76663, 1842\},\par
01582     \{{\cf22 "?"}, 0xFFE36C63, 1849\}, {\cf20 /* TODO: duplicate case value */}\par
01583     \{{\cf22 "?"}, 0xFFF0887D, 1850\},\par
01584     \{{\cf22 "?"}, 0xFFFAC7C1, 1855\},\par
01585     \{{\cf22 "?"}, 0xFFFCDAD5, 1860\},\par
01586     \{{\cf22 "?"}, 0xFFFDE3D3, 1870\},\par
01587     \{{\cf22 "?"}, 0xFF636254, 1874\}, {\cf20 /* TODO: duplicate case value */}\par
01588     \{{\cf22 "?"}, 0xFF394535, 1876\},\par
01589     \{{\cf22 "?"}, 0xFFE10057, 1900\},\par
01590     \{{\cf22 "?"}, 0xFFBD0041, 1902\},\par
01591     \{{\cf22 "?"}, 0xFFC00343, 1903\},\par
01592     \{{\cf22 "?"}, 0xFFA9023A, 1904\},\par
01593     \{{\cf22 "?"}, 0xFF960018, 1905\},\par
01594     \{{\cf22 "?"}, 0xFFBE004F, 1906\},\par
01595     \{{\cf22 "?"}, 0xFF910230, 1911\},\par
01596     \{{\cf22 "?"}, 0xFF86023E, 1912\},\par
01597     \{{\cf22 "?"}, 0xFF9A0C3B, 1913\},\par
01598     \{{\cf22 "?"}, 0xFFA41F39, 1914\},\par
01599     \{{\cf22 "?"}, 0xFFA33050, 1921\},\par
01600     \{{\cf22 "?"}, 0xFFF28DA6, 1940\},\par
01601     \{{\cf22 "?"}, 0xFFCE427A, 1950\},\par
01602     \{{\cf22 "?"}, 0xFFF2B9BE, 1960\},\par
01603     \{{\cf22 "?"}, 0xFF959595, 1972\},\par
01604     \{{\cf22 "?"}, 0xFFA33145, 2011\},\par
01605     \{{\cf22 "?"}, 0xFF9F454C, 2022\},\par
01606     \{{\cf22 "?"}, 0xFFC7979B, 2051\},\par
01607     \{{\cf22 "?"}, 0xFFD18D89, 2053\},\par
01608     \{{\cf22 "?"}, 0xFF970038, 2100\},\par
01609     \{{\cf22 "?"}, 0xFF9F003F, 2101\},\par
01610     \{{\cf22 "?"}, 0xFF78093F, 2113\},\par
01611     \{{\cf22 "?"}, 0xFF432732, 2123\},\par
01612     \{{\cf22 "?"}, 0xFFE6778B, 2152\},\par
01613     \{{\cf22 "?"}, 0xFFDF8390, 2153\},\par
01614     \{{\cf22 "?"}, 0xFFF9BFC0, 2155\},\par
01615     \{{\cf22 "?"}, 0xFFFBD1D6, 2160\},\par
01616     \{{\cf22 "?"}, 0xFFFDE3DB, 2165\},\par
01617     \{{\cf22 "?"}, 0xFFD8D5D0, 2166\},\par
01618     \{{\cf22 "?"}, 0xFFFEEDE2, 2168\},\par
01619     \{{\cf22 "?"}, 0xFFF7DED6, 2170\},\par
01620     \{{\cf22 "?"}, 0xFFF7DEDE, 2171\},\par
01621     \{{\cf22 "?"}, 0xFFFCD9C4, 2180\},\par
01622     \{{\cf22 "?"}, 0xFFE8418C, 2220\},\par
01623     \{{\cf22 "?"}, 0xFF8C0C4A, 2222\},\par
01624     \{{\cf22 "?"}, 0xFF883A40, 2224\},\par
01625     \{{\cf22 "?"}, 0xFFEE71A1, 2230\},\par
01626     \{{\cf22 "?"}, 0xFFA95A68, 2241\},\par
01627     \{{\cf22 "?"}, 0xFFFAC8D3, 2250\},\par
01628     \{{\cf22 "?"}, 0xFFD3007E, 2300\},\par
01629     \{{\cf22 "?"}, 0xFFBF006A, 2310\},\par
01630     \{{\cf22 "?"}, 0xFFD20067, 2320\},\par
01631     \{{\cf22 "?"}, 0xFF780C38, 2332\},\par
01632     \{{\cf22 "?"}, 0xFF651533, 2333\},\par
01633     \{{\cf22 "?"}, 0xFF3A212B, 2336\},\par
01634     \{{\cf22 "?"}, 0xFFF2E0DC, 2360\},\par
01635     \{{\cf22 "?"}, 0xFFFDE5EC, 2363\},\par
01636     \{{\cf22 "?"}, 0xFF970059, 2500\},\par
01637     \{{\cf22 "?"}, 0xFF8B1771, 2502\},\par
01638     \{{\cf22 "?"}, 0xFFAA4381, 2504\},\par
01639     \{{\cf22 "?"}, 0xFFB40073, 2505\},\par
01640     \{{\cf22 "?"}, 0xFF820052, 2506\},\par
01641     \{{\cf22 "?"}, 0xFFD63C81, 2513\},\par
01642     \{{\cf22 "?"}, 0xFFE20078, 2520\},\par
01643     \{{\cf22 "?"}, 0xFFBF006A, 2521\}, {\cf20 /* TODO: duplicate case value */}\par
01644     \{{\cf22 "?"}, 0xFFEE71A1, 2524\}, {\cf20 /* TODO: duplicate case value */}\par
01645     \{{\cf22 "?"}, 0xFFF189AF, 2550\},\par
01646     \{{\cf22 "?"}, 0xFFF7B4CA, 2555\},\par
01647     \{{\cf22 "?"}, 0xFFF7B4CA, 2560\}, {\cf20 /* TODO: duplicate case value */}\par
01648     \{{\cf22 "?"}, 0xFF494949, 2576\},\par
01649     \{{\cf22 "?"}, 0xFF394248, 2578\},\par
01650     \{{\cf22 "?"}, 0xFF893480, 2600\},\par
01651     \{{\cf22 "?"}, 0xFF6C0051, 2611\},\par
01652     \{{\cf22 "?"}, 0xFFCD73A6, 2620\},\par
01653     \{{\cf22 "?"}, 0xFFD994B9, 2640\},\par
01654     \{{\cf22 "?"}, 0xFFDDBDD5, 2645\},\par
01655     \{{\cf22 "?"}, 0xFFE6B7CF, 2650\},\par
01656     \{{\cf22 "?"}, 0xFFECD2DE, 2655\},\par
01657     \{{\cf22 "?"}, 0xFF606D8C, 2674\},\par
01658     \{{\cf22 "?"}, 0xFF646A6E, 2675\},\par
01659     \{{\cf22 "?"}, 0xFF610051, 2711\},\par
01660     \{{\cf22 "?"}, 0xFF704191, 2712\},\par
01661     \{{\cf22 "?"}, 0xFF490251, 2715\},\par
01662     \{{\cf22 "?"}, 0xFF2F206F, 2743\},\par
01663     \{{\cf22 "?"}, 0xFFC690A1, 2764\},\par
01664     \{{\cf22 "?"}, 0xFF6F067B, 2810\},\par
01665     \{{\cf22 "?"}, 0xFFAD85B1, 2820\},\par
01666     \{{\cf22 "?"}, 0xFFA974AB, 2830\},\par
01667     \{{\cf22 "?"}, 0xFF4C0F7B, 2900\},\par
01668     \{{\cf22 "?"}, 0xFF664090, 2905\},\par
01669     \{{\cf22 "?"}, 0xFF83589D, 2910\},\par
01670     \{{\cf22 "?"}, 0xFF8C6DAA, 2920\},\par
01671     \{{\cf22 "?"}, 0xFFC9B5D4, 3040\},\par
01672     \{{\cf22 "?"}, 0xFFC790BA, 3045\},\par
01673     \{{\cf22 "?"}, 0xFF707070, 3062\},\par
01674     \{{\cf22 "?"}, 0xFF2A377E, 3102\},\par
01675     \{{\cf22 "?"}, 0xFF3C1F81, 3103\},\par
01676     \{{\cf22 "?"}, 0xFF35247A, 3110\},\par
01677     \{{\cf22 "?"}, 0xFF260751, 3114\},\par
01678     \{{\cf22 "?"}, 0xFF28135B, 3133\},\par
01679     \{{\cf22 "?"}, 0xFF6E5DA3, 3200\},\par
01680     \{{\cf22 "?"}, 0xFF353A90, 3210\},\par
01681     \{{\cf22 "?"}, 0xFF524A90, 3211\},\par
01682     \{{\cf22 "?"}, 0xFF785FA3, 3213\},\par
01683     \{{\cf22 "?"}, 0xFF241757, 3222\},\par
01684     \{{\cf22 "?"}, 0xFF7D77AF, 3241\},\par
01685     \{{\cf22 "?"}, 0xFF9083A3, 3251\},\par
01686     \{{\cf22 "?"}, 0xFFB2AABD, 3262\},\par
01687     \{{\cf22 "?"}, 0xFF392D88, 3301\},\par
01688     \{{\cf22 "?"}, 0xFF5661A8, 3321\},\par
01689     \{{\cf22 "?"}, 0xFF323887, 3322\},\par
01690     \{{\cf22 "?"}, 0xFF14214E, 3323\},\par
01691     \{{\cf22 "?"}, 0xFF3A2885, 3330\},\par
01692     \{{\cf22 "?"}, 0xFF7F8BC2, 3331\},\par
01693     \{{\cf22 "?"}, 0xFF1B3C78, 3333\},\par
01694     \{{\cf22 "?"}, 0xFFB9BDD9, 3340\},\par
01695     \{{\cf22 "?"}, 0xFF11263C, 3344\},\par
01696     \{{\cf22 "?"}, 0xFF202A65, 3353\},\par
01697     \{{\cf22 "?"}, 0xFF171B4A, 3355\},\par
01698     \{{\cf22 "?"}, 0xFF959ACA, 3420\},\par
01699     \{{\cf22 "?"}, 0xFF6A76B5, 3430\},\par
01700     \{{\cf22 "?"}, 0xFF11263C, 3443\}, {\cf20 /* TODO: duplicate case value */}\par
01701     \{{\cf22 "?"}, 0xFF002232, 3444\},\par
01702     \{{\cf22 "?"}, 0xFF2D4491, 3522\},\par
01703     \{{\cf22 "?"}, 0xFF261257, 3536\},\par
01704     \{{\cf22 "?"}, 0xFF53428A, 3540\},\par
01705     \{{\cf22 "?"}, 0xFF3A2885, 3541\}, {\cf20 /* TODO: duplicate case value */}\par
01706     \{{\cf22 "?"}, 0xFF233B7D, 3543\},\par
01707     \{{\cf22 "?"}, 0xFF273C82, 3544\},\par
01708     \{{\cf22 "?"}, 0xFF272651, 3554\},\par
01709     \{{\cf22 "?"}, 0xFF28438C, 3600\},\par
01710     \{{\cf22 "?"}, 0xFF243A7D, 3611\},\par
01711     \{{\cf22 "?"}, 0xFF4055A1, 3612\},\par
01712     \{{\cf22 "?"}, 0xFF1A4C8D, 3622\},\par
01713     \{{\cf22 "?"}, 0xFF1E569F, 3631\},\par
01714     \{{\cf22 "?"}, 0xFF92B1DC, 3640\},\par
01715     \{{\cf22 "?"}, 0xFF648DC7, 3641\},\par
01716     \{{\cf22 "?"}, 0xFFD0DEEE, 3650\},\par
01717     \{{\cf22 "?"}, 0xFFEAF0F9, 3661\},\par
01718     \{{\cf22 "?"}, 0xFF00507F, 3732\},\par
01719     \{{\cf22 "?"}, 0xFF12253C, 3743\},\par
01720     \{{\cf22 "?"}, 0xFFB7D1E3, 3750\},\par
01721     \{{\cf22 "?"}, 0xFFD0DEEE, 3752\}, {\cf20 /* TODO: duplicate case value */}\par
01722     \{{\cf22 "?"}, 0xFFAFC9E5, 3761\},\par
01723     \{{\cf22 "?"}, 0xFFCED2D1, 3770\},\par
01724     \{{\cf22 "?"}, 0xFF3D6AA1, 3810\},\par
01725     \{{\cf22 "?"}, 0xFF91B9E2, 3820\},\par
01726     \{{\cf22 "?"}, 0xFF00779E, 3822\},\par
01727     \{{\cf22 "?"}, 0xFFB4CEEB, 3840\},\par
01728     \{{\cf22 "?"}, 0xFF507193, 3842\},\par
01729     \{{\cf22 "?"}, 0xFFD5E3F4, 3845\},\par
01730     \{{\cf22 "?"}, 0xFF9AB8D3, 3851\},\par
01731     \{{\cf22 "?"}, 0xFF007EBA, 3900\},\par
01732     \{{\cf22 "?"}, 0xFF0082C4, 3901\},\par
01733     \{{\cf22 "?"}, 0xFF006CA5, 3902\},\par
01734     \{{\cf22 "?"}, 0xFF4ABDF0, 3910\},\par
01735     \{{\cf22 "?"}, 0xFF86AACA, 3951\},\par
01736     \{{\cf22 "?"}, 0xFF485E8A, 3952\},\par
01737     \{{\cf22 "?"}, 0xFF697698, 3953\},\par
01738     \{{\cf22 "?"}, 0xFFC5E1F3, 3961\},\par
01739     \{{\cf22 "?"}, 0xFFA6D8F6, 3962\},\par
01740     \{{\cf22 "?"}, 0xFFE1E1E1, 3971\},\par
01741     \{{\cf22 "?"}, 0xFF0093B9, 4010\},\par
01742     \{{\cf22 "?"}, 0xFF006587, 4022\},\par
01743     \{{\cf22 "?"}, 0xFF87C7EA, 4030\},\par
01744     \{{\cf22 "?"}, 0xFF507793, 4032\},\par
01745     \{{\cf22 "?"}, 0xFF265674, 4033\},\par
01746     \{{\cf22 "?"}, 0xFF9ED4E6, 4040\},\par
01747     \{{\cf22 "?"}, 0xFFEAF0F9, 4071\}, {\cf20 /* TODO: duplicate case value */}\par
01748     \{{\cf22 "?"}, 0xFF0096C1, 4100\},\par
01749     \{{\cf22 "?"}, 0xFF2DB0CF, 4101\},\par
01750     \{{\cf22 "?"}, 0xFF0095C6, 4103\},\par
01751     \{{\cf22 "?"}, 0xFF0081AA, 4105\},\par
01752     \{{\cf22 "?"}, 0xFF00A4D9, 4111\},\par
01753     \{{\cf22 "?"}, 0xFF00A9C9, 4113\},\par
01754     \{{\cf22 "?"}, 0xFF5DBFD2, 4121\},\par
01755     \{{\cf22 "?"}, 0xFF00405D, 4133\},\par
01756     \{{\cf22 "?"}, 0xFF192024, 4174\}, {\cf20 /* TODO: duplicate case value */}\par
01757     \{{\cf22 "?"}, 0xFF192024, 4175\}, {\cf20 /* TODO: duplicate case value */}\par
01758     \{{\cf22 "?"}, 0xFF4FB4CB, 4220\},\par
01759     \{{\cf22 "?"}, 0xFF8DCEE4, 4230\},\par
01760     \{{\cf22 "?"}, 0xFF2DB0CF, 4231\}, {\cf20 /* TODO: duplicate case value */}\par
01761     \{{\cf22 "?"}, 0xFF006587, 4232\}, {\cf20 /* TODO: duplicate case value */}\par
01762     \{{\cf22 "?"}, 0xFF8DCDDB, 4240\},\par
01763     \{{\cf22 "?"}, 0xFFD5EBF2, 4250\},\par
01764     \{{\cf22 "?"}, 0xFF007389, 4400\},\par
01765     \{{\cf22 "?"}, 0xFF007B8D, 4410\},\par
01766     \{{\cf22 "?"}, 0xFF00B2CA, 4420\},\par
01767     \{{\cf22 "?"}, 0xFF0091A5, 4421\},\par
01768     \{{\cf22 "?"}, 0xFF007D8C, 4423\},\par
01769     \{{\cf22 "?"}, 0xFF007986, 4425\},\par
01770     \{{\cf22 "?"}, 0xFF5FBFD1, 4430\},\par
01771     \{{\cf22 "?"}, 0xFF004250, 4432\},\par
01772     \{{\cf22 "?"}, 0xFF8DCEE4, 4440\}, {\cf20 /* TODO: duplicate case value */}\par
01773     \{{\cf22 "?"}, 0xFF006981, 4442\},\par
01774     \{{\cf22 "?"}, 0xFF007F92, 4452\},\par
01775     \{{\cf22 "?"}, 0xFF008192, 4500\},\par
01776     \{{\cf22 "?"}, 0xFF007079, 4513\},\par
01777     \{{\cf22 "?"}, 0xFF002F38, 4515\},\par
01778     \{{\cf22 "?"}, 0xFF00646A, 4516\},\par
01779     \{{\cf22 "?"}, 0xFF007389, 4531\}, {\cf20 /* TODO: duplicate case value */}\par
01780     \{{\cf22 "?"}, 0xFF007B8D, 4610\}, {\cf20 /* TODO: duplicate case value */}\par
01781     \{{\cf22 "?"}, 0xFF00A3A0, 4620\},\par
01782     \{{\cf22 "?"}, 0xFF0B7F85, 4625\},\par
01783     \{{\cf22 "?"}, 0xFF005B63, 4643\},\par
01784     \{{\cf22 "?"}, 0xFF234544, 4644\},\par
01785     \{{\cf22 "?"}, 0xFF8CCDD3, 4840\},\par
01786     \{{\cf22 "?"}, 0xFF006F73, 5000\},\par
01787     \{{\cf22 "?"}, 0xFF005B63, 5005\}, {\cf20 /* TODO: duplicate case value */}\par
01788     \{{\cf22 "?"}, 0xFF00A6AD, 5010\},\par
01789     \{{\cf22 "?"}, 0xFF49BAC0, 5020\},\par
01790     \{{\cf22 "?"}, 0xFFCFDDE0, 5040\},\par
01791     \{{\cf22 "?"}, 0xFFB4DCD8, 5050\},\par
01792     \{{\cf22 "?"}, 0xFF00876E, 5100\},\par
01793     \{{\cf22 "?"}, 0xFF009084, 5101\},\par
01794     \{{\cf22 "?"}, 0xFF00B1AE, 5111\},\par
01795     \{{\cf22 "?"}, 0xFF48BAB7, 5115\},\par
01796     \{{\cf22 "?"}, 0xFF00AF8C, 5210\},\par
01797     \{{\cf22 "?"}, 0xFF8CCCC2, 5220\},\par
01798     \{{\cf22 "?"}, 0xFF47B9AE, 5230\},\par
01799     \{{\cf22 "?"}, 0xFF197E6D, 5233\},\par
01800     \{{\cf22 "?"}, 0xFF8CCCC2, 5240\},   {\cf20 /* TODO: duplicate case value */}\par
01801     \{{\cf22 "?"}, 0xFF005B63, 5255\},   {\cf20 /* TODO: duplicate case value */}\par
01802     \{{\cf22 "?"}, 0xFF006E42, 5324\},\par
01803     \{{\cf22 "?"}, 0xFF004D3D, 5326\},\par
01804     \{{\cf22 "?"}, 0xFF002F38, 5335\},   {\cf20 /* TODO: duplicate case value */}\par
01805     \{{\cf22 "?"}, 0xFF002D1F, 5374\},\par
01806     \{{\cf22 "?"}, 0xFF002F38, 5375\},   {\cf20 /* TODO: duplicate case value */}\par
01807     \{{\cf22 "?"}, 0xFF008663, 5411\},\par
01808     \{{\cf22 "?"}, 0xFF006B4E, 5415\},\par
01809     \{{\cf22 "?"}, 0xFF008663, 5422\},   {\cf20 /* TODO: duplicate case value */}\par
01810     \{{\cf22 "?"}, 0xFF006B56, 5425\},\par
01811     \{{\cf22 "?"}, 0xFF008879, 5431\},\par
01812     \{{\cf22 "?"}, 0xFFDBE9E5, 5460\},\par
01813     \{{\cf22 "?"}, 0xFF6AC093, 5470\},\par
01814     \{{\cf22 "?"}, 0xFF52BA84, 5500\},\par
01815     \{{\cf22 "?"}, 0xFF14A363, 5510\},\par
01816     \{{\cf22 "?"}, 0xFF007848, 5513\},\par
01817     \{{\cf22 "?"}, 0xFF008663, 5515\}, {\cf20 /* TODO: duplicate case value */}\par
01818     \{{\cf22 "?"}, 0xFF52A04F, 5531\},\par
01819     \{{\cf22 "?"}, 0xFF6EA293, 5542\},\par
01820     \{{\cf22 "?"}, 0xFF94ADA1, 5552\},\par
01821     \{{\cf22 "?"}, 0xFF103828, 5555\},\par
01822     \{{\cf22 "?"}, 0xFF63BE5F, 5600\},\par
01823     \{{\cf22 "?"}, 0xFF85C875, 5610\},\par
01824     \{{\cf22 "?"}, 0xFF2CB431, 5611\},\par
01825     \{{\cf22 "?"}, 0xFF14B26D, 5613\},\par
01826     \{{\cf22 "?"}, 0xFF40B780, 5620\},\par
01827     \{{\cf22 "?"}, 0xFF1A781E, 5633\},\par
01828     \{{\cf22 "?"}, 0xFF157436, 5643\},\par
01829     \{{\cf22 "?"}, 0xFFC9E3C5, 5650\},\par
01830     \{{\cf22 "?"}, 0xFF6B9181, 5664\},\par
01831     \{{\cf22 "?"}, 0xFF3A6D57, 5765\},\par
01832     \{{\cf22 "?"}, 0xFF103828, 5766\}, {\cf20 /* TODO: duplicate case value */}\par
01833     \{{\cf22 "?"}, 0xFF02140C, 5776\},\par
01834     \{{\cf22 "?"}, 0xFFA5C278, 5822\},\par
01835     \{{\cf22 "?"}, 0xFFB4D383, 5832\},\par
01836     \{{\cf22 "?"}, 0xFF70953F, 5833\},\par
01837     \{{\cf22 "?"}, 0xFFA2D289, 5840\},\par
01838     \{{\cf22 "?"}, 0xFF273014, 5866\},\par
01839     \{{\cf22 "?"}, 0xFF81C750, 5912\},\par
01840     \{{\cf22 "?"}, 0xFF457021, 5933\},\par
01841     \{{\cf22 "?"}, 0xFF506702, 5934\},\par
01842     \{{\cf22 "?"}, 0xFFBBDB41, 5940\},\par
01843     \{{\cf22 "?"}, 0xFF003518, 5944\},\par
01844     \{{\cf22 "?"}, 0xFFE3EB00, 6010\},\par
01845     \{{\cf22 "?"}, 0xFFBED782, 6051\},\par
01846     \{{\cf22 "?"}, 0xFF2D3B01, 6065\},\par
01847     \{{\cf22 "?"}, 0xFFDCDDD1, 6071\},\par
01848     \{{\cf22 "?"}, 0xFF919600, 6133\},\par
01849     \{{\cf22 "?"}, 0xFF484601, 6156\},\par
01850     \{{\cf22 "END"}, 0, -1\}\par
01851 \};\par
01852 \par
01853 thread_color Marathon_Polyester_codes[] = \{\par
01854     \{{\cf22 "END"}, 0, -1\}\par
01855 \};\par
01856 \par
01857 thread_color Marathon_Rayon_codes[] = \{\par
01858     \{{\cf22 "END"}, 0, -1\}\par
01859 \};\par
01860 \par
01861 thread_color Madeira_Polyester_codes[] = \{\par
01862     \{{\cf22 "END"}, 0, -1\}\par
01863 \};\par
01864 \par
01865 thread_color Madeira_Rayon_codes[] = \{\par
01866     \{{\cf22 "END"}, 0, -1\}\par
01867 \};\par
01868 \par
01869 thread_color Metro_Polyester_codes[] = \{\par
01870     \{{\cf22 "END"}, 0, -1\}\par
01871 \};\par
01872 \par
01873 thread_color Pantone_codes[] = \{\par
01874     \{{\cf22 "?"}, 0xFFFFFF7D, 100\},\par
01875     \{{\cf22 "?"}, 0xFFFFFF36, 101\},\par
01876     \{{\cf22 "?"}, 0xFFFFFC0D, 102\},\par
01877     \{{\cf22 "?"}, 0xFFD1CB00, 103\},\par
01878     \{{\cf22 "?"}, 0xFFB3AD00, 104\},\par
01879     \{{\cf22 "?"}, 0xFF807C00, 105\},\par
01880     \{{\cf22 "?"}, 0xFFFFFA4F, 106\},\par
01881     \{{\cf22 "?"}, 0xFFFFF536, 107\},\par
01882     \{{\cf22 "?"}, 0xFFFFF00D, 108\},\par
01883     \{{\cf22 "?"}, 0xFFFFE600, 109\},\par
01884     \{{\cf22 "?"}, 0xFFEDD100, 110\},\par
01885     \{{\cf22 "?"}, 0xFFBAA600, 111\},\par
01886     \{{\cf22 "?"}, 0xFF9E8E00, 112\},\par
01887     \{{\cf22 "?"}, 0xFFFFED57, 113\},\par
01888     \{{\cf22 "?"}, 0xFFFFEB45, 114\},\par
01889     \{{\cf22 "?"}, 0xFFFFE833, 115\},\par
01890     \{{\cf22 "?"}, 0xFFFFD600, 116\},\par
01891     \{{\cf22 "?"}, 0xFFD9B200, 117\},\par
01892     \{{\cf22 "?"}, 0xFFBA9900, 118\},\par
01893     \{{\cf22 "?"}, 0xFF827200, 119\},\par
01894     \{{\cf22 "?"}, 0xFFFFE86B, 120\},\par
01895     \{{\cf22 "?"}, 0xFFFFF2B0, 1205\},\par
01896     \{{\cf22 "?"}, 0xFFFFE34F, 121\},\par
01897     \{{\cf22 "?"}, 0xFFFFE88C, 1215\},\par
01898     \{{\cf22 "?"}, 0xFFFFD433, 122\},\par
01899     \{{\cf22 "?"}, 0xFFFFD461, 1225\},\par
01900     \{{\cf22 "?"}, 0xFFFFC20F, 123\},\par
01901     \{{\cf22 "?"}, 0xFFFFB517, 1235\},\par
01902     \{{\cf22 "?"}, 0xFFF0AD00, 124\},\par
01903     \{{\cf22 "?"}, 0xFFD19700, 1245\},\par
01904     \{{\cf22 "?"}, 0xFFBD8C00, 125\},\par
01905     \{{\cf22 "?"}, 0xFFA87B00, 1255\},\par
01906     \{{\cf22 "?"}, 0xFFA17800, 126\},\par
01907     \{{\cf22 "?"}, 0xFF7D5B00, 1265\},\par
01908     \{{\cf22 "?"}, 0xFFFFED80, 127\},\par
01909     \{{\cf22 "?"}, 0xFFFFE359, 128\},\par
01910     \{{\cf22 "?"}, 0xFFFFD63B, 129\},\par
01911     \{{\cf22 "?"}, 0xFFFFB300, 130\},\par
01912     \{{\cf22 "?"}, 0xFFE89E00, 131\},\par
01913     \{{\cf22 "?"}, 0xFFB38100, 132\},\par
01914     \{{\cf22 "?"}, 0xFF705A00, 133\},\par
01915     \{{\cf22 "?"}, 0xFFFFE38C, 134\},\par
01916     \{{\cf22 "?"}, 0xFFFFDB87, 1345\},\par
01917     \{{\cf22 "?"}, 0xFFFFCF66, 135\},\par
01918     \{{\cf22 "?"}, 0xFFFFCC70, 1355\},\par
01919     \{{\cf22 "?"}, 0xFFFFBA3D, 136\},\par
01920     \{{\cf22 "?"}, 0xFFFFB547, 1365\},\par
01921     \{{\cf22 "?"}, 0xFFFFA61A, 137\},\par
01922     \{{\cf22 "?"}, 0xFFFF991A, 1375\},\par
01923     \{{\cf22 "?"}, 0xFFFC9200, 138\},\par
01924     \{{\cf22 "?"}, 0xFFED8500, 1385\},\par
01925     \{{\cf22 "?"}, 0xFFC47C00, 139\},\par
01926     \{{\cf22 "?"}, 0xFFA15F00, 1395\},\par
01927     \{{\cf22 "?"}, 0xFF755600, 140\},\par
01928     \{{\cf22 "?"}, 0xFF5E3C00, 1405\},\par
01929     \{{\cf22 "?"}, 0xFFFFCF7D, 141\},\par
01930     \{{\cf22 "?"}, 0xFFFFB83D, 142\},\par
01931     \{{\cf22 "?"}, 0xFFFFA626, 143\},\par
01932     \{{\cf22 "?"}, 0xFFFF8500, 144\},\par
01933     \{{\cf22 "?"}, 0xFFEB7C00, 145\},\par
01934     \{{\cf22 "?"}, 0xFFAB6100, 146\},\par
01935     \{{\cf22 "?"}, 0xFF705100, 147\},\par
01936     \{{\cf22 "?"}, 0xFFFFD6A1, 148\},\par
01937     \{{\cf22 "?"}, 0xFFFFBA75, 1485\},\par
01938     \{{\cf22 "?"}, 0xFFFFC487, 149\},\par
01939     \{{\cf22 "?"}, 0xFFFFAB54, 1495\},\par
01940     \{{\cf22 "?"}, 0xFFFFA64D, 150\},\par
01941     \{{\cf22 "?"}, 0xFFFF943B, 1505\},\par
01942     \{{\cf22 "?"}, 0xFFFF850D, 151\},\par
01943     \{{\cf22 "?"}, 0xFFFC7C00, 152\},\par
01944     \{{\cf22 "?"}, 0xFFE66000, 1525\},\par
01945     \{{\cf22 "?"}, 0xFFD17100, 153\},\par
01946     \{{\cf22 "?"}, 0xFF9E4A00, 1535\},\par
01947     \{{\cf22 "?"}, 0xFFA85B00, 154\},\par
01948     \{{\cf22 "?"}, 0xFF472200, 1545\},\par
01949     \{{\cf22 "?"}, 0xFFFFE0B8, 155\},\par
01950     \{{\cf22 "?"}, 0xFFFFC7A8, 1555\},\par
01951     \{{\cf22 "?"}, 0xFFFFC794, 156\},\par
01952     \{{\cf22 "?"}, 0xFFFFA882, 1565\},\par
01953     \{{\cf22 "?"}, 0xFFFF914D, 157\},\par
01954     \{{\cf22 "?"}, 0xFFFF8C47, 1575\},\par
01955     \{{\cf22 "?"}, 0xFFFF6308, 158\},\par
01956     \{{\cf22 "?"}, 0xFFFF701A, 1585\},\par
01957     \{{\cf22 "?"}, 0xFFED5100, 159\},\par
01958     \{{\cf22 "?"}, 0xFFF26300, 1595\},\par
01959     \{{\cf22 "?"}, 0xFFAD4200, 160\},\par
01960     \{{\cf22 "?"}, 0xFFB34F00, 1605\},\par
01961     \{{\cf22 "?"}, 0xFF5C2C00, 161\},\par
01962     \{{\cf22 "?"}, 0xFF914000, 1615\},\par
01963     \{{\cf22 "?"}, 0xFFFFD9C7, 162\},\par
01964     \{{\cf22 "?"}, 0xFFFFB0A1, 1625\},\par
01965     \{{\cf22 "?"}, 0xFFFFB08F, 163\},\par
01966     \{{\cf22 "?"}, 0xFFFF9C85, 1635\},\par
01967     \{{\cf22 "?"}, 0xFFFF8A45, 164\},\par
01968     \{{\cf22 "?"}, 0xFFFF8257, 1645\},\par
01969     \{{\cf22 "?"}, 0xFFFF690A, 165\},\par
01970     \{{\cf22 "?"}, 0xFFFF5E17, 1655\},\par
01971     \{{\cf22 "?"}, 0xFFFF5C00, 166\},\par
01972     \{{\cf22 "?"}, 0xFFFF5200, 1665\},\par
01973     \{{\cf22 "?"}, 0xFFD45500, 167\},\par
01974     \{{\cf22 "?"}, 0xFFB83D00, 1675\},\par
01975     \{{\cf22 "?"}, 0xFF692D00, 168\},\par
01976     \{{\cf22 "?"}, 0xFF8F2E00, 1685\},\par
01977     \{{\cf22 "?"}, 0xFFFFCCCC, 169\},\par
01978     \{{\cf22 "?"}, 0xFFFF998F, 170\},\par
01979     \{{\cf22 "?"}, 0xFFFF7852, 171\},\par
01980     \{{\cf22 "?"}, 0xFFFF571F, 172\},\par
01981     \{{\cf22 "?"}, 0xFFF54C00, 173\},\par
01982     \{{\cf22 "?"}, 0xFFA33100, 174\},\par
01983     \{{\cf22 "?"}, 0xFF662400, 175\},\par
01984     \{{\cf22 "?"}, 0xFFFFBFD1, 176\},\par
01985     \{{\cf22 "?"}, 0xFFFF9EC9, 1765\},\par
01986     \{{\cf22 "?"}, 0xFFFFBAE0, 1767\},\par
01987     \{{\cf22 "?"}, 0xFFFF8C99, 177\},\par
01988     \{{\cf22 "?"}, 0xFFFF87B5, 1775\},\par
01989     \{{\cf22 "?"}, 0xFFFF6BA3, 1777\},\par
01990     \{{\cf22 "?"}, 0xFFFF6970, 178\},\par
01991     \{{\cf22 "?"}, 0xFFFF5480, 1785\},\par
01992     \{{\cf22 "?"}, 0xFFFF3D66, 1787\},\par
01993     \{{\cf22 "?"}, 0xFFFF291F, 1788\},\par
01994     \{{\cf22 "?"}, 0xFFFF3600, 179\},\par
01995     \{{\cf22 "?"}, 0xFFFF0F00, 1795\},\par
01996     \{{\cf22 "?"}, 0xFFF50002, 1797\},\par
01997     \{{\cf22 "?"}, 0xFFE33000, 180\},\par
01998     \{{\cf22 "?"}, 0xFFC41200, 1805\},\par
01999     \{{\cf22 "?"}, 0xFFB80007, 1807\},\par
02000     \{{\cf22 "?"}, 0xFF872300, 181\},\par
02001     \{{\cf22 "?"}, 0xFF7D0C00, 1815\},\par
02002     \{{\cf22 "?"}, 0xFF570900, 1817\},\par
02003     \{{\cf22 "?"}, 0xFFFFBDE6, 182\},\par
02004     \{{\cf22 "?"}, 0xFFFF8AC9, 183\},\par
02005     \{{\cf22 "?"}, 0xFFFF5296, 184\},\par
02006     \{{\cf22 "?"}, 0xFFFF173D, 185\},\par
02007     \{{\cf22 "?"}, 0xFFF5002F, 186\},\par
02008     \{{\cf22 "?"}, 0xFFCC002B, 187\},\par
02009     \{{\cf22 "?"}, 0xFF800400, 188\},\par
02010     \{{\cf22 "?"}, 0xFFFFA1E6, 189\},\par
02011     \{{\cf22 "?"}, 0xFFFFB8ED, 1895\},\par
02012     \{{\cf22 "?"}, 0xFFFF73C7, 190\},\par
02013     \{{\cf22 "?"}, 0xFFFF96E8, 1905\},\par
02014     \{{\cf22 "?"}, 0xFFFF3D9E, 191\},\par
02015     \{{\cf22 "?"}, 0xFFFF4ACC, 1915\},\par
02016     \{{\cf22 "?"}, 0xFFFF0052, 192\},\par
02017     \{{\cf22 "?"}, 0xFFFF0073, 1925\},\par
02018     \{{\cf22 "?"}, 0xFFDE004B, 193\},\par
02019     \{{\cf22 "?"}, 0xFFF20068, 1935\},\par
02020     \{{\cf22 "?"}, 0xFFAB003E, 194\},\par
02021     \{{\cf22 "?"}, 0xFFCF005B, 1945\},\par
02022     \{{\cf22 "?"}, 0xFF73002E, 195\},\par
02023     \{{\cf22 "?"}, 0xFFA10040, 1955\},\par
02024     \{{\cf22 "?"}, 0xFFFFBFF5, 196\},\par
02025     \{{\cf22 "?"}, 0xFFFF8CE6, 197\},\par
02026     \{{\cf22 "?"}, 0xFFFF38AB, 198\},\par
02027     \{{\cf22 "?"}, 0xFFFF0061, 199\},\par
02028     \{{\cf22 "?"}, 0xFFE00053, 200\},\par
02029     \{{\cf22 "?"}, 0xFFB50043, 201\},\par
02030     \{{\cf22 "?"}, 0xFF910039, 202\},\par
02031     \{{\cf22 "?"}, 0xFFFFA8F7, 203\},\par
02032     \{{\cf22 "?"}, 0xFFFF6BF7, 204\},\par
02033     \{{\cf22 "?"}, 0xFFFF29E8, 205\},\par
02034     \{{\cf22 "?"}, 0xFFF70099, 206\},\par
02035     \{{\cf22 "?"}, 0xFFCF0076, 207\},\par
02036     \{{\cf22 "?"}, 0xFFA10067, 208\},\par
02037     \{{\cf22 "?"}, 0xFF78004F, 209\},\par
02038     \{{\cf22 "?"}, 0xFFFF9CF0, 210\},\par
02039     \{{\cf22 "?"}, 0xFFFF73EB, 211\},\par
02040     \{{\cf22 "?"}, 0xFFFF47E3, 212\},\par
02041     \{{\cf22 "?"}, 0xFFFF0DBA, 213\},\par
02042     \{{\cf22 "?"}, 0xFFEB009B, 214\},\par
02043     \{{\cf22 "?"}, 0xFFBA0079, 215\},\par
02044     \{{\cf22 "?"}, 0xFF82074E, 216\},\par
02045     \{{\cf22 "?"}, 0xFFFFB8FF, 217\},\par
02046     \{{\cf22 "?"}, 0xFFFA63FF, 218\},\par
02047     \{{\cf22 "?"}, 0xFFFC1FFF, 219\},\par
02048     \{{\cf22 "?"}, 0xFFD400B8, 220\},\par
02049     \{{\cf22 "?"}, 0xFFB30098, 221\},\par
02050     \{{\cf22 "?"}, 0xFF69005E, 222\},\par
02051     \{{\cf22 "?"}, 0xFFFF8AFF, 223\},\par
02052     \{{\cf22 "?"}, 0xFFFC5EFF, 224\},\par
02053     \{{\cf22 "?"}, 0xFFFC2BFF, 225\},\par
02054     \{{\cf22 "?"}, 0xFFFF00FF, 226\},\par
02055     \{{\cf22 "?"}, 0xFFCF00C0, 227\},\par
02056     \{{\cf22 "?"}, 0xFF960090, 228\},\par
02057     \{{\cf22 "?"}, 0xFF660057, 229\},\par
02058     \{{\cf22 "?"}, 0xFFFFA8FF, 230\},\par
02059     \{{\cf22 "?"}, 0xFFFC7AFF, 231\},\par
02060     \{{\cf22 "?"}, 0xFFF754FF, 232\},\par
02061     \{{\cf22 "?"}, 0xFFE300FF, 233\},\par
02062     \{{\cf22 "?"}, 0xFFB100BD, 234\},\par
02063     \{{\cf22 "?"}, 0xFF910099, 235\},\par
02064     \{{\cf22 "?"}, 0xFFFCB3FF, 236\},\par
02065     \{{\cf22 "?"}, 0xFFFABAFF, 2365\},\par
02066     \{{\cf22 "?"}, 0xFFF782FF, 237\},\par
02067     \{{\cf22 "?"}, 0xFFE66EFF, 2375\},\par
02068     \{{\cf22 "?"}, 0xFFF05EFF, 238\},\par
02069     \{{\cf22 "?"}, 0xFFCF36FF, 2385\},\par
02070     \{{\cf22 "?"}, 0xFFE336FF, 239\},\par
02071     \{{\cf22 "?"}, 0xFFBA0DFF, 2395\},\par
02072     \{{\cf22 "?"}, 0xFFD10FFF, 240\},\par
02073     \{{\cf22 "?"}, 0xFFA800FF, 2405\},\par
02074     \{{\cf22 "?"}, 0xFFB600FA, 241\},\par
02075     \{{\cf22 "?"}, 0xFF9D00EB, 2415\},\par
02076     \{{\cf22 "?"}, 0xFF750082, 242\},\par
02077     \{{\cf22 "?"}, 0xFF7700BD, 2425\},\par
02078     \{{\cf22 "?"}, 0xFFF2B5FF, 243\},\par
02079     \{{\cf22 "?"}, 0xFFE89EFF, 244\},\par
02080     \{{\cf22 "?"}, 0xFFDB78FF, 245\},\par
02081     \{{\cf22 "?"}, 0xFFB51AFF, 246\},\par
02082     \{{\cf22 "?"}, 0xFFA300FF, 247\},\par
02083     \{{\cf22 "?"}, 0xFF9600FA, 248\},\par
02084     \{{\cf22 "?"}, 0xFF6E00B8, 249\},\par
02085     \{{\cf22 "?"}, 0xFFF2D1FF, 250\},\par
02086     \{{\cf22 "?"}, 0xFFDE9CFF, 251\},\par
02087     \{{\cf22 "?"}, 0xFFC270FF, 252\},\par
02088     \{{\cf22 "?"}, 0xFF910DFF, 253\},\par
02089     \{{\cf22 "?"}, 0xFF8000FF, 254\},\par
02090     \{{\cf22 "?"}, 0xFF5E00BF, 255\},\par
02091     \{{\cf22 "?"}, 0xFFEDCCFF, 256\},\par
02092     \{{\cf22 "?"}, 0xFFCFA6FF, 2562\},\par
02093     \{{\cf22 "?"}, 0xFFC7ABFF, 2563\},\par
02094     \{{\cf22 "?"}, 0xFFB5A3FF, 2567\},\par
02095     \{{\cf22 "?"}, 0xFFDBA8FF, 257\},\par
02096     \{{\cf22 "?"}, 0xFFB387FF, 2572\},\par
02097     \{{\cf22 "?"}, 0xFFB391FF, 2573\},\par
02098     \{{\cf22 "?"}, 0xFF998CFF, 2577\},\par
02099     \{{\cf22 "?"}, 0xFF913DFF, 258\},\par
02100     \{{\cf22 "?"}, 0xFF8A47FF, 2582\},\par
02101     \{{\cf22 "?"}, 0xFF8A5EFF, 2583\},\par
02102     \{{\cf22 "?"}, 0xFF6957FF, 2587\},\par
02103     \{{\cf22 "?"}, 0xFF5F00D9, 259\},\par
02104     \{{\cf22 "?"}, 0xFF661AFF, 2592\},\par
02105     \{{\cf22 "?"}, 0xFF631CFF, 2593\},\par
02106     \{{\cf22 "?"}, 0xFF2600FF, 2597\},\par
02107     \{{\cf22 "?"}, 0xFF5B00BD, 260\},\par
02108     \{{\cf22 "?"}, 0xFF5C00F7, 2602\},\par
02109     \{{\cf22 "?"}, 0xFF4D00FA, 2603\},\par
02110     \{{\cf22 "?"}, 0xFF2D00ED, 2607\},\par
02111     \{{\cf22 "?"}, 0xFF500099, 261\},\par
02112     \{{\cf22 "?"}, 0xFF4F00DB, 2612\},\par
02113     \{{\cf22 "?"}, 0xFF5000D9, 2613\},\par
02114     \{{\cf22 "?"}, 0xFF2E00D9, 2617\},\par
02115     \{{\cf22 "?"}, 0xFF3F0073, 262\},\par
02116     \{{\cf22 "?"}, 0xFF3C008F, 2622\},\par
02117     \{{\cf22 "?"}, 0xFF4700AD, 2623\},\par
02118     \{{\cf22 "?"}, 0xFF2800B0, 2627\},\par
02119     \{{\cf22 "?"}, 0xFFE6DBFF, 263\},\par
02120     \{{\cf22 "?"}, 0xFFB8BAFF, 2635\},\par
02121     \{{\cf22 "?"}, 0xFFBDB8FF, 264\},\par
02122     \{{\cf22 "?"}, 0xFF99A3FF, 2645\},\par
02123     \{{\cf22 "?"}, 0xFF7570FF, 265\},\par
02124     \{{\cf22 "?"}, 0xFF7582FF, 2655\},\par
02125     \{{\cf22 "?"}, 0xFF361AFF, 266\},\par
02126     \{{\cf22 "?"}, 0xFF6166FF, 2665\},\par
02127     \{{\cf22 "?"}, 0xFF1C00FF, 267\},\par
02128     \{{\cf22 "?"}, 0xFF2800E0, 268\},\par
02129     \{{\cf22 "?"}, 0xFF0900E6, 2685\},\par
02130     \{{\cf22 "?"}, 0xFF2600AB, 269\},\par
02131     \{{\cf22 "?"}, 0xFF0C0082, 2695\},\par
02132     \{{\cf22 "?"}, 0xFFB0BAFF, 270\},\par
02133     \{{\cf22 "?"}, 0xFF99B3FF, 2705\},\par
02134     \{{\cf22 "?"}, 0xFFCFE8FF, 2706\},\par
02135     \{{\cf22 "?"}, 0xFFD4F0FF, 2707\},\par
02136     \{{\cf22 "?"}, 0xFFBDE6FF, 2708\},\par
02137     \{{\cf22 "?"}, 0xFF91A1FF, 271\},\par
02138     \{{\cf22 "?"}, 0xFF6E8CFF, 2715\},\par
02139     \{{\cf22 "?"}, 0xFF8CB5FF, 2716\},\par
02140     \{{\cf22 "?"}, 0xFFB5E0FF, 2717\},\par
02141     \{{\cf22 "?"}, 0xFF5496FF, 2718\},\par
02142     \{{\cf22 "?"}, 0xFF6B85FF, 272\},\par
02143     \{{\cf22 "?"}, 0xFF3B52FF, 2725\},\par
02144     \{{\cf22 "?"}, 0xFF3657FF, 2726\},\par
02145     \{{\cf22 "?"}, 0xFF4A94FF, 2727\},\par
02146     \{{\cf22 "?"}, 0xFF0A4FFF, 2728\},\par
02147     \{{\cf22 "?"}, 0xFF0009EB, 273\},\par
02148     \{{\cf22 "?"}, 0xFF000DFF, 2735\},\par
02149     \{{\cf22 "?"}, 0xFF0017FF, 2736\},\par
02150     \{{\cf22 "?"}, 0xFF0020FA, 2738\},\par
02151     \{{\cf22 "?"}, 0xFF0000B8, 274\},\par
02152     \{{\cf22 "?"}, 0xFF000BD9, 2745\},\par
02153     \{{\cf22 "?"}, 0xFF0012E6, 2746\},\par
02154     \{{\cf22 "?"}, 0xFF001ED9, 2747\},\par
02155     \{{\cf22 "?"}, 0xFF001AD9, 2748\},\par
02156     \{{\cf22 "?"}, 0xFF030091, 275\},\par
02157     \{{\cf22 "?"}, 0xFF0005B3, 2755\},\par
02158     \{{\cf22 "?"}, 0xFF000BB5, 2756\},\par
02159     \{{\cf22 "?"}, 0xFF0020B3, 2757\},\par
02160     \{{\cf22 "?"}, 0xFF0026BD, 2758\},\par
02161     \{{\cf22 "?"}, 0xFF020073, 276\},\par
02162     \{{\cf22 "?"}, 0xFF00048C, 2765\},\par
02163     \{{\cf22 "?"}, 0xFF000887, 2766\},\par
02164     \{{\cf22 "?"}, 0xFF001A75, 2767\},\par
02165     \{{\cf22 "?"}, 0xFF001F8F, 2768\},\par
02166     \{{\cf22 "?"}, 0xFFBAEDFF, 277\},\par
02167     \{{\cf22 "?"}, 0xFF9CDBFF, 278\},\par
02168     \{{\cf22 "?"}, 0xFF52A8FF, 279\},\par
02169     \{{\cf22 "?"}, 0xFF003BD1, 280\},\par
02170     \{{\cf22 "?"}, 0xFF0031AD, 281\},\par
02171     \{{\cf22 "?"}, 0xFF002675, 282\},\par
02172     \{{\cf22 "?"}, 0xFFA6E8FF, 283\},\par
02173     \{{\cf22 "?"}, 0xFF73CFFF, 284\},\par
02174     \{{\cf22 "?"}, 0xFF1C91FF, 285\},\par
02175     \{{\cf22 "?"}, 0xFF0055FA, 286\},\par
02176     \{{\cf22 "?"}, 0xFF0048E0, 287\},\par
02177     \{{\cf22 "?"}, 0xFF0041C4, 288\},\par
02178     \{{\cf22 "?"}, 0xFF00246B, 289\},\par
02179     \{{\cf22 "?"}, 0xFFBFFAFF, 290\},\par
02180     \{{\cf22 "?"}, 0xFF96FAFF, 2905\},\par
02181     \{{\cf22 "?"}, 0xFFABF7FF, 291\},\par
02182     \{{\cf22 "?"}, 0xFF69EDFF, 2915\},\par
02183     \{{\cf22 "?"}, 0xFF82E3FF, 292\},\par
02184     \{{\cf22 "?"}, 0xFF26C2FF, 2925\},\par
02185     \{{\cf22 "?"}, 0xFF006BFA, 293\},\par
02186     \{{\cf22 "?"}, 0xFF008AFF, 2935\},\par
02187     \{{\cf22 "?"}, 0xFF0055C9, 294\},\par
02188     \{{\cf22 "?"}, 0xFF0079DB, 2945\},\par
02189     \{{\cf22 "?"}, 0xFF0045A1, 295\},\par
02190     \{{\cf22 "?"}, 0xFF0058A1, 2955\},\par
02191     \{{\cf22 "?"}, 0xFF00294D, 296\},\par
02192     \{{\cf22 "?"}, 0xFF00395C, 2965\},\par
02193     \{{\cf22 "?"}, 0xFF82FCFF, 297\},\par
02194     \{{\cf22 "?"}, 0xFFB3FFF2, 2975\},\par
02195     \{{\cf22 "?"}, 0xFF4FEDFF, 298\},\par
02196     \{{\cf22 "?"}, 0xFF69FFF0, 2985\},\par
02197     \{{\cf22 "?"}, 0xFF26CFFF, 299\},\par
02198     \{{\cf22 "?"}, 0xFF1AE3FF, 2995\},\par
02199     \{{\cf22 "?"}, 0xFF008FFF, 300\},\par
02200     \{{\cf22 "?"}, 0xFF00A0FA, 3005\},\par
02201     \{{\cf22 "?"}, 0xFF0073D1, 301\},\par
02202     \{{\cf22 "?"}, 0xFF0089CC, 3015\},\par
02203     \{{\cf22 "?"}, 0xFF006080, 302\},\par
02204     \{{\cf22 "?"}, 0xFF00687D, 3025\},\par
02205     \{{\cf22 "?"}, 0xFF003B42, 303\},\par
02206     \{{\cf22 "?"}, 0xFF004744, 3035\},\par
02207     \{{\cf22 "?"}, 0xFFB3FFEB, 304\},\par
02208     \{{\cf22 "?"}, 0xFF7DFFE8, 305\},\par
02209     \{{\cf22 "?"}, 0xFF40FFED, 306\},\par
02210     \{{\cf22 "?"}, 0xFF009CBA, 307\},\par
02211     \{{\cf22 "?"}, 0xFF008087, 308\},\par
02212     \{{\cf22 "?"}, 0xFF004741, 309\},\par
02213     \{{\cf22 "?"}, 0xFF91FFE6, 310\},\par
02214     \{{\cf22 "?"}, 0xFF91FFE0, 3105\},\par
02215     \{{\cf22 "?"}, 0xFF5EFFE0, 311\},\par
02216     \{{\cf22 "?"}, 0xFF5EFFD1, 3115\},\par
02217     \{{\cf22 "?"}, 0xFF0AFFE3, 312\},\par
02218     \{{\cf22 "?"}, 0xFF2BFFC9, 3125\},\par
02219     \{{\cf22 "?"}, 0xFF00DECC, 313\},\par
02220     \{{\cf22 "?"}, 0xFF00E8C3, 3135\},\par
02221     \{{\cf22 "?"}, 0xFF00B3A2, 314\},\par
02222     \{{\cf22 "?"}, 0xFF00C49F, 3145\},\par
02223     \{{\cf22 "?"}, 0xFF009180, 315\},\par
02224     \{{\cf22 "?"}, 0xFF009E78, 3155\},\par
02225     \{{\cf22 "?"}, 0xFF00523C, 316\},\par
02226     \{{\cf22 "?"}, 0xFF005940, 3165\},\par
02227     \{{\cf22 "?"}, 0xFFD1FFEB, 317\},\par
02228     \{{\cf22 "?"}, 0xFF9EFFD9, 318\},\par
02229     \{{\cf22 "?"}, 0xFF7AFFCF, 319\},\par
02230     \{{\cf22 "?"}, 0xFF00EDA4, 320\},\par
02231     \{{\cf22 "?"}, 0xFF00C487, 321\},\par
02232     \{{\cf22 "?"}, 0xFF00A66F, 322\},\par
02233     \{{\cf22 "?"}, 0xFF008754, 323\},\par
02234     \{{\cf22 "?"}, 0xFFB8FFE0, 324\},\par
02235     \{{\cf22 "?"}, 0xFFA1FFD1, 3242\},\par
02236     \{{\cf22 "?"}, 0xFFA8FFCF, 3245\},\par
02237     \{{\cf22 "?"}, 0xFF91FFC2, 3248\},\par
02238     \{{\cf22 "?"}, 0xFF70FFBD, 325\},\par
02239     \{{\cf22 "?"}, 0xFF87FFC2, 3252\},\par
02240     \{{\cf22 "?"}, 0xFF82FFB8, 3255\},\par
02241     \{{\cf22 "?"}, 0xFF69FFAB, 3258\},\par
02242     \{{\cf22 "?"}, 0xFF21FF9E, 326\},\par
02243     \{{\cf22 "?"}, 0xFF4AFFAB, 3262\},\par
02244     \{{\cf22 "?"}, 0xFF4FFFA1, 3265\},\par
02245     \{{\cf22 "?"}, 0xFF1AFF82, 3268\},\par
02246     \{{\cf22 "?"}, 0xFF00D477, 327\},\par
02247     \{{\cf22 "?"}, 0xFF00FF8F, 3272\},\par
02248     \{{\cf22 "?"}, 0xFF0DFF87, 3275\},\par
02249     \{{\cf22 "?"}, 0xFF00F26D, 3278\},\par
02250     \{{\cf22 "?"}, 0xFF00AD5F, 328\},\par
02251     \{{\cf22 "?"}, 0xFF00D975, 3282\},\par
02252     \{{\cf22 "?"}, 0xFF00ED77, 3285\},\par
02253     \{{\cf22 "?"}, 0xFF00CC5E, 3288\},\par
02254     \{{\cf22 "?"}, 0xFF008A4A, 329\},\par
02255     \{{\cf22 "?"}, 0xFF008A46, 3292\},\par
02256     \{{\cf22 "?"}, 0xFF00C95F, 3295\},\par
02257     \{{\cf22 "?"}, 0xFF009440, 3298\},\par
02258     \{{\cf22 "?"}, 0xFF006635, 330\},\par
02259     \{{\cf22 "?"}, 0xFF004F24, 3302\},\par
02260     \{{\cf22 "?"}, 0xFF006327, 3305\},\par
02261     \{{\cf22 "?"}, 0xFF00471D, 3308\},\par
02262     \{{\cf22 "?"}, 0xFFC2FFD6, 331\},\par
02263     \{{\cf22 "?"}, 0xFFB3FFCC, 332\},\par
02264     \{{\cf22 "?"}, 0xFF91FFBA, 333\},\par
02265     \{{\cf22 "?"}, 0xFF00F763, 334\},\par
02266     \{{\cf22 "?"}, 0xFF00B33E, 335\},\par
02267     \{{\cf22 "?"}, 0xFF00872D, 336\},\par
02268     \{{\cf22 "?"}, 0xFFB0FFCC, 337\},\par
02269     \{{\cf22 "?"}, 0xFFA6FFBF, 3375\},\par
02270     \{{\cf22 "?"}, 0xFF87FFAD, 338\},\par
02271     \{{\cf22 "?"}, 0xFF8CFFAB, 3385\},\par
02272     \{{\cf22 "?"}, 0xFF29FF70, 339\},\par
02273     \{{\cf22 "?"}, 0xFF63FF8C, 3395\},\par
02274     \{{\cf22 "?"}, 0xFF00E84F, 340\},\par
02275     \{{\cf22 "?"}, 0xFF26FF59, 3405\},\par
02276     \{{\cf22 "?"}, 0xFF00B53C, 341\},\par
02277     \{{\cf22 "?"}, 0xFF00C72E, 3415\},\par
02278     \{{\cf22 "?"}, 0xFF00912A, 342\},\par
02279     \{{\cf22 "?"}, 0xFF009421, 3425\},\par
02280     \{{\cf22 "?"}, 0xFF02631C, 343\},\par
02281     \{{\cf22 "?"}, 0xFF005710, 3435\},\par
02282     \{{\cf22 "?"}, 0xFFBAFFC4, 344\},\par
02283     \{{\cf22 "?"}, 0xFF9EFFAD, 345\},\par
02284     \{{\cf22 "?"}, 0xFF73FF87, 346\},\par
02285     \{{\cf22 "?"}, 0xFF00F723, 347\},\par
02286     \{{\cf22 "?"}, 0xFF00C21D, 348\},\par
02287     \{{\cf22 "?"}, 0xFF00940D, 349\},\par
02288     \{{\cf22 "?"}, 0xFF0D4000, 350\},\par
02289     \{{\cf22 "?"}, 0xFFD4FFD6, 351\},\par
02290     \{{\cf22 "?"}, 0xFFBAFFBF, 352\},\par
02291     \{{\cf22 "?"}, 0xFF9EFFA3, 353\},\par
02292     \{{\cf22 "?"}, 0xFF33FF1A, 354\},\par
02293     \{{\cf22 "?"}, 0xFF0FFF00, 355\},\par
02294     \{{\cf22 "?"}, 0xFF09BA00, 356\},\par
02295     \{{\cf22 "?"}, 0xFF167000, 357\},\par
02296     \{{\cf22 "?"}, 0xFFBAFF9E, 358\},\par
02297     \{{\cf22 "?"}, 0xFFA3FF82, 359\},\par
02298     \{{\cf22 "?"}, 0xFF6BFF33, 360\},\par
02299     \{{\cf22 "?"}, 0xFF4FFF00, 361\},\par
02300     \{{\cf22 "?"}, 0xFF46E800, 362\},\par
02301     \{{\cf22 "?"}, 0xFF3EC200, 363\},\par
02302     \{{\cf22 "?"}, 0xFF349400, 364\},\par
02303     \{{\cf22 "?"}, 0xFFE0FFB5, 365\},\par
02304     \{{\cf22 "?"}, 0xFFCCFF8F, 366\},\par
02305     \{{\cf22 "?"}, 0xFFADFF69, 367\},\par
02306     \{{\cf22 "?"}, 0xFF6EFF00, 368\},\par
02307     \{{\cf22 "?"}, 0xFF61ED00, 369\},\par
02308     \{{\cf22 "?"}, 0xFF52BA00, 370\},\par
02309     \{{\cf22 "?"}, 0xFF407000, 371\},\par
02310     \{{\cf22 "?"}, 0xFFE6FFAB, 372\},\par
02311     \{{\cf22 "?"}, 0xFFD6FF8A, 373\},\par
02312     \{{\cf22 "?"}, 0xFFC2FF6E, 374\},\par
02313     \{{\cf22 "?"}, 0xFF96FF38, 375\},\par
02314     \{{\cf22 "?"}, 0xFF74F200, 376\},\par
02315     \{{\cf22 "?"}, 0xFF6BC200, 377\},\par
02316     \{{\cf22 "?"}, 0xFF436600, 378\},\par
02317     \{{\cf22 "?"}, 0xFFE8FF6B, 379\},\par
02318     \{{\cf22 "?"}, 0xFFDEFF47, 380\},\par
02319     \{{\cf22 "?"}, 0xFFCCFF17, 381\},\par
02320     \{{\cf22 "?"}, 0xFFB5FF00, 382\},\par
02321     \{{\cf22 "?"}, 0xFFA5CF00, 383\},\par
02322     \{{\cf22 "?"}, 0xFF90B000, 384\},\par
02323     \{{\cf22 "?"}, 0xFF686B00, 385\},\par
02324     \{{\cf22 "?"}, 0xFFF0FF70, 386\},\par
02325     \{{\cf22 "?"}, 0xFFE6FF42, 387\},\par
02326     \{{\cf22 "?"}, 0xFFDBFF36, 388\},\par
02327     \{{\cf22 "?"}, 0xFFCCFF26, 389\},\par
02328     \{{\cf22 "?"}, 0xFFB7EB00, 390\},\par
02329     \{{\cf22 "?"}, 0xFF95AB00, 391\},\par
02330     \{{\cf22 "?"}, 0xFF798200, 392\},\par
02331     \{{\cf22 "?"}, 0xFFF7FF73, 393\},\par
02332     \{{\cf22 "?"}, 0xFFFCFF52, 3935\},\par
02333     \{{\cf22 "?"}, 0xFFF0FF3D, 394\},\par
02334     \{{\cf22 "?"}, 0xFFF7FF26, 3945\},\par
02335     \{{\cf22 "?"}, 0xFFEBFF26, 395\},\par
02336     \{{\cf22 "?"}, 0xFFF0FF00, 3955\},\par
02337     \{{\cf22 "?"}, 0xFFE3FF0F, 396\},\par
02338     \{{\cf22 "?"}, 0xFFEBFF00, 3965\},\par
02339     \{{\cf22 "?"}, 0xFFCCE300, 397\},\par
02340     \{{\cf22 "?"}, 0xFFB5B500, 3975\},\par
02341     \{{\cf22 "?"}, 0xFFABB800, 398\},\par
02342     \{{\cf22 "?"}, 0xFF969200, 3985\},\par
02343     \{{\cf22 "?"}, 0xFF919100, 399\},\par
02344     \{{\cf22 "?"}, 0xFF5C5900, 3995\},\par
02345     \{{\cf22 "?"}, 0xFFD6D0C9, 400\},\par
02346     \{{\cf22 "?"}, 0xFFC4BBAF, 401\},\par
02347     \{{\cf22 "?"}, 0xFFB0A597, 402\},\par
02348     \{{\cf22 "?"}, 0xFF918779, 403\},\par
02349     \{{\cf22 "?"}, 0xFF706758, 404\},\par
02350     \{{\cf22 "?"}, 0xFF474030, 405\},\par
02351     \{{\cf22 "?"}, 0xFFD6CBC9, 406\},\par
02352     \{{\cf22 "?"}, 0xFFBDAEAC, 407\},\par
02353     \{{\cf22 "?"}, 0xFFA89796, 408\},\par
02354     \{{\cf22 "?"}, 0xFF8C7A77, 409\},\par
02355     \{{\cf22 "?"}, 0xFF705C59, 410\},\par
02356     \{{\cf22 "?"}, 0xFF47342E, 411\},\par
02357     \{{\cf22 "?"}, 0xFF050402, 412\},\par
02358     \{{\cf22 "?"}, 0xFFCCCCBA, 413\},\par
02359     \{{\cf22 "?"}, 0xFFB3B3A1, 414\},\par
02360     \{{\cf22 "?"}, 0xFF969684, 415\},\par
02361     \{{\cf22 "?"}, 0xFF80806B, 416\},\par
02362     \{{\cf22 "?"}, 0xFF585943, 417\},\par
02363     \{{\cf22 "?"}, 0xFF3E402C, 418\},\par
02364     \{{\cf22 "?"}, 0xFF000000, 419\},\par
02365     \{{\cf22 "?"}, 0xFFD9D9D9, 420\},\par
02366     \{{\cf22 "?"}, 0xFFBDBDBD, 421\},\par
02367     \{{\cf22 "?"}, 0xFFABABAB, 422\},\par
02368     \{{\cf22 "?"}, 0xFF8F8F8F, 423\},\par
02369     \{{\cf22 "?"}, 0xFF636363, 424\},\par
02370     \{{\cf22 "?"}, 0xFF3B3B3B, 425\},\par
02371     \{{\cf22 "?"}, 0xFF000000, 426\}, {\cf20 /* TODO: duplicate case value */}\par
02372     \{{\cf22 "?"}, 0xFFE3E3E3, 427\},\par
02373     \{{\cf22 "?"}, 0xFFCDD1D1, 428\},\par
02374     \{{\cf22 "?"}, 0xFFA8ADAD, 429\},\par
02375     \{{\cf22 "?"}, 0xFF858C8C, 430\},\par
02376     \{{\cf22 "?"}, 0xFF525B5C, 431\},\par
02377     \{{\cf22 "?"}, 0xFF2D393B, 432\},\par
02378     \{{\cf22 "?"}, 0xFF090C0D, 433\},\par
02379     \{{\cf22 "?"}, 0xFFEDE6E8, 434\},\par
02380     \{{\cf22 "?"}, 0xFFDED6DB, 435\},\par
02381     \{{\cf22 "?"}, 0xFFC2BFBF, 436\},\par
02382     \{{\cf22 "?"}, 0xFF8A8C8A, 437\},\par
02383     \{{\cf22 "?"}, 0xFF394500, 438\},\par
02384     \{{\cf22 "?"}, 0xFF293300, 439\},\par
02385     \{{\cf22 "?"}, 0xFF202700, 440\},\par
02386     \{{\cf22 "?"}, 0xFFDAE8D8, 441\},\par
02387     \{{\cf22 "?"}, 0xFFBECFBC, 442\},\par
02388     \{{\cf22 "?"}, 0xFF9DB39D, 443\},\par
02389     \{{\cf22 "?"}, 0xFF7E947E, 444\},\par
02390     \{{\cf22 "?"}, 0xFF475947, 445\},\par
02391     \{{\cf22 "?"}, 0xFF324031, 446\},\par
02392     \{{\cf22 "?"}, 0xFF272E20, 447\},\par
02393     \{{\cf22 "?"}, 0xFF2D3E00, 448\},\par
02394     \{{\cf22 "?"}, 0xFF4F3A00, 4485\},\par
02395     \{{\cf22 "?"}, 0xFF3D5200, 449\},\par
02396     \{{\cf22 "?"}, 0xFF8A6E07, 4495\},\par
02397     \{{\cf22 "?"}, 0xFF506700, 450\},\par
02398     \{{\cf22 "?"}, 0xFFA38B24, 4505\},\par
02399     \{{\cf22 "?"}, 0xFFABB573, 451\},\par
02400     \{{\cf22 "?"}, 0xFFC2B061, 4515\},\par
02401     \{{\cf22 "?"}, 0xFFC2CF9C, 452\},\par
02402     \{{\cf22 "?"}, 0xFFD4C581, 4525\},\par
02403     \{{\cf22 "?"}, 0xFFDBE3BF, 453\},\par
02404     \{{\cf22 "?"}, 0xFFE3DA9F, 4535\},\par
02405     \{{\cf22 "?"}, 0xFFE8EDD6, 454\},\par
02406     \{{\cf22 "?"}, 0xFFF0E9C2, 4545\},\par
02407     \{{\cf22 "?"}, 0xFF594A00, 455\},\par
02408     \{{\cf22 "?"}, 0xFF917C00, 456\},\par
02409     \{{\cf22 "?"}, 0xFFB89C00, 457\},\par
02410     \{{\cf22 "?"}, 0xFFE6E645, 458\},\par
02411     \{{\cf22 "?"}, 0xFFF0ED73, 459\},\par
02412     \{{\cf22 "?"}, 0xFFF5F28F, 460\},\par
02413     \{{\cf22 "?"}, 0xFFF7F7A6, 461\},\par
02414     \{{\cf22 "?"}, 0xFF402600, 462\},\par
02415     \{{\cf22 "?"}, 0xFF361500, 4625\},\par
02416     \{{\cf22 "?"}, 0xFF6B3D00, 463\},\par
02417     \{{\cf22 "?"}, 0xFF8F4A06, 4635\},\par
02418     \{{\cf22 "?"}, 0xFF955300, 464\},\par
02419     \{{\cf22 "?"}, 0xFFB8743B, 4645\},\par
02420     \{{\cf22 "?"}, 0xFFCCAD6B, 465\},\par
02421     \{{\cf22 "?"}, 0xFFD19B73, 4655\},\par
02422     \{{\cf22 "?"}, 0xFFE0C791, 466\},\par
02423     \{{\cf22 "?"}, 0xFFE6BC9C, 4665\},\par
02424     \{{\cf22 "?"}, 0xFFE8D9A8, 467\},\par
02425     \{{\cf22 "?"}, 0xFFF0D5BD, 4675\},\par
02426     \{{\cf22 "?"}, 0xFFF0E8C4, 468\},\par
02427     \{{\cf22 "?"}, 0xFFF5E4D3, 4685\},\par
02428     \{{\cf22 "?"}, 0xFF4A1A00, 469\},\par
02429     \{{\cf22 "?"}, 0xFF420D00, 4695\},\par
02430     \{{\cf22 "?"}, 0xFFAB4800, 470\},\par
02431     \{{\cf22 "?"}, 0xFF823126, 4705\},\par
02432     \{{\cf22 "?"}, 0xFFD15600, 471\},\par
02433     \{{\cf22 "?"}, 0xFFA8625D, 4715\},\par
02434     \{{\cf22 "?"}, 0xFFFFA87A, 472\},\par
02435     \{{\cf22 "?"}, 0xFFBF827C, 4725\},\par
02436     \{{\cf22 "?"}, 0xFFFFC4A3, 473\},\par
02437     \{{\cf22 "?"}, 0xFFD9A9A7, 4735\},\par
02438     \{{\cf22 "?"}, 0xFFFFD9BD, 474\},\par
02439     \{{\cf22 "?"}, 0xFFE6BEBC, 4745\},\par
02440     \{{\cf22 "?"}, 0xFFFFE3CC, 475\},\par
02441     \{{\cf22 "?"}, 0xFFF0D8D3, 4755\},\par
02442     \{{\cf22 "?"}, 0xFF381C00, 476\},\par
02443     \{{\cf22 "?"}, 0xFF4F1800, 477\},\par
02444     \{{\cf22 "?"}, 0xFF6B1200, 478\},\par
02445     \{{\cf22 "?"}, 0xFFB08573, 479\},\par
02446     \{{\cf22 "?"}, 0xFFD9B5B0, 480\},\par
02447     \{{\cf22 "?"}, 0xFFE8CFC9, 481\},\par
02448     \{{\cf22 "?"}, 0xFFF2E0DE, 482\},\par
02449     \{{\cf22 "?"}, 0xFF660700, 483\},\par
02450     \{{\cf22 "?"}, 0xFFB50900, 484\},\par
02451     \{{\cf22 "?"}, 0xFFFF0D00, 485\},\par
02452     \{{\cf22 "?"}, 0xFFFF8796, 486\},\par
02453     \{{\cf22 "?"}, 0xFFFFA6B8, 487\},\par
02454     \{{\cf22 "?"}, 0xFFFFBDCF, 488\},\par
02455     \{{\cf22 "?"}, 0xFFFFD9E3, 489\},\par
02456     \{{\cf22 "?"}, 0xFF471300, 490\},\par
02457     \{{\cf22 "?"}, 0xFF7A1A00, 491\},\par
02458     \{{\cf22 "?"}, 0xFF942200, 492\},\par
02459     \{{\cf22 "?"}, 0xFFF283BB, 493\},\par
02460     \{{\cf22 "?"}, 0xFFFFABDE, 494\},\par
02461     \{{\cf22 "?"}, 0xFFFFC2E3, 495\},\par
02462     \{{\cf22 "?"}, 0xFFFFD6E8, 496\},\par
02463     \{{\cf22 "?"}, 0xFF381100, 497\},\par
02464     \{{\cf22 "?"}, 0xFF330E00, 4975\},\par
02465     \{{\cf22 "?"}, 0xFF662500, 498\},\par
02466     \{{\cf22 "?"}, 0xFF853241, 4985\},\par
02467     \{{\cf22 "?"}, 0xFF853100, 499\},\par
02468     \{{\cf22 "?"}, 0xFFA85868, 4995\},\par
02469     \{{\cf22 "?"}, 0xFFE38DB3, 500\},\par
02470     \{{\cf22 "?"}, 0xFFC47A8F, 5005\},\par
02471     \{{\cf22 "?"}, 0xFFF7B5D7, 501\},\par
02472     \{{\cf22 "?"}, 0xFFE3AAC1, 5015\},\par
02473     \{{\cf22 "?"}, 0xFFFCCFE3, 502\},\par
02474     \{{\cf22 "?"}, 0xFFEDC2D1, 5025\},\par
02475     \{{\cf22 "?"}, 0xFFFFE3EB, 503\},\par
02476     \{{\cf22 "?"}, 0xFFF7DFE1, 5035\},\par
02477     \{{\cf22 "?"}, 0xFF320000, 504\},\par
02478     \{{\cf22 "?"}, 0xFF600000, 505\},\par
02479     \{{\cf22 "?"}, 0xFF770000, 506\},\par
02480     \{{\cf22 "?"}, 0xFFDE82C4, 507\},\par
02481     \{{\cf22 "?"}, 0xFFF2A3E3, 508\},\par
02482     \{{\cf22 "?"}, 0xFFFFC2ED, 509\},\par
02483     \{{\cf22 "?"}, 0xFFFFD4F0, 510\},\par
02484     \{{\cf22 "?"}, 0xFF3D0066, 511\},\par
02485     \{{\cf22 "?"}, 0xFF2B0041, 5115\},\par
02486     \{{\cf22 "?"}, 0xFF6100CE, 512\},\par
02487     \{{\cf22 "?"}, 0xFF592482, 5125\},\par
02488     \{{\cf22 "?"}, 0xFF8A1FFF, 513\},\par
02489     \{{\cf22 "?"}, 0xFF8257B8, 5135\},\par
02490     \{{\cf22 "?"}, 0xFFD980FF, 514\},\par
02491     \{{\cf22 "?"}, 0xFFB38CE0, 5145\},\par
02492     \{{\cf22 "?"}, 0xFFED9EFF, 515\},\par
02493     \{{\cf22 "?"}, 0xFFD4B3EB, 5155\},\par
02494     \{{\cf22 "?"}, 0xFFF7BAFF, 516\},\par
02495     \{{\cf22 "?"}, 0xFFE8CFF2, 5165\},\par
02496     \{{\cf22 "?"}, 0xFFFFD1FF, 517\},\par
02497     \{{\cf22 "?"}, 0xFFF2E0F7, 5175\},\par
02498     \{{\cf22 "?"}, 0xFF2E005C, 518\},\par
02499     \{{\cf22 "?"}, 0xFF1C0022, 5185\},\par
02500     \{{\cf22 "?"}, 0xFF44009D, 519\},\par
02501     \{{\cf22 "?"}, 0xFF3D0C4E, 5195\},\par
02502     \{{\cf22 "?"}, 0xFF5C00E0, 520\},\par
02503     \{{\cf22 "?"}, 0xFF7A5E85, 5205\},\par
02504     \{{\cf22 "?"}, 0xFFBA87FF, 521\},\par
02505     \{{\cf22 "?"}, 0xFFB59EC2, 5215\},\par
02506     \{{\cf22 "?"}, 0xFFD4A1FF, 522\},\par
02507     \{{\cf22 "?"}, 0xFFD4BAD9, 5225\},\par
02508     \{{\cf22 "?"}, 0xFFE6BDFF, 523\},\par
02509     \{{\cf22 "?"}, 0xFFE6D4E6, 5235\},\par
02510     \{{\cf22 "?"}, 0xFFF0D9FF, 524\},\par
02511     \{{\cf22 "?"}, 0xFFF0E6ED, 5245\},\par
02512     \{{\cf22 "?"}, 0xFF270085, 525\},\par
02513     \{{\cf22 "?"}, 0xFF0D0B4D, 5255\},\par
02514     \{{\cf22 "?"}, 0xFF3B00ED, 526\},\par
02515     \{{\cf22 "?"}, 0xFF20258A, 5265\},\par
02516     \{{\cf22 "?"}, 0xFF4500FF, 527\},\par
02517     \{{\cf22 "?"}, 0xFF3848A8, 5275\},\par
02518     \{{\cf22 "?"}, 0xFF9673FF, 528\},\par
02519     \{{\cf22 "?"}, 0xFF7280C4, 5285\},\par
02520     \{{\cf22 "?"}, 0xFFBD99FF, 529\},\par
02521     \{{\cf22 "?"}, 0xFFA8B3E6, 5295\},\par
02522     \{{\cf22 "?"}, 0xFFD1B0FF, 530\},\par
02523     \{{\cf22 "?"}, 0xFFC7CEED, 5305\},\par
02524     \{{\cf22 "?"}, 0xFFE6CCFF, 531\},\par
02525     \{{\cf22 "?"}, 0xFFE4E4F2, 5315\},\par
02526     \{{\cf22 "?"}, 0xFF00193F, 532\},\par
02527     \{{\cf22 "?"}, 0xFF00227B, 533\},\par
02528     \{{\cf22 "?"}, 0xFF002CAA, 534\},\par
02529     \{{\cf22 "?"}, 0xFF94B3ED, 535\},\par
02530     \{{\cf22 "?"}, 0xFFB0C7F2, 536\},\par
02531     \{{\cf22 "?"}, 0xFFC7DBF7, 537\},\par
02532     \{{\cf22 "?"}, 0xFFDEE8FA, 538\},\par
02533     \{{\cf22 "?"}, 0xFF00274D, 539\},\par
02534     \{{\cf22 "?"}, 0xFF00223D, 5395\},\par
02535     \{{\cf22 "?"}, 0xFF003473, 540\},\par
02536     \{{\cf22 "?"}, 0xFF3A728A, 5405\},\par
02537     \{{\cf22 "?"}, 0xFF00449E, 541\},\par
02538     \{{\cf22 "?"}, 0xFF5A8A96, 5415\},\par
02539     \{{\cf22 "?"}, 0xFF5EC1F7, 542\},\par
02540     \{{\cf22 "?"}, 0xFF79A6AD, 5425\},\par
02541     \{{\cf22 "?"}, 0xFF96E3FF, 543\},\par
02542     \{{\cf22 "?"}, 0xFFB8CDD4, 5435\},\par
02543     \{{\cf22 "?"}, 0xFFB3F0FF, 544\},\par
02544     \{{\cf22 "?"}, 0xFFCCDCDE, 5445\},\par
02545     \{{\cf22 "?"}, 0xFFC7F7FF, 545\},\par
02546     \{{\cf22 "?"}, 0xFFDAE8E8, 5455\},\par
02547     \{{\cf22 "?"}, 0xFF02272B, 546\},\par
02548     \{{\cf22 "?"}, 0xFF002B24, 5463\},\par
02549     \{{\cf22 "?"}, 0xFF000D09, 5467\},\par
02550     \{{\cf22 "?"}, 0xFF003440, 547\},\par
02551     \{{\cf22 "?"}, 0xFF167A58, 5473\},\par
02552     \{{\cf22 "?"}, 0xFF1D4230, 5477\},\par
02553     \{{\cf22 "?"}, 0xFF00465C, 548\},\par
02554     \{{\cf22 "?"}, 0xFF43B08B, 5483\},\par
02555     \{{\cf22 "?"}, 0xFF48705D, 5487\},\par
02556     \{{\cf22 "?"}, 0xFF56ADBA, 549\},\par
02557     \{{\cf22 "?"}, 0xFF73C9AD, 5493\},\par
02558     \{{\cf22 "?"}, 0xFF829E90, 5497\},\par
02559     \{{\cf22 "?"}, 0xFF7BC1C9, 550\},\par
02560     \{{\cf22 "?"}, 0xFF9CDBC5, 5503\},\par
02561     \{{\cf22 "?"}, 0xFFA1B5A8, 5507\},\par
02562     \{{\cf22 "?"}, 0xFFA2D7DE, 551\},\par
02563     \{{\cf22 "?"}, 0xFFC7F2E1, 5513\},\par
02564     \{{\cf22 "?"}, 0xFFBED1C5, 5517\},\par
02565     \{{\cf22 "?"}, 0xFFC5E8E8, 552\},\par
02566     \{{\cf22 "?"}, 0xFFDCF7EB, 5523\},\par
02567     \{{\cf22 "?"}, 0xFFD5E3DA, 5527\},\par
02568     \{{\cf22 "?"}, 0xFF143319, 553\},\par
02569     \{{\cf22 "?"}, 0xFF102E14, 5535\},\par
02570     \{{\cf22 "?"}, 0xFF115422, 554\},\par
02571     \{{\cf22 "?"}, 0xFF327A3D, 5545\},\par
02572     \{{\cf22 "?"}, 0xFF187031, 555\},\par
02573     \{{\cf22 "?"}, 0xFF5A9E68, 5555\},\par
02574     \{{\cf22 "?"}, 0xFF66BA80, 556\},\par
02575     \{{\cf22 "?"}, 0xFF84BD8F, 5565\},\par
02576     \{{\cf22 "?"}, 0xFF98D9AD, 557\},\par
02577     \{{\cf22 "?"}, 0xFFA9D4B2, 5575\},\par
02578     \{{\cf22 "?"}, 0xFFBAE8CA, 558\},\par
02579     \{{\cf22 "?"}, 0xFFCAE6CC, 5585\},\par
02580     \{{\cf22 "?"}, 0xFFCEF0D8, 559\},\par
02581     \{{\cf22 "?"}, 0xFFDDEDDA, 5595\},\par
02582     \{{\cf22 "?"}, 0xFF0D4018, 560\},\par
02583     \{{\cf22 "?"}, 0xFF050F07, 5605\},\par
02584     \{{\cf22 "?"}, 0xFF127A38, 561\},\par
02585     \{{\cf22 "?"}, 0xFF2E522B, 5615\},\par
02586     \{{\cf22 "?"}, 0xFF1AB058, 562\},\par
02587     \{{\cf22 "?"}, 0xFF5A7D57, 5625\},\par
02588     \{{\cf22 "?"}, 0xFF79FCAC, 563\},\par
02589     \{{\cf22 "?"}, 0xFF89A386, 5635\},\par
02590     \{{\cf22 "?"}, 0xFFA1FFCC, 564\},\par
02591     \{{\cf22 "?"}, 0xFFAEBFA6, 5645\},\par
02592     \{{\cf22 "?"}, 0xFFC4FFDE, 565\},\par
02593     \{{\cf22 "?"}, 0xFFC5D1BE, 5655\},\par
02594     \{{\cf22 "?"}, 0xFFDBFFE8, 566\},\par
02595     \{{\cf22 "?"}, 0xFFDAE6D5, 5665\},\par
02596     \{{\cf22 "?"}, 0xFF0E4D1C, 567\},\par
02597     \{{\cf22 "?"}, 0xFF14A346, 568\},\par
02598     \{{\cf22 "?"}, 0xFF04D45B, 569\},\par
02599     \{{\cf22 "?"}, 0xFF85FFB5, 570\},\par
02600     \{{\cf22 "?"}, 0xFFADFFCF, 571\},\par
02601     \{{\cf22 "?"}, 0xFFC4FFDB, 572\},\par
02602     \{{\cf22 "?"}, 0xFFDBFFE8, 573\}, {\cf20 /* TODO: duplicate case value */}\par
02603     \{{\cf22 "?"}, 0xFF314A0E, 574\},\par
02604     \{{\cf22 "?"}, 0xFF1F2E07, 5743\},\par
02605     \{{\cf22 "?"}, 0xFF243600, 5747\},\par
02606     \{{\cf22 "?"}, 0xFF3E7800, 575\},\par
02607     \{{\cf22 "?"}, 0xFF3F5410, 5753\},\par
02608     \{{\cf22 "?"}, 0xFF547306, 5757\},\par
02609     \{{\cf22 "?"}, 0xFF4F9C00, 576\},\par
02610     \{{\cf22 "?"}, 0xFF5C6E1D, 5763\},\par
02611     \{{\cf22 "?"}, 0xFF849C32, 5767\},\par
02612     \{{\cf22 "?"}, 0xFFAEE67C, 577\},\par
02613     \{{\cf22 "?"}, 0xFF909E5A, 5773\},\par
02614     \{{\cf22 "?"}, 0xFFA5B85E, 5777\},\par
02615     \{{\cf22 "?"}, 0xFFC0F090, 578\},\par
02616     \{{\cf22 "?"}, 0xFFAFBA86, 5783\},\par
02617     \{{\cf22 "?"}, 0xFFCEDE99, 5787\},\par
02618     \{{\cf22 "?"}, 0xFFCDF7A3, 579\},\par
02619     \{{\cf22 "?"}, 0xFFC9D1A5, 5793\},\par
02620     \{{\cf22 "?"}, 0xFFDCE8B0, 5797\},\par
02621     \{{\cf22 "?"}, 0xFFDCFAB9, 580\},\par
02622     \{{\cf22 "?"}, 0xFFDEE3C8, 5803\},\par
02623     \{{\cf22 "?"}, 0xFFE9F0CE, 5807\},\par
02624     \{{\cf22 "?"}, 0xFF464700, 581\},\par
02625     \{{\cf22 "?"}, 0xFF363605, 5815\},\par
02626     \{{\cf22 "?"}, 0xFF788A00, 582\},\par
02627     \{{\cf22 "?"}, 0xFF69660E, 5825\},\par
02628     \{{\cf22 "?"}, 0xFFA3D400, 583\},\par
02629     \{{\cf22 "?"}, 0xFF999632, 5835\},\par
02630     \{{\cf22 "?"}, 0xFFD3F032, 584\},\par
02631     \{{\cf22 "?"}, 0xFFB3B15F, 5845\},\par
02632     \{{\cf22 "?"}, 0xFFDEFA55, 585\},\par
02633     \{{\cf22 "?"}, 0xFFD1D190, 5855\},\par
02634     \{{\cf22 "?"}, 0xFFE8FF78, 586\},\par
02635     \{{\cf22 "?"}, 0xFFDEDEA6, 5865\},\par
02636     \{{\cf22 "?"}, 0xFFF2FF99, 587\},\par
02637     \{{\cf22 "?"}, 0xFFEBEBC0, 5875\},\par
02638     \{{\cf22 "?"}, 0xFFFFFFB5, 600\},\par
02639     \{{\cf22 "?"}, 0xFFFFFF99, 601\},\par
02640     \{{\cf22 "?"}, 0xFFFFFF7D, 602\}, {\cf20 /* TODO: duplicate case value */}\par
02641     \{{\cf22 "?"}, 0xFFFCFC4E, 603\},\par
02642     \{{\cf22 "?"}, 0xFFF7F71E, 604\},\par
02643     \{{\cf22 "?"}, 0xFFEDE800, 605\},\par
02644     \{{\cf22 "?"}, 0xFFE0D700, 606\},\par
02645     \{{\cf22 "?"}, 0xFFFCFCCF, 607\},\par
02646     \{{\cf22 "?"}, 0xFFFAFAAA, 608\},\par
02647     \{{\cf22 "?"}, 0xFFF5F584, 609\},\par
02648     \{{\cf22 "?"}, 0xFFF0F065, 610\},\par
02649     \{{\cf22 "?"}, 0xFFE3E112, 611\},\par
02650     \{{\cf22 "?"}, 0xFFCCC800, 612\},\par
02651     \{{\cf22 "?"}, 0xFFB3AB00, 613\},\par
02652     \{{\cf22 "?"}, 0xFFF5F5C4, 614\},\par
02653     \{{\cf22 "?"}, 0xFFF0EDAF, 615\},\par
02654     \{{\cf22 "?"}, 0xFFE8E397, 616\},\par
02655     \{{\cf22 "?"}, 0xFFD4CF6E, 617\},\par
02656     \{{\cf22 "?"}, 0xFFB3AD17, 618\},\par
02657     \{{\cf22 "?"}, 0xFF918C00, 619\},\par
02658     \{{\cf22 "?"}, 0xFF787200, 620\},\par
02659     \{{\cf22 "?"}, 0xFFD9FAE1, 621\},\par
02660     \{{\cf22 "?"}, 0xFFBAF5C6, 622\},\par
02661     \{{\cf22 "?"}, 0xFF9CE6AE, 623\},\par
02662     \{{\cf22 "?"}, 0xFF72CC85, 624\},\par
02663     \{{\cf22 "?"}, 0xFF4BAB60, 625\},\par
02664     \{{\cf22 "?"}, 0xFF175E22, 626\},\par
02665     \{{\cf22 "?"}, 0xFF04290A, 627\},\par
02666     \{{\cf22 "?"}, 0xFFCFFFF0, 628\},\par
02667     \{{\cf22 "?"}, 0xFFA8FFE8, 629\},\par
02668     \{{\cf22 "?"}, 0xFF87FFE3, 630\},\par
02669     \{{\cf22 "?"}, 0xFF52FADC, 631\},\par
02670     \{{\cf22 "?"}, 0xFF13F2CE, 632\},\par
02671     \{{\cf22 "?"}, 0xFF00BFAC, 633\},\par
02672     \{{\cf22 "?"}, 0xFF00998B, 634\},\par
02673     \{{\cf22 "?"}, 0xFFADFFEB, 635\},\par
02674     \{{\cf22 "?"}, 0xFF8CFFE8, 636\},\par
02675     \{{\cf22 "?"}, 0xFF73FFE8, 637\},\par
02676     \{{\cf22 "?"}, 0xFF2BFFE6, 638\},\par
02677     \{{\cf22 "?"}, 0xFF00F2E6, 639\},\par
02678     \{{\cf22 "?"}, 0xFF00C7C7, 640\},\par
02679     \{{\cf22 "?"}, 0xFF00ABB3, 641\},\par
02680     \{{\cf22 "?"}, 0xFFD2F0FA, 642\},\par
02681     \{{\cf22 "?"}, 0xFFB8E4F5, 643\},\par
02682     \{{\cf22 "?"}, 0xFF8BCCF0, 644\},\par
02683     \{{\cf22 "?"}, 0xFF64A7E8, 645\},\par
02684     \{{\cf22 "?"}, 0xFF4696E3, 646\},\par
02685     \{{\cf22 "?"}, 0xFF0056C4, 647\},\par
02686     \{{\cf22 "?"}, 0xFF002D75, 648\},\par
02687     \{{\cf22 "?"}, 0xFFD9EDFC, 649\},\par
02688     \{{\cf22 "?"}, 0xFFBEE3FA, 650\},\par
02689     \{{\cf22 "?"}, 0xFF95C5F0, 651\},\par
02690     \{{\cf22 "?"}, 0xFF5C97E6, 652\},\par
02691     \{{\cf22 "?"}, 0xFF004ECC, 653\},\par
02692     \{{\cf22 "?"}, 0xFF00399E, 654\},\par
02693     \{{\cf22 "?"}, 0xFF002B7A, 655\},\par
02694     \{{\cf22 "?"}, 0xFFDBF5FF, 656\},\par
02695     \{{\cf22 "?"}, 0xFFC2EBFF, 657\},\par
02696     \{{\cf22 "?"}, 0xFF96CCFF, 658\},\par
02697     \{{\cf22 "?"}, 0xFF5CA6FF, 659\},\par
02698     \{{\cf22 "?"}, 0xFF1A6EFF, 660\},\par
02699     \{{\cf22 "?"}, 0xFF0048E8, 661\},\par
02700     \{{\cf22 "?"}, 0xFF003BD1, 662\}, {\cf20 /* TODO: duplicate case value */}\par
02701     \{{\cf22 "?"}, 0xFFEDF0FF, 663\},\par
02702     \{{\cf22 "?"}, 0xFFE3E8FF, 664\},\par
02703     \{{\cf22 "?"}, 0xFFC8CFFA, 665\},\par
02704     \{{\cf22 "?"}, 0xFFA4A6ED, 666\},\par
02705     \{{\cf22 "?"}, 0xFF6970DB, 667\},\par
02706     \{{\cf22 "?"}, 0xFF3E40B3, 668\},\par
02707     \{{\cf22 "?"}, 0xFF201E87, 669\},\par
02708     \{{\cf22 "?"}, 0xFFFFDEFF, 670\},\par
02709     \{{\cf22 "?"}, 0xFFFCCCFF, 671\},\par
02710     \{{\cf22 "?"}, 0xFFF7A8FF, 672\},\par
02711     \{{\cf22 "?"}, 0xFFF082FF, 673\},\par
02712     \{{\cf22 "?"}, 0xFFE854FF, 674\},\par
02713     \{{\cf22 "?"}, 0xFFCD00F7, 675\},\par
02714     \{{\cf22 "?"}, 0xFFBB00C7, 676\},\par
02715     \{{\cf22 "?"}, 0xFFFADEFF, 677\},\par
02716     \{{\cf22 "?"}, 0xFFF7C9FF, 678\},\par
02717     \{{\cf22 "?"}, 0xFFF2BAFF, 679\},\par
02718     \{{\cf22 "?"}, 0xFFE18EFA, 680\},\par
02719     \{{\cf22 "?"}, 0xFFC15FF5, 681\},\par
02720     \{{\cf22 "?"}, 0xFFA82FE0, 682\},\par
02721     \{{\cf22 "?"}, 0xFF810091, 683\},\par
02722     \{{\cf22 "?"}, 0xFFFACFFA, 684\},\par
02723     \{{\cf22 "?"}, 0xFFF7BAF7, 685\},\par
02724     \{{\cf22 "?"}, 0xFFF2AAF2, 686\},\par
02725     \{{\cf22 "?"}, 0xFFDC7EE0, 687\},\par
02726     \{{\cf22 "?"}, 0xFFC459CF, 688\},\par
02727     \{{\cf22 "?"}, 0xFF9D27A8, 689\},\par
02728     \{{\cf22 "?"}, 0xFF690369, 690\},\par
02729     \{{\cf22 "?"}, 0xFFFCD7E8, 691\},\par
02730     \{{\cf22 "?"}, 0xFFFAC0E1, 692\},\par
02731     \{{\cf22 "?"}, 0xFFF0A8D3, 693\},\par
02732     \{{\cf22 "?"}, 0xFFE683BA, 694\},\par
02733     \{{\cf22 "?"}, 0xFFBF508A, 695\},\par
02734     \{{\cf22 "?"}, 0xFF991846, 696\},\par
02735     \{{\cf22 "?"}, 0xFF7D0925, 697\},\par
02736     \{{\cf22 "?"}, 0xFFFFD6EB, 698\},\par
02737     \{{\cf22 "?"}, 0xFFFFC2E6, 699\},\par
02738     \{{\cf22 "?"}, 0xFFFFA3DB, 700\},\par
02739     \{{\cf22 "?"}, 0xFFFF78CC, 701\},\par
02740     \{{\cf22 "?"}, 0xFFF24BA0, 702\},\par
02741     \{{\cf22 "?"}, 0xFFD62463, 703\},\par
02742     \{{\cf22 "?"}, 0xFFBA0025, 704\},\par
02743     \{{\cf22 "?"}, 0xFFFFE8F2, 705\},\par
02744     \{{\cf22 "?"}, 0xFFFFD4E6, 706\},\par
02745     \{{\cf22 "?"}, 0xFFFFB3DB, 707\},\par
02746     \{{\cf22 "?"}, 0xFFFF8AC7, 708\},\par
02747     \{{\cf22 "?"}, 0xFFFF579E, 709\},\par
02748     \{{\cf22 "?"}, 0xFFFF366B, 710\},\par
02749     \{{\cf22 "?"}, 0xFFFA0032, 711\},\par
02750     \{{\cf22 "?"}, 0xFFFFDBB0, 712\},\par
02751     \{{\cf22 "?"}, 0xFFFFCF96, 713\},\par
02752     \{{\cf22 "?"}, 0xFFFFB875, 714\},\par
02753     \{{\cf22 "?"}, 0xFFFFA14A, 715\},\par
02754     \{{\cf22 "?"}, 0xFFFF8717, 716\},\par
02755     \{{\cf22 "?"}, 0xFFFA7000, 717\},\par
02756     \{{\cf22 "?"}, 0xFFEB6300, 718\},\par
02757     \{{\cf22 "?"}, 0xFFFFE6BF, 719\},\par
02758     \{{\cf22 "?"}, 0xFFFCD7A7, 720\},\par
02759     \{{\cf22 "?"}, 0xFFF7BC77, 721\},\par
02760     \{{\cf22 "?"}, 0xFFE89538, 722\},\par
02761     \{{\cf22 "?"}, 0xFFD4740B, 723\},\par
02762     \{{\cf22 "?"}, 0xFFA14C00, 724\},\par
02763     \{{\cf22 "?"}, 0xFF823B00, 725\},\par
02764     \{{\cf22 "?"}, 0xFFFAE6C0, 726\},\par
02765     \{{\cf22 "?"}, 0xFFF2CEA0, 727\},\par
02766     \{{\cf22 "?"}, 0xFFE6B577, 728\},\par
02767     \{{\cf22 "?"}, 0xFFD19052, 729\},\par
02768     \{{\cf22 "?"}, 0xFFB56E2B, 730\},\par
02769     \{{\cf22 "?"}, 0xFF753700, 731\},\par
02770     \{{\cf22 "?"}, 0xFF5C2800, 732\},\par
02771     \{{\cf22 "?"}, 0xFFFFF5D1, 7401\},\par
02772     \{{\cf22 "?"}, 0xFFFFF0B3, 7402\},\par
02773     \{{\cf22 "?"}, 0xFFFFE680, 7403\},\par
02774     \{{\cf22 "?"}, 0xFFFFE833, 7404\}, {\cf20 /* TODO: duplicate case value */}\par
02775     \{{\cf22 "?"}, 0xFFFFE600, 7405\}, {\cf20 /* TODO: duplicate case value */}\par
02776     \{{\cf22 "?"}, 0xFFFFD100, 7406\},\par
02777     \{{\cf22 "?"}, 0xFFE3B122, 7407\},\par
02778     \{{\cf22 "?"}, 0xFFFFBF0D, 7408\},\par
02779     \{{\cf22 "?"}, 0xFFFFB30D, 7409\},\par
02780     \{{\cf22 "?"}, 0xFFFFB373, 7410\},\par
02781     \{{\cf22 "?"}, 0xFFFFA64F, 7411\},\par
02782     \{{\cf22 "?"}, 0xFFED8A00, 7412\},\par
02783     \{{\cf22 "?"}, 0xFFF57300, 7413\},\par
02784     \{{\cf22 "?"}, 0xFFE37B00, 7414\},\par
02785     \{{\cf22 "?"}, 0xFFFFD1D9, 7415\},\par
02786     \{{\cf22 "?"}, 0xFFFF6666, 7416\},\par
02787     \{{\cf22 "?"}, 0xFFFF4040, 7417\},\par
02788     \{{\cf22 "?"}, 0xFFF24961, 7418\},\par
02789     \{{\cf22 "?"}, 0xFFD15473, 7419\},\par
02790     \{{\cf22 "?"}, 0xFFCC2976, 7420\},\par
02791     \{{\cf22 "?"}, 0xFF630046, 7421\},\par
02792     \{{\cf22 "?"}, 0xFFFFE8F2, 7422\}, {\cf20 /* TODO: duplicate case value */}\par
02793     \{{\cf22 "?"}, 0xFFFF73C7, 7423\}, {\cf20 /* TODO: duplicate case value */}\par
02794     \{{\cf22 "?"}, 0xFFFF40B3, 7424\},\par
02795     \{{\cf22 "?"}, 0xFFED18A6, 7425\},\par
02796     \{{\cf22 "?"}, 0xFFD10073, 7426\},\par
02797     \{{\cf22 "?"}, 0xFFB80040, 7427\},\par
02798     \{{\cf22 "?"}, 0xFF73173F, 7428\},\par
02799     \{{\cf22 "?"}, 0xFFFFD1F7, 7429\},\par
02800     \{{\cf22 "?"}, 0xFFFAB0FF, 7430\},\par
02801     \{{\cf22 "?"}, 0xFFF296ED, 7431\},\par
02802     \{{\cf22 "?"}, 0xFFE667DF, 7432\},\par
02803     \{{\cf22 "?"}, 0xFFD936B8, 7433\},\par
02804     \{{\cf22 "?"}, 0xFFCC29AD, 7434\},\par
02805     \{{\cf22 "?"}, 0xFFA60095, 7435\},\par
02806     \{{\cf22 "?"}, 0xFFF7EBFF, 7436\},\par
02807     \{{\cf22 "?"}, 0xFFF0CCFF, 7437\},\par
02808     \{{\cf22 "?"}, 0xFFD9A6FF, 7438\},\par
02809     \{{\cf22 "?"}, 0xFFCCA6FF, 7439\},\par
02810     \{{\cf22 "?"}, 0xFFB399FF, 7440\},\par
02811     \{{\cf22 "?"}, 0xFFA380FF, 7441\},\par
02812     \{{\cf22 "?"}, 0xFF804DFF, 7442\},\par
02813     \{{\cf22 "?"}, 0xFFF0F2FF, 7443\},\par
02814     \{{\cf22 "?"}, 0xFFCCD4FF, 7444\},\par
02815     \{{\cf22 "?"}, 0xFFADC6F7, 7445\},\par
02816     \{{\cf22 "?"}, 0xFF919EFF, 7446\},\par
02817     \{{\cf22 "?"}, 0xFF5357CF, 7447\},\par
02818     \{{\cf22 "?"}, 0xFF4E4373, 7448\},\par
02819     \{{\cf22 "?"}, 0xFF270020, 7449\},\par
02820     \{{\cf22 "?"}, 0xFFCCE6FF, 7450\},\par
02821     \{{\cf22 "?"}, 0xFF99C9FF, 7451\},\par
02822     \{{\cf22 "?"}, 0xFF80ADFF, 7452\},\par
02823     \{{\cf22 "?"}, 0xFF80BDFF, 7453\},\par
02824     \{{\cf22 "?"}, 0xFF73AEE6, 7454\},\par
02825     \{{\cf22 "?"}, 0xFF3378FF, 7455\},\par
02826     \{{\cf22 "?"}, 0xFF6B9AED, 7456\},\par
02827     \{{\cf22 "?"}, 0xFFE0FFFA, 7457\},\par
02828     \{{\cf22 "?"}, 0xFF90F0E4, 7458\},\par
02829     \{{\cf22 "?"}, 0xFF5FDED1, 7459\},\par
02830     \{{\cf22 "?"}, 0xFF00F2F2, 7460\},\par
02831     \{{\cf22 "?"}, 0xFF38B8FF, 7461\},\par
02832     \{{\cf22 "?"}, 0xFF0073E6, 7462\},\par
02833     \{{\cf22 "?"}, 0xFF003359, 7463\},\par
02834     \{{\cf22 "?"}, 0xFFBFFFE6, 7464\},\par
02835     \{{\cf22 "?"}, 0xFF80FFBF, 7465\},\par
02836     \{{\cf22 "?"}, 0xFF4DFFC4, 7466\},\par
02837     \{{\cf22 "?"}, 0xFF0DFFBF, 7467\},\par
02838     \{{\cf22 "?"}, 0xFF00A5B8, 7468\},\par
02839     \{{\cf22 "?"}, 0xFF007A99, 7469\},\par
02840     \{{\cf22 "?"}, 0xFF1C778C, 7470\},\par
02841     \{{\cf22 "?"}, 0xFFB8FFDB, 7471\},\par
02842     \{{\cf22 "?"}, 0xFF7AFFBF, 7472\},\par
02843     \{{\cf22 "?"}, 0xFF46EB91, 7473\},\par
02844     \{{\cf22 "?"}, 0xFF14C78F, 7474\},\par
02845     \{{\cf22 "?"}, 0xFF59B386, 7475\},\par
02846     \{{\cf22 "?"}, 0xFF00663A, 7476\},\par
02847     \{{\cf22 "?"}, 0xFF105249, 7477\},\par
02848     \{{\cf22 "?"}, 0xFFD1FFDB, 7478\},\par
02849     \{{\cf22 "?"}, 0xFF73FF80, 7479\},\par
02850     \{{\cf22 "?"}, 0xFF66FF80, 7480\},\par
02851     \{{\cf22 "?"}, 0xFF66FF73, 7481\},\par
02852     \{{\cf22 "?"}, 0xFF33FF40, 7482\},\par
02853     \{{\cf22 "?"}, 0xFF117300, 7483\},\par
02854     \{{\cf22 "?"}, 0xFF008013, 7484\},\par
02855     \{{\cf22 "?"}, 0xFFF0FFE6, 7485\},\par
02856     \{{\cf22 "?"}, 0xFFCCFFB3, 7486\},\par
02857     \{{\cf22 "?"}, 0xFFB3FF8C, 7487\},\par
02858     \{{\cf22 "?"}, 0xFF91FF66, 7488\},\par
02859     \{{\cf22 "?"}, 0xFF5FED2F, 7489\},\par
02860     \{{\cf22 "?"}, 0xFF5BA621, 7490\},\par
02861     \{{\cf22 "?"}, 0xFF689900, 7491\},\par
02862     \{{\cf22 "?"}, 0xFFD1ED77, 7492\},\par
02863     \{{\cf22 "?"}, 0xFFC5E693, 7493\},\par
02864     \{{\cf22 "?"}, 0xFFA3D982, 7494\},\par
02865     \{{\cf22 "?"}, 0xFF86B324, 7495\},\par
02866     \{{\cf22 "?"}, 0xFF5F9E00, 7496\},\par
02867     \{{\cf22 "?"}, 0xFF738639, 7497\},\par
02868     \{{\cf22 "?"}, 0xFF263300, 7498\},\par
02869     \{{\cf22 "?"}, 0xFFFFFAD9, 7499\},\par
02870     \{{\cf22 "?"}, 0xFFF7F2D2, 7500\},\par
02871     \{{\cf22 "?"}, 0xFFF0E6C0, 7501\},\par
02872     \{{\cf22 "?"}, 0xFFE6D395, 7502\},\par
02873     \{{\cf22 "?"}, 0xFFBFA87C, 7503\},\par
02874     \{{\cf22 "?"}, 0xFF997354, 7504\},\par
02875     \{{\cf22 "?"}, 0xFF735022, 7505\},\par
02876     \{{\cf22 "?"}, 0xFFFFF2D9, 7506\},\par
02877     \{{\cf22 "?"}, 0xFFFFE6B3, 7507\},\par
02878     \{{\cf22 "?"}, 0xFFF5D093, 7508\},\par
02879     \{{\cf22 "?"}, 0xFFF2C279, 7509\},\par
02880     \{{\cf22 "?"}, 0xFFE39F40, 7510\},\par
02881     \{{\cf22 "?"}, 0xFFBF6900, 7511\},\par
02882     \{{\cf22 "?"}, 0xFFAB5C00, 7512\},\par
02883     \{{\cf22 "?"}, 0xFFF7CBB2, 7513\},\par
02884     \{{\cf22 "?"}, 0xFFF2B896, 7514\},\par
02885     \{{\cf22 "?"}, 0xFFE09270, 7515\},\par
02886     \{{\cf22 "?"}, 0xFFA65000, 7516\},\par
02887     \{{\cf22 "?"}, 0xFF8F3900, 7517\},\par
02888     \{{\cf22 "?"}, 0xFF663D2E, 7518\},\par
02889     \{{\cf22 "?"}, 0xFF423500, 7519\},\par
02890     \{{\cf22 "?"}, 0xFFFFD6CF, 7520\},\par
02891     \{{\cf22 "?"}, 0xFFE6ACB8, 7521\},\par
02892     \{{\cf22 "?"}, 0xFFD68196, 7522\},\par
02893     \{{\cf22 "?"}, 0xFFCC7A85, 7523\},\par
02894     \{{\cf22 "?"}, 0xFFBA544A, 7524\},\par
02895     \{{\cf22 "?"}, 0xFFB36259, 7525\},\par
02896     \{{\cf22 "?"}, 0xFFA63A00, 7526\},\par
02897     \{{\cf22 "?"}, 0xFFEDE8DF, 7527\},\par
02898     \{{\cf22 "?"}, 0xFFE6DFCF, 7528\},\par
02899     \{{\cf22 "?"}, 0xFFD4CBBA, 7529\},\par
02900     \{{\cf22 "?"}, 0xFFADA089, 7530\},\par
02901     \{{\cf22 "?"}, 0xFF80735D, 7531\},\par
02902     \{{\cf22 "?"}, 0xFF594A2D, 7532\},\par
02903     \{{\cf22 "?"}, 0xFF261E06, 7533\},\par
02904     \{{\cf22 "?"}, 0xFFE6E1D3, 7534\},\par
02905     \{{\cf22 "?"}, 0xFFCCC6AD, 7535\},\par
02906     \{{\cf22 "?"}, 0xFFADA687, 7536\},\par
02907     \{{\cf22 "?"}, 0xFFC6CCB8, 7537\},\par
02908     \{{\cf22 "?"}, 0xFFA2B39B, 7538\},\par
02909     \{{\cf22 "?"}, 0xFFA0A395, 7539\},\par
02910     \{{\cf22 "?"}, 0xFF474747, 7540\},\par
02911     \{{\cf22 "?"}, 0xFFEDF2F2, 7541\},\par
02912     \{{\cf22 "?"}, 0xFFC1D6D0, 7542\},\par
02913     \{{\cf22 "?"}, 0xFFA6B3B3, 7543\},\par
02914     \{{\cf22 "?"}, 0xFF8A9799, 7544\},\par
02915     \{{\cf22 "?"}, 0xFF495C5E, 7545\},\par
02916     \{{\cf22 "?"}, 0xFF304547, 7546\},\par
02917     \{{\cf22 "?"}, 0xFF0A0F0F, 7547\},\par
02918     \{{\cf22 "END"}, 0, -1\}\par
02919 \};\par
02920 \par
02921 {\cf20 /* Based on the manufacturer table at }\par
02922 {\cf20  *   https://help.brother-usa.com/app/answers/detail/a_id/75245/~/thread-color-conversion-chart}\par
02923 {\cf20  * using a colour picker.}\par
02924 {\cf20  */}\par
02925 thread_color RobisonAnton_Polyester_codes[] = \{\par
02926     \{{\cf22 "Black"}, 0xFF000000, 5596\},\par
02927     \{{\cf22 "White"}, 0xFFFFFFFF, 5597\},\par
02928     {\cf20 /* unfinished */}\par
02929     \{{\cf22 "END"}, 0, -1\}\par
02930 \};\par
02931 \par
02932 thread_color RobisonAnton_Rayon_codes[] = \{\par
02933     \{{\cf22 "Light Pink"}, 0xFFEFCCCE, 2243\},\par
02934     \{{\cf22 "Pink"}, 0xFFFCBFC9, 2223\},\par
02935     \{{\cf22 "Pink Bazaar"}, 0xFFEFC6D3, 2599\},\par
02936     \{{\cf22 "Pink Mist"}, 0xFFF9B2B7, 2373\},\par
02937     \{{\cf22 "Emily Pink"}, 0xFFF9AFAD, 2374\},\par
02938     \{{\cf22 "Rose"}, 0xFFFC9BB2, 2293\},\par
02939     \{{\cf22 "Rose Cerise"}, 0xFFFC8C99, 2244\},\par
02940     \{{\cf22 "Carnation"}, 0xFFF2AFC1, 2237\},\par
02941     \{{\cf22 "Shrimp"}, 0xFFE5566D, 2246\},\par
02942     \{{\cf22 "Bashful Pink"}, 0xFFF4476B, 2248\},\par
02943     \{{\cf22 "Begonia"}, 0xFFE5566D, 2228\}, {\cf20 /* TODO: duplicate case value */}\par
02944     \{{\cf22 "Azalea"}, 0xFFF9848E, 2412\},\par
02945     \{{\cf22 "Dusty Rose"}, 0xFFF26877, 2375\},\par
02946     \{{\cf22 "Rose Tint"}, 0xFFD8899B, 2591\},\par
02947     \{{\cf22 "Burgundy"}, 0xFF8C2633, 2249\},\par
02948     \{{\cf22 "TH Burgundy"}, 0xFF7C2128, 2608\},\par
02949     \{{\cf22 "Russet"}, 0xFF7A2638, 2252\},\par
02950     \{{\cf22 "Pro Firebrand"}, 0xFF75263D, 2622\},\par
02951     \{{\cf22 "Wine"}, 0xFF772D35, 2225\},\par
02952     \{{\cf22 "Intense Maroon"}, 0xFF593344, 2587\},\par
02953     \{{\cf22 "Dark Maroon"}, 0xFF4F213A, 2376\},\par
02954     \{{\cf22 "Carbernet"}, 0xFF931638, 2494\},\par
02955     \{{\cf22 "Mountain Rose"}, 0xFFF9B2B7, 2495\}, {\cf20 /* TODO: duplicate case value */}\par
02956     \{{\cf22 "Warm Wine"}, 0xFF661E2B, 2496\},\par
02957     \{{\cf22 "Primrose"}, 0xFFE5566D, 2491\}, {\cf20 /* TODO: duplicate case value */}\par
02958     \{{\cf22 "Perfect Ruby"}, 0xFF8E2344, 2497\},\par
02959     \{{\cf22 "Brushed Burgundy"}, 0xFF6D213F, 2498\},\par
02960     \{{\cf22 "Passion Rose"}, 0xFF8E2344, 2499\}, {\cf20 /* TODO: duplicate case value */}\par
02961     \{{\cf22 "New Berry"}, 0xFFAD0075, 2500\},\par
02962     \{{\cf22 "Petal Pink"}, 0xFFFCC9C6, 2501\},\par
02963     \{{\cf22 "Memphis Belle"}, 0xFFF4BFD1, 2502\},\par
02964     \{{\cf22 "Desert Bloom"}, 0xFFF7BFBF, 2503\},\par
02965     \{{\cf22 "Wild Pink"}, 0xFFCE007C, 2259\},\par
02966     \{{\cf22 "Floral Pink"}, 0xFFED72AA, 2415\},\par
02967     \{{\cf22 "Hot Pink"}, 0xFFD36B9E, 2260\},\par
02968     \{{\cf22 "Crimson"}, 0xFFD60270, 2416\},\par
02969     \{{\cf22 "Ruby Glint"}, 0xFFE22882, 2261\},\par
02970     \{{\cf22 "Cherrystone"}, 0xFFAA004F, 2504\},\par
02971     \{{\cf22 "Cherry Punch"}, 0xFFAA004F, 2417\}, {\cf20 /* TODO: duplicate case value */}\par
02972     \{{\cf22 "Cherry Blossom"}, 0xFFEA0F6B, 2262\},\par
02973     \{{\cf22 "Red Berry"}, 0xFFAF1E2D, 2418\},\par
02974     \{{\cf22 "Jockey Red"}, 0xFFBF0A30, 2281\},\par
02975     \{{\cf22 "Very Red"}, 0xFFBF0A30, 2419\}, {\cf20 /* TODO: duplicate case value */}\par
02976     \{{\cf22 "Red Berry"}, 0xFFBF0A30, 2378\}, {\cf20 /* TODO: duplicate case value */}\par
02977     \{{\cf22 "Foxy Red"}, 0xFFCE1126, 2263\},\par
02978     \{{\cf22 "Tuxedo Red"}, 0xFFD62828, 2420\},\par
02979     \{{\cf22 "Lipstick"}, 0xFFBF0A30, 2233\}, {\cf20 /* TODO: duplicate case value */}\par
02980     \{{\cf22 "Scarlet"}, 0xFFC41E3A, 2219\},\par
02981     \{{\cf22 "Radiant Red"}, 0xFFC41E3A, 2266\}, {\cf20 /* TODO: duplicate case value */}\par
02982     \{{\cf22 "Wildfire"}, 0xFFA32638, 2267\},\par
02983     \{{\cf22 "Carolina Red"}, 0xFF8C2633, 2268\}, {\cf20 /* TODO: duplicate case value */}\par
02984     \{{\cf22 "Red Jubilee"}, 0xFF75263D, 2421\}, {\cf20 /* TODO: duplicate case value */}\par
02985     \{{\cf22 "Cranberry"}, 0xFF992135, 2270\},\par
02986     \{{\cf22 "Antique Red"}, 0xFFA32638, 2505\}, {\cf20 /* TODO: duplicate case value */}\par
02987     \{{\cf22 "Devil Red"}, 0xFFC41E3A, 2506\}, {\cf20 /* TODO: duplicate case value */}\par
02988     \{{\cf22 "Rosewood"}, 0xFFD81C3F, 2508\},\par
02989     \{{\cf22 "Bitteroot"}, 0xFFFC5E72, 2509\},\par
02990     \{{\cf22 "Bisque"}, 0xFFF2C4AF, 2377\},\par
02991     \{{\cf22 "Flesh"}, 0xFFF4CCAA, 2413\},\par
02992     \{{\cf22 "Flesh Pink"}, 0xFFF9BAAA, 2253\},\par
02993     \{{\cf22 "Opal Mist"}, 0xFFF7BFBF, 2255\}, {\cf20 /* TODO: duplicate case value */}\par
02994     \{{\cf22 "Candy Apple Red"}, 0xFFAF003D, 2507\},\par
02995     \{{\cf22 "Tawny"}, 0xFFF9BF9E, 2256\},\par
02996     \{{\cf22 "Peach"}, 0xFFF9C6AA, 2257\},\par
02997     \{{\cf22 "Melon"}, 0xFFF98E6D, 2294\},\par
02998     \{{\cf22 "Flamingo"}, 0xFFF9A58C, 2258\},\par
02999     \{{\cf22 "Coral"}, 0xFFF98972, 2414\},\par
03000     \{{\cf22 "Persimmon"}, 0xFFF43F4F, 2277\},\par
03001     \{{\cf22 "Peach Blossom"}, 0xFFF9C6AA, 2510\}, {\cf20 /* TODO: duplicate case value */}\par
03002     \{{\cf22 "Illusion"}, 0xFFF9BAAA, 2511\}, {\cf20 /* TODO: duplicate case value */}\par
03003     \{{\cf22 "Melonade"}, 0xFFF98972, 2512\}, {\cf20 /* TODO: duplicate case value */}\par
03004     \{{\cf22 "Honeysuckle"}, 0xFFE23D28, 2513\},\par
03005     \{{\cf22 "Brite Jade"}, 0xFF008C82, 2514\},\par
03006     \{{\cf22 "Bluestone"}, 0xFF00B2A0, 2515\},\par
03007     \{{\cf22 "Aqua Pearl"}, 0xFF47D6C1, 2516\},\par
03008     \{{\cf22 "Seafrost"}, 0xFF87DDD1, 2517\},\par
03009     \{{\cf22 "J. Turquoise"}, 0xFF008789, 2492\},\par
03010     \{{\cf22 "Indian Ocean Blue"}, 0xFF2DC6D6, 2518\},\par
03011     \{{\cf22 "Surf Blue"}, 0xFF00A5DB, 2519\},\par
03012     \{{\cf22 "Mid Windsor"}, 0xFF00A3DD, 2520\},\par
03013     \{{\cf22 "Deep Windsor"}, 0xFF003F54, 2589\},\par
03014     \{{\cf22 "Pro Dark Blue"}, 0xFF002D47, 2620\},\par
03015     \{{\cf22 "Mallard Blue"}, 0xFF006D75, 2521\},\par
03016     \{{\cf22 "Sky Blue"}, 0xFF9BC4E2, 2239\},\par
03017     \{{\cf22 "Lake Blue"}, 0xFFAFBCDB, 2304\},\par
03018     \{{\cf22 "Pro Lusty Blue"}, 0xFF5B77CC, 2614\},\par
03019     \{{\cf22 "Slate Blue"}, 0xFF6D87A8, 2275\},\par
03020     \{{\cf22 "Blue Frost"}, 0xFF99D6DD, 2305\},\par
03021     \{{\cf22 "Periwinkle"}, 0xFF28C4D8, 2306\},\par
03022     \{{\cf22 "Aquamarine"}, 0xFF00ADC6, 2307\},\par
03023     \{{\cf22 "California Blue"}, 0xFF00A0C4, 2389\},\par
03024     \{{\cf22 "Baltic Blue"}, 0xFF008ED6, 2441\},\par
03025     \{{\cf22 "Solar Blue"}, 0xFF0054A0, 2442\},\par
03026     \{{\cf22 "Pacific Blue"}, 0xFF008ED6, 2388\},   {\cf20 /* TODO: duplicate case value */}\par
03027     \{{\cf22 "Boo Boo Blue"}, 0xFF00A3DD, 2730\}, {\cf20 /* TODO: duplicate case value */}\par
03028     \{{\cf22 "Pro Band Blue"}, 0xFF00709E, 2737\},\par
03029     \{{\cf22 "Pro Peacock"}, 0xFF007AA5, 2740\},\par
03030     \{{\cf22 "Light Blue"}, 0xFFC9E8DD, 2222\},\par
03031     \{{\cf22 "Royal"}, 0xFF1E1C77, 2210\},\par
03032     \{{\cf22 "Blue Suede"}, 0xFF002B7F, 2438\},\par
03033     \{{\cf22 "Imperial Blue"}, 0xFF335687, 2302\},\par
03034     \{{\cf22 "Bridgeport Blue"}, 0xFFAFBCDB, 2522\}, {\cf20 /* TODO: duplicate case value */}\par
03035     \{{\cf22 "China Blue"}, 0xFF335687, 2523\}, {\cf20 /* TODO: duplicate case value */}\par
03036     \{{\cf22 "Pro Imperial"}, 0xFF26547C, 2612\},\par
03037     \{{\cf22 "Country Blue"}, 0xFF7796B2, 2524\},\par
03038     \{{\cf22 "Heron Blue"}, 0xFFC1C9DD, 2525\},\par
03039     \{{\cf22 "Pro Saxon"}, 0xFF7796B2, 2624\}, {\cf20 /* TODO: duplicate case value */}\par
03040     \{{\cf22 "Bright Blue"}, 0xFF6689CC, 2526\},\par
03041     \{{\cf22 "Soldier Blue"}, 0xFF5960A8, 2527\},\par
03042     \{{\cf22 "Pro Brilliance"}, 0xFF0051BA, 2619\},\par
03043     \{{\cf22 "Atlantis Blue"}, 0xFF6689CC, 2528\},   {\cf20 /* TODO: duplicate case value */}\par
03044     \{{\cf22 "Dolphin Blue"}, 0xFF3A75C4, 2529\},\par
03045     \{{\cf22 "Caribbean Blue"}, 0xFF75AADB, 2530\},\par
03046     \{{\cf22 "Dana Blue"}, 0xFFC4D8E2, 2531\},\par
03047     \{{\cf22 "Cadet Blue"}, 0xFFC4D8E2, 2532\}, {\cf20 /* TODO: duplicate case value */}\par
03048     \{{\cf22 "Ozone"}, 0xFF60AFDD, 2533\},\par
03049     \{{\cf22 "Salem Blue"}, 0xFF003D6B, 2534\},\par
03050     \{{\cf22 "Blue Ribbon"}, 0xFF0F2B5B, 2439\},\par
03051     \{{\cf22 "Pro Navy"}, 0xFF192168, 2625\},\par
03052     \{{\cf22 "Blue Ink"}, 0xFF2B265B, 2440\},\par
03053     \{{\cf22 "Pro Midnight"}, 0xFF002654, 2613\},\par
03054     \{{\cf22 "Pro College Blue"}, 0xFF002649, 2647\},\par
03055     \{{\cf22 "Light Midnight"}, 0xFF353F5B, 2386\},\par
03056     \{{\cf22 "Fleet Blue"}, 0xFF35264F, 2450\},\par
03057     \{{\cf22 "Light Navy"}, 0xFF112151, 2303\},\par
03058     \{{\cf22 "Flag Blue"}, 0xFF14213D, 2603\},\par
03059     \{{\cf22 "TH Navy"}, 0xFF002654, 2609\},   {\cf20 /* TODO: duplicate case value */}\par
03060     \{{\cf22 "Navy"}, 0xFF14213D, 2215\}, {\cf20 /* TODO: duplicate case value */}\par
03061     \{{\cf22 "Midnight Navy"}, 0xFF14213D, 2387\},   {\cf20 /* TODO: duplicate case value */}\par
03062     \{{\cf22 "Pastel Blue"}, 0xFFC6D1D6, 2382\},\par
03063     \{{\cf22 "Blue Hint"}, 0xFFC1C9DD, 2598\},   {\cf20 /* TODO: duplicate case value */}\par
03064     \{{\cf22 "Ice Blue"}, 0xFFB5D1E8, 2300\},\par
03065     \{{\cf22 "Paris Blue"}, 0xFFD1CEDD, 2283\},\par
03066     \{{\cf22 "Baby Blue"}, 0xFF99BADD, 2206\},\par
03067     \{{\cf22 "Sun Blue"}, 0xFFAFBCDB, 2269\},   {\cf20 /* TODO: duplicate case value */}\par
03068     \{{\cf22 "Cristy Blue"}, 0xFFA5BAE0, 2383\},\par
03069     \{{\cf22 "Ultra Blue"}, 0xFF75B2DD, 2433\},\par
03070     \{{\cf22 "Tropic Blue"}, 0xFF75AADB, 2434\}, {\cf20 /* TODO: duplicate case value */}\par
03071     \{{\cf22 "Blue Horizon"}, 0xFF6689CC, 2435\}, {\cf20 /* TODO: duplicate case value */}\par
03072     \{{\cf22 "Oriental Blue"}, 0xFF7F8CBF, 2301\},\par
03073     \{{\cf22 "Copen"}, 0xFF6D87A8, 2245\}, {\cf20 /* TODO: duplicate case value */}\par
03074     \{{\cf22 "Jay Blue"}, 0xFF5B77CC, 2384\}, {\cf20 /* TODO: duplicate case value */}\par
03075     \{{\cf22 "Blue"}, 0xFF2D338E, 2220\},\par
03076     \{{\cf22 "Sapphire"}, 0xFF2D338E, 2280\}, {\cf20 /* TODO: duplicate case value */}\par
03077     \{{\cf22 "Pro Royal"}, 0xFF00337F, 2627\},\par
03078     \{{\cf22 "Fire Blue"}, 0xFF003893, 2436\},\par
03079     \{{\cf22 "Jamie Blue"}, 0xFF2D338E, 2385\}, {\cf20 /* TODO: duplicate case value */}\par
03080     \{{\cf22 "Empire Blue"}, 0xFF3F2893, 2437\},\par
03081     \{{\cf22 "Enchanted Sea"}, 0xFF3A564F, 2535\},\par
03082     \{{\cf22 "Pro Twinkle"}, 0xFF8499A5, 2617\},\par
03083     \{{\cf22 "Rockport Blue"}, 0xFF9BAABF, 2536\},\par
03084     \{{\cf22 "Wonder Blue"}, 0xFF5E99AA, 2577\},\par
03085     \{{\cf22 "Traditional Gray"}, 0xFFADAFAA, 2540\},\par
03086     \{{\cf22 "Steel"}, 0xFFBFBAAF, 2537\},\par
03087     \{{\cf22 "Pro Pearl"}, 0xFFBAB7AF, 2741\},\par
03088     \{{\cf22 "Pro Cool Gray"}, 0xFFC4C1BA, 2733\},\par
03089     \{{\cf22 "Stainless Steel"}, 0xFFCCC1B2, 2538\},\par
03090     \{{\cf22 "Chrome"}, 0xFFD1CCBF, 2539\},\par
03091     \{{\cf22 "Pro Night Sky"}, 0xFFADAFAA, 2618\},   {\cf20 /* TODO: duplicate case value */}\par
03092     \{{\cf22 "Gull"}, 0xFF8C8984, 2731\},\par
03093     \{{\cf22 "Mineral"}, 0xFF686663, 2729\},\par
03094     \{{\cf22 "Black Chrome"}, 0xFF443D38, 2541\},\par
03095     \{{\cf22 "Heather"}, 0xFFDDC6C4, 2271\},\par
03096     \{{\cf22 "Grape"}, 0xFFD3B7A3, 2272\},\par
03097     \{{\cf22 "Satin Wine"}, 0xFFB5939B, 2314\},\par
03098     \{{\cf22 "Ducky Mauve"}, 0xFF8E6877, 2422\},\par
03099     \{{\cf22 "Pale Orchid"}, 0xFFFCBFC9, 2423\}, {\cf20 /* TODO: duplicate case value */}\par
03100     \{{\cf22 "Orchid"}, 0xFFE5BFC6, 2379\},\par
03101     \{{\cf22 "Lavender"}, 0xFFEFC6D3, 2276\}, {\cf20 /* TODO: duplicate case value */}\par
03102     \{{\cf22 "Violet"}, 0xFFEDC4DD, 2285\},\par
03103     \{{\cf22 "Cachet"}, 0xFFB58CB2, 2424\},\par
03104     \{{\cf22 "Tulip"}, 0xFFC9ADD8, 2286\},\par
03105     \{{\cf22 "Mid Lilac"}, 0xFFE29ED6, 2588\},\par
03106     \{{\cf22 "Port Wine"}, 0xFF512654, 2600\},\par
03107     \{{\cf22 "Pro Maroon"}, 0xFF512D44, 2616\},\par
03108     \{{\cf22 "Laurie Lilac"}, 0xFF8E47AD, 2425\},\par
03109     \{{\cf22 "Iris"}, 0xFFAF72C1, 2288\},\par
03110     \{{\cf22 "Raspberry"}, 0xFF9B4F96, 2426\},\par
03111     \{{\cf22 "Mulberry"}, 0xFF66116D, 2380\},\par
03112     \{{\cf22 "Plum Wine"}, 0xFF63305E, 2490\},\par
03113     \{{\cf22 "Purple Twist"}, 0xFF1E1C77, 2429\},   {\cf20 /* TODO: duplicate case value */}\par
03114     \{{\cf22 "Violet Blue"}, 0xFF332875, 2427\},\par
03115     \{{\cf22 "Purple Maze"}, 0xFF35006D, 2428\},\par
03116     \{{\cf22 "Pro Brite Star"}, 0xFF2B1166, 2736\},\par
03117     \{{\cf22 "Pro Violet"}, 0xFF38197A, 2742\},\par
03118     \{{\cf22 "Pro Purple"}, 0xFF35006D, 2628\},   {\cf20 /* TODO: duplicate case value */}\par
03119     \{{\cf22 "Purple"}, 0xFF8E47AD, 2254\}, {\cf20 /* TODO: duplicate case value */}\par
03120     \{{\cf22 "Purple Shadow"}, 0xFF5B027A, 2430\},\par
03121     \{{\cf22 "Dark Purple"}, 0xFF4C145E, 2381\},\par
03122     \{{\cf22 "Mauve"}, 0xFF8977BA, 2287\},\par
03123     \{{\cf22 "Purple Accent"}, 0xFF44235E, 2431\},\par
03124     \{{\cf22 "Hot Peony"}, 0xFFAA0066, 2590\},\par
03125     \{{\cf22 "Passion"}, 0xFFCE007C, 2291\}, {\cf20 /* TODO: duplicate case value */}\par
03126     \{{\cf22 "Strawberry"}, 0xFFAA004F, 2432\}, {\cf20 /* TODO: duplicate case value */}\par
03127     \{{\cf22 "Plum"}, 0xFF9E2387, 2292\},\par
03128     \{{\cf22 "Misty"}, 0xFF5E99AA, 2308\},   {\cf20 /* TODO: duplicate case value */}\par
03129     \{{\cf22 "Mystic Teal"}, 0xFF609191, 2443\},\par
03130     \{{\cf22 "Teal"}, 0xFF609191, 2309\},   {\cf20 /* TODO: duplicate case value */}\par
03131     \{{\cf22 "Dark Teal"}, 0xFF003F54, 2444\}, {\cf20 /* TODO: duplicate case value */}\par
03132     \{{\cf22 "Mint Julep"}, 0xFF93DDDB, 2310\},\par
03133     \{{\cf22 "Turquoise"}, 0xFF7FD6DB, 2204\},\par
03134     \{{\cf22 "M.D. Green"}, 0xFF007272, 2445\},\par
03135     \{{\cf22 "Seafoam"}, 0xFF70CE9B, 2311\},\par
03136     \{{\cf22 "Isle Green"}, 0xFF70CE9B, 2312\}, {\cf20 /* TODO: duplicate case value */}\par
03137     \{{\cf22 "Peppermint"}, 0xFF35C4AF, 2390\},\par
03138     \{{\cf22 "Oceanic Green"}, 0xFF006D75, 2446\}, {\cf20 /* TODO: duplicate case value */}\par
03139     \{{\cf22 "Pro Teal"}, 0xFF006B77, 2621\},\par
03140     \{{\cf22 "Garden Green"}, 0xFF006663, 2447\},\par
03141     \{{\cf22 "Pro Green"}, 0xFF006D66, 2735\},\par
03142     \{{\cf22 "Pine Green"}, 0xFF008C82, 2391\}, {\cf20 /* TODO: duplicate case value */}\par
03143     \{{\cf22 "Greenstone"}, 0xFF008272, 2448\},\par
03144     \{{\cf22 "Fern Green"}, 0xFF006663, 2449\},   {\cf20 /* TODO: duplicate case value */}\par
03145     \{{\cf22 "Pro Hunter"}, 0xFF006D66, 2615\}, {\cf20 /* TODO: duplicate case value */}\par
03146     \{{\cf22 "Palm Leaf"}, 0xFFBCC1B2, 2241\},\par
03147     \{{\cf22 "Flite Green"}, 0xFFC6D6A0, 2282\},\par
03148     \{{\cf22 "Willow"}, 0xFF9EAA99, 2221\},\par
03149     \{{\cf22 "Sprite"}, 0xFFB2D8D8, 2313\},\par
03150     \{{\cf22 "Moss"}, 0xFF7AA891, 2278\},\par
03151     \{{\cf22 "Wintergreen"}, 0xFF7AA891, 2594\}, {\cf20 /* TODO: duplicate case value */}\par
03152     \{{\cf22 "Green Forest"}, 0xFF006056, 2451\},\par
03153     \{{\cf22 "Pro Forest"}, 0xFF006056, 2743\}, {\cf20 /* TODO: duplicate case value */}\par
03154     \{{\cf22 "Harbor Green"}, 0xFF4F6D5E, 2392\},\par
03155     \{{\cf22 "Evergreen"}, 0xFF024930, 2315\},\par
03156     \{{\cf22 "Pro Dark Green"}, 0xFF004438, 2734\},\par
03157     \{{\cf22 "Lizzy Lime"}, 0xFF2B4C3F, 2631\},\par
03158     \{{\cf22 "D.H. Green"}, 0xFF282D26, 2411\},\par
03159     \{{\cf22 "Celery"}, 0xFFF2EABC, 2316\},\par
03160     \{{\cf22 "Pistachio"}, 0xFFCCC693, 2250\},\par
03161     \{{\cf22 "Olive Drab"}, 0xFF5E663A, 2317\},\par
03162     \{{\cf22 "Olive"}, 0xFF779182, 2202\},\par
03163     \{{\cf22 "Pale Green"}, 0xFFC9E8DD, 2318\},   {\cf20 /* TODO: duplicate case value */}\par
03164     \{{\cf22 "Green Pearl"}, 0xFF93DDDB, 2452\}, {\cf20 /* TODO: duplicate case value */}\par
03165     \{{\cf22 "Sea Mist"}, 0xFF93DDDB, 2393\}, {\cf20 /* TODO: duplicate case value */}\par
03166     \{{\cf22 "Mint"}, 0xFFB5E8BF, 2238\},\par
03167     \{{\cf22 "Spruce"}, 0xFFAADD6D, 2279\},\par
03168     \{{\cf22 "Nile"}, 0xFFA0DB8E, 2211\},\par
03169     \{{\cf22 "Green Oak"}, 0xFFB5CC8E, 2319\},\par
03170     \{{\cf22 "Erin Green"}, 0xFF8CD600, 2320\},\par
03171     \{{\cf22 "Pro Erin"}, 0xFF56AA1C, 2738\},\par
03172     \{{\cf22 "Emerald"}, 0xFF339E35, 2214\},\par
03173     \{{\cf22 "Dark Emerald"}, 0xFF007A3D, 2453\},\par
03174     \{{\cf22 "Light Kelly"}, 0xFF007A3D, 2410\}, {\cf20 /* TODO: duplicate case value */}\par
03175     \{{\cf22 "Kelly"}, 0xFF007A3D, 2240\}, {\cf20 /* TODO: duplicate case value */}\par
03176     \{{\cf22 "Dark Green"}, 0xFF008751, 2208\},\par
03177     \{{\cf22 "Fleece Green"}, 0xFF006B3F, 2454\},\par
03178     \{{\cf22 "TH Green"}, 0xFF006854, 2607\},\par
03179     \{{\cf22 "Harvest Green"}, 0xFF1EB53A, 2578\},\par
03180     \{{\cf22 "Vibrant Green"}, 0xFF009E49, 2579\},\par
03181     \{{\cf22 "Green Grass"}, 0xFF009E49, 2580\}, {\cf20 /* TODO: duplicate case value */}\par
03182     \{{\cf22 "Deep Green"}, 0xFF006B3F, 2284\}, {\cf20 /* TODO: duplicate case value */}\par
03183     \{{\cf22 "Green Bay"}, 0xFF006B54, 2455\},\par
03184     \{{\cf22 "Jungle Green"}, 0xFF007C66, 2597\},\par
03185     \{{\cf22 "Peapod"}, 0xFFA3AF07, 2456\},\par
03186     \{{\cf22 "Pastoral Green"}, 0xFF7FBA00, 2321\},\par
03187     \{{\cf22 "Green Dust"}, 0xFF7FBA00, 2457\},   {\cf20 /* TODO: duplicate case value */}\par
03188     \{{\cf22 "Ming"}, 0xFF7FBA00, 2322\}, {\cf20 /* TODO: duplicate case value */}\par
03189     \{{\cf22 "Meadow"}, 0xFF568E14, 2226\},\par
03190     \{{\cf22 "Tamarack"}, 0xFF939905, 2230\},\par
03191     \{{\cf22 "Palmetto"}, 0xFF566314, 2229\},\par
03192     \{{\cf22 "Green Petal"}, 0xFF024930, 2458\},   {\cf20 /* TODO: duplicate case value */}\par
03193     \{{\cf22 "Sage"}, 0xFF547730, 2595\},\par
03194     \{{\cf22 "Hedge"}, 0xFF3F4926, 2601\},\par
03195     \{{\cf22 "Green"}, 0xFF3A7728, 2209\},\par
03196     \{{\cf22 "Green Sail"}, 0xFF193833, 2459\},\par
03197     \{{\cf22 "Holly"}, 0xFF215B33, 2323\},\par
03198     \{{\cf22 "Field Green"}, 0xFF265142, 2460\},\par
03199     \{{\cf22 "Dress Green"}, 0xFF3F4926, 2584\}, {\cf20 /* TODO: duplicate case value */}\par
03200     \{{\cf22 "Foliage Green"}, 0xFF99840A, 2542\},\par
03201     \{{\cf22 "Autumn Green"}, 0xFFA38205, 2543\},\par
03202     \{{\cf22 "Desert Cactus"}, 0xFF897719, 2544\},\par
03203     \{{\cf22 "Cypress"}, 0xFF707014, 2545\},\par
03204     \{{\cf22 "Crescent Moon"}, 0xFF848205, 2546\},\par
03205     \{{\cf22 "Pebblestone"}, 0xFFE2E584, 2547\},\par
03206     \{{\cf22 "Sun Shadow"}, 0xFF998E07, 2548\},\par
03207     \{{\cf22 "Blue Spruce"}, 0xFF00494F, 2549\},\par
03208     \{{\cf22 "Newport"}, 0xFF4F6D5E, 2550\}, {\cf20 /* TODO: duplicate case value */}\par
03209     \{{\cf22 "Spring Garden"}, 0xFF779182, 2551\}, {\cf20 /* TODO: duplicate case value */}\par
03210     \{{\cf22 "Water Lilly"}, 0xFF546856, 2554\},\par
03211     \{{\cf22 "Ivy"}, 0xFF0C3026, 2552\},\par
03212     \{{\cf22 "Dark Army Green"}, 0xFF233A2D, 2553\},\par
03213     \{{\cf22 "Army Green"}, 0xFF213D30, 2728\},\par
03214     \{{\cf22 "Pastel Green"}, 0xFFC9D6A3, 2555\},\par
03215     \{{\cf22 "Pollen Gold"}, 0xFFE0AA0F, 2556\},\par
03216     \{{\cf22 "Pale Yellow"}, 0xFFF4E287, 2557\},\par
03217     \{{\cf22 "Buttercup"}, 0xFFFFC61E, 2558\},\par
03218     \{{\cf22 "Tusk"}, 0xFFF7E8AA, 2559\},\par
03219     \{{\cf22 "Moonbeam"}, 0xFFF9DD16, 2560\},\par
03220     \{{\cf22 "Black Eyed Susie"}, 0xFFC6A00C, 2561\},\par
03221     \{{\cf22 "Bullion"}, 0xFFA37F14, 2562\},\par
03222     \{{\cf22 "Chinese Yellow"}, 0xFFF7E8AA, 2324\}, {\cf20 /* TODO: duplicate case value */}\par
03223     \{{\cf22 "Maize"}, 0xFFF7E8AA, 2264\}, {\cf20 /* TODO: duplicate case value */}\par
03224     \{{\cf22 "Wheat"}, 0xFFEADD96, 2461\},\par
03225     \{{\cf22 "Pro Maize"}, 0xFFF9E08C, 2732\},\par
03226     \{{\cf22 "Glow"}, 0xFFFFD87F, 2234\},\par
03227     \{{\cf22 "Star Gold"}, 0xFFFCD856, 2408\},\par
03228     \{{\cf22 "Mango"}, 0xFFFCA311, 2394\},\par
03229     \{{\cf22 "Yellow Mist"}, 0xFFFCA311, 2409\},   {\cf20 /* TODO: duplicate case value */}\par
03230     \{{\cf22 "Yellow"}, 0xFFFCA311, 2213\}, {\cf20 /* TODO: duplicate case value */}\par
03231     \{{\cf22 "Sunflower"}, 0xFFF9DD16, 2462\}, {\cf20 /* TODO: duplicate case value */}\par
03232     \{{\cf22 "Lemon"}, 0xFFF4ED47, 2325\},\par
03233     \{{\cf22 "Daffodil"}, 0xFFF9E814, 2326\},\par
03234     \{{\cf22 "Merit Gold"}, 0xFFFCB514, 2463\},\par
03235     \{{\cf22 "Cornsilk"}, 0xFFFFCC49, 2395\},\par
03236     \{{\cf22 "Nectar"}, 0xFFFFC61E, 2464\}, {\cf20 /* TODO: duplicate case value */}\par
03237     \{{\cf22 "Scholastic"}, 0xFFFCBF49, 2465\},\par
03238     \{{\cf22 "Canary Yellow"}, 0xFFFCE016, 2235\},\par
03239     \{{\cf22 "Pro Gold"}, 0xFFFFC61E, 2626\}, {\cf20 /* TODO: duplicate case value */}\par
03240     \{{\cf22 "Manila"}, 0xFFFCD116, 2466\},\par
03241     \{{\cf22 "Goldenrod"}, 0xFFFCD116, 2242\}, {\cf20 /* TODO: duplicate case value */}\par
03242     \{{\cf22 "Brite Yellow"}, 0xFFFFCC49, 2396\}, {\cf20 /* TODO: duplicate case value */}\par
03243     \{{\cf22 "Honeydew"}, 0xFFF99B0C, 2327\},\par
03244     \{{\cf22 "Pumpkin"}, 0xFFF77F00, 2328\},\par
03245     \{{\cf22 "Orangeade"}, 0xFFF74902, 2467\},\par
03246     \{{\cf22 "Sun Orange"}, 0xFFF74902, 2397\},   {\cf20 /* TODO: duplicate case value */}\par
03247     \{{\cf22 "Paprika"}, 0xFFF95602, 2236\},\par
03248     \{{\cf22 "Saffron"}, 0xFFF93F26, 2329\},\par
03249     \{{\cf22 "Tex Orange"}, 0xFFF95602, 2468\},   {\cf20 /* TODO: duplicate case value */}\par
03250     \{{\cf22 "Orange"}, 0xFFF96B07, 2218\},\par
03251     \{{\cf22 "Dark Tex Orange"}, 0xFFF96302, 2469\},\par
03252     \{{\cf22 "Old Dark Tex Orange"}, 0xFFA53F0F, 2581\},\par
03253     \{{\cf22 "Golden Poppy"}, 0xFFFC8744, 2330\},\par
03254     \{{\cf22 "Rust"}, 0xFFBC4F07, 2289\},\par
03255     \{{\cf22 "Copper"}, 0xFFAF7505, 2295\},\par
03256     \{{\cf22 "Light Bronze"}, 0xFFC18E60, 2493\},\par
03257     \{{\cf22 "Visor Gold"}, 0xFFFCCE87, 2398\},\par
03258     \{{\cf22 "Goldenlite"}, 0xFFFFCC49, 2605\}, {\cf20 /* TODO: duplicate case value */}\par
03259     \{{\cf22 "Honey"}, 0xFFFCBA5E, 2247\},\par
03260     \{{\cf22 "Marigold"}, 0xFFFFCC49, 2216\}, {\cf20 /* TODO: duplicate case value */}\par
03261     \{{\cf22 "Mustard"}, 0xFFE0AA0F, 2331\}, {\cf20 /* TODO: duplicate case value */}\par
03262     \{{\cf22 "Sun Gold"}, 0xFFE0AA0F, 2212\}, {\cf20 /* TODO: duplicate case value */}\par
03263     \{{\cf22 "Karat"}, 0xFFE0AA0F, 2470\}, {\cf20 /* TODO: duplicate case value */}\par
03264     \{{\cf22 "Penny"}, 0xFFF2BF49, 2332\},\par
03265     \{{\cf22 "New Gold"}, 0xFFFCCE87, 2399\},   {\cf20 /* TODO: duplicate case value */}\par
03266     \{{\cf22 "Pro Beige"}, 0xFFE2D6B5, 2630\},\par
03267     \{{\cf22 "Marine Gold"}, 0xFFC6A00C, 2596\}, {\cf20 /* TODO: duplicate case value */}\par
03268     \{{\cf22 "Ginger"}, 0xFFA37F14, 2333\}, {\cf20 /* TODO: duplicate case value */}\par
03269     \{{\cf22 "Shimmering Gold"}, 0xFFC6A00C, 2471\}, {\cf20 /* TODO: duplicate case value */}\par
03270     \{{\cf22 "Old Gold"}, 0xFFBF910C, 2201\},\par
03271     \{{\cf22 "Salmon"}, 0xFFEAB2B2, 2299\},\par
03272     \{{\cf22 "Dark Rust"}, 0xFFC13828, 2205\},\par
03273     \{{\cf22 "Terra Cotta"}, 0xFFA03033, 2334\},\par
03274     \{{\cf22 "Pro Red"}, 0xFFAF1E2D, 2623\}, {\cf20 /* TODO: duplicate case value */}\par
03275     \{{\cf22 "Auburn"}, 0xFFAF1E2D, 2472\}, {\cf20 /* TODO: duplicate case value */}\par
03276     \{{\cf22 "Bone"}, 0xFFFAE6CC, 2582\},\par
03277     \{{\cf22 "Ivory"}, 0xFFFAE6CF, 2335\},\par
03278     \{{\cf22 "Opaline"}, 0xFFF7D3B5, 2473\},\par
03279     \{{\cf22 "Ecru"}, 0xFFEDD3BC, 2232\},\par
03280     \{{\cf22 "Wicker"}, 0xFFAA753F, 2489\},\par
03281     \{{\cf22 "Tan"}, 0xFFD3A87C, 2273\},\par
03282     \{{\cf22 "Cottage Beige"}, 0xFFEDD3B5, 2593\},\par
03283     \{{\cf22 "Rattan"}, 0xFFC1A875, 2474\},\par
03284     \{{\cf22 "Gold"}, 0xFFE2BF9B, 2203\},\par
03285     \{{\cf22 "Mocha Cream"}, 0xFFD3A87C, 2475\}, {\cf20 /* TODO: duplicate case value */}\par
03286     \{{\cf22 "Topaz"}, 0xFFBF910C, 2400\}, {\cf20 /* TODO: duplicate case value */}\par
03287     \{{\cf22 "Ashley Gold"}, 0xFFD18E54, 2401\},\par
03288     \{{\cf22 "Amber Beige"}, 0xFFD8B596, 2336\},\par
03289     \{{\cf22 "Seashell"}, 0xFFD6CCAF, 2476\},\par
03290     \{{\cf22 "Light Maize"}, 0xFFF2E3C4, 2604\},\par
03291     \{{\cf22 "Beige"}, 0xFFAA753F, 2224\}, {\cf20 /* TODO: duplicate case value */}\par
03292     \{{\cf22 "Sand Dune"}, 0xFF6B4714, 2477\},\par
03293     \{{\cf22 "Taupe"}, 0xFFD1BF91, 2298\},\par
03294     \{{\cf22 "Pro Brown"}, 0xFF6C463D, 2610\},\par
03295     \{{\cf22 "Chocolate"}, 0xFF876028, 2227\},\par
03296     \{{\cf22 "Pro Walnut"}, 0xFF755426, 2629\},\par
03297     \{{\cf22 "Light Cocoa"}, 0xFF755426, 2478\},   {\cf20 /* TODO: duplicate case value */}\par
03298     \{{\cf22 "Cocoa Mulch"}, 0xFFB28260, 2488\},\par
03299     \{{\cf22 "Brown"}, 0xFF593D2B, 2251\},\par
03300     \{{\cf22 "Dark Brown"}, 0xFF593D2B, 2372\}, {\cf20 /* TODO: duplicate case value */}\par
03301     \{{\cf22 "Espresso"}, 0xFF3F302B, 2337\},\par
03302     \{{\cf22 "Bamboo"}, 0xFFC18E60, 2338\},   {\cf20 /* TODO: duplicate case value */}\par
03303     \{{\cf22 "Almond"}, 0xFFAF7505, 2479\},   {\cf20 /* TODO: duplicate case value */}\par
03304     \{{\cf22 "Toast"}, 0xFFBA7530, 2231\},\par
03305     \{{\cf22 "Sienna"}, 0xFF755426, 2402\}, {\cf20 /* TODO: duplicate case value */}\par
03306     \{{\cf22 "K.A. Bronze"}, 0xFFB26B70, 2480\},\par
03307     \{{\cf22 "Pro Cinnamon"}, 0xFFA2464E, 2611\},\par
03308     \{{\cf22 "Date"}, 0xFF9B4F19, 2290\},\par
03309     \{{\cf22 "Hazel"}, 0xFF9B4F19, 2481\}, {\cf20 /* TODO: duplicate case value */}\par
03310     \{{\cf22 "Coffee Bean"}, 0xFF5B2D28, 2339\},\par
03311     \{{\cf22 "Dogwood"}, 0xFF593D2B, 2563\}, {\cf20 /* TODO: duplicate case value */}\par
03312     \{{\cf22 "Mahogany"}, 0xFF3F302B, 2564\}, {\cf20 /* TODO: duplicate case value */}\par
03313     \{{\cf22 "Best Brown"}, 0xFF3D3028, 2566\},\par
03314     \{{\cf22 "Mushroom"}, 0xFF633A11, 2567\},\par
03315     \{{\cf22 "Perfect Tan"}, 0xFFC1A875, 2568\},   {\cf20 /* TODO: duplicate case value */}\par
03316     \{{\cf22 "Earthen Tan"}, 0xFF7A5B11, 2569\},\par
03317     \{{\cf22 "Golden Tan"}, 0xFFC1A875, 2570\}, {\cf20 /* TODO: duplicate case value */}\par
03318     \{{\cf22 "14 Kt. Gold"}, 0xFFF2BF49, 2586\}, {\cf20 /* TODO: duplicate case value */}\par
03319     \{{\cf22 "TH Gold"}, 0xFFF2CE68, 2606\},\par
03320     \{{\cf22 "24 Kt. Gold"}, 0xFFD88C02, 2602\},\par
03321     \{{\cf22 "Platinum"}, 0xFFC1B5A5, 2571\},\par
03322     \{{\cf22 "Pro Gray"}, 0xFF99897C, 2739\},\par
03323     \{{\cf22 "Grayrod"}, 0xFFADA07A, 2572\},\par
03324     \{{\cf22 "Pewter"}, 0xFFADA07A, 2573\}, {\cf20 /* TODO: duplicate case value */}\par
03325     \{{\cf22 "Aspen White"}, 0xFFF5E3CC, 2574\},\par
03326     \{{\cf22 "Dark Taupe"}, 0xFF66594C, 2575\},\par
03327     \{{\cf22 "Egyptian Brown"}, 0xFF493533, 2576\},\par
03328     \{{\cf22 "Oyster"}, 0xFFF5EBE0, 2403\},\par
03329     \{{\cf22 "Gray"}, 0xFFDDC6C4, 2207\},   {\cf20 /* TODO: duplicate case value */}\par
03330     \{{\cf22 "Pearl Gray"}, 0xFFDBD3D3, 2340\},\par
03331     \{{\cf22 "Steel Gray"}, 0xFFD8CCD1, 2274\},\par
03332     \{{\cf22 "Skylight"}, 0xFFCCC1C6, 2482\},\par
03333     \{{\cf22 "Cloud"}, 0xFFAFAAA3, 2483\},\par
03334     \{{\cf22 "Silver Steel"}, 0xFFADAFAA, 2592\}, {\cf20 /* TODO: duplicate case value */}\par
03335     \{{\cf22 "Banner Gray"}, 0xFF919693, 2585\},\par
03336     \{{\cf22 "Silvery Gray"}, 0xFF8C8984, 2484\}, {\cf20 /* TODO: duplicate case value */}\par
03337     \{{\cf22 "Cinder"}, 0xFFCCC1C6, 2404\}, {\cf20 /* TODO: duplicate case value */}\par
03338     \{{\cf22 "Saturn Gray"}, 0xFFDBD3D3, 2485\}, {\cf20 /* TODO: duplicate case value */}\par
03339     \{{\cf22 "Dover Gray"}, 0xFFCCC1C6, 2405\}, {\cf20 /* TODO: duplicate case value */}\par
03340     \{{\cf22 "Storm Gray"}, 0xFFB2A8B5, 2486\},\par
03341     \{{\cf22 "Sterling"}, 0xFFA893AD, 2406\},\par
03342     \{{\cf22 "Metal"}, 0xFF666D70, 2407\},\par
03343     \{{\cf22 "Twilight"}, 0xFF686663, 2217\},   {\cf20 /* TODO: duplicate case value */}\par
03344     \{{\cf22 "Aged Charcoal"}, 0xFF443D38, 2565\}, {\cf20 /* TODO: duplicate case value */}\par
03345     \{{\cf22 "Charcoal"}, 0xFF777772, 2265\},\par
03346     \{{\cf22 "Smokey"}, 0xFF353842, 2487\},\par
03347     \{{\cf22 "Ash"}, 0xFF3A4972, 2341\},\par
03348     \{{\cf22 "Black"}, 0xFF1C2630, 2296\},\par
03349     \{{\cf22 "Snow White"}, 0xFFF5EBE0, 2297\},   {\cf20 /* TODO: duplicate case value */}\par
03350     \{{\cf22 "Natural White"}, 0xFFF5EDDE, 2342\},\par
03351     \{{\cf22 "Eggshell"}, 0xFFF0E8D6, 2343\},\par
03352     \{{\cf22 "Jet Black"}, 0xFF1C2630, 2632\}, {\cf20 /* TODO: duplicate case value */}\par
03353     \{{\cf22 "END"}, 0, -1\}\par
03354 \};\par
03355 \par
03356 thread_color Sigma_Polyester_codes[] = \{\par
03357     \{{\cf22 "White"}, 0xFFFFFFFF, 10\},\par
03358     \{{\cf22 "Black"}, 0xFF000000, 20\},\par
03359     \{{\cf22 "Light Neon Green"}, 0xFFEDFF50, 21\},\par
03360     \{{\cf22 "Neon Green"}, 0xFF96E845, 32\},\par
03361     \{{\cf22 "Light Neon Orange"}, 0xFFFFE756, 33\},\par
03362     \{{\cf22 "Med Neon Orange"}, 0xFFFF7824, 43\},\par
03363     \{{\cf22 "Neon Pink"}, 0xFFF28DA6, 46\},\par
03364     \{{\cf22 "Neon Orange Pink"}, 0xFFC70C57, 47\},\par
03365     \{{\cf22 "Silver"}, 0xFFE22D2A, 101\},\par
03366     \{{\cf22 "Silver Diamond"}, 0xFFB8B8B8, 102\},\par
03367     \{{\cf22 "Lava Stone"}, 0xFF889186, 112\},\par
03368     \{{\cf22 "Medium Grey"}, 0xFF737F7F, 115\},\par
03369     \{{\cf22 "Dark Platinum"}, 0xFF565E5A, 116\},\par
03370     \{{\cf22 "Charcoal"}, 0xFF515250, 117\},\par
03371     \{{\cf22 "Badger Grey"}, 0xFF787668, 118\},\par
03372     \{{\cf22 "Pumpkin Orange"}, 0xFFED572F, 135\},\par
03373     \{{\cf22 "Turquoise"}, 0xFF2EA59C, 138\},\par
03374     \{{\cf22 "Dark Wedgewood"}, 0xFF396276, 142\},\par
03375     \{{\cf22 "Cardinal Red"}, 0xFF9B3B40, 213\},\par
03376     \{{\cf22 "Maroon"}, 0xFF6C3E47, 216\},\par
03377     \{{\cf22 "Rust"}, 0xFFBA6E4D, 253\},\par
03378     \{{\cf22 "Medium Rust"}, 0xFFBB3D2E, 255\},\par
03379     \{{\cf22 "Natural Pink"}, 0xFFF9DFCF, 301\},\par
03380     \{{\cf22 "Baby Pink"}, 0xFFFBDED6, 303\},\par
03381     \{{\cf22 "Piggy Pink"}, 0xFFF7CDD5, 304\},\par
03382     \{{\cf22 "Sweet Pink"}, 0xFFF2AFB4, 305\},\par
03383     \{{\cf22 "Blushing Pink"}, 0xFFE8418C, 307\},\par
03384     \{{\cf22 "Pink"}, 0xFFE77F9D, 309\},\par
03385     \{{\cf22 "Rose Pink"}, 0xFFF06F8C, 313\},\par
03386     \{{\cf22 "Green"}, 0xFF008340, 317\},\par
03387     \{{\cf22 "Shocking Pink"}, 0xFFDF99B6, 321\},\par
03388     \{{\cf22 "Ruby"}, 0xFF820052, 325\},\par
03389     \{{\cf22 "Garnet"}, 0xFFB1415F, 333\},\par
03390     \{{\cf22 "Light Purple"}, 0xFFC394AE, 345\},\par
03391     \{{\cf22 "Medium Purple"}, 0xFFA86E91, 347\},\par
03392     \{{\cf22 "Dark Grape"}, 0xFF694169, 348\},\par
03393     \{{\cf22 "Pastel Light Pink"}, 0xFFE6CFD5, 376\},\par
03394     \{{\cf22 "Light Baby Blue"}, 0xFFA8BED7, 379\},\par
03395     \{{\cf22 "Crystal Blue"}, 0xFFA0BFD7, 380\},\par
03396     \{{\cf22 "Very Light Lavender"}, 0xFF90A6C6, 381\},\par
03397     \{{\cf22 "Cornflower"}, 0xFF8FAFC6, 382\},\par
03398     \{{\cf22 "Lavender"}, 0xFFB1B8D3, 383\},\par
03399     \{{\cf22 "Denim"}, 0xFF416C9B, 385\},\par
03400     \{{\cf22 "Light Violet"}, 0xFF7D77AF, 386\},\par
03401     \{{\cf22 "Misty Rose"}, 0xFFFADAF4, 387\},\par
03402     \{{\cf22 "Grape"}, 0xFF664090, 390\},\par
03403     \{{\cf22 "Lt. Weathered Blue"}, 0xFFEAF0F9, 402\},\par
03404     \{{\cf22 "Baby Blue"}, 0xFFA6D8F6, 403\},\par
03405     \{{\cf22 "Med Baby Blue"}, 0xFF7B9CB0, 404\},\par
03406     \{{\cf22 "Med Pastel Blue"}, 0xFF648DC7, 406\},\par
03407     \{{\cf22 "Blue Raspberry"}, 0xFF3D6AA1, 409\},\par
03408     \{{\cf22 "Med Royal Blue"}, 0xFF2D4491, 413\},\par
03409     \{{\cf22 "Ocean Blue"}, 0xFF143D7A, 414\},\par
03410     \{{\cf22 "Med Navy"}, 0xFF113263, 415\},\par
03411     \{{\cf22 "Dark Navy"}, 0xFF0E1F38, 423\},\par
03412     \{{\cf22 "Bright Sunshine"}, 0xFF0E1F38, 432\}, {\cf20 /* TODO: duplicate case value */}\par
03413     \{{\cf22 "Teal"}, 0xFF0091A5, 443\},\par
03414     \{{\cf22 "Deep Teal"}, 0xFF005B63, 448\},\par
03415     \{{\cf22 "Dark Teal"}, 0xFF00474D, 449\},\par
03416     \{{\cf22 "Old Gold"}, 0xFFE5B15C, 466\},\par
03417     \{{\cf22 "Cream"}, 0xFFD5BF9B, 501\},\par
03418     \{{\cf22 "Pale Salmon"}, 0xFFFFD085, 503\},\par
03419     \{{\cf22 "Med Peach"}, 0xFFF6B08E, 505\},\par
03420     \{{\cf22 "Pink Salmon"}, 0xFFB3E851, 506\},\par
03421     \{{\cf22 "Dark Peach"}, 0xFFF1A236, 508\},\par
03422     \{{\cf22 "Dark Brown"}, 0xFF6E4337, 513\},\par
03423     \{{\cf22 "Pale Red"}, 0xFFD8493E, 527\},\par
03424     \{{\cf22 "Heron Blue"}, 0xFF697698, 541\},\par
03425     \{{\cf22 "Pale Yellow"}, 0xFFFDE896, 601\},\par
03426     \{{\cf22 "Pastel Yellow"}, 0xFFEDE55D, 602\},\par
03427     \{{\cf22 "Golden Puppy"}, 0xFFDFA200, 609\},\par
03428     \{{\cf22 "Buttercup"}, 0xFFFDE896, 612\}, {\cf20 /* TODO: duplicate case value */}\par
03429     \{{\cf22 "Treasure Gold"}, 0xFFCEB24C, 616\},\par
03430     \{{\cf22 "Old Gold"}, 0xFFAD953E, 619\},\par
03431     \{{\cf22 "Pale Apricot"}, 0xFFFEF9EA, 627\},\par
03432     \{{\cf22 "Tan"}, 0xFFBD9565, 628\},\par
03433     \{{\cf22 "Mellow Yellow"}, 0xFFFDF76C, 632\},\par
03434     \{{\cf22 "Lemon"}, 0xFFEDEF05, 633\},\par
03435     \{{\cf22 "Amber"}, 0xFFF8C300, 646\},\par
03436     \{{\cf22 "Mandarina"}, 0xFFE77817, 649\},\par
03437     \{{\cf22 "Orange"}, 0xFFE66535, 650\},\par
03438     \{{\cf22 "Golden Rod"}, 0xFFC69632, 652\},\par
03439     \{{\cf22 "Light Olive"}, 0xFF98996D, 653\},\par
03440     \{{\cf22 "Bright Gold"}, 0xFFC98300, 654\},\par
03441     \{{\cf22 "Blue-Green"}, 0xFF007B8D, 688\},\par
03442     \{{\cf22 "Forrest Green"}, 0xFF004D3D, 695\},\par
03443     \{{\cf22 "Midnight Blue"}, 0xFF007EBA, 697\},\par
03444     \{{\cf22 "Med Red"}, 0xFFCF0040, 700\},\par
03445     \{{\cf22 "Med Blue"}, 0xFF28438C, 809\},\par
03446     \{{\cf22 "Sweet Apricot"}, 0xFFD0B478, 812\},\par
03447     \{{\cf22 "Skin"}, 0xFFE5BE6C, 818\},\par
03448     \{{\cf22 "Jade"}, 0xFF449284, 825\},\par
03449     \{{\cf22 "Light Silver"}, 0xFFCFCFCF, 829\},\par
03450     \{{\cf22 "Papaya Whip"}, 0xFFDC875E, 831\},\par
03451     \{{\cf22 "Cooper"}, 0xFFB4705D, 832\},\par
03452     \{{\cf22 "Light Pecan"}, 0xFF9B5C4B, 833\},\par
03453     \{{\cf22 "Burnt Rust"}, 0xFFA93121, 838\},\par
03454     \{{\cf22 "Vegas Gold"}, 0xFFB18B00, 842\},\par
03455     \{{\cf22 "Med Brown"}, 0xFF86462E, 857\},\par
03456     \{{\cf22 "Med Russett"}, 0xFF614125, 859\},\par
03457     \{{\cf22 "Med Copper"}, 0xFFB25C31, 864\},\par
03458     \{{\cf22 "Dark Driftwood"}, 0xFF806A61, 873\},\par
03459     \{{\cf22 "Birch"}, 0xFF634831, 878\},\par
03460     \{{\cf22 "Dark Chocolate"}, 0xFF1A0C06, 891\},\par
03461     \{{\cf22 "Sky Blue 2"}, 0xFF96D5C8, 903\},\par
03462     \{{\cf22 "Aquamarine"}, 0xFFB4DCD8, 904\},\par
03463     \{{\cf22 "Golden Brown"}, 0xFFAF7D3E, 905\},\par
03464     \{{\cf22 "Sea Blue"}, 0xFF00A3A0, 906\},\par
03465     \{{\cf22 "Deep Sea"}, 0xFF00405D, 913\},\par
03466     \{{\cf22 "Pastel Mint"}, 0xFFC9E3C5, 947\},\par
03467     \{{\cf22 "True Green"}, 0xFF55AF78, 949\},\par
03468     \{{\cf22 "Med Olive"}, 0xFF858325, 951\},\par
03469     \{{\cf22 "Olive"}, 0xFF61601C, 955\},\par
03470     \{{\cf22 "Light Jade"}, 0xFF709188, 961\},\par
03471     \{{\cf22 "Smith Apple"}, 0xFFBEDC8C, 984\},\par
03472     \{{\cf22 "Light Lime"}, 0xFFBEE678, 985\},\par
03473     \{{\cf22 "Grass Green"}, 0xFF76C850, 988\},\par
03474     \{{\cf22 "Deep Teal"}, 0xFF466E64, 448\},\par
03475     \{{\cf22 "Med Forrest Green"}, 0xFF356936, 992\},\par
03476     \{{\cf22 "Deep Violet"}, 0xFF4B4884, 1031\},\par
03477     \{{\cf22 "Light Natural"}, 0xFFEDEDD2, 1140\},\par
03478     \{{\cf22 "Wheat"}, 0xFFF3D8A8, 1145\},\par
03479     \{{\cf22 "Desert Sand"}, 0xFFC8BE96, 1148\},\par
03480     \{{\cf22 "Egyptian Blue"}, 0xFF243A7D, 1163\},\par
03481     \{{\cf22 "Gecko"}, 0xFF86BE4E, 1183\},\par
03482     \{{\cf22 "Burgandy"}, 0xFF8E4044, 1241\},\par
03483     \{{\cf22 "Med Orchid"}, 0xFF893480, 1323\},\par
03484     \{{\cf22 "Med Purple"}, 0xFF8C6DAA, 1324\},\par
03485     \{{\cf22 "Very Old Gold"}, 0xFFB6A36C, 1552\},\par
03486     \{{\cf22 "Light Spruce"}, 0xFF2E9F76, 1615\},\par
03487     \{{\cf22 "Paris Green"}, 0xFF98C173, 1619\},\par
03488     \{{\cf22 "Timberwolf"}, 0xFFCDCDCD, 1707\},\par
03489     \{{\cf22 "Bright Blue"}, 0xFF2A377E, 2031\},\par
03490     \{{\cf22 "Turquoise Blue"}, 0xFF006CA5, 2093\},\par
03491     \{{\cf22 "Dark Wine"}, 0xFF834455, 2250\},\par
03492     \{{\cf22 "Beige"}, 0xFFD0A44F, 2518\},\par
03493     \{{\cf22 "Gold"}, 0xFFED9206, 2519\},\par
03494     \{{\cf22 "Med Orange"}, 0xFFEDEF05, 3001\}, {\cf20 /* TODO: duplicate case value */}\par
03495     \{{\cf22 "Dark Salmon"}, 0xFFC07A46, 3014\},\par
03496     \{{\cf22 "Fire Red"}, 0xFFB43C3C, 3015\},\par
03497     \{{\cf22 "Saddle Brown"}, 0xFF915F46, 3142\},\par
03498     \{{\cf22 "Yellow Sun"}, 0xFFFFC500, 4117\},\par
03499     \{{\cf22 "Deep Taupe"}, 0xFFA68A68, 4371\},\par
03500     \{{\cf22 "Sky Blue"}, 0xFF00A4D9, 4419\},\par
03501     \{{\cf22 "Wild Peacock"}, 0xFF0B7F85, 4627\},\par
03502     \{{\cf22 "Millard Green"}, 0xFF002D1F, 4735\},\par
03503     \{{\cf22 "Dark Blue"}, 0xFF11263C, 5552\},\par
03504     \{{\cf22 "Powder Blue"}, 0xFF91B9E2, 5554\},\par
03505     \{{\cf22 "Froggy Green"}, 0xFF429648, 5557\},\par
03506     \{{\cf22 "Stone Grey"}, 0xFF878C8C, 8010\},\par
03507     \{{\cf22 "END"}, 0, -1\}\par
03508 \};\par
03509 \par
03510 thread_color Sulky_Rayon_codes[] = \{\par
03511     \{{\cf22 "Cornsilk"}, 0xFFEFC810, 502\},\par
03512     \{{\cf22 "Deep Arctic Sky"}, 0xFF0C082D, 505\},\par
03513     \{{\cf22 "Nutmeg"}, 0xFFB26C29, 521\},\par
03514     \{{\cf22 "Autumn Gold"}, 0xFFE79002, 523\},\par
03515     \{{\cf22 "English Green"}, 0xFF34481E, 525\},\par
03516     \{{\cf22 "Cobalt Blue"}, 0xFF113675, 526\},\par
03517     \{{\cf22 "Forest Green"}, 0xFF111408, 538\},\par
03518     \{{\cf22 "Lipstick"}, 0xFFE10000, 561\},\par
03519     \{{\cf22 "Spice"}, 0xFFFFB435, 562\},\par
03520     \{{\cf22 "Butterfly Gold"}, 0xFFF3A001, 567\},\par
03521     \{{\cf22 "Cinnamon"}, 0xFFE66D00, 568\},\par
03522     \{{\cf22 "Garden Green"}, 0xFF165F28, 569\},\par
03523     \{{\cf22 "Deep Aqua"}, 0xFF088E6C, 571\},\par
03524     \{{\cf22 "Blue Ribbon"}, 0xFF100A7C, 572\},\par
03525     \{{\cf22 "Mint Julep"}, 0xFF35693D, 580\},\par
03526     \{{\cf22 "Dusty Peach"}, 0xFFE9BD96, 619\},\par
03527     \{{\cf22 "Sunset"}, 0xFFCD3900, 621\},\par
03528     \{{\cf22 "Moss Green"}, 0xFF777113, 630\},\par
03529     \{{\cf22 "Med. Aqua"}, 0xFF1C6F51, 640\},\par
03530     \{{\cf22 "Arctic Sky"}, 0xFF262345, 643\},\par
03531     \{{\cf22 "Bright White"}, 0xFFF9F9FF, 1001\},\par
03532     \{{\cf22 "Soft White"}, 0xFFF9F9F4, 1002\},\par
03533     \{{\cf22 "Black"}, 0xFF000000, 1005\},\par
03534     \{{\cf22 "Steel Gray"}, 0xFFB7A9AC, 1011\},\par
03535     \{{\cf22 "Med. Peach"}, 0xFFE1AF9A, 1015\},\par
03536     \{{\cf22 "Pastel Coral"}, 0xFFEC968C, 1016\},\par
03537     \{{\cf22 "Pastel Peach"}, 0xFFEFDFBD, 1017\},\par
03538     \{{\cf22 "Peach"}, 0xFFECA082, 1019\},\par
03539     \{{\cf22 "Dark Peach"}, 0xFFF08278, 1020\},\par
03540     \{{\cf22 "Maple"}, 0xFFEB6602, 1021\},\par
03541     \{{\cf22 "Cream"}, 0xFFFFF7D5, 1022\},\par
03542     \{{\cf22 "Yellow"}, 0xFFFFE669, 1023\},\par
03543     \{{\cf22 "Goldenrod"}, 0xFFFFB800, 1024\},\par
03544     \{{\cf22 "Mine Gold"}, 0xFFD78000, 1025\},\par
03545     \{{\cf22 "Baby Blue"}, 0xFFBEC3E1, 1028\},\par
03546     \{{\cf22 "Med. Blue"}, 0xFFA0C3EB, 1029\},\par
03547     \{{\cf22 "Periwinkle"}, 0xFFA6A2C6, 1030\},\par
03548     \{{\cf22 "Med. Orchid"}, 0xFFDFBEC8, 1031\},\par
03549     \{{\cf22 "Med. Purple"}, 0xFFE68CEB, 1032\},\par
03550     \{{\cf22 "Dk. Orchid"}, 0xFFD86496, 1033\},\par
03551     \{{\cf22 "Burgundy"}, 0xFFC6323C, 1034\},\par
03552     \{{\cf22 "Dk. Burgundy"}, 0xFF790000, 1035\},\par
03553     \{{\cf22 "Lt.Red"}, 0xFFF90000, 1037\},\par
03554     \{{\cf22 "True Red"}, 0xFFEB0000, 1039\},\par
03555     \{{\cf22 "Med. Dk. Khaki"}, 0xFF877375, 1040\},\par
03556     \{{\cf22 "Med. Dk. Gray"}, 0xFF8C7F83, 1041\},\par
03557     \{{\cf22 "Bright Navy Blue"}, 0xFF321E50, 1042\},\par
03558     \{{\cf22 "Dk. Navy"}, 0xFF190525, 1043\},\par
03559     \{{\cf22 "Midnight Blue"}, 0xFF1D062F, 1044\},\par
03560     \{{\cf22 "Lt. Teal"}, 0xFFC3EFBF, 1045\},\par
03561     \{{\cf22 "Teal"}, 0xFF2E8359, 1046\},\par
03562     \{{\cf22 "Mint Green"}, 0xFFA6C284, 1047\},\par
03563     \{{\cf22 "Grass Green"}, 0xFF42A021, 1049\},\par
03564     \{{\cf22 "Xmas Green"}, 0xFF1E6419, 1051\},\par
03565     \{{\cf22 "Med. Dk. Ecru"}, 0xFFEEBEAE, 1054\},\par
03566     \{{\cf22 "Tawny Tan"}, 0xFFEBBC80, 1055\},\par
03567     \{{\cf22 "Med Tawny Tan"}, 0xFFAF5B00, 1056\},\par
03568     \{{\cf22 "Dk Tawny Tan"}, 0xFF642702, 1057\},\par
03569     \{{\cf22 "Tawny Brown"}, 0xFF663500, 1058\},\par
03570     \{{\cf22 "Dk Tawny Brown"}, 0xFF530601, 1059\},\par
03571     \{{\cf22 "Pale Yellow"}, 0xFFFFF7B9, 1061\},\par
03572     \{{\cf22 "Pale Yellow-Green"}, 0xFFF0F8EC, 1063\},\par
03573     \{{\cf22 "Pale Peach"}, 0xFFE6B4AA, 1064\},\par
03574     \{{\cf22 "Orange Yellow"}, 0xFFFF9100, 1065\},\par
03575     \{{\cf22 "Primrose"}, 0xFFFFF180, 1066\},\par
03576     \{{\cf22 "Lemon Yellow"}, 0xFFFFFF85, 1067\},\par
03577     \{{\cf22 "Pink Tint"}, 0xFFF3DBD9, 1068\},\par
03578     \{{\cf22 "Gold"}, 0xFFF6CE69, 1070\},\par
03579     \{{\cf22 "Off White"}, 0xFFF9F9EA, 1071\},\par
03580     \{{\cf22 "Pale Powder Blue"}, 0xFFD6D5E8, 1074\},\par
03581     \{{\cf22 "Royal Blue"}, 0xFF5A5A8B, 1076\},\par
03582     \{{\cf22 "Jade Tint"}, 0xFFBECDC8, 1077\},\par
03583     \{{\cf22 "Tangerine"}, 0xFFFF6600, 1078\},\par
03584     \{{\cf22 "Emerald Green"}, 0xFF175523, 1079\},\par
03585     \{{\cf22 "Orchid"}, 0xFFDC82A0, 1080\},\par
03586     \{{\cf22 "Brick"}, 0xFFF06E78, 1081\},\par
03587     \{{\cf22 "Ecru"}, 0xFFF7E3BB, 1082\},\par
03588     \{{\cf22 "Spark Gold"}, 0xFFFFC100, 1083\},\par
03589     \{{\cf22 "Silver"}, 0xFFE2CFC7, 1085\},\par
03590     \{{\cf22 "Pale Sea Foam"}, 0xFFF9F9E0, 1086\},\par
03591     \{{\cf22 "Deep Peacock"}, 0xFF16625F, 1090\},\par
03592     \{{\cf22 "Med Turquoise"}, 0xFF26BFCA, 1094\},\par
03593     \{{\cf22 "Turquoise"}, 0xFF10D1BD, 1095\},\par
03594     \{{\cf22 "Dk Turquoise"}, 0xFF0F6978, 1096\},\par
03595     \{{\cf22 "Lt Grass Green"}, 0xFFC2D37D, 1100\},\par
03596     \{{\cf22 "True Green"}, 0xFF098531, 1101\},\par
03597     \{{\cf22 "Dk Khaki"}, 0xFF02140F, 1103\},\par
03598     \{{\cf22 "Pastel Yellow-Grn"}, 0xFFA5AF68, 1104\},\par
03599     \{{\cf22 "Lt Mauve"}, 0xFFFAA4A4, 1108\},\par
03600     \{{\cf22 "Hot Pink"}, 0xFFDC6496, 1109\},\par
03601     \{{\cf22 "Pastel Orchid"}, 0xFFFCCBDF, 1111\},\par
03602     \{{\cf22 "Royal Purple"}, 0xFF46016E, 1112\},\par
03603     \{{\cf22 "Pastel Mauve"}, 0xFFF0C8B4, 1113\},\par
03604     \{{\cf22 "Lt Pink"}, 0xFFF0B9B9, 1115\},\par
03605     \{{\cf22 "Mauve"}, 0xFFF5A9A0, 1117\},\par
03606     \{{\cf22 "Dk Mauve"}, 0xFFB46E75, 1119\},\par
03607     \{{\cf22 "Pale Pink"}, 0xFFF0D6D2, 1120\},\par
03608     \{{\cf22 "Pink"}, 0xFFFAB9CB, 1121\},\par
03609     \{{\cf22 "Purple"}, 0xFF82288E, 1122\},\par
03610     \{{\cf22 "Sun Yellow"}, 0xFFFFEC00, 1124\},\par
03611     \{{\cf22 "Tan"}, 0xFFDC8C17, 1126\},\par
03612     \{{\cf22 "Med Ecru"}, 0xFFFAECC6, 1127\},\par
03613     \{{\cf22 "Dk Ecru"}, 0xFFC39471, 1128\},\par
03614     \{{\cf22 "Brown"}, 0xFF6A1F06, 1129\},\par
03615     \{{\cf22 "Dark Brown"}, 0xFF551602, 1130\},\par
03616     \{{\cf22 "Cloister Brown"}, 0xFF490002, 1131\},\par
03617     \{{\cf22 "Peacock Blue"}, 0xFF507DAA, 1134\},\par
03618     \{{\cf22 "Pastel Yellow"}, 0xFFFFF072, 1135\},\par
03619     \{{\cf22 "Yellow Orange"}, 0xFFFFBE00, 1137\},\par
03620     \{{\cf22 "True Blue"}, 0xFF4A5870, 1143\},\par
03621     \{{\cf22 "Powder Blue"}, 0xFFB4E1EB, 1145\},\par
03622     \{{\cf22 "Xmas Red"}, 0xFFEB0000, 1147\},   {\cf20 /* TODO: duplicate case value */}\par
03623     \{{\cf22 "Lt Coral"}, 0xFFFFBDBD, 1148\},\par
03624     \{{\cf22 "Deep Ecru"}, 0xFFE8C89C, 1149\},\par
03625     \{{\cf22 "Powder Blue Tint"}, 0xFFE2E2EB, 1151\},\par
03626     \{{\cf22 "Coral"}, 0xFFFA9999, 1154\},\par
03627     \{{\cf22 "Lt Army Green"}, 0xFF636327, 1156\},\par
03628     \{{\cf22 "Dk Maple"}, 0xFFBA4500, 1158\},\par
03629     \{{\cf22 "Temple Gold"}, 0xFFD39D00, 1159\},\par
03630     \{{\cf22 "Deep Teal"}, 0xFF10394A, 1162\},\par
03631     \{{\cf22 "Lt Sky Blue"}, 0xFFDFE5EB, 1165\},\par
03632     \{{\cf22 "Med Steel Gray"}, 0xFF8E7E7E, 1166\},\par
03633     \{{\cf22 "Maize Yellow"}, 0xFFFFD226, 1167\},\par
03634     \{{\cf22 "True Orange"}, 0xFFF5740A, 1168\},\par
03635     \{{\cf22 "Bayberry Red"}, 0xFF9C0000, 1169\},\par
03636     \{{\cf22 "Lt Brown"}, 0xFF975F2F, 1170\},\par
03637     \{{\cf22 "Weathered Blue"}, 0xFF08180E, 1171\},\par
03638     \{{\cf22 "Med Weathered Blue"}, 0xFF6E788C, 1172\},\par
03639     \{{\cf22 "Med Army Green"}, 0xFF59591D, 1173\},\par
03640     \{{\cf22 "Dk Pine Green"}, 0xFF0D2904, 1174\},\par
03641     \{{\cf22 "Dk Avocado"}, 0xFF152D04, 1175\},\par
03642     \{{\cf22 "Med Dk Avocado"}, 0xFF515308, 1176\},\par
03643     \{{\cf22 "Avocado"}, 0xFF899812, 1177\},\par
03644     \{{\cf22 "Dk Taupe"}, 0xFF8F623D, 1179\},\par
03645     \{{\cf22 "Med Taupe"}, 0xFFA58973, 1180\},\par
03646     \{{\cf22 "Rust"}, 0xFFCB0000, 1181\},\par
03647     \{{\cf22 "Blue Black"}, 0xFF020114, 1182\},\par
03648     \{{\cf22 "Black Cherry"}, 0xFF320614, 1183\},\par
03649     \{{\cf22 "Orange Red"}, 0xFFFF6600, 1184\}, {\cf20 /* TODO: duplicate case value */}\par
03650     \{{\cf22 "Golden Yellow"}, 0xFFFCBE05, 1185\},\par
03651     \{{\cf22 "Sable Brown"}, 0xFF5B0000, 1186\},\par
03652     \{{\cf22 "Mimosa Yellow"}, 0xFFFFE500, 1187\},\par
03653     \{{\cf22 "Red Geranium"}, 0xFFFF004B, 1188\},\par
03654     \{{\cf22 "Dk Chestnut"}, 0xFF4B122D, 1189\},\par
03655     \{{\cf22 "Med Burgundy"}, 0xFFA04656, 1190\},\par
03656     \{{\cf22 "Dk Rose"}, 0xFFBD1E60, 1191\},\par
03657     \{{\cf22 "Fuchsia"}, 0xFFD21E82, 1192\},\par
03658     \{{\cf22 "Lavender"}, 0xFFE6AFD2, 1193\},\par
03659     \{{\cf22 "Lt Purple"}, 0xFFD274D7, 1194\},\par
03660     \{{\cf22 "Dk Purple"}, 0xFF370150, 1195\},\par
03661     \{{\cf22 "Blue"}, 0xFF96C3E1, 1196\},\par
03662     \{{\cf22 "Med Navy"}, 0xFF220F34, 1197\},\par
03663     \{{\cf22 "Dusty Navy"}, 0xFF3C5075, 1198\},\par
03664     \{{\cf22 "Admiral Navy Blue"}, 0xFF2A143F, 1199\},\par
03665     \{{\cf22 "Med Dk Navy"}, 0xFF140B2D, 1200\},\par
03666     \{{\cf22 "Med Powder Blue"}, 0xFF648BBE, 1201\},\par
03667     \{{\cf22 "Deep Turquoise"}, 0xFF182B56, 1202\},\par
03668     \{{\cf22 "Lt Weathered Blue"}, 0xFFAEB8C3, 1203\},\par
03669     \{{\cf22 "Pastel Jade"}, 0xFFA8C8BC, 1204\},\par
03670     \{{\cf22 "Med Jade"}, 0xFF6E90A5, 1205\},\par
03671     \{{\cf22 "Dark Jade"}, 0xFF1E6E6F, 1206\},\par
03672     \{{\cf22 "Sea Foam Green"}, 0xFF80A388, 1207\},\par
03673     \{{\cf22 "Mallard Green"}, 0xFF0C3D03, 1208\},\par
03674     \{{\cf22 "Lt Avocado"}, 0xFFBDD163, 1209\},\par
03675     \{{\cf22 "Dk Army Green"}, 0xFF273B00, 1210\},\par
03676     \{{\cf22 "Lt Khaki"}, 0xFF95A490, 1211\},\par
03677     \{{\cf22 "Khaki"}, 0xFF63632D, 1212\},\par
03678     \{{\cf22 "Taupe"}, 0xFFB9A096, 1213\},\par
03679     \{{\cf22 "Med Chestnut"}, 0xFF642828, 1214\},\par
03680     \{{\cf22 "Blackberry"}, 0xFF500A1E, 1215\},\par
03681     \{{\cf22 "Med Maple"}, 0xFFAC1C01, 1216\},\par
03682     \{{\cf22 "Chestnut"}, 0xFF971F01, 1217\},\par
03683     \{{\cf22 "Silver Gray"}, 0xFFDFDFCB, 1218\},\par
03684     \{{\cf22 "Gray"}, 0xFF98888C, 1219\},\par
03685     \{{\cf22 "Charcoal Gray"}, 0xFF765960, 1220\},\par
03686     \{{\cf22 "Lt Baby Blue"}, 0xFFD1DBFF, 1222\},\par
03687     \{{\cf22 "Baby Blue Tint"}, 0xFFDCE0F1, 1223\},\par
03688     \{{\cf22 "Bright Pink"}, 0xFFF0A0B9, 1224\},\par
03689     \{{\cf22 "Pastel Pink"}, 0xFFFACBCB, 1225\},\par
03690     \{{\cf22 "Dkl Periwinkle"}, 0xFF57369E, 1226\},\par
03691     \{{\cf22 "Gold Green"}, 0xFFAF8901, 1227\},\par
03692     \{{\cf22 "Drab Green"}, 0xFF96AA8B, 1228\},\par
03693     \{{\cf22 "Lt Putty"}, 0xFFE0DBDB, 1229\},\par
03694     \{{\cf22 "Dk Teal"}, 0xFF0B4133, 1230\},\par
03695     \{{\cf22 "Med Rose"}, 0xFFE5326A, 1231\},\par
03696     \{{\cf22 "Classic Green"}, 0xFF193207, 1232\},\par
03697     \{{\cf22 "Ocean Teal"}, 0xFF0D2210, 1233\},\par
03698     \{{\cf22 "Almost Black"}, 0xFF3C1B1F, 1234\},\par
03699     \{{\cf22 "Deep Purple"}, 0xFF783298, 1235\},\par
03700     \{{\cf22 "Lt Silver"}, 0xFFEAE4E4, 1236\},\par
03701     \{{\cf22 "Deep Mauve"}, 0xFFBC3D2C, 1237\},\par
03702     \{{\cf22 "Orange Sunrise"}, 0xFFFF8300, 1238\},\par
03703     \{{\cf22 "Apricot"}, 0xFFFFAB57, 1239\},\par
03704     \{{\cf22 "Smokey Grey"}, 0xFF74586C, 1240\},\par
03705     \{{\cf22 "Nassau Blue"}, 0xFF543A8D, 1242\},\par
03706     \{{\cf22 "Orange Flame"}, 0xFFFF0000, 1246\},\par
03707     \{{\cf22 "Mahogany"}, 0xFF660000, 1247\},\par
03708     \{{\cf22 "Med Pastel Blue"}, 0xFFD2E6F0, 1248\},\par
03709     \{{\cf22 "Cornflower Blue"}, 0xFF62AADC, 1249\},\par
03710     \{{\cf22 "Duck Wing Blue"}, 0xFF275C70, 1250\},\par
03711     \{{\cf22 "Bright Turquoise"}, 0xFF306F75, 1251\},\par
03712     \{{\cf22 "Bright Peacock"}, 0xFF09A1A8, 1252\},\par
03713     \{{\cf22 "Dk Sapphire"}, 0xFF1B4CA4, 1253\},\par
03714     \{{\cf22 "Dusty Lavender"}, 0xFFE6B9F5, 1254\},\par
03715     \{{\cf22 "Deep Orchid"}, 0xFFBE1982, 1255\},\par
03716     \{{\cf22 "Sweet Pink"}, 0xFFEB8296, 1256\},\par
03717     \{{\cf22 "Deep Coral"}, 0xFFE60041, 1257\},\par
03718     \{{\cf22 "Coral Reed"}, 0xFFF0C4A0, 1258\},\par
03719     \{{\cf22 "Salmon Peach"}, 0xFFE28264, 1259\},\par
03720     \{{\cf22 "Red Jubilee"}, 0xFFB30000, 1263\},\par
03721     \{{\cf22 "Cognac"}, 0xFF6A0000, 1264\},\par
03722     \{{\cf22 "Burnt Toast"}, 0xFF9B6B2C, 1265\},\par
03723     \{{\cf22 "Toast"}, 0xFF9C6D45, 1266\},\par
03724     \{{\cf22 "Mink Brown"}, 0xFF864C31, 1267\},\par
03725     \{{\cf22 "Light Gray Khaki"}, 0xFFEFEFE5, 1268\},\par
03726     \{{\cf22 "Dk Gray Khaki"}, 0xFFB7B7AF, 1270\},\par
03727     \{{\cf22 "Evergreen"}, 0xFF3C4F31, 1271\},\par
03728     \{{\cf22 "Hedge Green"}, 0xFF4A4A19, 1272\},\par
03729     \{{\cf22 "Nile Green"}, 0xFF5C9A1A, 1274\},\par
03730     \{{\cf22 "Sea Mist"}, 0xFFE0E6C8, 1275\},\par
03731     \{{\cf22 "Pistachio"}, 0xFF70770F, 1276\},\par
03732     \{{\cf22 "Ivy Green"}, 0xFF027602, 1277\},\par
03733     \{{\cf22 "Bright Green"}, 0xFF00AF38, 1278\},\par
03734     \{{\cf22 "Willow Green"}, 0xFF93D16C, 1279\},\par
03735     \{{\cf22 "Dk Willow Green"}, 0xFF46B774, 1280\},\par
03736     \{{\cf22 "Slate Gray"}, 0xFF483D59, 1283\},\par
03737     \{{\cf22 "Dk Winter Sky"}, 0xFF466E78, 1284\},\par
03738     \{{\cf22 "Dk Sage Green"}, 0xFF134F45, 1285\},\par
03739     \{{\cf22 "Dk French Green"}, 0xFF343213, 1286\},\par
03740     \{{\cf22 "French Green"}, 0xFF415545, 1287\},\par
03741     \{{\cf22 "Aqua"}, 0xFF0FA56F, 1288\},\par
03742     \{{\cf22 "Ice Blue"}, 0xFFDCEBF0, 1289\},\par
03743     \{{\cf22 "Winter Sky"}, 0xFF727483, 1291\},\par
03744     \{{\cf22 "Heron Blue"}, 0xFFD1DCFA, 1292\},\par
03745     \{{\cf22 "Deep Nassau Blue"}, 0xFF44235D, 1293\},\par
03746     \{{\cf22 "Deep Slate Gray"}, 0xFF412044, 1294\},\par
03747     \{{\cf22 "Sterling"}, 0xFF82878C, 1295\},\par
03748     \{{\cf22 "Hyacinth"}, 0xFFD2AAF0, 1296\},\par
03749     \{{\cf22 "Lt Plum"}, 0xFF735A64, 1297\},\par
03750     \{{\cf22 "Dk Plum"}, 0xFF644664, 1298\},\par
03751     \{{\cf22 "Purple Shadow"}, 0xFF411446, 1299\},\par
03752     \{{\cf22 "Plum"}, 0xFF7E1E46, 1300\},\par
03753     \{{\cf22 "Deep Eggplant"}, 0xFF320046, 1301\},\par
03754     \{{\cf22 "Eggplant"}, 0xFF6E0A96, 1302\},\par
03755     \{{\cf22 "Dewberry"}, 0xFFB47364, 1304\},\par
03756     \{{\cf22 "Sage Green"}, 0xFFAEC6BB, 1305\},\par
03757     \{{\cf22 "Gun Metal Gray"}, 0xFF7E6C7C, 1306\},\par
03758     \{{\cf22 "Petal Pink"}, 0xFFDB6478, 1307\},\par
03759     \{{\cf22 "Magenta"}, 0xFF782346, 1309\},\par
03760     \{{\cf22 "Mulberry"}, 0xFF961A32, 1311\},\par
03761     \{{\cf22 "Wine"}, 0xFF840000, 1312\},\par
03762     \{{\cf22 "Bittersweet"}, 0xFFFC8F0C, 1313\},\par
03763     \{{\cf22 "Poppy"}, 0xFFFF0000, 1317\}, {\cf20 /* TODO: duplicate case value */}\par
03764     \{{\cf22 "Gray Khaki"}, 0xFFCBCBBD, 1321\},\par
03765     \{{\cf22 "Chartreuse"}, 0xFF818901, 1322\},\par
03766     \{{\cf22 "Whisper Gray"}, 0xFFF8F5F1, 1325\},\par
03767     \{{\cf22 "Dk Whisper Gray"}, 0xFFD5C7C3, 1327\},\par
03768     \{{\cf22 "Nickel Gray"}, 0xFFC0B2B7, 1328\},\par
03769     \{{\cf22 "Dk Nickel Gray"}, 0xFFABA0A8, 1329\},\par
03770     \{{\cf22 "Pale Green"}, 0xFFEDF6D4, 1331\},\par
03771     \{{\cf22 "Deep Chartreuse"}, 0xFF868105, 1332\},\par
03772     \{{\cf22 "Sunflower Gold"}, 0xFFF3B600, 1333\},\par
03773     \{{\cf22 "Green Peacock"}, 0xFF349669, 1503\},\par
03774     \{{\cf22 "Putty"}, 0xFFC1CBB9, 1508\},\par
03775     \{{\cf22 "Lime Green"}, 0xFF7AB31D, 1510\},\par
03776     \{{\cf22 "Deep Rose"}, 0xFFEE5078, 1511\},\par
03777     \{{\cf22 "Wild Peacock"}, 0xFF007A67, 1513\},\par
03778     \{{\cf22 "Rosebud"}, 0xFFFF8CCB, 1515\},\par
03779     \{{\cf22 "Coachman Green"}, 0xFF014F3A, 1517\},\par
03780     \{{\cf22 "Lt Rose"}, 0xFFCD054D, 1533\},\par
03781     \{{\cf22 "Sapphire"}, 0xFF347DCB, 1534\},\par
03782     \{{\cf22 "Team Blue"}, 0xFF23238B, 1535\},\par
03783     \{{\cf22 "Midnight Teal"}, 0xFF081705, 1536\},\par
03784     \{{\cf22 "Peach Fluff"}, 0xFFFFD6C7, 1543\},\par
03785     \{{\cf22 "Purple Accent"}, 0xFF9C6484, 1545\},\par
03786     \{{\cf22 "Flax"}, 0xFFE6AE6F, 1549\},\par
03787     \{{\cf22 "Desert Cactus"}, 0xFF6C8E87, 1550\},\par
03788     \{{\cf22 "Ocean Aqua"}, 0xFF80B0AE, 1551\},\par
03789     \{{\cf22 "Dk Desert Cactus"}, 0xFF6C7C71, 1552\},\par
03790     \{{\cf22 "Purple Passion"}, 0xFF8C748C, 1554\},\par
03791     \{{\cf22 "Tea Rose"}, 0xFFEB7183, 1558\},\par
03792     \{{\cf22 "Marine Aqua"}, 0xFF68E0F8, 1560\},\par
03793     \{{\cf22 "Deep Hyacinth"}, 0xFFB58CC7, 1561\},\par
03794     \{{\cf22 "Shrimp"}, 0xFFFAD2AA, 1800\},\par
03795     \{{\cf22 "Flesh"}, 0xFFFADC96, 1801\},\par
03796     \{{\cf22 "Soft Blush"}, 0xFFFFC896, 1802\},\par
03797     \{{\cf22 "Island Peach"}, 0xFFFF9B6E, 1803\},\par
03798     \{{\cf22 "Bayou Blue"}, 0xFF375A73, 1804\},\par
03799     \{{\cf22 "Ocean View"}, 0xFF28505A, 1805\},\par
03800     \{{\cf22 "Madras Blue"}, 0xFFA0B9C3, 1806\},\par
03801     \{{\cf22 "Soft Heather"}, 0xFFB49682, 1807\},\par
03802     \{{\cf22 "Velvet Slipper"}, 0xFFD2AF9B, 1808\},\par
03803     \{{\cf22 "Iced Mauve"}, 0xFFA07D82, 1809\},\par
03804     \{{\cf22 "Wild Mulberry"}, 0xFF645055, 1810\},\par
03805     \{{\cf22 "Wineberry"}, 0xFF3C2837, 1811\},\par
03806     \{{\cf22 "Wildflower"}, 0xFF6E2D5A, 1812\},\par
03807     \{{\cf22 "Plum Wine"}, 0xFF6E2D41, 1813\},\par
03808     \{{\cf22 "Orchid Kiss"}, 0xFFAF4B69, 1814\},\par
03809     \{{\cf22 "Japanese Fern"}, 0xFF91B432, 1815\},\par
03810     \{{\cf22 "Honeydew"}, 0xFFD7F58C, 1816\},\par
03811     \{{\cf22 "Lemon Grass"}, 0xFFAAAF14, 1817\},\par
03812     \{{\cf22 "Fairway Mist"}, 0xFFC8F58C, 1818\},\par
03813     \{{\cf22 "Outback"}, 0xFFC3913C, 1819\},\par
03814     \{{\cf22 "Fruit Shake"}, 0xFFC38C73, 1820\},\par
03815     \{{\cf22 "Creamy Peach"}, 0xFFFAC896, 1821\},\par
03816     \{{\cf22 "Toffee"}, 0xFF965A37, 1822\},\par
03817     \{{\cf22 "Cocoa"}, 0xFF965A28, 1823\},\par
03818     \{{\cf22 "Gentle Rain"}, 0xFFD2C3AF, 1824\},\par
03819     \{{\cf22 "Barnyard Grass"}, 0xFF5F9619, 1825\},\par
03820     \{{\cf22 "Galley Gold"}, 0xFFAA820A, 1826\},\par
03821     \{{\cf22 "Coral Sunset"}, 0xFFFF643C, 1827\},\par
03822     \{{\cf22 "Seashell"}, 0xFFFFE6AA, 1828\},\par
03823     \{{\cf22 "Cr\'E8me Brulee"}, 0xFFF0EBA5, 1829\},\par
03824     \{{\cf22 "Lilac"}, 0xFFB47396, 1830\},\par
03825     \{{\cf22 "Liimeade"}, 0xFF91E12D, 1831\},\par
03826     \{{\cf22 "Desert Glow"}, 0xFFE19119, 1832\},\par
03827     \{{\cf22 "Pumpkin Pie"}, 0xFFD25F00, 1833\},\par
03828     \{{\cf22 "Pea Soup"}, 0xFFAFAA05, 1834\},\par
03829     \{{\cf22 "Peapod Green"}, 0xFF6E8205, 1835\},\par
03830     \{{\cf22 "Loden Green"}, 0xFF3C4B05, 1836\},\par
03831     \{{\cf22 "Lt. Cocoa"}, 0xFF9B735A, 1837\},\par
03832     \{{\cf22 "Cocoa Cream"}, 0xFFCDAA7D, 1838\},\par
03833     \{{\cf22 "Cameo"}, 0xFF87C887, 1839\},\par
03834     \{{\cf22 "Sand"}, 0xFFF9E6CA, 508\},\par
03835     \{{\cf22 "Bone"}, 0xFFFDF3DA, 520\},\par
03836     \{{\cf22 "Dark Ash"}, 0xFF5D3446, 1241\},\par
03837     \{{\cf22 "Spring Moss"}, 0xFFE0C63B, 1243\},\par
03838     \{{\cf22 "Summer Gold"}, 0xFFDDAB00, 1260\},\par
03839     \{{\cf22 "Dk. Autumn Gold"}, 0xFFA98803, 1262\},\par
03840     \{{\cf22 "Mushroom"}, 0xFFAC8783, 1269\},\par
03841     \{{\cf22 "Dark Forest"}, 0xFF36361F, 1273\},\par
03842     \{{\cf22 "Watermelon"}, 0xFFFA5F7F, 1303\},\par
03843     \{{\cf22 "Caribbean Mist"}, 0xFFA3C2D7, 1644\},\par
03844     \{{\cf22 "END"}, 0, -1\}\par
03845 \};\par
03846 \par
03847 thread_color ThreadArt_Rayon_codes[] = \{\par
03848     \{{\cf22 "END"}, 0, -1\}\par
03849 \};\par
03850 \par
03851 thread_color ThreadArt_Polyester_codes[] = \{\par
03852     \{{\cf22 "END"}, 0, -1\}\par
03853 \};\par
03854 \par
03855 thread_color ThreaDelight_Polyester_codes[] = \{\par
03856     \{{\cf22 "END"}, 0, -1\}\par
03857 \};\par
03858 \par
03859 thread_color Z102_Isacord_Polyester_codes[] = \{\par
03860     \{{\cf22 "?"}, 0xFFF8FFFF, 17\},\par
03861     \{{\cf22 "?"}, 0xFF000000, 20\},\par
03862     \{{\cf22 "?"}, 0xFFB7BABA, 105\},\par
03863     \{{\cf22 "?"}, 0xFF73787A, 108\},\par
03864     \{{\cf22 "?"}, 0xFF454B58, 138\},\par
03865     \{{\cf22 "?"}, 0xFF9EA9A6, 142\},\par
03866     \{{\cf22 "?"}, 0xFFC8C6BD, 150\},\par
03867     \{{\cf22 "?"}, 0xFFFAEE5C, 220\},\par
03868     \{{\cf22 "?"}, 0xFFE5CB4F, 221\},\par
03869     \{{\cf22 "?"}, 0xFFFFF46A, 230\},\par
03870     \{{\cf22 "?"}, 0xFFFEF9D9, 270\},\par
03871     \{{\cf22 "?"}, 0xFFFFDC00, 311\},\par
03872     \{{\cf22 "?"}, 0xFF624F00, 345\},\par
03873     \{{\cf22 "?"}, 0xFFB8B25A, 352\},\par
03874     \{{\cf22 "?"}, 0xFF8D8F5B, 453\},\par
03875     \{{\cf22 "?"}, 0xFFFFF4A5, 520\},\par
03876     \{{\cf22 "?"}, 0xFFB98E03, 542\},\par
03877     \{{\cf22 "?"}, 0xFFE4C180, 651\},\par
03878     \{{\cf22 "?"}, 0xFFC5BFA6, 672\},\par
03879     \{{\cf22 "?"}, 0xFF96836D, 722\},\par
03880     \{{\cf22 "?"}, 0xFF4E3500, 747\},\par
03881     \{{\cf22 "?"}, 0xFFDDCBA5, 761\},\par
03882     \{{\cf22 "?"}, 0xFF605840, 776\},\par
03883     \{{\cf22 "?"}, 0xFFFFAF02, 800\},\par
03884     \{{\cf22 "?"}, 0xFFF6AE32, 811\},\par
03885     \{{\cf22 "?"}, 0xFFC89334, 822\},\par
03886     \{{\cf22 "?"}, 0xFFE59300, 824\},\par
03887     \{{\cf22 "?"}, 0xFFC89340, 832\},\par
03888     \{{\cf22 "?"}, 0xFF9E947F, 873\},\par
03889     \{{\cf22 "?"}, 0xFFC8700B, 922\},\par
03890     \{{\cf22 "?"}, 0xFFBB5704, 931\},\par
03891     \{{\cf22 "?"}, 0xFFB19072, 1061\},\par
03892     \{{\cf22 "?"}, 0xFFFF8101, 1102\},\par
03893     \{{\cf22 "?"}, 0xFFB1500A, 1115\},\par
03894     \{{\cf22 "?"}, 0xFFC09C72, 1123\},\par
03895     \{{\cf22 "?"}, 0xFF843D07, 1134\},\par
03896     \{{\cf22 "?"}, 0xFFD8A67D, 1141\},\par
03897     \{{\cf22 "?"}, 0xFF82421B, 1154\},\par
03898     \{{\cf22 "?"}, 0xFFFF7319, 1300\},\par
03899     \{{\cf22 "?"}, 0xFFFF3D1E, 1305\},\par
03900     \{{\cf22 "?"}, 0xFFBA4005, 1311\},\par
03901     \{{\cf22 "?"}, 0xFFC73C13, 1312\},\par
03902     \{{\cf22 "?"}, 0xFFE66B21, 1332\},\par
03903     \{{\cf22 "?"}, 0xFF3D1C11, 1346\},\par
03904     \{{\cf22 "?"}, 0xFFFFBC95, 1351\},\par
03905     \{{\cf22 "?"}, 0xFFFFCC93, 1362\},\par
03906     \{{\cf22 "?"}, 0xFF373732, 1375\},\par
03907     \{{\cf22 "?"}, 0xFFFFAF94, 1532\},\par
03908     \{{\cf22 "?"}, 0xFF5B4032, 1565\},\par
03909     \{{\cf22 "?"}, 0xFFFF6046, 1600\},\par
03910     \{{\cf22 "?"}, 0xFFFF6D71, 1753\},\par
03911     \{{\cf22 "?"}, 0xFFEBBAAE, 1755\},\par
03912     \{{\cf22 "?"}, 0xFFEB2D2B, 1805\},\par
03913     \{{\cf22 "?"}, 0xFFFF988F, 1840\},\par
03914     \{{\cf22 "?"}, 0xFF434331, 1874\},\par
03915     \{{\cf22 "?"}, 0xFFC11914, 1902\},\par
03916     \{{\cf22 "?"}, 0xFFC8100D, 1903\},\par
03917     \{{\cf22 "?"}, 0xFFBF0A21, 1906\},\par
03918     \{{\cf22 "?"}, 0xFFD23C3E, 1921\},\par
03919     \{{\cf22 "?"}, 0xFF8F8C93, 1972\},\par
03920     \{{\cf22 "?"}, 0xFFA31A1C, 2011\},\par
03921     \{{\cf22 "?"}, 0xFF4D0308, 2115\},\par
03922     \{{\cf22 "?"}, 0xFFFFCDCC, 2155\},\par
03923     \{{\cf22 "?"}, 0xFF871C45, 2500\},\par
03924     \{{\cf22 "?"}, 0xFFDB4083, 2508\},\par
03925     \{{\cf22 "?"}, 0xFFFF668A, 2520\},\par
03926     \{{\cf22 "?"}, 0xFFC91243, 2521\},\par
03927     \{{\cf22 "?"}, 0xFFFFA0B6, 2530\},\par
03928     \{{\cf22 "?"}, 0xFFFEA5B9, 2550\},\par
03929     \{{\cf22 "?"}, 0xFF626C7E, 2674\},\par
03930     \{{\cf22 "?"}, 0xFF5E1942, 2711\},\par
03931     \{{\cf22 "?"}, 0xFF33001D, 2715\},\par
03932     \{{\cf22 "?"}, 0xFFA57B8D, 2764\},\par
03933     \{{\cf22 "?"}, 0xFF702A69, 2810\},\par
03934     \{{\cf22 "?"}, 0xFFB385BC, 2830\},\par
03935     \{{\cf22 "?"}, 0xFF240047, 2900\},\par
03936     \{{\cf22 "?"}, 0xFF724593, 2910\},\par
03937     \{{\cf22 "?"}, 0xFF634D86, 2920\},\par
03938     \{{\cf22 "?"}, 0xFF000136, 3110\},\par
03939     \{{\cf22 "?"}, 0xFF000021, 3355\},\par
03940     \{{\cf22 "?"}, 0xFF054ABD, 3522\},\par
03941     \{{\cf22 "?"}, 0xFF1C005D, 3541\},\par
03942     \{{\cf22 "?"}, 0xFF001F71, 3544\},\par
03943     \{{\cf22 "?"}, 0xFF002E5E, 3622\},\par
03944     \{{\cf22 "?"}, 0xFF71AAD8, 3630\},\par
03945     \{{\cf22 "?"}, 0xFF001748, 3644\},\par
03946     \{{\cf22 "?"}, 0xFFC8DBE4, 3650\},\par
03947     \{{\cf22 "?"}, 0xFF9FC7DF, 3730\},\par
03948     \{{\cf22 "?"}, 0xFF082E4D, 3743\},\par
03949     \{{\cf22 "?"}, 0xFF98B0BC, 3750\},\par
03950     \{{\cf22 "?"}, 0xFF23679C, 3810\},\par
03951     \{{\cf22 "?"}, 0xFF3D657E, 3842\},\par
03952     \{{\cf22 "?"}, 0xFF00669F, 3901\},\par
03953     \{{\cf22 "?"}, 0xFF47AEDD, 3910\},\par
03954     \{{\cf22 "?"}, 0xFFBBDFEB, 3962\},\par
03955     \{{\cf22 "?"}, 0xFFBABEB7, 3971\},\par
03956     \{{\cf22 "?"}, 0xFF015D7E, 4032\},\par
03957     \{{\cf22 "?"}, 0xFFD5DDDB, 4071\},\par
03958     \{{\cf22 "?"}, 0xFF888D8E, 4073\},\par
03959     \{{\cf22 "?"}, 0xFF007CA6, 4103\},\par
03960     \{{\cf22 "?"}, 0xFF3EBBC8, 4111\},\par
03961     \{{\cf22 "?"}, 0xFF005C79, 4116\},\par
03962     \{{\cf22 "?"}, 0xFF80CCD8, 4240\},\par
03963     \{{\cf22 "?"}, 0xFFACCEC7, 4250\},\par
03964     \{{\cf22 "?"}, 0xFF006E74, 4410\},\par
03965     \{{\cf22 "?"}, 0xFF002A29, 4515\},\par
03966     \{{\cf22 "?"}, 0xFF38A4AE, 4620\},\par
03967     \{{\cf22 "?"}, 0xFFAFD8CD, 5050\},\par
03968     \{{\cf22 "?"}, 0xFF149B7B, 5210\},\par
03969     \{{\cf22 "?"}, 0xFF7AC8AF, 5220\},\par
03970     \{{\cf22 "?"}, 0xFF187166, 5233\},\par
03971     \{{\cf22 "?"}, 0xFF004B23, 5374\},\par
03972     \{{\cf22 "?"}, 0xFF006835, 5415\},\par
03973     \{{\cf22 "?"}, 0xFF5C9C51, 5531\},\par
03974     \{{\cf22 "?"}, 0xFF0E9543, 5613\},\par
03975     \{{\cf22 "?"}, 0xFF5E7A17, 5833\},\par
03976     \{{\cf22 "?"}, 0xFF225926, 5944\},\par
03977     \{{\cf22 "?"}, 0xFFBCD633, 6011\},\par
03978     \{{\cf22 "?"}, 0xFFBBCD91, 6051\},\par
03979     \{{\cf22 "?"}, 0xFF978B3C, 6133\},\par
03980     \{{\cf22 "END"}, 0, -1\}\par
03981 \};\par
03982 \par
03983 thread_color *brand_codes[] = \{\par
03984     Arc_Polyester_codes,          {\cf20 /* 0 */}\par
03985     Arc_Rayon_codes,              {\cf20 /* 1 */}\par
03986     CoatsAndClark_Rayon_codes,    {\cf20 /* 2 */}\par
03987     Exquisite_Polyester_codes,    {\cf20 /* 3 */}\par
03988     Fufu_Polyester_codes,         {\cf20 /* 4 */}\par
03989     Fufu_Rayon_codes,             {\cf20 /* 5 */}\par
03990     Hemingworth_Polyester_codes,  {\cf20 /* 6 */}\par
03991     Isacord_Polyester_codes,      {\cf20 /* 7 */}\par
03992     Isafil_Rayon_codes,           {\cf20 /* 8 */}\par
03993     Marathon_Polyester_codes,     {\cf20 /* 9 */}\par
03994     Marathon_Rayon_codes,         {\cf20 /* 10 */}\par
03995     Madeira_Polyester_codes,      {\cf20 /* 11 */}\par
03996     Madeira_Rayon_codes,          {\cf20 /* 12 */}\par
03997     Metro_Polyester_codes,        {\cf20 /* 13 */}\par
03998     Pantone_codes,                {\cf20 /* 14 */}\par
03999     RobisonAnton_Polyester_codes, {\cf20 /* 15 */}\par
04000     RobisonAnton_Rayon_codes,     {\cf20 /* 16 */}\par
04001     Sigma_Polyester_codes,        {\cf20 /* 17 */}\par
04002     Sulky_Rayon_codes,            {\cf20 /* 18 */}\par
04003     ThreadArt_Rayon_codes,        {\cf20 /* 19 */}\par
04004     ThreadArt_Polyester_codes,    {\cf20 /* 20 */}\par
04005     ThreaDelight_Polyester_codes, {\cf20 /* 21 */}\par
04006     Z102_Isacord_Polyester_codes, {\cf20 /* 22 */}\par
04007     svg_color_codes               {\cf20 /* 23 */}\par
04008 \};\par
04009 {\cf21 #endif}\par
04010 \par
04011 \par
04012 {\cf18 int} threadColor({\cf17 const} {\cf18 char} *name, {\cf18 int} brand)\par
04013 \{\par
04014     {\cf18 int} i;\par
04015     {\cf19 for} (i = 0; brand_codes[brand][i].manufacturer_code >= 0; i++) \{\par
04016         {\cf19 if} (!strcmp(brand_codes[brand][i].name, name)) \{\par
04017             {\cf19 return} brand_codes[brand][i].hex_code;\par
04018         \}\par
04019     \}\par
04020     {\cf19 return} -1;\par
04021 \}\par
04022 \par
04023 {\cf18 int} threadColorNum({\cf18 unsigned} {\cf18 int} color, {\cf18 int} brand)\par
04024 \{\par
04025     {\cf18 int} i;\par
04026     {\cf19 for} (i = 0; brand_codes[brand][i].manufacturer_code >= 0; i++) \{\par
04027         {\cf19 if} (brand_codes[brand][i].hex_code == color) \{\par
04028             {\cf19 return} brand_codes[brand][i].manufacturer_code;\par
04029         \}\par
04030     \}\par
04031 \par
04032     {\cf19 return} -1;\par
04033 \}\par
04034 \par
04035 {\cf17 const} {\cf18 char}* threadColorName({\cf18 unsigned} {\cf18 int} color, {\cf18 int} brand)\par
04036 \{\par
04037     {\cf18 int} i;\par
04038     {\cf19 for} (i = 0; brand_codes[brand][i].manufacturer_code >= 0; i++) \{\par
04039         {\cf19 if} (brand_codes[brand][i].hex_code == color) \{\par
04040             {\cf19 return} brand_codes[brand][i].name;\par
04041         \}\par
04042     \}\par
04043 \par
04044     {\cf19 return} {\cf22 "COLOR NOT FOUND"};\par
04045 \}\par
04046 \par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
