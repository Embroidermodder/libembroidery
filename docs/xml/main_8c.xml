<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="main_8c" kind="file" language="C++">
    <compoundname>main.c</compoundname>
    <includes local="no">stdio.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">math.h</includes>
    <includes local="no">time.h</includes>
    <includes refid="embroidery__internal_8h" local="yes">embroidery_internal.h</includes>
    <incdepgraph>
      <node id="8">
        <label>embroidery.h</label>
        <link refid="embroidery_8h"/>
      </node>
      <node id="7">
        <label>embroidery_internal.h</label>
        <link refid="embroidery__internal_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/main.c</label>
        <link refid="main_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>math.h</label>
      </node>
      <node id="2">
        <label>stdio.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="4">
        <label>string.h</label>
      </node>
      <node id="6">
        <label>time.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="main_8c_1a37407a0e43269433f885fdf943047fb6" prot="public" static="no">
        <name>FLAG_TO</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="17" column="9" bodyfile="src/main.c" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1ae802a27a494d1b1a5d5a353fbb78383f" prot="public" static="no">
        <name>FLAG_TO_SHORT</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="18" column="9" bodyfile="src/main.c" bodystart="18" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1ad571aa9682b7e17f8a5ffb568c386d9a" prot="public" static="no">
        <name>FLAG_HELP</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="19" column="9" bodyfile="src/main.c" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a88da127a7c10c88c0cf14b3257c846a2" prot="public" static="no">
        <name>FLAG_HELP_SHORT</name>
        <initializer>3</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="20" column="9" bodyfile="src/main.c" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a543edc262dc89320cb5ae1d7125cab6a" prot="public" static="no">
        <name>FLAG_FORMATS</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="21" column="9" bodyfile="src/main.c" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a64478dbce225e58239780c80cd4436c5" prot="public" static="no">
        <name>FLAG_FORMATS_SHORT</name>
        <initializer>5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="22" column="9" bodyfile="src/main.c" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a406df6c13be29ebe9b82ef1c0e61d64e" prot="public" static="no">
        <name>FLAG_QUIET</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="23" column="9" bodyfile="src/main.c" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a7e6b98c4c0b01661909ee6b8383318cc" prot="public" static="no">
        <name>FLAG_QUIET_SHORT</name>
        <initializer>7</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="24" column="9" bodyfile="src/main.c" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a8c626d782e7f5efc8f4db596b41b2a59" prot="public" static="no">
        <name>FLAG_VERBOSE</name>
        <initializer>8</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="25" column="9" bodyfile="src/main.c" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a30dd1740241f0ac17a62a7a729c10ee9" prot="public" static="no">
        <name>FLAG_VERBOSE_SHORT</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="26" column="9" bodyfile="src/main.c" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a55b6c5dccc05b18aefb94fb686617308" prot="public" static="no">
        <name>FLAG_VERSION</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="27" column="9" bodyfile="src/main.c" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a1be58456ea7e5b7a38ebc02cdc183782" prot="public" static="no">
        <name>FLAG_VERSION_SHORT</name>
        <initializer>11</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="28" column="9" bodyfile="src/main.c" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1afeeb658f38cdbb9e21df3c4878ece92b" prot="public" static="no">
        <name>FLAG_CIRCLE</name>
        <initializer>12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="29" column="9" bodyfile="src/main.c" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a97a16e67c5f13f0bc01f7a78755941fa" prot="public" static="no">
        <name>FLAG_CIRCLE_SHORT</name>
        <initializer>13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="30" column="9" bodyfile="src/main.c" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1aed141a0ec5ce8aafbbc7fbf04c7b4c78" prot="public" static="no">
        <name>FLAG_ELLIPSE</name>
        <initializer>14</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="31" column="9" bodyfile="src/main.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1af45a55ab5ac53bc1ae6fd1d0eb5e4a32" prot="public" static="no">
        <name>FLAG_ELLIPSE_SHORT</name>
        <initializer>15</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="32" column="9" bodyfile="src/main.c" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a4bed7d9e28bf0449e970a99a27f4d8b2" prot="public" static="no">
        <name>FLAG_LINE</name>
        <initializer>16</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="33" column="9" bodyfile="src/main.c" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1ad39d2a0a05f8a0aa0f188df0a5ae7349" prot="public" static="no">
        <name>FLAG_LINE_SHORT</name>
        <initializer>17</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="34" column="9" bodyfile="src/main.c" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1af0123998cd5dcf3a3920a34e8e4952d9" prot="public" static="no">
        <name>FLAG_POLYGON</name>
        <initializer>18</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="35" column="9" bodyfile="src/main.c" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a6a5e5b08bbc2a728ed34184c33c849dc" prot="public" static="no">
        <name>FLAG_POLYGON_SHORT</name>
        <initializer>19</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="36" column="9" bodyfile="src/main.c" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1aab9b4367da6ddf2b410223f3a36aff98" prot="public" static="no">
        <name>FLAG_POLYLINE</name>
        <initializer>20</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="37" column="9" bodyfile="src/main.c" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a6ac413798a1c7f8c6d42eff002341edd" prot="public" static="no">
        <name>FLAG_POLYLINE_SHORT</name>
        <initializer>21</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="38" column="9" bodyfile="src/main.c" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a249f7e1db7ac11497fa91d738fa68ca4" prot="public" static="no">
        <name>FLAG_RENDER</name>
        <initializer>22</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="39" column="9" bodyfile="src/main.c" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1adc337aaa7056646fab6ef21119aaa39b" prot="public" static="no">
        <name>FLAG_RENDER_SHORT</name>
        <initializer>23</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="40" column="9" bodyfile="src/main.c" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1ac7db01dce16a1c3f7162f04b12a94e6a" prot="public" static="no">
        <name>FLAG_SATIN</name>
        <initializer>24</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="41" column="9" bodyfile="src/main.c" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a641c237279594698bdad9f81cb247049" prot="public" static="no">
        <name>FLAG_SATIN_SHORT</name>
        <initializer>25</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="42" column="9" bodyfile="src/main.c" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1af3cdd0c6849b499ebfd062e80b77435d" prot="public" static="no">
        <name>FLAG_STITCH</name>
        <initializer>26</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="43" column="9" bodyfile="src/main.c" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1aafa9c92f88b2213f5791c566af9083e3" prot="public" static="no">
        <name>FLAG_STITCH_SHORT</name>
        <initializer>27</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="44" column="9" bodyfile="src/main.c" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a73adba977c278377b55c434b49e191f0" prot="public" static="no">
        <name>FLAG_TEST</name>
        <initializer>28</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="45" column="9" bodyfile="src/main.c" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a678935889663a0b2379045d4d87b9102" prot="public" static="no">
        <name>FLAG_FULL_TEST_SUITE</name>
        <initializer>29</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="46" column="9" bodyfile="src/main.c" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a1ebfcac640d04fce645045405468e183" prot="public" static="no">
        <name>FLAG_HILBERT_CURVE</name>
        <initializer>30</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="47" column="9" bodyfile="src/main.c" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a19d145f34926ea9075fdf003be1c6244" prot="public" static="no">
        <name>FLAG_SIERPINSKI_TRIANGLE</name>
        <initializer>31</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="48" column="9" bodyfile="src/main.c" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1aa6cb914042fbf5738294b33392d2e8c1" prot="public" static="no">
        <name>FLAG_FILL</name>
        <initializer>32</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="49" column="9" bodyfile="src/main.c" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1aa76bbb413d43c205298cb92db9193b26" prot="public" static="no">
        <name>FLAG_FILL_SHORT</name>
        <initializer>33</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="50" column="9" bodyfile="src/main.c" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a5522924b4aeacd58916a720c8f626cf7" prot="public" static="no">
        <name>FLAG_SIMULATE</name>
        <initializer>34</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="51" column="9" bodyfile="src/main.c" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1aad0493d79106b9b9d6506fa7eb931b48" prot="public" static="no">
        <name>FLAG_COMBINE</name>
        <initializer>35</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="52" column="9" bodyfile="src/main.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1a97ba97bc8789baadc6b8e8a3a3c7b6f2" prot="public" static="no">
        <name>FLAG_CROSS_STITCH</name>
        <initializer>36</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="53" column="9" bodyfile="src/main.c" bodystart="53" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="main_8c_1aaea442f582a9863b593b63383773b548" prot="public" static="no">
        <name>NUM_FLAGS</name>
        <initializer>37</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="54" column="9" bodyfile="src/main.c" bodystart="54" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="main_8c_1ae6a1199d8c3aad2464c3296ab902b4a9" prot="public" static="no" mutable="no">
        <type><ref refid="embroidery_8h_1ab3faffce89b1a5043f8b4e3a001a70bd" kindref="member">EmbThread</ref></type>
        <definition>EmbThread black_thread</definition>
        <argsstring></argsstring>
        <name>black_thread</name>
        <initializer>= { { 0, 0, 0 }, &quot;Black&quot;, &quot;Black&quot; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="56" column="11" bodyfile="src/main.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a3e3a5b8efffea93c4268a39ee5690098" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int emb_verbose</definition>
        <argsstring></argsstring>
        <name>emb_verbose</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="57" column="5" bodyfile="src/main.c" bodystart="57" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a1a622bb87a39f0338527347ee6ba1402" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int emb_error</definition>
        <argsstring></argsstring>
        <name>emb_error</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="58" column="5" bodyfile="src/main.c" bodystart="58" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a052bcc45c7207b189a9fe6925ec76c99" prot="public" static="no" mutable="no">
        <type>const <ref refid="embroidery_8h_1a2082be9aabfb541dff1825c4ca6a05cd" kindref="member">EmbReal</ref></type>
        <definition>const EmbReal embConstantPi</definition>
        <argsstring></argsstring>
        <name>embConstantPi</name>
        <initializer>= 3.1415926535</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="60" column="15" bodyfile="src/main.c" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a250130545165a5ff7e416c0d9e3cb101" prot="public" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int difatEntriesInHeader</definition>
        <argsstring></argsstring>
        <name>difatEntriesInHeader</name>
        <initializer>= 109</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="64" column="20" bodyfile="src/main.c" bodystart="64" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1aeffcb7cf2616f8a5bad2f683e9299fd3" prot="public" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int sizeOfFatEntry</definition>
        <argsstring></argsstring>
        <name>sizeOfFatEntry</name>
        <initializer>= sizeof(unsigned int)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="65" column="20" bodyfile="src/main.c" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1add631e44c8ce53262c8ed050c8f4f1fa" prot="public" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int sizeOfDifatEntry</definition>
        <argsstring></argsstring>
        <name>sizeOfDifatEntry</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="66" column="20" bodyfile="src/main.c" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a199c1a6bb0538cdc9f990f8bf03db9d6" prot="public" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int sizeOfChainingEntryAtEndOfDifatSector</definition>
        <argsstring></argsstring>
        <name>sizeOfChainingEntryAtEndOfDifatSector</name>
        <initializer>= 4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="67" column="20" bodyfile="src/main.c" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1a1108ef211702e6990edb3ade1a3305af" prot="public" static="no" mutable="no">
        <type>const unsigned int</type>
        <definition>const unsigned int sizeOfDirectoryEntry</definition>
        <argsstring></argsstring>
        <name>sizeOfDirectoryEntry</name>
        <initializer>= 128</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="68" column="20" bodyfile="src/main.c" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="main_8c_1aa9ac064963355a764e9ac3cbbb60dc64" prot="public" static="no" mutable="no">
        <type>char const</type>
        <definition>char const WHITESPACE[]</definition>
        <argsstring>[]</argsstring>
        <name>WHITESPACE</name>
        <initializer>= &quot; \t\n\r&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="835" column="12" bodyfile="src/main.c" bodystart="835" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="main_8c_1ac073ac90ab219ba57c58bdd405d6ab41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void embVector_print</definition>
        <argsstring>(EmbVector v, char *label)</argsstring>
        <name>embVector_print</name>
        <param>
          <type><ref refid="embroidery_8h_1a16fa26764453571074cb85a7574738d4" kindref="member">EmbVector</ref></type>
          <declname>v</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="74" column="6" bodyfile="src/main.c" bodystart="74" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a16e1e46c5c33874fc9a63476e70c0d66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void embArc_print</definition>
        <argsstring>(EmbArc arc)</argsstring>
        <name>embArc_print</name>
        <param>
          <type><ref refid="embroidery_8h_1a09945e6e919629c5787e61582c712ba1" kindref="member">EmbArc</ref></type>
          <declname>arc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="80" column="6" bodyfile="src/main.c" bodystart="80" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1ad6d5aaabb6637d271cec955c2dd42ded" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int check_header_present</definition>
        <argsstring>(FILE *file, int minimum_header_length)</argsstring>
        <name>check_header_present</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>minimum_header_length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="149" column="5" bodyfile="src/main.c" bodystart="149" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a5da0013e5c2fb1d49c92d85fd8028109" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int sectorSize</definition>
        <argsstring>(bcf_file *bcfFile)</argsstring>
        <name>sectorSize</name>
        <param>
          <type><ref refid="embroidery__internal_8h_1a59bc2d371cf6c478fdea78305c2a9748" kindref="member">bcf_file</ref> *</type>
          <declname>bcfFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="162" column="1" bodyfile="src/main.c" bodystart="162" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1aad299cf13841b348b13bcaea721734fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int haveExtraDIFATSectors</definition>
        <argsstring>(bcf_file *file)</argsstring>
        <name>haveExtraDIFATSectors</name>
        <param>
          <type><ref refid="embroidery__internal_8h_1a59bc2d371cf6c478fdea78305c2a9748" kindref="member">bcf_file</ref> *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="172" column="1" bodyfile="src/main.c" bodystart="172" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a5abd59b3d55bc37d3c2094fede71a5cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int seekToSector</definition>
        <argsstring>(bcf_file *bcfFile, FILE *file, const unsigned int sector)</argsstring>
        <name>seekToSector</name>
        <param>
          <type><ref refid="embroidery__internal_8h_1a59bc2d371cf6c478fdea78305c2a9748" kindref="member">bcf_file</ref> *</type>
          <declname>bcfFile</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>sector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="178" column="1" bodyfile="src/main.c" bodystart="178" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a2d0fa82cd8a6d6ad4e873f59e45c3b55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parseDIFATSectors</definition>
        <argsstring>(FILE *file, bcf_file *bcfFile)</argsstring>
        <name>parseDIFATSectors</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="embroidery__internal_8h_1a59bc2d371cf6c478fdea78305c2a9748" kindref="member">bcf_file</ref> *</type>
          <declname>bcfFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="185" column="1" bodyfile="src/main.c" bodystart="185" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a4acd18062065ffbee8f6cd9b00965cc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int bcfFile_read</definition>
        <argsstring>(FILE *file, bcf_file *bcfFile)</argsstring>
        <name>bcfFile_read</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="embroidery__internal_8h_1a59bc2d371cf6c478fdea78305c2a9748" kindref="member">bcf_file</ref> *</type>
          <declname>bcfFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="196" column="1" bodyfile="src/main.c" bodystart="196" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a3f3c7530acd7b40f4ce2dc9069fb794a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FILE *</type>
        <definition>FILE * GetFile</definition>
        <argsstring>(bcf_file *bcfFile, FILE *file, char *fileToFind)</argsstring>
        <name>GetFile</name>
        <param>
          <type><ref refid="embroidery__internal_8h_1a59bc2d371cf6c478fdea78305c2a9748" kindref="member">bcf_file</ref> *</type>
          <declname>bcfFile</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>fileToFind</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="233" column="1" bodyfile="src/main.c" bodystart="233" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a491e7bc54a29532020548d6dcad3e57f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bcf_file_free</definition>
        <argsstring>(bcf_file *bcfFile)</argsstring>
        <name>bcf_file_free</name>
        <param>
          <type><ref refid="embroidery__internal_8h_1a59bc2d371cf6c478fdea78305c2a9748" kindref="member">bcf_file</ref> *</type>
          <declname>bcfFile</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="267" column="1" bodyfile="src/main.c" bodystart="267" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a8277b359861dbbfe6c3244f28c894632" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="embroidery__internal_8h_1a04a761d12d7ad0f1f0c7566dda49f354" kindref="member">bcf_file_difat</ref> *</type>
        <definition>bcf_file_difat * bcf_difat_create</definition>
        <argsstring>(FILE *file, unsigned int fatSectors, const unsigned int sectorSize)</argsstring>
        <name>bcf_difat_create</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>fatSectors</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>sectorSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="276" column="1" bodyfile="src/main.c" bodystart="276" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a5462a9cf780abd252021ca031a1f59af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int entriesInDifatSector</definition>
        <argsstring>(bcf_file_difat *fat)</argsstring>
        <name>entriesInDifatSector</name>
        <param>
          <type><ref refid="embroidery__internal_8h_1a04a761d12d7ad0f1f0c7566dda49f354" kindref="member">bcf_file_difat</ref> *</type>
          <declname>fat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="308" column="1" bodyfile="src/main.c" bodystart="308" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a842ff85875f8cc0833691ea1fc2505be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned int</type>
        <definition>unsigned int readFullSector</definition>
        <argsstring>(FILE *file, bcf_file_difat *bcfFile, unsigned int *difatEntriesToRead)</argsstring>
        <name>readFullSector</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="embroidery__internal_8h_1a04a761d12d7ad0f1f0c7566dda49f354" kindref="member">bcf_file_difat</ref> *</type>
          <declname>bcfFile</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>difatEntriesToRead</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="314" column="1" bodyfile="src/main.c" bodystart="314" bodyend="344"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a4221460e3e8fca706df3420ed245e1d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void parseDirectoryEntryName</definition>
        <argsstring>(FILE *file, bcf_directory_entry *dir)</argsstring>
        <name>parseDirectoryEntryName</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="embroidery__internal_8h_1abb451c97faf6366fb733ff7b29054c19" kindref="member">bcf_directory_entry</ref> *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="347" column="1" bodyfile="src/main.c" bodystart="347" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a66c717936143bb39229e9c5880dacaa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="embroidery__internal_8h_1a5e0de54ec0ef10b88a4e499bbe94f869" kindref="member">bcf_directory</ref> *</type>
        <definition>bcf_directory * CompoundFileDirectory</definition>
        <argsstring>(const unsigned int maxNumberOfDirectoryEntries)</argsstring>
        <name>CompoundFileDirectory</name>
        <param>
          <type>const unsigned int</type>
          <declname>maxNumberOfDirectoryEntries</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="360" column="1" bodyfile="src/main.c" bodystart="360" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1afa71579ab89ee63f1e0a1f85ced52759" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="embroidery_8h_1a3829b58c37eab5cd81529f1916adcd33" kindref="member">EmbTime</ref></type>
        <definition>EmbTime parseTime</definition>
        <argsstring>(FILE *file)</argsstring>
        <name>parseTime</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="372" column="1" bodyfile="src/main.c" bodystart="372" bodyend="387"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a3b7a815d54672417e902a05a3d7f7b3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="embroidery__internal_8h_1abb451c97faf6366fb733ff7b29054c19" kindref="member">bcf_directory_entry</ref> *</type>
        <definition>bcf_directory_entry * CompoundFileDirectoryEntry</definition>
        <argsstring>(FILE *file)</argsstring>
        <name>CompoundFileDirectoryEntry</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="390" column="1" bodyfile="src/main.c" bodystart="390" bodyend="423"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a7a74138f5ffaa71deb934c3c407a6289" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void readNextSector</definition>
        <argsstring>(FILE *file, bcf_directory *dir)</argsstring>
        <name>readNextSector</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="embroidery__internal_8h_1a5e0de54ec0ef10b88a4e499bbe94f869" kindref="member">bcf_directory</ref> *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="426" column="1" bodyfile="src/main.c" bodystart="426" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a994645555ce8f1021b9efc280bffd6a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void bcf_directory_free</definition>
        <argsstring>(bcf_directory **dir)</argsstring>
        <name>bcf_directory_free</name>
        <param>
          <type><ref refid="embroidery__internal_8h_1a5e0de54ec0ef10b88a4e499bbe94f869" kindref="member">bcf_directory</ref> **</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="448" column="1" bodyfile="src/main.c" bodystart="448" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a4e7377ff59e275ae4dc1d80ede4837e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="embroidery__internal_8h_1a9a00b74e77254af1f7af14c6e12007d7" kindref="member">bcf_file_fat</ref> *</type>
        <definition>bcf_file_fat * bcfFileFat_create</definition>
        <argsstring>(const unsigned int sectorSize)</argsstring>
        <name>bcfFileFat_create</name>
        <param>
          <type>const unsigned int</type>
          <declname>sectorSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="467" column="1" bodyfile="src/main.c" bodystart="467" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a71a5f4111bd3daa574148e2f45d4c893" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void loadFatFromSector</definition>
        <argsstring>(bcf_file_fat *fat, FILE *file)</argsstring>
        <name>loadFatFromSector</name>
        <param>
          <type><ref refid="embroidery__internal_8h_1a9a00b74e77254af1f7af14c6e12007d7" kindref="member">bcf_file_fat</ref> *</type>
          <declname>fat</declname>
        </param>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="481" column="1" bodyfile="src/main.c" bodystart="481" bodyend="492"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a6faf1e4138b3dba5948cb6da199babce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="embroidery__internal_8h_1a5226ee18f1045aa203f53da9b74d6963" kindref="member">bcf_file_header</ref></type>
        <definition>bcf_file_header bcfFileHeader_read</definition>
        <argsstring>(FILE *file)</argsstring>
        <name>bcfFileHeader_read</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="495" column="1" bodyfile="src/main.c" bodystart="495" bodyend="517"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a695a90f248ef0842c61374bce70c5f98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void embSatinOutline_generateSatinOutline</definition>
        <argsstring>(EmbArray *lines, EmbReal thickness, EmbSatinOutline *result)</argsstring>
        <name>embSatinOutline_generateSatinOutline</name>
        <param>
          <type><ref refid="embroidery_8h_1aebe8b1561a59d167cfe6613863a671ca" kindref="member">EmbArray</ref> *</type>
          <declname>lines</declname>
        </param>
        <param>
          <type><ref refid="embroidery_8h_1a2082be9aabfb541dff1825c4ca6a05cd" kindref="member">EmbReal</ref></type>
          <declname>thickness</declname>
        </param>
        <param>
          <type><ref refid="embroidery_8h_1af3d7bc78977c54ad019cf191aee0f276" kindref="member">EmbSatinOutline</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="520" column="1" bodyfile="src/main.c" bodystart="520" bodyend="605"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1ad9c5030f98ef9647ba7315d0c228b92a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="embroidery_8h_1aebe8b1561a59d167cfe6613863a671ca" kindref="member">EmbArray</ref> *</type>
        <definition>EmbArray * embSatinOutline_renderStitches</definition>
        <argsstring>(EmbSatinOutline *result, EmbReal density)</argsstring>
        <name>embSatinOutline_renderStitches</name>
        <param>
          <type><ref refid="embroidery_8h_1af3d7bc78977c54ad019cf191aee0f276" kindref="member">EmbSatinOutline</ref> *</type>
          <declname>result</declname>
        </param>
        <param>
          <type><ref refid="embroidery_8h_1a2082be9aabfb541dff1825c4ca6a05cd" kindref="member">EmbReal</ref></type>
          <declname>density</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="608" column="1" bodyfile="src/main.c" bodystart="608" bodyend="657"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1ad7ce8c6db5aed09b17a6a048e1d1c65c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void write_24bit</definition>
        <argsstring>(FILE *file, int x)</argsstring>
        <name>write_24bit</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="660" column="1" bodyfile="src/main.c" bodystart="660" bodyend="668"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1ad9da4f78764c28784f04bf3b01861d60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int embColor_distance</definition>
        <argsstring>(EmbColor a, EmbColor b)</argsstring>
        <name>embColor_distance</name>
        <param>
          <type><ref refid="embroidery_8h_1acde9d757854564332fd795a084ec88b3" kindref="member">EmbColor</ref></type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="embroidery_8h_1acde9d757854564332fd795a084ec88b3" kindref="member">EmbColor</ref></type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="671" column="1" bodyfile="src/main.c" bodystart="671" bodyend="678"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a7f539183b901a4c1d25adcb71c6fbdc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void embColor_read</definition>
        <argsstring>(FILE *f, EmbColor *c, int toRead)</argsstring>
        <name>embColor_read</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="embroidery_8h_1acde9d757854564332fd795a084ec88b3" kindref="member">EmbColor</ref> *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>toRead</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="681" column="1" bodyfile="src/main.c" bodystart="681" bodyend="688"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a14b8ac9c1dba4c2978c3db27a8c16689" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void embColor_write</definition>
        <argsstring>(FILE *f, EmbColor c, int toWrite)</argsstring>
        <name>embColor_write</name>
        <param>
          <type>FILE *</type>
          <declname>f</declname>
        </param>
        <param>
          <type><ref refid="embroidery_8h_1acde9d757854564332fd795a084ec88b3" kindref="member">EmbColor</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>toWrite</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="691" column="1" bodyfile="src/main.c" bodystart="691" bodyend="699"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a7355da06df1167cc5c1da4841bae2f3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int embThread_findNearestColor</definition>
        <argsstring>(EmbColor color, EmbColor *color_list, int n_colors)</argsstring>
        <name>embThread_findNearestColor</name>
        <param>
          <type><ref refid="embroidery_8h_1acde9d757854564332fd795a084ec88b3" kindref="member">EmbColor</ref></type>
          <declname>color</declname>
        </param>
        <param>
          <type><ref refid="embroidery_8h_1acde9d757854564332fd795a084ec88b3" kindref="member">EmbColor</ref> *</type>
          <declname>color_list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_colors</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the closest color to the required color based on a list of available threads. The algorithm is a simple least squares search against the list. If the (square of) Euclidean 3-dimensional distance between the points in (red, green, blue) space is smaller then the index is saved and the remaining index is returned to the caller.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>color</parametername>
</parameternamelist>
<parameterdescription>
<para>The EmbColor color to match. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>colors</parametername>
</parameternamelist>
<parameterdescription>
<para>The EmbThreadList pointer to start the search at. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>Is the argument an array of threads (0) or colors (1)? </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>closestIndex The entry in the ThreadList that matches. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="715" column="1" bodyfile="src/main.c" bodystart="715" bodyend="728"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a4227373571f3602fac495c42b8722035" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int embThread_findNearestThread</definition>
        <argsstring>(EmbColor color, EmbThread *thread_list, int n_threads)</argsstring>
        <name>embThread_findNearestThread</name>
        <param>
          <type><ref refid="embroidery_8h_1acde9d757854564332fd795a084ec88b3" kindref="member">EmbColor</ref></type>
          <declname>color</declname>
        </param>
        <param>
          <type><ref refid="embroidery_8h_1ab3faffce89b1a5043f8b4e3a001a70bd" kindref="member">EmbThread</ref> *</type>
          <declname>thread_list</declname>
        </param>
        <param>
          <type>int</type>
          <declname>n_threads</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="731" column="1" bodyfile="src/main.c" bodystart="731" bodyend="744"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a01b7c6ed19a92df4935d2fd23a732295" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="embroidery_8h_1ab3faffce89b1a5043f8b4e3a001a70bd" kindref="member">EmbThread</ref></type>
        <definition>EmbThread embThread_getRandom</definition>
        <argsstring>(void)</argsstring>
        <name>embThread_getRandom</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a random thread color, useful in filling in cases where the actual color of the thread doesn&apos;t matter but one needs to be declared to test or render a pattern.</para>
<para><simplesect kind="return"><para>c The resulting color. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="754" column="1" bodyfile="src/main.c" bodystart="754" bodyend="763"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a0312900273cfed05bf6d7ed748940cdb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void binaryReadString</definition>
        <argsstring>(FILE *file, char *buffer, int maxLength)</argsstring>
        <name>binaryReadString</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxLength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="766" column="1" bodyfile="src/main.c" bodystart="766" bodyend="774"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a33105f462fbb9892aebb284f35606c57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void binaryReadUnicodeString</definition>
        <argsstring>(FILE *file, char *buffer, const int stringLength)</argsstring>
        <name>binaryReadUnicodeString</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>stringLength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="777" column="1" bodyfile="src/main.c" bodystart="777" bodyend="786"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1aa08223cd2dd75ce77baf8d5e7f139e1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int stringInArray</definition>
        <argsstring>(const char *s, const char **array)</argsstring>
        <name>stringInArray</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>array</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tests for the presence of a string <emphasis>s</emphasis> in the supplied <emphasis>array</emphasis>.</para>
<para>The end of the array is marked by an empty string.</para>
<para><simplesect kind="return"><para>0 if not present 1 if present. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="797" column="1" bodyfile="src/main.c" bodystart="797" bodyend="806"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a7859b94e89cd2848d4116c7e8d662a14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int emb_readline</definition>
        <argsstring>(FILE *file, char *line, int maxLength)</argsstring>
        <name>emb_readline</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>line</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxLength</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="809" column="1" bodyfile="src/main.c" bodystart="809" bodyend="832"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a9f3bbc6f01263cd6f3d41fbc245d49b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void get_trim_bounds</definition>
        <argsstring>(char const *s, char const **firstWord, char const **trailingSpace)</argsstring>
        <name>get_trim_bounds</name>
        <param>
          <type>char const *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>char const **</type>
          <declname>firstWord</declname>
        </param>
        <param>
          <type>char const **</type>
          <declname>trailingSpace</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="839" column="1" bodyfile="src/main.c" bodystart="839" bodyend="847"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a5d7bf5f964ae87921bab916b871ea2dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * copy_trim</definition>
        <argsstring>(char const *s)</argsstring>
        <name>copy_trim</name>
        <param>
          <type>char const *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="851" column="1" bodyfile="src/main.c" bodystart="851" bodyend="864"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a3f13f5d30ef64bf1f316f1cc5174b28b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * emb_optOut</definition>
        <argsstring>(EmbReal num, char *str)</argsstring>
        <name>emb_optOut</name>
        <param>
          <type><ref refid="embroidery_8h_1a2082be9aabfb541dff1825c4ca6a05cd" kindref="member">EmbReal</ref></type>
          <declname>num</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Optimizes the number (<emphasis>num</emphasis>) for output to a text file and returns it as a string (<emphasis>str</emphasis>). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="868" column="1" bodyfile="src/main.c" bodystart="868" bodyend="882"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1a1a113d80928c378c7347e73172eac33d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void embTime_initNow</definition>
        <argsstring>(EmbTime *t)</argsstring>
        <name>embTime_initNow</name>
        <param>
          <type><ref refid="embroidery_8h_1a3829b58c37eab5cd81529f1916adcd33" kindref="member">EmbTime</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="885" column="1" bodyfile="src/main.c" bodystart="885" bodyend="902"/>
      </memberdef>
      <memberdef kind="function" id="main_8c_1aac30715a74b82858ae1e7c1b3dd8b22a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="embroidery_8h_1a3829b58c37eab5cd81529f1916adcd33" kindref="member">EmbTime</ref></type>
        <definition>EmbTime embTime_time</definition>
        <argsstring>(EmbTime *t)</argsstring>
        <name>embTime_time</name>
        <param>
          <type><ref refid="embroidery_8h_1a3829b58c37eab5cd81529f1916adcd33" kindref="member">EmbTime</ref> *</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/main.c" line="905" column="1" bodyfile="src/main.c" bodystart="905" bodyend="916"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>libembroidery.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>2018-2023<sp/>The<sp/>Embroidermodder<sp/>Team</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Licensed<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>zlib<sp/>license.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;time.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="embroidery__internal_8h" kindref="compound">embroidery_internal.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>same<sp/>order<sp/>as<sp/>flag_list,<sp/>to<sp/>use<sp/>in<sp/>jump<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="main_8c_1a37407a0e43269433f885fdf943047fb6" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_TO<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="main_8c_1ae802a27a494d1b1a5d5a353fbb78383f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_TO_SHORT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="main_8c_1ad571aa9682b7e17f8a5ffb568c386d9a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_HELP<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="main_8c_1a88da127a7c10c88c0cf14b3257c846a2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_HELP_SHORT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="main_8c_1a543edc262dc89320cb5ae1d7125cab6a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_FORMATS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="main_8c_1a64478dbce225e58239780c80cd4436c5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_FORMATS_SHORT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>5</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="main_8c_1a406df6c13be29ebe9b82ef1c0e61d64e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_QUIET<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24" refid="main_8c_1a7e6b98c4c0b01661909ee6b8383318cc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_QUIET_SHORT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>7</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="main_8c_1a8c626d782e7f5efc8f4db596b41b2a59" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_VERBOSE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="main_8c_1a30dd1740241f0ac17a62a7a729c10ee9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_VERBOSE_SHORT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27" refid="main_8c_1a55b6c5dccc05b18aefb94fb686617308" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_VERSION<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="main_8c_1a1be58456ea7e5b7a38ebc02cdc183782" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_VERSION_SHORT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="main_8c_1afeeb658f38cdbb9e21df3c4878ece92b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_CIRCLE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>12</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30" refid="main_8c_1a97a16e67c5f13f0bc01f7a78755941fa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_CIRCLE_SHORT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>13</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="main_8c_1aed141a0ec5ce8aafbbc7fbf04c7b4c78" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_ELLIPSE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>14</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="main_8c_1af45a55ab5ac53bc1ae6fd1d0eb5e4a32" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_ELLIPSE_SHORT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>15</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="main_8c_1a4bed7d9e28bf0449e970a99a27f4d8b2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_LINE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="main_8c_1ad39d2a0a05f8a0aa0f188df0a5ae7349" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_LINE_SHORT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>17</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="main_8c_1af0123998cd5dcf3a3920a34e8e4952d9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_POLYGON<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>18</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="main_8c_1a6a5e5b08bbc2a728ed34184c33c849dc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_POLYGON_SHORT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>19</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="main_8c_1aab9b4367da6ddf2b410223f3a36aff98" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_POLYLINE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>20</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="main_8c_1a6ac413798a1c7f8c6d42eff002341edd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_POLYLINE_SHORT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>21</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="main_8c_1a249f7e1db7ac11497fa91d738fa68ca4" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_RENDER<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>22</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="main_8c_1adc337aaa7056646fab6ef21119aaa39b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_RENDER_SHORT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>23</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="main_8c_1ac7db01dce16a1c3f7162f04b12a94e6a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_SATIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>24</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="main_8c_1a641c237279594698bdad9f81cb247049" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_SATIN_SHORT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>25</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="main_8c_1af3cdd0c6849b499ebfd062e80b77435d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_STITCH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>26</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="main_8c_1aafa9c92f88b2213f5791c566af9083e3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_STITCH_SHORT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>27</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="main_8c_1a73adba977c278377b55c434b49e191f0" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_TEST<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>28</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="main_8c_1a678935889663a0b2379045d4d87b9102" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_FULL_TEST_SUITE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>29</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="main_8c_1a1ebfcac640d04fce645045405468e183" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_HILBERT_CURVE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>30</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="main_8c_1a19d145f34926ea9075fdf003be1c6244" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_SIERPINSKI_TRIANGLE<sp/><sp/><sp/><sp/><sp/>31</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="main_8c_1aa6cb914042fbf5738294b33392d2e8c1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_FILL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="main_8c_1aa76bbb413d43c205298cb92db9193b26" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_FILL_SHORT<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>33</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="main_8c_1a5522924b4aeacd58916a720c8f626cf7" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_SIMULATE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>34</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="main_8c_1aad0493d79106b9b9d6506fa7eb931b48" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_COMBINE<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>35</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="main_8c_1a97ba97bc8789baadc6b8e8a3a3c7b6f2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FLAG_CROSS_STITCH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>36</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="main_8c_1aaea442f582a9863b593b63383773b548" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUM_FLAGS<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>37</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="embroidery_8h_1ae6a1199d8c3aad2464c3296ab902b4a9" refkind="member"><highlight class="normal"><ref refid="struct_emb_thread__" kindref="compound">EmbThread</ref><sp/><ref refid="main_8c_1ae6a1199d8c3aad2464c3296ab902b4a9" kindref="member">black_thread</ref><sp/>=<sp/>{<sp/>{<sp/>0,<sp/>0,<sp/>0<sp/>},<sp/></highlight><highlight class="stringliteral">&quot;Black&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Black&quot;</highlight><highlight class="normal"><sp/>};</highlight></codeline>
<codeline lineno="57" refid="embroidery_8h_1a3e3a5b8efffea93c4268a39ee5690098" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a3e3a5b8efffea93c4268a39ee5690098" kindref="member">emb_verbose</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58" refid="embroidery_8h_1a1a622bb87a39f0338527347ee6ba1402" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a1a622bb87a39f0338527347ee6ba1402" kindref="member">emb_error</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="embroidery_8h_1a052bcc45c7207b189a9fe6925ec76c99" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="embroidery_8h_1a2082be9aabfb541dff1825c4ca6a05cd" kindref="member">EmbReal</ref><sp/><ref refid="main_8c_1a052bcc45c7207b189a9fe6925ec76c99" kindref="member">embConstantPi</ref><sp/>=<sp/>3.1415926535;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Constant<sp/>representing<sp/>the<sp/>number<sp/>of<sp/>EmbReal<sp/>Indirect<sp/>FAT</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/>entries<sp/>in<sp/>a<sp/>single<sp/>header<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="main_8c_1a250130545165a5ff7e416c0d9e3cb101" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a250130545165a5ff7e416c0d9e3cb101" kindref="member">difatEntriesInHeader</ref><sp/>=<sp/>109;</highlight></codeline>
<codeline lineno="65" refid="main_8c_1aeffcb7cf2616f8a5bad2f683e9299fd3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8c_1aeffcb7cf2616f8a5bad2f683e9299fd3" kindref="member">sizeOfFatEntry</ref><sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>int);</highlight></codeline>
<codeline lineno="66" refid="main_8c_1add631e44c8ce53262c8ed050c8f4f1fa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8c_1add631e44c8ce53262c8ed050c8f4f1fa" kindref="member">sizeOfDifatEntry</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="67" refid="main_8c_1a199c1a6bb0538cdc9f990f8bf03db9d6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a199c1a6bb0538cdc9f990f8bf03db9d6" kindref="member">sizeOfChainingEntryAtEndOfDifatSector</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="68" refid="main_8c_1a1108ef211702e6990edb3ade1a3305af" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a1108ef211702e6990edb3ade1a3305af" kindref="member">sizeOfDirectoryEntry</ref><sp/>=<sp/>128;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="70"><highlight class="comment">const<sp/>int<sp/>supportedMinorVersion<sp/>=<sp/>0x003E;</highlight></codeline>
<codeline lineno="71"><highlight class="comment">const<sp/>int<sp/>littleEndianByteOrderMark<sp/>=<sp/>0xFFFE;</highlight></codeline>
<codeline lineno="72"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="main_8c_1ac073ac90ab219ba57c58bdd405d6ab41" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8c_1ac073ac90ab219ba57c58bdd405d6ab41" kindref="member">embVector_print</ref>(<ref refid="struct_emb_vector__" kindref="compound">EmbVector</ref><sp/>v,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*label)</highlight></codeline>
<codeline lineno="75"><highlight class="normal">{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%sX<sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>label,<sp/>v.<ref refid="struct_emb_vector___1ae1a3958205104364b97172da19628db7" kindref="member">x</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%sY<sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal">,<sp/>label,<sp/>v.<ref refid="struct_emb_vector___1ac696d7e3434ae029d180ef550e61af2d" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="main_8c_1a16e1e46c5c33874fc9a63476e70c0d66" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a16e1e46c5c33874fc9a63476e70c0d66" kindref="member">embArc_print</ref>(<ref refid="struct_emb_arc__" kindref="compound">EmbArc</ref><sp/>arc)</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8c_1ac073ac90ab219ba57c58bdd405d6ab41" kindref="member">embVector_print</ref>(arc.<ref refid="struct_emb_arc___1ad61a9cd980182f7b946d1a38aaee8562" kindref="member">start</ref>,<sp/></highlight><highlight class="stringliteral">&quot;start&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8c_1ac073ac90ab219ba57c58bdd405d6ab41" kindref="member">embVector_print</ref>(arc.<ref refid="struct_emb_arc___1ae22a3dbe0e89a2ee0b0934a8799c8f14" kindref="member">mid</ref>,<sp/></highlight><highlight class="stringliteral">&quot;middle&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8c_1ac073ac90ab219ba57c58bdd405d6ab41" kindref="member">embVector_print</ref>(arc.<ref refid="struct_emb_arc___1ac19242fe9e53942be61574685fbd49ed" kindref="member">end</ref>,<sp/></highlight><highlight class="stringliteral">&quot;end&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LIBEMBROIDERY_CLI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>DATA<sp/></highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*******************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*flag_list[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--to&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-t&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--help&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-h&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--formats&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-F&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--quiet&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-q&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--verbose&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-V&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--version&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-v&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--circle&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-c&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--ellipse&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-e&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--line&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-l&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--polyline&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-P&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--polygon&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-p&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--render&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-r&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--satin&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-s&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--stitch&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-S&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--test&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--full-test-suite&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--hilbert-curve&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--sierpinski-triangle&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--fill&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;-f&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--simulate&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--combine&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;--cross-stitch&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal">};</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*version_string<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;embroider<sp/>v0.1&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*welcome_message<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;EMBROIDER\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>A<sp/>command<sp/>line<sp/>program<sp/>for<sp/>machine<sp/>embroidery.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Copyright<sp/>2013-2022<sp/>The<sp/>Embroidermodder<sp/>Team\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>Licensed<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>zlib<sp/>license.\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>https://github.com/Embroidermodder/libembroidery\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>https://embroidermodder.org\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Checks<sp/>that<sp/>there<sp/>are<sp/>enough<sp/>bytes<sp/>to<sp/>interpret<sp/>the<sp/>header,</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/>stops<sp/>possible<sp/>segfaults<sp/>when<sp/>reading<sp/>in<sp/>the<sp/>header<sp/>bytes.</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*<sp/>Returns<sp/>0<sp/>if<sp/>there<sp/>aren&apos;t<sp/>enough,<sp/>or<sp/>the<sp/>length<sp/>of<sp/>the<sp/>file</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*<sp/>if<sp/>there<sp/>are.</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149" refid="embroidery__internal_8h_1ad6d5aaabb6637d271cec955c2dd42ded" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8c_1ad6d5aaabb6637d271cec955c2dd42ded" kindref="member">check_header_present</ref>(FILE*<sp/>file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minimum_header_length)</highlight></codeline>
<codeline lineno="150"><highlight class="normal">{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>fseek(file,<sp/>0,<sp/>SEEK_END);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>length<sp/>=<sp/>ftell(file);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>fseek(file,<sp/>0,<sp/>SEEK_SET);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&lt;<sp/>minimum_header_length)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162" refid="main_8c_1a5da0013e5c2fb1d49c92d85fd8028109" refkind="member"><highlight class="normal"><ref refid="main_8c_1a5da0013e5c2fb1d49c92d85fd8028109" kindref="member">sectorSize</ref>(<ref refid="struct__bcf__file" kindref="compound">bcf_file</ref>*<sp/>bcfFile)</highlight></codeline>
<codeline lineno="163"><highlight class="normal">{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>version<sp/>3<sp/>uses<sp/>512<sp/>byte<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bcfFile-&gt;<ref refid="struct__bcf__file_1accea22a232923bfe12e1e5196ea5e420" kindref="member">header</ref>.<ref refid="struct__bcf__file__header_1a93f73bd6f031f7aec97fcb6f4a8bc2c2" kindref="member">majorVersion</ref><sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>512;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>4096;</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="main_8c_1aad299cf13841b348b13bcaea721734fc" refkind="member"><highlight class="normal"><ref refid="main_8c_1aad299cf13841b348b13bcaea721734fc" kindref="member">haveExtraDIFATSectors</ref>(<ref refid="struct__bcf__file" kindref="compound">bcf_file</ref>*<sp/>file)</highlight></codeline>
<codeline lineno="173"><highlight class="normal">{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(<ref refid="main_8c_1a5462a9cf780abd252021ca031a1f59af" kindref="member">entriesInDifatSector</ref>(file-&gt;<ref refid="struct__bcf__file_1a2ef24af5c34116783312d2eb100bfa02" kindref="member">difat</ref>)<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="main_8c_1a5abd59b3d55bc37d3c2094fede71a5cb" refkind="member"><highlight class="normal"><ref refid="main_8c_1a5abd59b3d55bc37d3c2094fede71a5cb" kindref="member">seekToSector</ref>(<ref refid="struct__bcf__file" kindref="compound">bcf_file</ref>*<sp/>bcfFile,<sp/>FILE*<sp/>file,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sector)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>sector<sp/>*<sp/><ref refid="main_8c_1a5da0013e5c2fb1d49c92d85fd8028109" kindref="member">sectorSize</ref>(bcfFile)<sp/>+<sp/><ref refid="main_8c_1a5da0013e5c2fb1d49c92d85fd8028109" kindref="member">sectorSize</ref>(bcfFile);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fseek(file,<sp/>offset,<sp/>SEEK_SET);</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185" refid="main_8c_1a2d0fa82cd8a6d6ad4e873f59e45c3b55" refkind="member"><highlight class="normal"><ref refid="main_8c_1a2d0fa82cd8a6d6ad4e873f59e45c3b55" kindref="member">parseDIFATSectors</ref>(FILE*<sp/>file,<sp/><ref refid="struct__bcf__file" kindref="compound">bcf_file</ref>*<sp/>bcfFile)</highlight></codeline>
<codeline lineno="186"><highlight class="normal">{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>difatEntriesToRead<sp/>=<sp/>bcfFile-&gt;<ref refid="struct__bcf__file_1accea22a232923bfe12e1e5196ea5e420" kindref="member">header</ref>.<ref refid="struct__bcf__file__header_1a17821f8900d0f8e468ecddb54dd7d70e" kindref="member">numberOfFATSectors</ref><sp/>-<sp/><ref refid="main_8c_1a250130545165a5ff7e416c0d9e3cb101" kindref="member">difatEntriesInHeader</ref>;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>difatSectorNumber<sp/>=<sp/>bcfFile-&gt;<ref refid="struct__bcf__file_1accea22a232923bfe12e1e5196ea5e420" kindref="member">header</ref>.<ref refid="struct__bcf__file__header_1a3a28e1b0b6c457d51da5fed45e57cf5b" kindref="member">firstDifatSectorLocation</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((difatSectorNumber<sp/>!=<sp/><ref refid="embroidery__internal_8h_1a8053a232060cecfd8a5e65254030faad" kindref="member">CompoundFileSector_EndOfChain</ref>)<sp/>&amp;&amp;<sp/>(difatEntriesToRead<sp/>&gt;<sp/>0))<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8c_1a5abd59b3d55bc37d3c2094fede71a5cb" kindref="member">seekToSector</ref>(bcfFile,<sp/>file,<sp/>difatSectorNumber);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difatSectorNumber<sp/>=<sp/><ref refid="main_8c_1a842ff85875f8cc0833691ea1fc2505be" kindref="member">readFullSector</ref>(file,<sp/>bcfFile-&gt;<ref refid="struct__bcf__file_1a2ef24af5c34116783312d2eb100bfa02" kindref="member">difat</ref>,<sp/>&amp;difatEntriesToRead);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="embroidery__internal_8h_1a4acd18062065ffbee8f6cd9b00965cc2" refkind="member"><highlight class="normal"><ref refid="main_8c_1a4acd18062065ffbee8f6cd9b00965cc2" kindref="member">bcfFile_read</ref>(FILE*<sp/>file,<sp/><ref refid="struct__bcf__file" kindref="compound">bcf_file</ref>*<sp/>bcfFile)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>numberOfDirectoryEntriesPerSector;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>directorySectorToReadFrom;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>bcfFile-&gt;<ref refid="struct__bcf__file_1accea22a232923bfe12e1e5196ea5e420" kindref="member">header</ref><sp/>=<sp/><ref refid="main_8c_1a6faf1e4138b3dba5948cb6da199babce" kindref="member">bcfFileHeader_read</ref>(file);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(memcmp(bcfFile-&gt;<ref refid="struct__bcf__file_1accea22a232923bfe12e1e5196ea5e420" kindref="member">header</ref>.<ref refid="struct__bcf__file__header_1a3a9958669bbd206000986d52a1ea26fc" kindref="member">signature</ref>,<sp/></highlight><highlight class="stringliteral">&quot;\xd0\xcf\x11\xe0\xa1\xb1\x1a\xe1&quot;</highlight><highlight class="normal">,<sp/>8)<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;bad<sp/>header<sp/>signature\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>parse<sp/>header\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>bcfFile-&gt;<ref refid="struct__bcf__file_1a2ef24af5c34116783312d2eb100bfa02" kindref="member">difat</ref><sp/>=<sp/><ref refid="main_8c_1a8277b359861dbbfe6c3244f28c894632" kindref="member">bcf_difat_create</ref>(file,<sp/>bcfFile-&gt;<ref refid="struct__bcf__file_1accea22a232923bfe12e1e5196ea5e420" kindref="member">header</ref>.<ref refid="struct__bcf__file__header_1a17821f8900d0f8e468ecddb54dd7d70e" kindref="member">numberOfFATSectors</ref>,<sp/><ref refid="main_8c_1a5da0013e5c2fb1d49c92d85fd8028109" kindref="member">sectorSize</ref>(bcfFile));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main_8c_1aad299cf13841b348b13bcaea721734fc" kindref="member">haveExtraDIFATSectors</ref>(bcfFile))<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8c_1a2d0fa82cd8a6d6ad4e873f59e45c3b55" kindref="member">parseDIFATSectors</ref>(file,<sp/>bcfFile);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>bcfFile-&gt;<ref refid="struct__bcf__file_1ade108e4dbaaf848bb151970e612624d7" kindref="member">fat</ref><sp/>=<sp/><ref refid="main_8c_1a4e7377ff59e275ae4dc1d80ede4837e9" kindref="member">bcfFileFat_create</ref>(<ref refid="main_8c_1a5da0013e5c2fb1d49c92d85fd8028109" kindref="member">sectorSize</ref>(bcfFile));</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>bcfFile-&gt;<ref refid="struct__bcf__file_1accea22a232923bfe12e1e5196ea5e420" kindref="member">header</ref>.<ref refid="struct__bcf__file__header_1a17821f8900d0f8e468ecddb54dd7d70e" kindref="member">numberOfFATSectors</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fatSectorNumber<sp/>=<sp/>bcfFile-&gt;<ref refid="struct__bcf__file_1a2ef24af5c34116783312d2eb100bfa02" kindref="member">difat</ref>-&gt;<ref refid="struct__bcf__file__difat_1a1d2f5f02446fc1712a7e535a31ce355e" kindref="member">fatSectorEntries</ref>[i];</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8c_1a5abd59b3d55bc37d3c2094fede71a5cb" kindref="member">seekToSector</ref>(bcfFile,<sp/>file,<sp/>fatSectorNumber);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8c_1a71a5f4111bd3daa574148e2f45d4c893" kindref="member">loadFatFromSector</ref>(bcfFile-&gt;<ref refid="struct__bcf__file_1ade108e4dbaaf848bb151970e612624d7" kindref="member">fat</ref>,<sp/>file);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>numberOfDirectoryEntriesPerSector<sp/>=<sp/><ref refid="main_8c_1a5da0013e5c2fb1d49c92d85fd8028109" kindref="member">sectorSize</ref>(bcfFile)<sp/>/<sp/><ref refid="main_8c_1a1108ef211702e6990edb3ade1a3305af" kindref="member">sizeOfDirectoryEntry</ref>;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>bcfFile-&gt;<ref refid="struct__bcf__file_1aef0fbd66e269cc87889833517cf3a114" kindref="member">directory</ref><sp/>=<sp/><ref refid="main_8c_1a66c717936143bb39229e9c5880dacaa1" kindref="member">CompoundFileDirectory</ref>(numberOfDirectoryEntriesPerSector);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/>directorySectorToReadFrom<sp/>=<sp/>bcfFile-&gt;<ref refid="struct__bcf__file_1accea22a232923bfe12e1e5196ea5e420" kindref="member">header</ref>.<ref refid="struct__bcf__file__header_1a73c1fc1614d894815c78aca5b3c84984" kindref="member">firstDirectorySectorLocation</ref>;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(directorySectorToReadFrom<sp/>!=<sp/><ref refid="embroidery__internal_8h_1a8053a232060cecfd8a5e65254030faad" kindref="member">CompoundFileSector_EndOfChain</ref>)<sp/>{</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8c_1a5abd59b3d55bc37d3c2094fede71a5cb" kindref="member">seekToSector</ref>(bcfFile,<sp/>file,<sp/>directorySectorToReadFrom);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8c_1a7a74138f5ffaa71deb934c3c407a6289" kindref="member">readNextSector</ref>(file,<sp/>bcfFile-&gt;<ref refid="struct__bcf__file_1aef0fbd66e269cc87889833517cf3a114" kindref="member">directory</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>directorySectorToReadFrom<sp/>=<sp/>bcfFile-&gt;<ref refid="struct__bcf__file_1ade108e4dbaaf848bb151970e612624d7" kindref="member">fat</ref>-&gt;<ref refid="struct__bcf__file__fat_1a5da77162f5d8e2dd6a27794ce342325e" kindref="member">fatEntries</ref>[directorySectorToReadFrom];</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal">FILE*</highlight></codeline>
<codeline lineno="233" refid="embroidery__internal_8h_1a3f3c7530acd7b40f4ce2dc9069fb794a" refkind="member"><highlight class="normal"><ref refid="main_8c_1a3f3c7530acd7b40f4ce2dc9069fb794a" kindref="member">GetFile</ref>(<ref refid="struct__bcf__file" kindref="compound">bcf_file</ref>*<sp/>bcfFile,<sp/>FILE*<sp/>file,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fileToFind)</highlight></codeline>
<codeline lineno="234"><highlight class="normal">{</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>filesize,<sp/><ref refid="main_8c_1a5da0013e5c2fb1d49c92d85fd8028109" kindref="member">sectorSize</ref>,<sp/>currentSector;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sizeToWrite,<sp/>currentSize,<sp/>totalSectors,<sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/>fileOut<sp/>=<sp/>tmpfile();</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__bcf__directory__entry" kindref="compound">bcf_directory_entry</ref>*<sp/>pointer<sp/>=<sp/>bcfFile-&gt;<ref refid="struct__bcf__file_1aef0fbd66e269cc87889833517cf3a114" kindref="member">directory</ref>-&gt;<ref refid="struct__bcf__directory_1a23791bfdab39f4efd231d8f3cbd0cef5" kindref="member">dirEntries</ref>;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pointer)<sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(fileToFind,<sp/>pointer-&gt;<ref refid="struct__bcf__directory__entry_1a962ea084735924f1b32b8f9d9657d83e" kindref="member">directoryEntryName</ref>)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>=<sp/>pointer-&gt;<ref refid="struct__bcf__directory__entry_1a9d1f6b35fc43e643da6e80b691051421" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>filesize<sp/>=<sp/>pointer-&gt;<ref refid="struct__bcf__directory__entry_1ab3c00c29703d357e49a08770247b39dc" kindref="member">streamSize</ref>;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8c_1a5da0013e5c2fb1d49c92d85fd8028109" kindref="member">sectorSize</ref><sp/>=<sp/>bcfFile-&gt;<ref refid="struct__bcf__file_1a2ef24af5c34116783312d2eb100bfa02" kindref="member">difat</ref>-&gt;<ref refid="struct__bcf__file__difat_1ab781b0c1fc751319d8f8d8d889f9f12e" kindref="member">sectorSize</ref>;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>currentSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>currentSector<sp/>=<sp/>pointer-&gt;<ref refid="struct__bcf__directory__entry_1ad12af0ff40cabd7efe3ed7e4322ba50f" kindref="member">startingSectorLocation</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/>totalSectors<sp/>=<sp/>(int)ceil((</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)filesize<sp/>/<sp/><ref refid="main_8c_1a5da0013e5c2fb1d49c92d85fd8028109" kindref="member">sectorSize</ref>);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>totalSectors;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8c_1a5abd59b3d55bc37d3c2094fede71a5cb" kindref="member">seekToSector</ref>(bcfFile,<sp/>file,<sp/>currentSector);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeToWrite<sp/>=<sp/>filesize<sp/>-<sp/>currentSize;</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main_8c_1a5da0013e5c2fb1d49c92d85fd8028109" kindref="member">sectorSize</ref><sp/>&lt;<sp/>sizeToWrite)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeToWrite<sp/>=<sp/><ref refid="main_8c_1a5da0013e5c2fb1d49c92d85fd8028109" kindref="member">sectorSize</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j&lt;sizeToWrite;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>input;</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fread(&amp;input,<sp/>1,<sp/>1,<sp/>file);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fwrite(&amp;input,<sp/>1,<sp/>1,<sp/>fileOut);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentSize<sp/>+=<sp/>sizeToWrite;</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentSector<sp/>=<sp/>bcfFile-&gt;<ref refid="struct__bcf__file_1ade108e4dbaaf848bb151970e612624d7" kindref="member">fat</ref>-&gt;<ref refid="struct__bcf__file__fat_1a5da77162f5d8e2dd6a27794ce342325e" kindref="member">fatEntries</ref>[currentSector];</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fileOut;</highlight></codeline>
<codeline lineno="264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267" refid="embroidery__internal_8h_1a491e7bc54a29532020548d6dcad3e57f" refkind="member"><highlight class="normal"><ref refid="main_8c_1a491e7bc54a29532020548d6dcad3e57f" kindref="member">bcf_file_free</ref>(<ref refid="struct__bcf__file" kindref="compound">bcf_file</ref>*<sp/>bcfFile)</highlight></codeline>
<codeline lineno="268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1a596a4ab45910b13ea2809999de4c6950" kindref="member">safe_free</ref>(bcfFile-&gt;<ref refid="struct__bcf__file_1a2ef24af5c34116783312d2eb100bfa02" kindref="member">difat</ref>);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1a596a4ab45910b13ea2809999de4c6950" kindref="member">safe_free</ref>(bcfFile-&gt;<ref refid="struct__bcf__file_1ade108e4dbaaf848bb151970e612624d7" kindref="member">fat</ref>);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8c_1a994645555ce8f1021b9efc280bffd6a9" kindref="member">bcf_directory_free</ref>(&amp;bcfFile-&gt;<ref refid="struct__bcf__file_1aef0fbd66e269cc87889833517cf3a114" kindref="member">directory</ref>);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/>free(bcfFile);</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><ref refid="struct__bcf__file__difat" kindref="compound">bcf_file_difat</ref>*</highlight></codeline>
<codeline lineno="276" refid="embroidery__internal_8h_1a8277b359861dbbfe6c3244f28c894632" refkind="member"><highlight class="normal"><ref refid="main_8c_1a8277b359861dbbfe6c3244f28c894632" kindref="member">bcf_difat_create</ref>(FILE*<sp/>file,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fatSectors,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a5da0013e5c2fb1d49c92d85fd8028109" kindref="member">sectorSize</ref>)</highlight></codeline>
<codeline lineno="277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__bcf__file__difat" kindref="compound">bcf_file_difat</ref>*<sp/>difat<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sectorRef;</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/>difat<sp/>=<sp/>(<ref refid="struct__bcf__file__difat" kindref="compound">bcf_file_difat</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct__bcf__file__difat" kindref="compound">bcf_file_difat</ref>));</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!difat)<sp/>{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>compound-file-difat.c<sp/>bcf_difat_create(),<sp/>cannot<sp/>allocate<sp/>memory<sp/>for<sp/>difat\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/>difat-&gt;<ref refid="struct__bcf__file__difat_1ab781b0c1fc751319d8f8d8d889f9f12e" kindref="member">sectorSize</ref><sp/>=<sp/><ref refid="main_8c_1a5da0013e5c2fb1d49c92d85fd8028109" kindref="member">sectorSize</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fatSectors<sp/>&gt;<sp/><ref refid="main_8c_1a250130545165a5ff7e416c0d9e3cb101" kindref="member">difatEntriesInHeader</ref>)<sp/>{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fatSectors<sp/>=<sp/><ref refid="main_8c_1a250130545165a5ff7e416c0d9e3cb101" kindref="member">difatEntriesInHeader</ref>;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>fatSectors;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1ac14e60a4d0a0fae16f22ccbbb2373e2a" kindref="member">embInt_read</ref>(file,<sp/></highlight><highlight class="stringliteral">&quot;sectorRef&quot;</highlight><highlight class="normal">,<sp/>&amp;sectorRef,<sp/><ref refid="embroidery__internal_8h_1adf5a6371ed3ee9d649f92592139ac6a1" kindref="member">EMB_INT32_LITTLE</ref>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>difat-&gt;<ref refid="struct__bcf__file__difat_1a1d2f5f02446fc1712a7e535a31ce355e" kindref="member">fatSectorEntries</ref>[i]<sp/>=<sp/>sectorRef;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>difat-&gt;<ref refid="struct__bcf__file__difat_1aa3f0f81e92f66f29e870651409b070a5" kindref="member">fatSectorCount</ref><sp/>=<sp/>fatSectors;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>fatSectors;<sp/>i<sp/>&lt;<sp/><ref refid="main_8c_1a250130545165a5ff7e416c0d9e3cb101" kindref="member">difatEntriesInHeader</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1ac14e60a4d0a0fae16f22ccbbb2373e2a" kindref="member">embInt_read</ref>(file,<sp/></highlight><highlight class="stringliteral">&quot;sectorRef&quot;</highlight><highlight class="normal">,<sp/>&amp;sectorRef,<sp/><ref refid="embroidery__internal_8h_1adf5a6371ed3ee9d649f92592139ac6a1" kindref="member">EMB_INT32_LITTLE</ref>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sectorRef<sp/>!=<sp/><ref refid="embroidery__internal_8h_1a87543f1dd6e4da4ec97c168d8e835299" kindref="member">CompoundFileSector_FreeSector</ref>)<sp/>{</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>compound-file-difat.c<sp/>bcf_difat_create(),<sp/>Unexpected<sp/>sector<sp/>value<sp/>%x<sp/>at<sp/>DIFAT[%d]\n&quot;</highlight><highlight class="normal">,<sp/>sectorRef,<sp/>i);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>difat;</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308" refid="embroidery__internal_8h_1a5462a9cf780abd252021ca031a1f59af" refkind="member"><highlight class="normal"><ref refid="main_8c_1a5462a9cf780abd252021ca031a1f59af" kindref="member">entriesInDifatSector</ref>(<ref refid="struct__bcf__file__difat" kindref="compound">bcf_file_difat</ref>*<sp/>fat)</highlight></codeline>
<codeline lineno="309"><highlight class="normal">{</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(fat-&gt;<ref refid="struct__bcf__file__difat_1ab781b0c1fc751319d8f8d8d889f9f12e" kindref="member">sectorSize</ref><sp/>-<sp/><ref refid="main_8c_1a199c1a6bb0538cdc9f990f8bf03db9d6" kindref="member">sizeOfChainingEntryAtEndOfDifatSector</ref>)<sp/>/<sp/><ref refid="main_8c_1add631e44c8ce53262c8ed050c8f4f1fa" kindref="member">sizeOfDifatEntry</ref>;</highlight></codeline>
<codeline lineno="311"><highlight class="normal">}</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314" refid="embroidery__internal_8h_1acc7b07d624b22e55803b750ab5ba4f7b" refkind="member"><highlight class="normal"><ref refid="main_8c_1a842ff85875f8cc0833691ea1fc2505be" kindref="member">readFullSector</ref>(FILE*<sp/>file,<sp/><ref refid="struct__bcf__file__difat" kindref="compound">bcf_file_difat</ref>*<sp/>bcfFile,<sp/></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>difatEntriesToRead)</highlight></codeline>
<codeline lineno="316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sectorRef;</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nextDifatSectorInChain;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>entriesToReadInThisSector<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*difatEntriesToRead<sp/>&gt;<sp/><ref refid="main_8c_1a5462a9cf780abd252021ca031a1f59af" kindref="member">entriesInDifatSector</ref>(bcfFile))<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entriesToReadInThisSector<sp/>=<sp/><ref refid="main_8c_1a5462a9cf780abd252021ca031a1f59af" kindref="member">entriesInDifatSector</ref>(bcfFile);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*difatEntriesToRead<sp/>-=<sp/>entriesToReadInThisSector;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entriesToReadInThisSector<sp/>=<sp/>*difatEntriesToRead;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*difatEntriesToRead<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>entriesToReadInThisSector;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1ac14e60a4d0a0fae16f22ccbbb2373e2a" kindref="member">embInt_read</ref>(file,<sp/></highlight><highlight class="stringliteral">&quot;sectorRef&quot;</highlight><highlight class="normal">,<sp/>&amp;sectorRef,<sp/><ref refid="embroidery__internal_8h_1adf5a6371ed3ee9d649f92592139ac6a1" kindref="member">EMB_INT32_LITTLE</ref>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcfFile-&gt;<ref refid="struct__bcf__file__difat_1a1d2f5f02446fc1712a7e535a31ce355e" kindref="member">fatSectorEntries</ref>[bcfFile-&gt;<ref refid="struct__bcf__file__difat_1aa3f0f81e92f66f29e870651409b070a5" kindref="member">fatSectorCount</ref>]<sp/>=<sp/>sectorRef;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bcfFile-&gt;<ref refid="struct__bcf__file__difat_1aa3f0f81e92f66f29e870651409b070a5" kindref="member">fatSectorCount</ref>++;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>entriesToReadInThisSector;<sp/>i<sp/>&lt;<sp/><ref refid="main_8c_1a5462a9cf780abd252021ca031a1f59af" kindref="member">entriesInDifatSector</ref>(bcfFile);<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1ac14e60a4d0a0fae16f22ccbbb2373e2a" kindref="member">embInt_read</ref>(file,<sp/></highlight><highlight class="stringliteral">&quot;sectorRef&quot;</highlight><highlight class="normal">,<sp/>&amp;sectorRef,<sp/><ref refid="embroidery__internal_8h_1adf5a6371ed3ee9d649f92592139ac6a1" kindref="member">EMB_INT32_LITTLE</ref>);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sectorRef<sp/>!=<sp/><ref refid="embroidery__internal_8h_1a87543f1dd6e4da4ec97c168d8e835299" kindref="member">CompoundFileSector_FreeSector</ref>)<sp/>{</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>compound-file-difat.c<sp/>readFullSector(),<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Unexpected<sp/>sector<sp/>value<sp/>%x<sp/>at<sp/>DIFAT[%d]]\n&quot;</highlight><highlight class="normal">,<sp/>sectorRef,<sp/>i);</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1ac14e60a4d0a0fae16f22ccbbb2373e2a" kindref="member">embInt_read</ref>(file,<sp/></highlight><highlight class="stringliteral">&quot;nextDifatSectorInChain&quot;</highlight><highlight class="normal">,<sp/>&amp;nextDifatSectorInChain,<sp/><ref refid="embroidery__internal_8h_1adf5a6371ed3ee9d649f92592139ac6a1" kindref="member">EMB_INT32_LITTLE</ref>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nextDifatSectorInChain;</highlight></codeline>
<codeline lineno="344"><highlight class="normal">}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347" refid="main_8c_1a4221460e3e8fca706df3420ed245e1d9" refkind="member"><highlight class="normal"><ref refid="main_8c_1a4221460e3e8fca706df3420ed245e1d9" kindref="member">parseDirectoryEntryName</ref>(FILE*<sp/>file,<sp/><ref refid="struct__bcf__directory__entry" kindref="compound">bcf_directory_entry</ref>*<sp/>dir)</highlight></codeline>
<codeline lineno="348"><highlight class="normal">{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>32;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>unicodechar;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1ac14e60a4d0a0fae16f22ccbbb2373e2a" kindref="member">embInt_read</ref>(file,<sp/></highlight><highlight class="stringliteral">&quot;unicode<sp/>char&quot;</highlight><highlight class="normal">,<sp/>&amp;unicodechar,<sp/><ref refid="embroidery__internal_8h_1a5323ffd703cdbbe7400de705ae606d2f" kindref="member">EMB_INT16_LITTLE</ref>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(unicodechar<sp/>!=<sp/>0x0000)<sp/>{</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir-&gt;<ref refid="struct__bcf__directory__entry_1a962ea084735924f1b32b8f9d9657d83e" kindref="member">directoryEntryName</ref>[i]<sp/>=<sp/>(char)unicodechar;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"><ref refid="struct__bcf__directory" kindref="compound">bcf_directory</ref>*</highlight></codeline>
<codeline lineno="360" refid="embroidery__internal_8h_1a66c717936143bb39229e9c5880dacaa1" refkind="member"><highlight class="normal"><ref refid="main_8c_1a66c717936143bb39229e9c5880dacaa1" kindref="member">CompoundFileDirectory</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxNumberOfDirectoryEntries)</highlight></codeline>
<codeline lineno="361"><highlight class="normal">{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__bcf__directory" kindref="compound">bcf_directory</ref>*<sp/>dir<sp/>=<sp/>(<ref refid="struct__bcf__directory" kindref="compound">bcf_directory</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct__bcf__directory" kindref="compound">bcf_directory</ref>));</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!dir)<sp/>{</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>compound-file-directory.c<sp/>CompoundFileDirectory(),<sp/>cannot<sp/>allocate<sp/>memory<sp/>for<sp/>dir\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="comment">/*<sp/>TODO:<sp/>avoid<sp/>crashing.<sp/>null<sp/>pointer<sp/>will<sp/>be<sp/>accessed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/>dir-&gt;<ref refid="struct__bcf__directory_1a8126239545cfc9957bf02fa97b1c1d81" kindref="member">maxNumberOfDirectoryEntries</ref><sp/>=<sp/>maxNumberOfDirectoryEntries;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>dir-&gt;<ref refid="struct__bcf__directory_1a23791bfdab39f4efd231d8f3cbd0cef5" kindref="member">dirEntries</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dir;</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><ref refid="struct_emb_time__" kindref="compound">EmbTime</ref></highlight></codeline>
<codeline lineno="372" refid="main_8c_1afa71579ab89ee63f1e0a1f85ced52759" refkind="member"><highlight class="normal"><ref refid="main_8c_1afa71579ab89ee63f1e0a1f85ced52759" kindref="member">parseTime</ref>(FILE*<sp/>file)</highlight></codeline>
<codeline lineno="373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_time__" kindref="compound">EmbTime</ref><sp/>returnVal;</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ft_low,<sp/>ft_high;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*embTime_time(&amp;returnVal);<sp/>TODO:<sp/>use<sp/>embTime_time()<sp/>rather<sp/>than<sp/>time().<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1ac14e60a4d0a0fae16f22ccbbb2373e2a" kindref="member">embInt_read</ref>(file,<sp/></highlight><highlight class="stringliteral">&quot;ft_low&quot;</highlight><highlight class="normal">,<sp/>&amp;ft_low,<sp/><ref refid="embroidery__internal_8h_1adf5a6371ed3ee9d649f92592139ac6a1" kindref="member">EMB_INT32_LITTLE</ref>);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1ac14e60a4d0a0fae16f22ccbbb2373e2a" kindref="member">embInt_read</ref>(file,<sp/></highlight><highlight class="stringliteral">&quot;ft_high&quot;</highlight><highlight class="normal">,<sp/>&amp;ft_high,<sp/><ref refid="embroidery__internal_8h_1adf5a6371ed3ee9d649f92592139ac6a1" kindref="member">EMB_INT32_LITTLE</ref>);</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>TODO:<sp/>translate<sp/>to<sp/>actual<sp/>date<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>returnVal.<ref refid="struct_emb_time___1a2398ea43f7d25f677616371d3b545f59" kindref="member">day</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/>returnVal.<ref refid="struct_emb_time___1aa64c18c25aeef9a0d7c92d89fa24a636" kindref="member">hour</ref><sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/>returnVal.<ref refid="struct_emb_time___1a7ff63df03ff6549639b712d24a94adef" kindref="member">minute</ref><sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>returnVal.<ref refid="struct_emb_time___1a8c07e017c7b80f536d05c6134cae89ef" kindref="member">month</ref><sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/>returnVal.<ref refid="struct_emb_time___1a7ab95bf164c7490d2855a7efcea6784a" kindref="member">second</ref><sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/>returnVal.<ref refid="struct_emb_time___1a9c83bbc97dcf2390b043382b4dfe3c98" kindref="member">year</ref><sp/>=<sp/>6;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>returnVal;</highlight></codeline>
<codeline lineno="387"><highlight class="normal">}</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"><ref refid="struct__bcf__directory__entry" kindref="compound">bcf_directory_entry</ref>*</highlight></codeline>
<codeline lineno="390" refid="embroidery__internal_8h_1a3b7a815d54672417e902a05a3d7f7b3f" refkind="member"><highlight class="normal"><ref refid="main_8c_1a3b7a815d54672417e902a05a3d7f7b3f" kindref="member">CompoundFileDirectoryEntry</ref>(FILE*<sp/>file)</highlight></codeline>
<codeline lineno="391"><highlight class="normal">{</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>guidSize<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__bcf__directory__entry" kindref="compound">bcf_directory_entry</ref>*<sp/>dir<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct__bcf__directory__entry" kindref="compound">bcf_directory_entry</ref>));</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>compound-file-directory.c<sp/>CompoundFileDirectoryEntry(),<sp/>cannot<sp/>allocate<sp/>memory<sp/>for<sp/>dir\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(dir-&gt;<ref refid="struct__bcf__directory__entry_1a962ea084735924f1b32b8f9d9657d83e" kindref="member">directoryEntryName</ref>,<sp/>0,<sp/>32);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8c_1a4221460e3e8fca706df3420ed245e1d9" kindref="member">parseDirectoryEntryName</ref>(file,<sp/>dir);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/>dir-&gt;<ref refid="struct__bcf__directory__entry_1a9d1f6b35fc43e643da6e80b691051421" kindref="member">next</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/>dir-&gt;<ref refid="struct__bcf__directory__entry_1a7f035e9575047b046de83f4d27c9b6aa" kindref="member">directoryEntryNameLength</ref><sp/>=<sp/><ref refid="embroidery__internal_8h_1ac97a207bfe58bd024305af6bb7242f96" kindref="member">fread_uint16</ref>(file);</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>dir-&gt;<ref refid="struct__bcf__directory__entry_1a594b4708319b280d9e2dc20771729286" kindref="member">objectType</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)fgetc(file);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((dir-&gt;<ref refid="struct__bcf__directory__entry_1a594b4708319b280d9e2dc20771729286" kindref="member">objectType</ref><sp/>!=<sp/><ref refid="embroidery__internal_8h_1ad8025f1709748642b30bc205d89282b0" kindref="member">ObjectTypeStorage</ref>)<sp/>&amp;&amp;<sp/>(dir-&gt;<ref refid="struct__bcf__directory__entry_1a594b4708319b280d9e2dc20771729286" kindref="member">objectType</ref><sp/>!=<sp/><ref refid="embroidery__internal_8h_1af16321f9da753f9310ba1baec22d5630" kindref="member">ObjectTypeStream</ref>)<sp/>&amp;&amp;<sp/>(dir-&gt;<ref refid="struct__bcf__directory__entry_1a594b4708319b280d9e2dc20771729286" kindref="member">objectType</ref><sp/>!=<sp/><ref refid="embroidery__internal_8h_1a7c7eb309f9193311b3955b151ea5e8ba" kindref="member">ObjectTypeRootEntry</ref>))<sp/>{</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>compound-file-directory.c<sp/>CompoundFileDirectoryEntry()&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;,<sp/>unexpected<sp/>object<sp/>type:<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>dir-&gt;<ref refid="struct__bcf__directory__entry_1a594b4708319b280d9e2dc20771729286" kindref="member">objectType</ref>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>dir-&gt;<ref refid="struct__bcf__directory__entry_1a64bcb7f33df4e854a91e7daab4b68a25" kindref="member">colorFlag</ref><sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)fgetc(file);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1ac14e60a4d0a0fae16f22ccbbb2373e2a" kindref="member">embInt_read</ref>(file,<sp/></highlight><highlight class="stringliteral">&quot;left<sp/>sibling<sp/>id&quot;</highlight><highlight class="normal">,<sp/>&amp;(dir-&gt;<ref refid="struct__bcf__directory__entry_1a1a189ccb0591596986b8ae10dd22ed00" kindref="member">leftSiblingId</ref>),<sp/><ref refid="embroidery__internal_8h_1adf5a6371ed3ee9d649f92592139ac6a1" kindref="member">EMB_INT32_LITTLE</ref>);</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1ac14e60a4d0a0fae16f22ccbbb2373e2a" kindref="member">embInt_read</ref>(file,<sp/></highlight><highlight class="stringliteral">&quot;right<sp/>sibling<sp/>id&quot;</highlight><highlight class="normal">,<sp/>&amp;(dir-&gt;<ref refid="struct__bcf__directory__entry_1a4309dd1822928c08c69a6cc65f0cc864" kindref="member">rightSiblingId</ref>),<sp/><ref refid="embroidery__internal_8h_1adf5a6371ed3ee9d649f92592139ac6a1" kindref="member">EMB_INT32_LITTLE</ref>);</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1ac14e60a4d0a0fae16f22ccbbb2373e2a" kindref="member">embInt_read</ref>(file,<sp/></highlight><highlight class="stringliteral">&quot;child<sp/>id&quot;</highlight><highlight class="normal">,<sp/>&amp;(dir-&gt;<ref refid="struct__bcf__directory__entry_1a0a09332e2a856d71393ee0f2dce09591" kindref="member">childId</ref>),<sp/><ref refid="embroidery__internal_8h_1adf5a6371ed3ee9d649f92592139ac6a1" kindref="member">EMB_INT32_LITTLE</ref>);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/>fread(dir-&gt;<ref refid="struct__bcf__directory__entry_1a84b9e393b711171ed0a445466d1aa622" kindref="member">CLSID</ref>,<sp/>1,<sp/>guidSize,<sp/>file);</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1ac14e60a4d0a0fae16f22ccbbb2373e2a" kindref="member">embInt_read</ref>(file,<sp/></highlight><highlight class="stringliteral">&quot;state<sp/>bits&quot;</highlight><highlight class="normal">,<sp/>&amp;(dir-&gt;<ref refid="struct__bcf__directory__entry_1a20d0ee6bd48248313256db45c05219ee" kindref="member">stateBits</ref>),<sp/><ref refid="embroidery__internal_8h_1adf5a6371ed3ee9d649f92592139ac6a1" kindref="member">EMB_INT32_LITTLE</ref>);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/>dir-&gt;<ref refid="struct__bcf__directory__entry_1a45c6392f7a7c3479b584d0e179ed1c77" kindref="member">creationTime</ref><sp/>=<sp/><ref refid="main_8c_1afa71579ab89ee63f1e0a1f85ced52759" kindref="member">parseTime</ref>(file);</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/>dir-&gt;<ref refid="struct__bcf__directory__entry_1a3533a0d9af50b46ea93ed624dda16591" kindref="member">modifiedTime</ref><sp/>=<sp/><ref refid="main_8c_1afa71579ab89ee63f1e0a1f85ced52759" kindref="member">parseTime</ref>(file);</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1ac14e60a4d0a0fae16f22ccbbb2373e2a" kindref="member">embInt_read</ref>(file,<sp/></highlight><highlight class="stringliteral">&quot;starting<sp/>sector<sp/>location&quot;</highlight><highlight class="normal">,<sp/>&amp;(dir-&gt;<ref refid="struct__bcf__directory__entry_1ad12af0ff40cabd7efe3ed7e4322ba50f" kindref="member">startingSectorLocation</ref>),<sp/><ref refid="embroidery__internal_8h_1adf5a6371ed3ee9d649f92592139ac6a1" kindref="member">EMB_INT32_LITTLE</ref>);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>StreamSize<sp/>should<sp/>really<sp/>be<sp/>__int64<sp/>or<sp/>long<sp/>long,</highlight></codeline>
<codeline lineno="418"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>but<sp/>for<sp/>our<sp/>uses<sp/>we<sp/>should<sp/>never<sp/>run<sp/>into<sp/>an<sp/>issue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1ac14e60a4d0a0fae16f22ccbbb2373e2a" kindref="member">embInt_read</ref>(file,<sp/></highlight><highlight class="stringliteral">&quot;dir-&gt;streamSize&quot;</highlight><highlight class="normal">,<sp/>&amp;(dir-&gt;<ref refid="struct__bcf__directory__entry_1ab3c00c29703d357e49a08770247b39dc" kindref="member">streamSize</ref>),<sp/><ref refid="embroidery__internal_8h_1adf5a6371ed3ee9d649f92592139ac6a1" kindref="member">EMB_INT32_LITTLE</ref>);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>top<sp/>portion<sp/>of<sp/>int64<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1ac14e60a4d0a0fae16f22ccbbb2373e2a" kindref="member">embInt_read</ref>(file,<sp/></highlight><highlight class="stringliteral">&quot;dir-&gt;streamSizeHigh&quot;</highlight><highlight class="normal">,<sp/>&amp;(dir-&gt;<ref refid="struct__bcf__directory__entry_1a8116ef4fd8bff207a789ee4ec5ff03c6" kindref="member">streamSizeHigh</ref>),<sp/><ref refid="embroidery__internal_8h_1adf5a6371ed3ee9d649f92592139ac6a1" kindref="member">EMB_INT32_LITTLE</ref>);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dir;</highlight></codeline>
<codeline lineno="423"><highlight class="normal">}</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426" refid="embroidery__internal_8h_1a7a74138f5ffaa71deb934c3c407a6289" refkind="member"><highlight class="normal"><ref refid="main_8c_1a7a74138f5ffaa71deb934c3c407a6289" kindref="member">readNextSector</ref>(FILE*<sp/>file,<sp/><ref refid="struct__bcf__directory" kindref="compound">bcf_directory</ref>*<sp/>dir)</highlight></codeline>
<codeline lineno="427"><highlight class="normal">{</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>dir-&gt;<ref refid="struct__bcf__directory_1a8126239545cfc9957bf02fa97b1c1d81" kindref="member">maxNumberOfDirectoryEntries</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__bcf__directory__entry" kindref="compound">bcf_directory_entry</ref>*<sp/>dirEntry<sp/>=<sp/><ref refid="main_8c_1a3b7a815d54672417e902a05a3d7f7b3f" kindref="member">CompoundFileDirectoryEntry</ref>(file);</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__bcf__directory__entry" kindref="compound">bcf_directory_entry</ref>*<sp/>pointer<sp/>=<sp/>dir-&gt;<ref refid="struct__bcf__directory_1a23791bfdab39f4efd231d8f3cbd0cef5" kindref="member">dirEntries</ref>;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pointer)<sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dir-&gt;<ref refid="struct__bcf__directory_1a23791bfdab39f4efd231d8f3cbd0cef5" kindref="member">dirEntries</ref><sp/>=<sp/>dirEntry;</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pointer)<sp/>{</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!pointer-&gt;<ref refid="struct__bcf__directory__entry_1a9d1f6b35fc43e643da6e80b691051421" kindref="member">next</ref>)<sp/>{</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer-&gt;<ref refid="struct__bcf__directory__entry_1a9d1f6b35fc43e643da6e80b691051421" kindref="member">next</ref><sp/>=<sp/>dirEntry;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>=<sp/>pointer-&gt;<ref refid="struct__bcf__directory__entry_1a9d1f6b35fc43e643da6e80b691051421" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448" refid="embroidery__internal_8h_1a994645555ce8f1021b9efc280bffd6a9" refkind="member"><highlight class="normal"><ref refid="main_8c_1a994645555ce8f1021b9efc280bffd6a9" kindref="member">bcf_directory_free</ref>(<ref refid="struct__bcf__directory" kindref="compound">bcf_directory</ref>**<sp/>dir)</highlight></codeline>
<codeline lineno="449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__bcf__directory" kindref="compound">bcf_directory</ref><sp/>*dirptr;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__bcf__directory__entry" kindref="compound">bcf_directory_entry</ref>*<sp/>pointer;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(dir<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/>dirptr<sp/>=<sp/>*dir;</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>pointer<sp/>=<sp/>dirptr-&gt;<ref refid="struct__bcf__directory_1a23791bfdab39f4efd231d8f3cbd0cef5" kindref="member">dirEntries</ref>;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(pointer)<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct__bcf__directory__entry" kindref="compound">bcf_directory_entry</ref>*<sp/>entryToFree;</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>entryToFree<sp/>=<sp/>pointer;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer<sp/>=<sp/>pointer-&gt;<ref refid="struct__bcf__directory__entry_1a9d1f6b35fc43e643da6e80b691051421" kindref="member">next</ref>;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(entryToFree);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1a596a4ab45910b13ea2809999de4c6950" kindref="member">safe_free</ref>(*dir);</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><ref refid="struct__bcf__file__fat" kindref="compound">bcf_file_fat</ref>*</highlight></codeline>
<codeline lineno="467" refid="embroidery__internal_8h_1a4e7377ff59e275ae4dc1d80ede4837e9" refkind="member"><highlight class="normal"><ref refid="main_8c_1a4e7377ff59e275ae4dc1d80ede4837e9" kindref="member">bcfFileFat_create</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a5da0013e5c2fb1d49c92d85fd8028109" kindref="member">sectorSize</ref>)</highlight></codeline>
<codeline lineno="468"><highlight class="normal">{</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__bcf__file__fat" kindref="compound">bcf_file_fat</ref>*<sp/>fat<sp/>=<sp/>(<ref refid="struct__bcf__file__fat" kindref="compound">bcf_file_fat</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct__bcf__file__fat" kindref="compound">bcf_file_fat</ref>));</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fat)<sp/>{</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>compound-file-fat.c<sp/>bcfFileFat_create(),<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;cannot<sp/>allocate<sp/>memory<sp/>for<sp/>fat\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/>fat-&gt;<ref refid="struct__bcf__file__fat_1a4437f708545262c46eefc636e3ca780d" kindref="member">numberOfEntriesInFatSector</ref><sp/>=<sp/><ref refid="main_8c_1a5da0013e5c2fb1d49c92d85fd8028109" kindref="member">sectorSize</ref><sp/>/<sp/><ref refid="main_8c_1aeffcb7cf2616f8a5bad2f683e9299fd3" kindref="member">sizeOfFatEntry</ref>;</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/>fat-&gt;<ref refid="struct__bcf__file__fat_1a45b4e0f1c1fdd2a8c04ed13c89f0b3b9" kindref="member">fatEntryCount</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fat;</highlight></codeline>
<codeline lineno="478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481" refid="embroidery__internal_8h_1a71a5f4111bd3daa574148e2f45d4c893" refkind="member"><highlight class="normal"><ref refid="main_8c_1a71a5f4111bd3daa574148e2f45d4c893" kindref="member">loadFatFromSector</ref>(<ref refid="struct__bcf__file__fat" kindref="compound">bcf_file_fat</ref>*<sp/>fat,<sp/>FILE*<sp/>file)</highlight></codeline>
<codeline lineno="482"><highlight class="normal">{</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>current_fat_entries<sp/>=<sp/>fat-&gt;<ref refid="struct__bcf__file__fat_1a45b4e0f1c1fdd2a8c04ed13c89f0b3b9" kindref="member">fatEntryCount</ref>;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newSize<sp/>=<sp/>current_fat_entries<sp/>+<sp/>fat-&gt;<ref refid="struct__bcf__file__fat_1a4437f708545262c46eefc636e3ca780d" kindref="member">numberOfEntriesInFatSector</ref>;</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>current_fat_entries;<sp/>i<sp/>&lt;<sp/>newSize;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fatEntry;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1ac14e60a4d0a0fae16f22ccbbb2373e2a" kindref="member">embInt_read</ref>(file,<sp/></highlight><highlight class="stringliteral">&quot;fatEntry&quot;</highlight><highlight class="normal">,<sp/>&amp;fatEntry,<sp/><ref refid="embroidery__internal_8h_1adf5a6371ed3ee9d649f92592139ac6a1" kindref="member">EMB_INT32_LITTLE</ref>);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fat-&gt;<ref refid="struct__bcf__file__fat_1a5da77162f5d8e2dd6a27794ce342325e" kindref="member">fatEntries</ref>[i]<sp/>=<sp/>fatEntry;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>fat-&gt;<ref refid="struct__bcf__file__fat_1a45b4e0f1c1fdd2a8c04ed13c89f0b3b9" kindref="member">fatEntryCount</ref><sp/>=<sp/>newSize;</highlight></codeline>
<codeline lineno="492"><highlight class="normal">}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><ref refid="struct__bcf__file__header" kindref="compound">bcf_file_header</ref></highlight></codeline>
<codeline lineno="495" refid="embroidery__internal_8h_1a6faf1e4138b3dba5948cb6da199babce" refkind="member"><highlight class="normal"><ref refid="main_8c_1a6faf1e4138b3dba5948cb6da199babce" kindref="member">bcfFileHeader_read</ref>(FILE*<sp/>file)</highlight></codeline>
<codeline lineno="496"><highlight class="normal">{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct__bcf__file__header" kindref="compound">bcf_file_header</ref><sp/>header;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>fread(header.<ref refid="struct__bcf__file__header_1a3a9958669bbd206000986d52a1ea26fc" kindref="member">signature</ref>,<sp/>1,<sp/>8,<sp/>file);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>fread(header.<ref refid="struct__bcf__file__header_1a84b9e393b711171ed0a445466d1aa622" kindref="member">CLSID</ref>,<sp/>1,<sp/>16,<sp/>file);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>header.<ref refid="struct__bcf__file__header_1a5059602cf1466b449f44b1989171284e" kindref="member">minorVersion</ref><sp/>=<sp/><ref refid="embroidery__internal_8h_1ac97a207bfe58bd024305af6bb7242f96" kindref="member">fread_uint16</ref>(file);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>header.<ref refid="struct__bcf__file__header_1a93f73bd6f031f7aec97fcb6f4a8bc2c2" kindref="member">majorVersion</ref><sp/>=<sp/><ref refid="embroidery__internal_8h_1ac97a207bfe58bd024305af6bb7242f96" kindref="member">fread_uint16</ref>(file);</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/>header.<ref refid="struct__bcf__file__header_1ab5a13f508eb2700bacfd93910d6460e1" kindref="member">byteOrder</ref><sp/>=<sp/><ref refid="embroidery__internal_8h_1ac97a207bfe58bd024305af6bb7242f96" kindref="member">fread_uint16</ref>(file);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/>header.<ref refid="struct__bcf__file__header_1a6d715ce74a8d2ddfa101ccb91b2d88a4" kindref="member">sectorShift</ref><sp/>=<sp/><ref refid="embroidery__internal_8h_1ac97a207bfe58bd024305af6bb7242f96" kindref="member">fread_uint16</ref>(file);</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/>header.<ref refid="struct__bcf__file__header_1ae7ba08991c374bd3a00b1425906e2224" kindref="member">miniSectorShift</ref><sp/>=<sp/><ref refid="embroidery__internal_8h_1ac97a207bfe58bd024305af6bb7242f96" kindref="member">fread_uint16</ref>(file);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>header.<ref refid="struct__bcf__file__header_1aab7b0b3f190b1349df2627d75e931186" kindref="member">reserved1</ref><sp/>=<sp/><ref refid="embroidery__internal_8h_1ac97a207bfe58bd024305af6bb7242f96" kindref="member">fread_uint16</ref>(file);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1ac14e60a4d0a0fae16f22ccbbb2373e2a" kindref="member">embInt_read</ref>(file,<sp/></highlight><highlight class="stringliteral">&quot;reserved2&quot;</highlight><highlight class="normal">,<sp/>&amp;(header.<ref refid="struct__bcf__file__header_1a2eb721ffdcf073b5d2cda195145f6511" kindref="member">reserved2</ref>),<sp/><ref refid="embroidery__internal_8h_1adf5a6371ed3ee9d649f92592139ac6a1" kindref="member">EMB_INT32_LITTLE</ref>);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1ac14e60a4d0a0fae16f22ccbbb2373e2a" kindref="member">embInt_read</ref>(file,<sp/></highlight><highlight class="stringliteral">&quot;numberOfDirectorySectors&quot;</highlight><highlight class="normal">,<sp/>&amp;(header.<ref refid="struct__bcf__file__header_1abf9ad30243a72e9b66824b001ffc62f1" kindref="member">numberOfDirectorySectors</ref>),<sp/><ref refid="embroidery__internal_8h_1adf5a6371ed3ee9d649f92592139ac6a1" kindref="member">EMB_INT32_LITTLE</ref>);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1ac14e60a4d0a0fae16f22ccbbb2373e2a" kindref="member">embInt_read</ref>(file,<sp/></highlight><highlight class="stringliteral">&quot;numberOfFATSectors&quot;</highlight><highlight class="normal">,<sp/>&amp;(header.<ref refid="struct__bcf__file__header_1a17821f8900d0f8e468ecddb54dd7d70e" kindref="member">numberOfFATSectors</ref>),<sp/><ref refid="embroidery__internal_8h_1adf5a6371ed3ee9d649f92592139ac6a1" kindref="member">EMB_INT32_LITTLE</ref>);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1ac14e60a4d0a0fae16f22ccbbb2373e2a" kindref="member">embInt_read</ref>(file,<sp/></highlight><highlight class="stringliteral">&quot;first<sp/>dir<sp/>sector<sp/>loaction&quot;</highlight><highlight class="normal">,<sp/>&amp;(header.<ref refid="struct__bcf__file__header_1a73c1fc1614d894815c78aca5b3c84984" kindref="member">firstDirectorySectorLocation</ref>),<sp/><ref refid="embroidery__internal_8h_1adf5a6371ed3ee9d649f92592139ac6a1" kindref="member">EMB_INT32_LITTLE</ref>);</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1ac14e60a4d0a0fae16f22ccbbb2373e2a" kindref="member">embInt_read</ref>(file,<sp/></highlight><highlight class="stringliteral">&quot;transaction<sp/>signature<sp/>number&quot;</highlight><highlight class="normal">,<sp/>&amp;(header.<ref refid="struct__bcf__file__header_1a59e844f4d55dcdf58517aaa97cc32ba2" kindref="member">transactionSignatureNumber</ref>),<sp/><ref refid="embroidery__internal_8h_1adf5a6371ed3ee9d649f92592139ac6a1" kindref="member">EMB_INT32_LITTLE</ref>);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1ac14e60a4d0a0fae16f22ccbbb2373e2a" kindref="member">embInt_read</ref>(file,<sp/></highlight><highlight class="stringliteral">&quot;mini<sp/>stream<sp/>cutoff<sp/>sector&quot;</highlight><highlight class="normal">,<sp/>&amp;(header.<ref refid="struct__bcf__file__header_1a1f26d21db30c240e29695d29aa8a9c9e" kindref="member">miniStreamCutoffSize</ref>),<sp/><ref refid="embroidery__internal_8h_1adf5a6371ed3ee9d649f92592139ac6a1" kindref="member">EMB_INT32_LITTLE</ref>);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1ac14e60a4d0a0fae16f22ccbbb2373e2a" kindref="member">embInt_read</ref>(file,<sp/></highlight><highlight class="stringliteral">&quot;first<sp/>mini<sp/>fat<sp/>sector&quot;</highlight><highlight class="normal">,<sp/>&amp;(header.<ref refid="struct__bcf__file__header_1a634db8580ba000868af02dd1f42be29a" kindref="member">firstMiniFATSectorLocation</ref>),<sp/><ref refid="embroidery__internal_8h_1adf5a6371ed3ee9d649f92592139ac6a1" kindref="member">EMB_INT32_LITTLE</ref>);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1ac14e60a4d0a0fae16f22ccbbb2373e2a" kindref="member">embInt_read</ref>(file,<sp/></highlight><highlight class="stringliteral">&quot;mini<sp/>fat<sp/>sectors&quot;</highlight><highlight class="normal">,<sp/>&amp;(header.<ref refid="struct__bcf__file__header_1a45a44acae0fd6f8387c66ef35e82b254" kindref="member">numberOfMiniFatSectors</ref>),<sp/><ref refid="embroidery__internal_8h_1adf5a6371ed3ee9d649f92592139ac6a1" kindref="member">EMB_INT32_LITTLE</ref>);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1ac14e60a4d0a0fae16f22ccbbb2373e2a" kindref="member">embInt_read</ref>(file,<sp/></highlight><highlight class="stringliteral">&quot;first<sp/>difat<sp/>Sector&quot;</highlight><highlight class="normal">,<sp/>&amp;(header.<ref refid="struct__bcf__file__header_1a3a28e1b0b6c457d51da5fed45e57cf5b" kindref="member">firstDifatSectorLocation</ref>),<sp/><ref refid="embroidery__internal_8h_1adf5a6371ed3ee9d649f92592139ac6a1" kindref="member">EMB_INT32_LITTLE</ref>);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1ac14e60a4d0a0fae16f22ccbbb2373e2a" kindref="member">embInt_read</ref>(file,<sp/></highlight><highlight class="stringliteral">&quot;difat<sp/>sectors&quot;</highlight><highlight class="normal">,<sp/>&amp;(header.<ref refid="struct__bcf__file__header_1a9c3067324df96f026cec4d961fb8bb5c" kindref="member">numberOfDifatSectors</ref>),<sp/><ref refid="embroidery__internal_8h_1adf5a6371ed3ee9d649f92592139ac6a1" kindref="member">EMB_INT32_LITTLE</ref>);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>header;</highlight></codeline>
<codeline lineno="517"><highlight class="normal">}</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520" refid="embroidery_8h_1aac78be5a14c3044d704e8f39dd160fa9" refkind="member"><highlight class="normal"><ref refid="main_8c_1a695a90f248ef0842c61374bce70c5f98" kindref="member">embSatinOutline_generateSatinOutline</ref>(<ref refid="struct_emb_array__" kindref="compound">EmbArray</ref><sp/>*lines,<sp/><ref refid="embroidery_8h_1a2082be9aabfb541dff1825c4ca6a05cd" kindref="member">EmbReal</ref><sp/>thickness,<sp/><ref refid="struct_emb_satin_outline__" kindref="compound">EmbSatinOutline</ref>*<sp/>result)</highlight></codeline>
<codeline lineno="521"><highlight class="normal">{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_line__" kindref="compound">EmbLine</ref><sp/>line1,<sp/>line2;</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_satin_outline__" kindref="compound">EmbSatinOutline</ref><sp/>outline;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_vector__" kindref="compound">EmbVector</ref><sp/>out;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_vector__" kindref="compound">EmbVector</ref><sp/>v1;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_vector__" kindref="compound">EmbVector</ref><sp/>temp;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_line__" kindref="compound">EmbLine</ref><sp/>line;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a2082be9aabfb541dff1825c4ca6a05cd" kindref="member">EmbReal</ref><sp/>halfThickness<sp/>=<sp/>thickness<sp/>/<sp/>2.0;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intermediateOutlineCount<sp/>=<sp/>2<sp/>*<sp/>lines-&gt;<ref refid="struct_emb_array___1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member">count</ref><sp/>-<sp/>2;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/>outline.<ref refid="struct_emb_satin_outline___1aada5be7cc6827659d3520f9f43d19ad1" kindref="member">side1</ref><sp/>=<sp/><ref refid="array_8c_1a67090c780a2818616877fb42b3a42e5c" kindref="member">embArray_create</ref>(<ref refid="embroidery_8h_1afcd788a4e739d346ed03eda45f4b7594" kindref="member">EMB_VECTOR</ref>);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!outline.<ref refid="struct_emb_satin_outline___1aada5be7cc6827659d3520f9f43d19ad1" kindref="member">side1</ref>)<sp/>{</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>emb-satin-line.c<sp/>embSatinOutline_generateSatinOutline(),<sp/>cannot<sp/>allocate<sp/>memory<sp/>for<sp/>outline-&gt;side1\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/>outline.<ref refid="struct_emb_satin_outline___1a8a010fd5b6a9a2e4dbcf80562f2e05b4" kindref="member">side2</ref><sp/>=<sp/><ref refid="array_8c_1a67090c780a2818616877fb42b3a42e5c" kindref="member">embArray_create</ref>(<ref refid="embroidery_8h_1afcd788a4e739d346ed03eda45f4b7594" kindref="member">EMB_VECTOR</ref>);</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!outline.<ref refid="struct_emb_satin_outline___1a8a010fd5b6a9a2e4dbcf80562f2e05b4" kindref="member">side2</ref>)<sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>emb-satin-line.c<sp/>embSatinOutline_generateSatinOutline(),<sp/>cannot<sp/>allocate<sp/>memory<sp/>for<sp/>outline-&gt;side2\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;<sp/>lines-&gt;<ref refid="struct_emb_array___1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member">count</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line.<ref refid="struct_emb_line___1ad61a9cd980182f7b946d1a38aaee8562" kindref="member">start</ref><sp/>=<sp/>lines-&gt;<ref refid="struct_emb_array___1a53ed4a940a3d3011efefded128131523" kindref="member">geometry</ref>[i<sp/>-<sp/>1].<ref refid="struct_emb_geometry___1a31650b1b1788d96f8b93bb39ed6e17ba" kindref="member">object</ref>.<ref refid="struct_emb_geometry___1a397103c1ef81333bc4e689bb8da585ec" kindref="member">vector</ref>;</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line.<ref refid="struct_emb_line___1ac19242fe9e53942be61574685fbd49ed" kindref="member">end</ref><sp/>=<sp/>lines-&gt;<ref refid="struct_emb_array___1a53ed4a940a3d3011efefded128131523" kindref="member">geometry</ref>[i].<ref refid="struct_emb_geometry___1a31650b1b1788d96f8b93bb39ed6e17ba" kindref="member">object</ref>.<ref refid="struct_emb_geometry___1a397103c1ef81333bc4e689bb8da585ec" kindref="member">vector</ref>;</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a9559c0d75a8e73a52114e9c20f45838b" kindref="member">embLine_normalVector</ref>(line,<sp/>&amp;v1,<sp/>1);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a710ebab38d10db6e2582707c1d60036b" kindref="member">embVector_multiply</ref>(v1,<sp/>halfThickness,<sp/>&amp;temp);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/><ref refid="embroidery_8h_1a6efd27ecee68d6b66d1abae0d90925a7" kindref="member">embVector_add</ref>(temp,<sp/>lines-&gt;<ref refid="struct_emb_array___1a53ed4a940a3d3011efefded128131523" kindref="member">geometry</ref>[i-1].<ref refid="struct_emb_geometry___1a31650b1b1788d96f8b93bb39ed6e17ba" kindref="member">object</ref>.<ref refid="struct_emb_geometry___1a397103c1ef81333bc4e689bb8da585ec" kindref="member">vector</ref>);</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="array_8c_1ae7afecc6b39df1016ccda59227922483" kindref="member">embArray_addVector</ref>(outline.<ref refid="struct_emb_satin_outline___1aada5be7cc6827659d3520f9f43d19ad1" kindref="member">side1</ref>,<sp/>temp);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/><ref refid="embroidery_8h_1a6efd27ecee68d6b66d1abae0d90925a7" kindref="member">embVector_add</ref>(temp,<sp/>lines-&gt;<ref refid="struct_emb_array___1a53ed4a940a3d3011efefded128131523" kindref="member">geometry</ref>[i].<ref refid="struct_emb_geometry___1a31650b1b1788d96f8b93bb39ed6e17ba" kindref="member">object</ref>.<ref refid="struct_emb_geometry___1a397103c1ef81333bc4e689bb8da585ec" kindref="member">vector</ref>);</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="array_8c_1ae7afecc6b39df1016ccda59227922483" kindref="member">embArray_addVector</ref>(outline.<ref refid="struct_emb_satin_outline___1aada5be7cc6827659d3520f9f43d19ad1" kindref="member">side1</ref>,<sp/>temp);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a710ebab38d10db6e2582707c1d60036b" kindref="member">embVector_multiply</ref>(v1,<sp/>-halfThickness,<sp/>&amp;temp);</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/><ref refid="embroidery_8h_1a6efd27ecee68d6b66d1abae0d90925a7" kindref="member">embVector_add</ref>(temp,<sp/>lines-&gt;<ref refid="struct_emb_array___1a53ed4a940a3d3011efefded128131523" kindref="member">geometry</ref>[i<sp/>-<sp/>1].<ref refid="struct_emb_geometry___1a31650b1b1788d96f8b93bb39ed6e17ba" kindref="member">object</ref>.<ref refid="struct_emb_geometry___1a397103c1ef81333bc4e689bb8da585ec" kindref="member">vector</ref>);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="array_8c_1ae7afecc6b39df1016ccda59227922483" kindref="member">embArray_addVector</ref>(outline.<ref refid="struct_emb_satin_outline___1a8a010fd5b6a9a2e4dbcf80562f2e05b4" kindref="member">side2</ref>,<sp/>temp);</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>temp<sp/>=<sp/><ref refid="embroidery_8h_1a6efd27ecee68d6b66d1abae0d90925a7" kindref="member">embVector_add</ref>(temp,<sp/>lines-&gt;<ref refid="struct_emb_array___1a53ed4a940a3d3011efefded128131523" kindref="member">geometry</ref>[i].<ref refid="struct_emb_geometry___1a31650b1b1788d96f8b93bb39ed6e17ba" kindref="member">object</ref>.<ref refid="struct_emb_geometry___1a397103c1ef81333bc4e689bb8da585ec" kindref="member">vector</ref>);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="array_8c_1ae7afecc6b39df1016ccda59227922483" kindref="member">embArray_addVector</ref>(outline.<ref refid="struct_emb_satin_outline___1a8a010fd5b6a9a2e4dbcf80562f2e05b4" kindref="member">side2</ref>,<sp/>temp);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result)<sp/>{</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>emb-satin-line.c<sp/>embSatinOutline_generateSatinOutline(),<sp/>result<sp/>argument<sp/>is<sp/>null\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;<ref refid="struct_emb_satin_outline___1aada5be7cc6827659d3520f9f43d19ad1" kindref="member">side1</ref><sp/>=<sp/><ref refid="array_8c_1a67090c780a2818616877fb42b3a42e5c" kindref="member">embArray_create</ref>(<ref refid="embroidery_8h_1afcd788a4e739d346ed03eda45f4b7594" kindref="member">EMB_VECTOR</ref>);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result-&gt;<ref refid="struct_emb_satin_outline___1aada5be7cc6827659d3520f9f43d19ad1" kindref="member">side1</ref>)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>emb-satin-line.c<sp/>embSatinOutline_generateSatinOutline(),<sp/>cannot<sp/>allocate<sp/>memory<sp/>for<sp/>result-&gt;side1\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;<ref refid="struct_emb_satin_outline___1a8a010fd5b6a9a2e4dbcf80562f2e05b4" kindref="member">side2</ref><sp/>=<sp/><ref refid="array_8c_1a67090c780a2818616877fb42b3a42e5c" kindref="member">embArray_create</ref>(<ref refid="embroidery_8h_1afcd788a4e739d346ed03eda45f4b7594" kindref="member">EMB_VECTOR</ref>);</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result-&gt;<ref refid="struct_emb_satin_outline___1a8a010fd5b6a9a2e4dbcf80562f2e05b4" kindref="member">side2</ref>)<sp/>{</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>emb-satin-line.c<sp/>embSatinOutline_generateSatinOutline(),<sp/>cannot<sp/>allocate<sp/>memory<sp/>for<sp/>result-&gt;side2\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="array_8c_1ae7afecc6b39df1016ccda59227922483" kindref="member">embArray_addVector</ref>(result-&gt;<ref refid="struct_emb_satin_outline___1aada5be7cc6827659d3520f9f43d19ad1" kindref="member">side1</ref>,<sp/>outline.<ref refid="struct_emb_satin_outline___1aada5be7cc6827659d3520f9f43d19ad1" kindref="member">side1</ref>-&gt;<ref refid="struct_emb_array___1a53ed4a940a3d3011efefded128131523" kindref="member">geometry</ref>[0].<ref refid="struct_emb_geometry___1a31650b1b1788d96f8b93bb39ed6e17ba" kindref="member">object</ref>.<ref refid="struct_emb_geometry___1a397103c1ef81333bc4e689bb8da585ec" kindref="member">vector</ref>);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="array_8c_1ae7afecc6b39df1016ccda59227922483" kindref="member">embArray_addVector</ref>(result-&gt;<ref refid="struct_emb_satin_outline___1a8a010fd5b6a9a2e4dbcf80562f2e05b4" kindref="member">side2</ref>,<sp/>outline.<ref refid="struct_emb_satin_outline___1a8a010fd5b6a9a2e4dbcf80562f2e05b4" kindref="member">side2</ref>-&gt;<ref refid="struct_emb_array___1a53ed4a940a3d3011efefded128131523" kindref="member">geometry</ref>[0].<ref refid="struct_emb_geometry___1a31650b1b1788d96f8b93bb39ed6e17ba" kindref="member">object</ref>.<ref refid="struct_emb_geometry___1a397103c1ef81333bc4e689bb8da585ec" kindref="member">vector</ref>);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>3;<sp/>i<sp/>&lt;<sp/>intermediateOutlineCount;<sp/>i<sp/>+=<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line1.<ref refid="struct_emb_line___1ad61a9cd980182f7b946d1a38aaee8562" kindref="member">start</ref><sp/>=<sp/>outline.<ref refid="struct_emb_satin_outline___1aada5be7cc6827659d3520f9f43d19ad1" kindref="member">side1</ref>-&gt;<ref refid="struct_emb_array___1a53ed4a940a3d3011efefded128131523" kindref="member">geometry</ref>[i<sp/>-<sp/>3].<ref refid="struct_emb_geometry___1a31650b1b1788d96f8b93bb39ed6e17ba" kindref="member">object</ref>.<ref refid="struct_emb_geometry___1a397103c1ef81333bc4e689bb8da585ec" kindref="member">vector</ref>;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line1.<ref refid="struct_emb_line___1ac19242fe9e53942be61574685fbd49ed" kindref="member">end</ref><sp/>=<sp/>outline.<ref refid="struct_emb_satin_outline___1aada5be7cc6827659d3520f9f43d19ad1" kindref="member">side1</ref>-&gt;<ref refid="struct_emb_array___1a53ed4a940a3d3011efefded128131523" kindref="member">geometry</ref>[i<sp/>-<sp/>2].<ref refid="struct_emb_geometry___1a31650b1b1788d96f8b93bb39ed6e17ba" kindref="member">object</ref>.<ref refid="struct_emb_geometry___1a397103c1ef81333bc4e689bb8da585ec" kindref="member">vector</ref>;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line2.<ref refid="struct_emb_line___1ad61a9cd980182f7b946d1a38aaee8562" kindref="member">start</ref><sp/>=<sp/>outline.<ref refid="struct_emb_satin_outline___1aada5be7cc6827659d3520f9f43d19ad1" kindref="member">side1</ref>-&gt;<ref refid="struct_emb_array___1a53ed4a940a3d3011efefded128131523" kindref="member">geometry</ref>[i<sp/>-<sp/>1].<ref refid="struct_emb_geometry___1a31650b1b1788d96f8b93bb39ed6e17ba" kindref="member">object</ref>.<ref refid="struct_emb_geometry___1a397103c1ef81333bc4e689bb8da585ec" kindref="member">vector</ref>;</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line2.<ref refid="struct_emb_line___1ac19242fe9e53942be61574685fbd49ed" kindref="member">end</ref><sp/>=<sp/>outline.<ref refid="struct_emb_satin_outline___1aada5be7cc6827659d3520f9f43d19ad1" kindref="member">side1</ref>-&gt;<ref refid="struct_emb_array___1a53ed4a940a3d3011efefded128131523" kindref="member">geometry</ref>[i].<ref refid="struct_emb_geometry___1a31650b1b1788d96f8b93bb39ed6e17ba" kindref="member">object</ref>.<ref refid="struct_emb_geometry___1a397103c1ef81333bc4e689bb8da585ec" kindref="member">vector</ref>;</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/><ref refid="embroidery_8h_1a95daa6f689b628dec2a772dfde676c83" kindref="member">embLine_intersectionPoint</ref>(line1,<sp/>line2);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main_8c_1a1a622bb87a39f0338527347ee6ba1402" kindref="member">emb_error</ref>)<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;No<sp/>intersection<sp/>point.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="array_8c_1ae7afecc6b39df1016ccda59227922483" kindref="member">embArray_addVector</ref>(result-&gt;<ref refid="struct_emb_satin_outline___1aada5be7cc6827659d3520f9f43d19ad1" kindref="member">side1</ref>,<sp/>out);</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line1.<ref refid="struct_emb_line___1ad61a9cd980182f7b946d1a38aaee8562" kindref="member">start</ref><sp/>=<sp/>outline.<ref refid="struct_emb_satin_outline___1a8a010fd5b6a9a2e4dbcf80562f2e05b4" kindref="member">side2</ref>-&gt;<ref refid="struct_emb_array___1a53ed4a940a3d3011efefded128131523" kindref="member">geometry</ref>[i<sp/>-<sp/>3].<ref refid="struct_emb_geometry___1a31650b1b1788d96f8b93bb39ed6e17ba" kindref="member">object</ref>.<ref refid="struct_emb_geometry___1a397103c1ef81333bc4e689bb8da585ec" kindref="member">vector</ref>;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line1.<ref refid="struct_emb_line___1ac19242fe9e53942be61574685fbd49ed" kindref="member">end</ref><sp/>=<sp/>outline.<ref refid="struct_emb_satin_outline___1a8a010fd5b6a9a2e4dbcf80562f2e05b4" kindref="member">side2</ref>-&gt;<ref refid="struct_emb_array___1a53ed4a940a3d3011efefded128131523" kindref="member">geometry</ref>[i<sp/>-<sp/>2].<ref refid="struct_emb_geometry___1a31650b1b1788d96f8b93bb39ed6e17ba" kindref="member">object</ref>.<ref refid="struct_emb_geometry___1a397103c1ef81333bc4e689bb8da585ec" kindref="member">vector</ref>;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line2.<ref refid="struct_emb_line___1ad61a9cd980182f7b946d1a38aaee8562" kindref="member">start</ref><sp/>=<sp/>outline.<ref refid="struct_emb_satin_outline___1a8a010fd5b6a9a2e4dbcf80562f2e05b4" kindref="member">side2</ref>-&gt;<ref refid="struct_emb_array___1a53ed4a940a3d3011efefded128131523" kindref="member">geometry</ref>[i<sp/>-<sp/>1].<ref refid="struct_emb_geometry___1a31650b1b1788d96f8b93bb39ed6e17ba" kindref="member">object</ref>.<ref refid="struct_emb_geometry___1a397103c1ef81333bc4e689bb8da585ec" kindref="member">vector</ref>;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line2.<ref refid="struct_emb_line___1ac19242fe9e53942be61574685fbd49ed" kindref="member">end</ref><sp/>=<sp/>outline.<ref refid="struct_emb_satin_outline___1a8a010fd5b6a9a2e4dbcf80562f2e05b4" kindref="member">side2</ref>-&gt;<ref refid="struct_emb_array___1a53ed4a940a3d3011efefded128131523" kindref="member">geometry</ref>[i].<ref refid="struct_emb_geometry___1a31650b1b1788d96f8b93bb39ed6e17ba" kindref="member">object</ref>.<ref refid="struct_emb_geometry___1a397103c1ef81333bc4e689bb8da585ec" kindref="member">vector</ref>;</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/><ref refid="embroidery_8h_1a95daa6f689b628dec2a772dfde676c83" kindref="member">embLine_intersectionPoint</ref>(line1,<sp/>line2);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main_8c_1a1a622bb87a39f0338527347ee6ba1402" kindref="member">emb_error</ref>)<sp/>{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;No<sp/>intersection<sp/>point.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="array_8c_1ae7afecc6b39df1016ccda59227922483" kindref="member">embArray_addVector</ref>(result-&gt;<ref refid="struct_emb_satin_outline___1a8a010fd5b6a9a2e4dbcf80562f2e05b4" kindref="member">side2</ref>,<sp/>out);</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="array_8c_1ae7afecc6b39df1016ccda59227922483" kindref="member">embArray_addVector</ref>(result-&gt;<ref refid="struct_emb_satin_outline___1aada5be7cc6827659d3520f9f43d19ad1" kindref="member">side1</ref>,<sp/>outline.<ref refid="struct_emb_satin_outline___1aada5be7cc6827659d3520f9f43d19ad1" kindref="member">side1</ref>-&gt;<ref refid="struct_emb_array___1a53ed4a940a3d3011efefded128131523" kindref="member">geometry</ref>[2<sp/>*<sp/>lines-&gt;<ref refid="struct_emb_array___1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member">count</ref><sp/>-<sp/>3].<ref refid="struct_emb_geometry___1a31650b1b1788d96f8b93bb39ed6e17ba" kindref="member">object</ref>.<ref refid="struct_emb_geometry___1a397103c1ef81333bc4e689bb8da585ec" kindref="member">vector</ref>);</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="array_8c_1ae7afecc6b39df1016ccda59227922483" kindref="member">embArray_addVector</ref>(result-&gt;<ref refid="struct_emb_satin_outline___1a8a010fd5b6a9a2e4dbcf80562f2e05b4" kindref="member">side2</ref>,<sp/>outline.<ref refid="struct_emb_satin_outline___1a8a010fd5b6a9a2e4dbcf80562f2e05b4" kindref="member">side2</ref>-&gt;<ref refid="struct_emb_array___1a53ed4a940a3d3011efefded128131523" kindref="member">geometry</ref>[2<sp/>*<sp/>lines-&gt;<ref refid="struct_emb_array___1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member">count</ref><sp/>-<sp/>3].<ref refid="struct_emb_geometry___1a31650b1b1788d96f8b93bb39ed6e17ba" kindref="member">object</ref>.<ref refid="struct_emb_geometry___1a397103c1ef81333bc4e689bb8da585ec" kindref="member">vector</ref>);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;<ref refid="struct_emb_satin_outline___1a9f59b34b1f25fe00023291b678246bcc" kindref="member">length</ref><sp/>=<sp/>lines-&gt;<ref refid="struct_emb_array___1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="605"><highlight class="normal">}</highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><ref refid="struct_emb_array__" kindref="compound">EmbArray</ref>*</highlight></codeline>
<codeline lineno="608" refid="embroidery_8h_1a9e843bec24828324a88b8a0ad699a07a" refkind="member"><highlight class="normal"><ref refid="main_8c_1ad9c5030f98ef9647ba7315d0c228b92a" kindref="member">embSatinOutline_renderStitches</ref>(<ref refid="struct_emb_satin_outline__" kindref="compound">EmbSatinOutline</ref>*<sp/>result,<sp/><ref refid="embroidery_8h_1a2082be9aabfb541dff1825c4ca6a05cd" kindref="member">EmbReal</ref><sp/>density)</highlight></codeline>
<codeline lineno="609"><highlight class="normal">{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_vector__" kindref="compound">EmbVector</ref><sp/>currTop,<sp/>currBottom,<sp/>topDiff,<sp/>bottomDiff,<sp/>midDiff;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_vector__" kindref="compound">EmbVector</ref><sp/>midLeft,<sp/>midRight,<sp/>topStep,<sp/>bottomStep;</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_array__" kindref="compound">EmbArray</ref>*<sp/>stitches<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numberOfSteps;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a2082be9aabfb541dff1825c4ca6a05cd" kindref="member">EmbReal</ref><sp/>midLength;</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result)<sp/>{</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>emb-satin-line.c<sp/>embSatinOutline_renderStitches(),<sp/>result<sp/>argument<sp/>is<sp/>null\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result-&gt;<ref refid="struct_emb_satin_outline___1a9f59b34b1f25fe00023291b678246bcc" kindref="member">length</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>result-&gt;<ref refid="struct_emb_satin_outline___1a9f59b34b1f25fe00023291b678246bcc" kindref="member">length</ref><sp/>-<sp/>1;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_emb_geometry__" kindref="compound">EmbGeometry</ref><sp/>*g10<sp/>=<sp/>&amp;(result-&gt;<ref refid="struct_emb_satin_outline___1aada5be7cc6827659d3520f9f43d19ad1" kindref="member">side1</ref>-&gt;<ref refid="struct_emb_array___1a53ed4a940a3d3011efefded128131523" kindref="member">geometry</ref>[j+0]);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_emb_geometry__" kindref="compound">EmbGeometry</ref><sp/>*g11<sp/>=<sp/>&amp;(result-&gt;<ref refid="struct_emb_satin_outline___1aada5be7cc6827659d3520f9f43d19ad1" kindref="member">side1</ref>-&gt;<ref refid="struct_emb_array___1a53ed4a940a3d3011efefded128131523" kindref="member">geometry</ref>[j+1]);</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_emb_geometry__" kindref="compound">EmbGeometry</ref><sp/>*g20<sp/>=<sp/>&amp;(result-&gt;<ref refid="struct_emb_satin_outline___1a8a010fd5b6a9a2e4dbcf80562f2e05b4" kindref="member">side2</ref>-&gt;<ref refid="struct_emb_array___1a53ed4a940a3d3011efefded128131523" kindref="member">geometry</ref>[j+0]);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_emb_geometry__" kindref="compound">EmbGeometry</ref><sp/>*g21<sp/>=<sp/>&amp;(result-&gt;<ref refid="struct_emb_satin_outline___1a8a010fd5b6a9a2e4dbcf80562f2e05b4" kindref="member">side2</ref>-&gt;<ref refid="struct_emb_array___1a53ed4a940a3d3011efefded128131523" kindref="member">geometry</ref>[j+1]);</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>topDiff<sp/>=<sp/><ref refid="embroidery_8h_1a38503615e02e56b3004cc02664e1e62d" kindref="member">embVector_subtract</ref>(g10-&gt;<ref refid="struct_emb_geometry___1a31650b1b1788d96f8b93bb39ed6e17ba" kindref="member">object</ref>.<ref refid="struct_emb_geometry___1a397103c1ef81333bc4e689bb8da585ec" kindref="member">vector</ref>,<sp/>g11-&gt;<ref refid="struct_emb_geometry___1a31650b1b1788d96f8b93bb39ed6e17ba" kindref="member">object</ref>.<ref refid="struct_emb_geometry___1a397103c1ef81333bc4e689bb8da585ec" kindref="member">vector</ref>);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottomDiff<sp/>=<sp/><ref refid="embroidery_8h_1a38503615e02e56b3004cc02664e1e62d" kindref="member">embVector_subtract</ref>(g21-&gt;<ref refid="struct_emb_geometry___1a31650b1b1788d96f8b93bb39ed6e17ba" kindref="member">object</ref>.<ref refid="struct_emb_geometry___1a397103c1ef81333bc4e689bb8da585ec" kindref="member">vector</ref>,<sp/>g20-&gt;<ref refid="struct_emb_geometry___1a31650b1b1788d96f8b93bb39ed6e17ba" kindref="member">object</ref>.<ref refid="struct_emb_geometry___1a397103c1ef81333bc4e689bb8da585ec" kindref="member">vector</ref>);</highlight></codeline>
<codeline lineno="630"><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midLeft<sp/>=<sp/><ref refid="embroidery_8h_1a9bd2260f41b3ba7bf814b639010d6006" kindref="member">embVector_average</ref>(g10-&gt;<ref refid="struct_emb_geometry___1a31650b1b1788d96f8b93bb39ed6e17ba" kindref="member">object</ref>.<ref refid="struct_emb_geometry___1a397103c1ef81333bc4e689bb8da585ec" kindref="member">vector</ref>,<sp/>g20-&gt;<ref refid="struct_emb_geometry___1a31650b1b1788d96f8b93bb39ed6e17ba" kindref="member">object</ref>.<ref refid="struct_emb_geometry___1a397103c1ef81333bc4e689bb8da585ec" kindref="member">vector</ref>);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midRight<sp/>=<sp/><ref refid="embroidery_8h_1a9bd2260f41b3ba7bf814b639010d6006" kindref="member">embVector_average</ref>(g11-&gt;<ref refid="struct_emb_geometry___1a31650b1b1788d96f8b93bb39ed6e17ba" kindref="member">object</ref>.<ref refid="struct_emb_geometry___1a397103c1ef81333bc4e689bb8da585ec" kindref="member">vector</ref>,<sp/>g21-&gt;<ref refid="struct_emb_geometry___1a31650b1b1788d96f8b93bb39ed6e17ba" kindref="member">object</ref>.<ref refid="struct_emb_geometry___1a397103c1ef81333bc4e689bb8da585ec" kindref="member">vector</ref>);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midDiff<sp/>=<sp/><ref refid="embroidery_8h_1a38503615e02e56b3004cc02664e1e62d" kindref="member">embVector_subtract</ref>(midLeft,<sp/>midRight);</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>midLength<sp/>=<sp/><ref refid="embroidery_8h_1ac0161afdbecb1d33336072331183e441" kindref="member">embVector_length</ref>(midDiff);</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numberOfSteps<sp/>=<sp/>(int)(midLength<sp/>*<sp/>density<sp/>/<sp/>200);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a710ebab38d10db6e2582707c1d60036b" kindref="member">embVector_multiply</ref>(topDiff,<sp/>1.0/numberOfSteps,<sp/>&amp;topStep);</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a710ebab38d10db6e2582707c1d60036b" kindref="member">embVector_multiply</ref>(bottomDiff,<sp/>1.0/numberOfSteps,<sp/>&amp;bottomStep);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currTop<sp/>=<sp/>g10-&gt;<ref refid="struct_emb_geometry___1a31650b1b1788d96f8b93bb39ed6e17ba" kindref="member">object</ref>.<ref refid="struct_emb_geometry___1a397103c1ef81333bc4e689bb8da585ec" kindref="member">vector</ref>;</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currBottom<sp/>=<sp/>g20-&gt;<ref refid="struct_emb_geometry___1a31650b1b1788d96f8b93bb39ed6e17ba" kindref="member">object</ref>.<ref refid="struct_emb_geometry___1a397103c1ef81333bc4e689bb8da585ec" kindref="member">vector</ref>;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numberOfSteps;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!stitches)<sp/>{</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stitches<sp/>=<sp/><ref refid="array_8c_1a67090c780a2818616877fb42b3a42e5c" kindref="member">embArray_create</ref>(<ref refid="embroidery_8h_1afcd788a4e739d346ed03eda45f4b7594" kindref="member">EMB_VECTOR</ref>);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="array_8c_1ae7afecc6b39df1016ccda59227922483" kindref="member">embArray_addVector</ref>(stitches,<sp/>currTop);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="array_8c_1ae7afecc6b39df1016ccda59227922483" kindref="member">embArray_addVector</ref>(stitches,<sp/>currBottom);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currTop<sp/>=<sp/><ref refid="embroidery_8h_1a6efd27ecee68d6b66d1abae0d90925a7" kindref="member">embVector_add</ref>(currTop,<sp/>topStep);</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currBottom<sp/>=<sp/><ref refid="embroidery_8h_1a6efd27ecee68d6b66d1abae0d90925a7" kindref="member">embVector_add</ref>(currBottom,<sp/>bottomStep);</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="array_8c_1ae7afecc6b39df1016ccda59227922483" kindref="member">embArray_addVector</ref>(stitches,<sp/>currTop);</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="array_8c_1ae7afecc6b39df1016ccda59227922483" kindref="member">embArray_addVector</ref>(stitches,<sp/>currBottom);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>stitches;</highlight></codeline>
<codeline lineno="657"><highlight class="normal">}</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660" refid="embroidery__internal_8h_1a05863b88d4cb505762fa5c5ec4191224" refkind="member"><highlight class="normal"><ref refid="main_8c_1ad7ce8c6db5aed09b17a6a048e1d1c65c" kindref="member">write_24bit</ref>(FILE*<sp/>file,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="661"><highlight class="normal">{</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>a[4];</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/>a[0]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)0;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/>a[1]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)(x<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/>a[2]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)((x<sp/>&gt;&gt;<sp/>8)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/>a[3]<sp/>=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>char)((x<sp/>&gt;&gt;<sp/>16)<sp/>&amp;<sp/>0xFF);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(a,<sp/>1,<sp/>4,<sp/>file);</highlight></codeline>
<codeline lineno="668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671" refid="embroidery_8h_1ae8bd6d2ec578fa1b975f1ff639fc7390" refkind="member"><highlight class="normal"><ref refid="main_8c_1ad9da4f78764c28784f04bf3b01861d60" kindref="member">embColor_distance</ref>(<ref refid="struct_emb_color__" kindref="compound">EmbColor</ref><sp/>a,<sp/><ref refid="struct_emb_color__" kindref="compound">EmbColor</ref><sp/>b)</highlight></codeline>
<codeline lineno="672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>=<sp/>(a.<ref refid="struct_emb_color___1afd7b1ea9ff115205b65e0bffc92946ac" kindref="member">r</ref>-b.<ref refid="struct_emb_color___1afd7b1ea9ff115205b65e0bffc92946ac" kindref="member">r</ref>)*(a.<ref refid="struct_emb_color___1afd7b1ea9ff115205b65e0bffc92946ac" kindref="member">r</ref>-b.<ref refid="struct_emb_color___1afd7b1ea9ff115205b65e0bffc92946ac" kindref="member">r</ref>);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(a.<ref refid="struct_emb_color___1a83576af39a9f289a28c1263d61073508" kindref="member">g</ref>-b.<ref refid="struct_emb_color___1a83576af39a9f289a28c1263d61073508" kindref="member">g</ref>)*(a.<ref refid="struct_emb_color___1a83576af39a9f289a28c1263d61073508" kindref="member">g</ref>-b.<ref refid="struct_emb_color___1a83576af39a9f289a28c1263d61073508" kindref="member">g</ref>);</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/>t<sp/>+=<sp/>(a.<ref refid="struct_emb_color___1a41cede1b4c0d05cff170ad5761f70964" kindref="member">b</ref>-b.<ref refid="struct_emb_color___1a41cede1b4c0d05cff170ad5761f70964" kindref="member">b</ref>)*(a.<ref refid="struct_emb_color___1a41cede1b4c0d05cff170ad5761f70964" kindref="member">b</ref>-b.<ref refid="struct_emb_color___1a41cede1b4c0d05cff170ad5761f70964" kindref="member">b</ref>);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>t;</highlight></codeline>
<codeline lineno="678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681" refid="embroidery__internal_8h_1a7f539183b901a4c1d25adcb71c6fbdc9" refkind="member"><highlight class="normal"><ref refid="main_8c_1a7f539183b901a4c1d25adcb71c6fbdc9" kindref="member">embColor_read</ref>(FILE<sp/>*f,<sp/><ref refid="struct_emb_color__" kindref="compound">EmbColor</ref><sp/>*c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>toRead)</highlight></codeline>
<codeline lineno="682"><highlight class="normal">{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>b[4];</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/>fread(b,<sp/>1,<sp/>toRead,<sp/>f);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/>c-&gt;<ref refid="struct_emb_color___1afd7b1ea9ff115205b65e0bffc92946ac" kindref="member">r</ref><sp/>=<sp/>b[0];</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>c-&gt;<ref refid="struct_emb_color___1a83576af39a9f289a28c1263d61073508" kindref="member">g</ref><sp/>=<sp/>b[1];</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>c-&gt;<ref refid="struct_emb_color___1a41cede1b4c0d05cff170ad5761f70964" kindref="member">b</ref><sp/>=<sp/>b[2];</highlight></codeline>
<codeline lineno="688"><highlight class="normal">}</highlight></codeline>
<codeline lineno="689"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691" refid="embroidery__internal_8h_1a14b8ac9c1dba4c2978c3db27a8c16689" refkind="member"><highlight class="normal"><ref refid="main_8c_1a14b8ac9c1dba4c2978c3db27a8c16689" kindref="member">embColor_write</ref>(FILE<sp/>*f,<sp/><ref refid="struct_emb_color__" kindref="compound">EmbColor</ref><sp/>c,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>toWrite)</highlight></codeline>
<codeline lineno="692"><highlight class="normal">{</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>b[4];</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/>b[0]<sp/>=<sp/>c.<ref refid="struct_emb_color___1afd7b1ea9ff115205b65e0bffc92946ac" kindref="member">r</ref>;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/>b[1]<sp/>=<sp/>c.<ref refid="struct_emb_color___1a83576af39a9f289a28c1263d61073508" kindref="member">g</ref>;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>b[2]<sp/>=<sp/>c.<ref refid="struct_emb_color___1a41cede1b4c0d05cff170ad5761f70964" kindref="member">b</ref>;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/>b[3]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/>fwrite(b,<sp/>1,<sp/>toWrite,<sp/>f);</highlight></codeline>
<codeline lineno="699"><highlight class="normal">}</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715" refid="embroidery_8h_1a58c3e07fc4e42ab234f8915ae132d829" refkind="member"><highlight class="normal"><ref refid="main_8c_1a7355da06df1167cc5c1da4841bae2f3d" kindref="member">embThread_findNearestColor</ref>(<ref refid="struct_emb_color__" kindref="compound">EmbColor</ref><sp/>color,<sp/><ref refid="struct_emb_color__" kindref="compound">EmbColor</ref><sp/>*color_list,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_colors)</highlight></codeline>
<codeline lineno="716"><highlight class="normal">{</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentClosestValue<sp/>=<sp/>256*256*3;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>closestIndex<sp/>=<sp/>-1,<sp/>i;</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_colors;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/><ref refid="main_8c_1ad9da4f78764c28784f04bf3b01861d60" kindref="member">embColor_distance</ref>(color,<sp/>color_list[i]);</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delta<sp/>&lt;=<sp/>currentClosestValue)<sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentClosestValue<sp/>=<sp/>delta;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closestIndex<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>closestIndex;</highlight></codeline>
<codeline lineno="728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731" refid="embroidery_8h_1afa800b5fae861c97f7921b41dc96c755" refkind="member"><highlight class="normal"><ref refid="main_8c_1a4227373571f3602fac495c42b8722035" kindref="member">embThread_findNearestThread</ref>(<ref refid="struct_emb_color__" kindref="compound">EmbColor</ref><sp/>color,<sp/><ref refid="struct_emb_thread__" kindref="compound">EmbThread</ref><sp/>*thread_list,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n_threads)</highlight></codeline>
<codeline lineno="732"><highlight class="normal">{</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>currentClosestValue<sp/>=<sp/>256*256*3;</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>closestIndex<sp/>=<sp/>-1,<sp/>i;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_threads;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>delta<sp/>=<sp/><ref refid="main_8c_1ad9da4f78764c28784f04bf3b01861d60" kindref="member">embColor_distance</ref>(color,<sp/>thread_list[i].color);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(delta<sp/>&lt;=<sp/>currentClosestValue)<sp/>{</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentClosestValue<sp/>=<sp/>delta;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>closestIndex<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>closestIndex;</highlight></codeline>
<codeline lineno="744"><highlight class="normal">}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><ref refid="struct_emb_thread__" kindref="compound">EmbThread</ref></highlight></codeline>
<codeline lineno="754" refid="embroidery_8h_1a76fab67622f40989635482b9a1b1dfc2" refkind="member"><highlight class="normal"><ref refid="main_8c_1a01b7c6ed19a92df4935d2fd23a732295" kindref="member">embThread_getRandom</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="755"><highlight class="normal">{</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_thread__" kindref="compound">EmbThread</ref><sp/>c;</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/>c.<ref refid="struct_emb_thread___1a5b70f2bf502560229b7fecf8984e33e9" kindref="member">color</ref>.<ref refid="struct_emb_color___1afd7b1ea9ff115205b65e0bffc92946ac" kindref="member">r</ref><sp/>=<sp/>rand()%256;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/>c.<ref refid="struct_emb_thread___1a5b70f2bf502560229b7fecf8984e33e9" kindref="member">color</ref>.<ref refid="struct_emb_color___1a83576af39a9f289a28c1263d61073508" kindref="member">g</ref><sp/>=<sp/>rand()%256;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/>c.<ref refid="struct_emb_thread___1a5b70f2bf502560229b7fecf8984e33e9" kindref="member">color</ref>.<ref refid="struct_emb_color___1a41cede1b4c0d05cff170ad5761f70964" kindref="member">b</ref><sp/>=<sp/>rand()%256;</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(c.<ref refid="struct_emb_thread___1a54075ac9418786f6ce2c360f8a90d85a" kindref="member">description</ref>,<sp/></highlight><highlight class="stringliteral">&quot;random&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(c.<ref refid="struct_emb_thread___1a078d3842e4fd90843020a4e39abb6822" kindref="member">catalogNumber</ref>,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="763"><highlight class="normal">}</highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766" refid="embroidery__internal_8h_1a0312900273cfed05bf6d7ed748940cdb" refkind="member"><highlight class="normal"><ref refid="main_8c_1a0312900273cfed05bf6d7ed748940cdb" kindref="member">binaryReadString</ref>(FILE*<sp/>file,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxLength)</highlight></codeline>
<codeline lineno="767"><highlight class="normal">{</highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(i<sp/>&lt;<sp/>maxLength)<sp/>{</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[i]<sp/>=<sp/>(char)fgetc(file);</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer[i]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="774"><highlight class="normal">}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777" refid="embroidery__internal_8h_1a33105f462fbb9892aebb284f35606c57" refkind="member"><highlight class="normal"><ref refid="main_8c_1a33105f462fbb9892aebb284f35606c57" kindref="member">binaryReadUnicodeString</ref>(FILE*<sp/>file,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stringLength)</highlight></codeline>
<codeline lineno="778"><highlight class="normal">{</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>stringLength<sp/>*<sp/>2;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>input<sp/>=<sp/>(char)fgetc(file);</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(input<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[i]<sp/>=<sp/>input;</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal">}</highlight></codeline>
<codeline lineno="787"><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797" refid="embroidery__internal_8h_1aa08223cd2dd75ce77baf8d5e7f139e1a" refkind="member"><highlight class="normal"><ref refid="main_8c_1aa08223cd2dd75ce77baf8d5e7f139e1a" kindref="member">stringInArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**array)</highlight></codeline>
<codeline lineno="798"><highlight class="normal">{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>strlen(array[i]);<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(s,<sp/>array[i]))<sp/>{</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809" refid="embroidery__internal_8h_1a7859b94e89cd2848d4116c7e8d662a14" refkind="member"><highlight class="normal"><ref refid="main_8c_1a7859b94e89cd2848d4116c7e8d662a14" kindref="member">emb_readline</ref>(FILE*<sp/>file,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*line,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxLength)</highlight></codeline>
<codeline lineno="810"><highlight class="normal">{</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>maxLength-1;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!fread(&amp;c,<sp/>1,<sp/>1,<sp/>file))<sp/>{</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fread(&amp;c,<sp/>1,<sp/>1,<sp/>file);</highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fseek(file,<sp/>-1L,<sp/>SEEK_CUR);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*line<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line++;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/>*line<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="832"><highlight class="normal">}</highlight></codeline>
<codeline lineno="833"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>TODO:<sp/>trimming<sp/>function<sp/>should<sp/>handle<sp/>any<sp/>character,<sp/>not<sp/>just<sp/>whitespace<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835" refid="main_8c_1aa9ac064963355a764e9ac3cbbb60dc64" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="main_8c_1aa9ac064963355a764e9ac3cbbb60dc64" kindref="member">WHITESPACE</ref>[]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;<sp/>\t\n\r&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="836"><highlight class="normal"></highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>TODO:<sp/>description<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839" refid="main_8c_1a9f3bbc6f01263cd6f3d41fbc245d49b8" refkind="member"><highlight class="normal"><ref refid="main_8c_1a9f3bbc6f01263cd6f3d41fbc245d49b8" kindref="member">get_trim_bounds</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*s,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>**firstWord,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>**trailingSpace)</highlight></codeline>
<codeline lineno="840"><highlight class="normal">{</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">*<sp/>lastWord<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/>*firstWord<sp/>=<sp/>lastWord<sp/>=<sp/>s<sp/>+<sp/>strspn(s,<sp/><ref refid="main_8c_1aa9ac064963355a764e9ac3cbbb60dc64" kindref="member">WHITESPACE</ref>);</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*trailingSpace<sp/>=<sp/>lastWord<sp/>+<sp/>strcspn(lastWord,<sp/><ref refid="main_8c_1aa9ac064963355a764e9ac3cbbb60dc64" kindref="member">WHITESPACE</ref>);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastWord<sp/>=<sp/>*trailingSpace<sp/>+<sp/>strspn(*trailingSpace,<sp/><ref refid="main_8c_1aa9ac064963355a764e9ac3cbbb60dc64" kindref="member">WHITESPACE</ref>);</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*lastWord<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="847"><highlight class="normal">}</highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>TODO:<sp/>description<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="851" refid="embroidery__internal_8h_1a5d7bf5f964ae87921bab916b871ea2dd" refkind="member"><highlight class="normal"><ref refid="main_8c_1a5d7bf5f964ae87921bab916b871ea2dd" kindref="member">copy_trim</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*s)</highlight></codeline>
<codeline lineno="852"><highlight class="normal">{</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>*firstWord<sp/>=<sp/>0,<sp/>*trailingSpace<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>newLength;</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8c_1a9f3bbc6f01263cd6f3d41fbc245d49b8" kindref="member">get_trim_bounds</ref>(s,<sp/>&amp;firstWord,<sp/>&amp;trailingSpace);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>newLength<sp/>=<sp/>trailingSpace<sp/>-<sp/>firstWord;</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)malloc(newLength<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(result,<sp/>firstWord,<sp/>newLength);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>result[newLength]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="864"><highlight class="normal">}</highlight></codeline>
<codeline lineno="865"><highlight class="normal"></highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*</highlight></codeline>
<codeline lineno="868" refid="embroidery__internal_8h_1a3f13f5d30ef64bf1f316f1cc5174b28b" refkind="member"><highlight class="normal"><ref refid="main_8c_1a3f13f5d30ef64bf1f316f1cc5174b28b" kindref="member">emb_optOut</ref>(<ref refid="embroidery_8h_1a2082be9aabfb541dff1825c4ca6a05cd" kindref="member">EmbReal</ref><sp/>num,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)</highlight></codeline>
<codeline lineno="869"><highlight class="normal">{</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str_end;</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Convert<sp/>the<sp/>number<sp/>to<sp/>a<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(str,<sp/></highlight><highlight class="stringliteral">&quot;%.10f&quot;</highlight><highlight class="normal">,<sp/>num);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remove<sp/>trailing<sp/>zeroes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>str_end<sp/>=<sp/>str<sp/>+<sp/>strlen(str);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*--str_end<sp/>==<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/>str_end[1]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Remove<sp/>the<sp/>decimal<sp/>point<sp/>if<sp/>it<sp/>happens<sp/>to<sp/>be<sp/>an<sp/>integer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*str_end<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*str_end<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="882"><highlight class="normal">}</highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="885" refid="embroidery_8h_1aab99160f0470d40b5f7bf4bbe5017fae" refkind="member"><highlight class="normal"><ref refid="main_8c_1a1a113d80928c378c7347e73172eac33d" kindref="member">embTime_initNow</ref>(<ref refid="struct_emb_time__" kindref="compound">EmbTime</ref>*<sp/>t)</highlight></codeline>
<codeline lineno="886"><highlight class="normal">{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ARDUINO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight><highlight class="comment">/*TODO:<sp/>arduino<sp/>embTime_initNow<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/>rawtime;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">tm*<sp/>timeinfo;</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/>time(&amp;rawtime);</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>timeinfo<sp/>=<sp/>localtime(&amp;rawtime);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/>t-&gt;<ref refid="struct_emb_time___1a9c83bbc97dcf2390b043382b4dfe3c98" kindref="member">year</ref><sp/><sp/><sp/>=<sp/>timeinfo-&gt;tm_year;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>t-&gt;<ref refid="struct_emb_time___1a8c07e017c7b80f536d05c6134cae89ef" kindref="member">month</ref><sp/><sp/>=<sp/>timeinfo-&gt;tm_mon;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>t-&gt;<ref refid="struct_emb_time___1a2398ea43f7d25f677616371d3b545f59" kindref="member">day</ref><sp/><sp/><sp/><sp/>=<sp/>timeinfo-&gt;tm_mday;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>t-&gt;<ref refid="struct_emb_time___1aa64c18c25aeef9a0d7c92d89fa24a636" kindref="member">hour</ref><sp/><sp/><sp/>=<sp/>timeinfo-&gt;tm_hour;</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>t-&gt;<ref refid="struct_emb_time___1a7ff63df03ff6549639b712d24a94adef" kindref="member">minute</ref><sp/>=<sp/>timeinfo-&gt;tm_min;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>t-&gt;<ref refid="struct_emb_time___1a7ab95bf164c7490d2855a7efcea6784a" kindref="member">second</ref><sp/>=<sp/>timeinfo-&gt;tm_sec;</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ARDUINO<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal">}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><ref refid="struct_emb_time__" kindref="compound">EmbTime</ref></highlight></codeline>
<codeline lineno="905" refid="embroidery_8h_1af1dbef098d0111b2f93e9aee1bbdf79d" refkind="member"><highlight class="normal"><ref refid="main_8c_1aac30715a74b82858ae1e7c1b3dd8b22a" kindref="member">embTime_time</ref>(<ref refid="struct_emb_time__" kindref="compound">EmbTime</ref>*<sp/>t)</highlight></codeline>
<codeline lineno="906"><highlight class="normal">{</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>ARDUINO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight><highlight class="comment">/*TODO:<sp/>arduino<sp/>embTime_time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>divideByZero<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="912"><highlight class="normal">divideByZero<sp/>=<sp/>divideByZero/divideByZero;<sp/></highlight><highlight class="comment">/*TODO:<sp/>wrap<sp/>time()<sp/>from<sp/>time.h<sp/>and<sp/>verify<sp/>it<sp/>works<sp/>consistently<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ARDUINO<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*t;</highlight></codeline>
<codeline lineno="916"><highlight class="normal">}</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>LIBEMBROIDERY_CLI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><ref refid="embroidery_8h_1a3a3f2c52fdf22db3acaaabdff68db2ce" kindref="member">report</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*label)</highlight></codeline>
<codeline lineno="921"><highlight class="normal">{</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%s<sp/>Test...%*c&quot;</highlight><highlight class="normal">,<sp/>label,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(20-strlen(label)),<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result)<sp/>{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<ref refid="embroidery__internal_8h_1a648398aecaf6812925e645abdac5370e" kindref="member">RED_TERM_COLOR</ref><sp/></highlight><highlight class="stringliteral">&quot;[FAIL]<sp/>[CODE=%d]\n&quot;</highlight><highlight class="normal"><sp/><ref refid="embroidery__internal_8h_1a399abfcf6c4f5144eb02ea46837c2197" kindref="member">RESET_TERM_COLOR</ref>,<sp/>result);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(<ref refid="embroidery__internal_8h_1ad60df5d88ed9383f350987304421229e" kindref="member">GREEN_TERM_COLOR</ref><sp/></highlight><highlight class="stringliteral">&quot;[PASS]\n&quot;</highlight><highlight class="normal"><sp/><ref refid="embroidery__internal_8h_1a399abfcf6c4f5144eb02ea46837c2197" kindref="member">RESET_TERM_COLOR</ref>);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="929"><highlight class="normal">}</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><ref refid="embroidery_8h_1aa95d3b9c2310c592992aafea1bb441e0" kindref="member">testMain</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>level)</highlight></codeline>
<codeline lineno="933"><highlight class="normal">{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_pattern__" kindref="compound">EmbPattern</ref><sp/>*pattern<sp/>=<sp/><ref refid="embroidery_8h_1ad1be1abf388d4479ffe2b75f8470273b" kindref="member">embPattern_create</ref>();</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>overall<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>circleResult<sp/>=<sp/><ref refid="embroidery__internal_8h_1ad26dd27d9308e625d6d88aeb64b27de4" kindref="member">testEmbCircle</ref>();</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>threadResult<sp/>=<sp/><ref refid="embroidery__internal_8h_1a18adf565ffc768e3726b2c223b5950b8" kindref="member">testThreadColor</ref>();</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>formatResult<sp/>=<sp/><ref refid="embroidery__internal_8h_1a0b9a8fe7ac5355c07e7721f9f05bc007" kindref="member">testEmbFormat</ref>();</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>arcResult<sp/>=<sp/><ref refid="embroidery__internal_8h_1a73fe074cd020376cf3fdaef3da1299ee" kindref="member">testGeomArc</ref>();</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>create1Result<sp/>=<sp/><ref refid="embroidery__internal_8h_1a2e49bf0deb2392bc15e5545a03b71bd3" kindref="member">create_test_file_1</ref>(</highlight><highlight class="stringliteral">&quot;test01.csv&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>create2Result<sp/>=<sp/><ref refid="embroidery__internal_8h_1a5789dd8c299eca5a2263942877fdff50" kindref="member">create_test_file_2</ref>(</highlight><highlight class="stringliteral">&quot;test02.csv&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>create3Result<sp/>=<sp/><ref refid="embroidery__internal_8h_1a512585ef742078e042ce59dbad0d5df8" kindref="member">create_test_file_3</ref>(</highlight><highlight class="stringliteral">&quot;test03.csv&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>svg1Result<sp/>=<sp/><ref refid="embroidery_8h_1a8e3e719d35e1e8996fa0c791029fcfbd" kindref="member">convert</ref>(</highlight><highlight class="stringliteral">&quot;test01.csv&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;test01.svg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>svg2Result<sp/>=<sp/><ref refid="embroidery_8h_1a8e3e719d35e1e8996fa0c791029fcfbd" kindref="member">convert</ref>(</highlight><highlight class="stringliteral">&quot;test02.csv&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;test02.svg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>svg3Result<sp/>=<sp/><ref refid="embroidery_8h_1a8e3e719d35e1e8996fa0c791029fcfbd" kindref="member">convert</ref>(</highlight><highlight class="stringliteral">&quot;test03.csv&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;test03.svg&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst1Result<sp/>=<sp/><ref refid="embroidery_8h_1a8e3e719d35e1e8996fa0c791029fcfbd" kindref="member">convert</ref>(</highlight><highlight class="stringliteral">&quot;test01.csv&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;test01.dst&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst2Result<sp/>=<sp/><ref refid="embroidery_8h_1a8e3e719d35e1e8996fa0c791029fcfbd" kindref="member">convert</ref>(</highlight><highlight class="stringliteral">&quot;test02.csv&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;test02.dst&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dst3Result<sp/>=<sp/><ref refid="embroidery_8h_1a8e3e719d35e1e8996fa0c791029fcfbd" kindref="member">convert</ref>(</highlight><highlight class="stringliteral">&quot;test03.csv&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;test03.dst&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hilbertCurveResult<sp/>=<sp/><ref refid="embroidery_8h_1abc0ebbb6da27faacd87e8abaf57733c8" kindref="member">hilbert_curve</ref>(pattern,<sp/>3);</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>renderResult<sp/>=<sp/><ref refid="embroidery_8h_1a4a1b44a1dda28aec2cdab69cbdd226fb" kindref="member">embPattern_render</ref>(pattern,<sp/></highlight><highlight class="stringliteral">&quot;hilbert_level_3.png&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>simulateResult<sp/>=<sp/><ref refid="embroidery_8h_1a76cca8e66e7c5efcf965f5c708fc7b8b" kindref="member">embPattern_simulate</ref>(pattern,<sp/></highlight><highlight class="stringliteral">&quot;hilbert_level_3.avi&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>overall<sp/>+=<sp/>circleResult;</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>overall<sp/>+=<sp/>threadResult;</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/>overall<sp/>+=<sp/>formatResult;</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/>overall<sp/>+=<sp/>arcResult;</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>overall<sp/>+=<sp/>create1Result;</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/>overall<sp/>+=<sp/>create2Result;</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/>overall<sp/>+=<sp/>create3Result;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>overall<sp/>+=<sp/>svg1Result;</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/>overall<sp/>+=<sp/>svg2Result;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/>overall<sp/>+=<sp/>svg3Result;</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/>overall<sp/>+=<sp/>dst1Result;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>overall<sp/>+=<sp/>dst2Result;</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/>overall<sp/>+=<sp/>dst3Result;</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main_8c_1a3e3a5b8efffea93c4268a39ee5690098" kindref="member">emb_verbose</ref><sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;SUMMARY<sp/>OF<sp/>RESULTS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;------------------&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a3a3f2c52fdf22db3acaaabdff68db2ce" kindref="member">report</ref>(circleResult,<sp/></highlight><highlight class="stringliteral">&quot;Tangent<sp/>Point&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a3a3f2c52fdf22db3acaaabdff68db2ce" kindref="member">report</ref>(threadResult,<sp/></highlight><highlight class="stringliteral">&quot;Thread&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a3a3f2c52fdf22db3acaaabdff68db2ce" kindref="member">report</ref>(formatResult,<sp/></highlight><highlight class="stringliteral">&quot;Format&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a3a3f2c52fdf22db3acaaabdff68db2ce" kindref="member">report</ref>(arcResult,<sp/></highlight><highlight class="stringliteral">&quot;Arc&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a3a3f2c52fdf22db3acaaabdff68db2ce" kindref="member">report</ref>(create1Result,<sp/></highlight><highlight class="stringliteral">&quot;Create<sp/>CSV<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a3a3f2c52fdf22db3acaaabdff68db2ce" kindref="member">report</ref>(create2Result,<sp/></highlight><highlight class="stringliteral">&quot;Create<sp/>CSV<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a3a3f2c52fdf22db3acaaabdff68db2ce" kindref="member">report</ref>(create3Result,<sp/></highlight><highlight class="stringliteral">&quot;Create<sp/>CSV<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a3a3f2c52fdf22db3acaaabdff68db2ce" kindref="member">report</ref>(svg1Result,<sp/></highlight><highlight class="stringliteral">&quot;Convert<sp/>CSV-SVG<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a3a3f2c52fdf22db3acaaabdff68db2ce" kindref="member">report</ref>(svg2Result,<sp/></highlight><highlight class="stringliteral">&quot;Convert<sp/>CSV-SVG<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a3a3f2c52fdf22db3acaaabdff68db2ce" kindref="member">report</ref>(svg3Result,<sp/></highlight><highlight class="stringliteral">&quot;Convert<sp/>CSV-SVG<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a3a3f2c52fdf22db3acaaabdff68db2ce" kindref="member">report</ref>(dst1Result,<sp/></highlight><highlight class="stringliteral">&quot;Convert<sp/>CSV-DST<sp/>1&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a3a3f2c52fdf22db3acaaabdff68db2ce" kindref="member">report</ref>(dst2Result,<sp/></highlight><highlight class="stringliteral">&quot;Convert<sp/>CSV-DST<sp/>2&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a3a3f2c52fdf22db3acaaabdff68db2ce" kindref="member">report</ref>(dst3Result,<sp/></highlight><highlight class="stringliteral">&quot;Convert<sp/>CSV-DST<sp/>3&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a3a3f2c52fdf22db3acaaabdff68db2ce" kindref="member">report</ref>(hilbertCurveResult,<sp/></highlight><highlight class="stringliteral">&quot;Generating<sp/>Hilbert<sp/>Curve&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a3a3f2c52fdf22db3acaaabdff68db2ce" kindref="member">report</ref>(renderResult,<sp/></highlight><highlight class="stringliteral">&quot;Rendering<sp/>Hilbert<sp/>Curve&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a3a3f2c52fdf22db3acaaabdff68db2ce" kindref="member">report</ref>(simulateResult,<sp/></highlight><highlight class="stringliteral">&quot;Simulating<sp/>Hilbert<sp/>Curve&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a47cefd322c29827f2989630c0aa6cbc5" kindref="member">embPattern_free</ref>(pattern);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(level<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;More<sp/>expensive<sp/>tests.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1aa72a9eb0e258efbb67453e5f79af62c8" kindref="member">full_test_matrix</ref>(</highlight><highlight class="stringliteral">&quot;test_matrix.txt&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(overall<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;PASS&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;FAIL&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="999"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><ref refid="embroidery__internal_8h_1ad6ffc62e3f475d1b71758d4f35683b0e" kindref="member">testTangentPoints</ref>(<ref refid="struct_emb_circle__" kindref="compound">EmbCircle</ref><sp/>c,<sp/><ref refid="struct_emb_vector__" kindref="compound">EmbVector</ref><sp/>p,<sp/><ref refid="struct_emb_vector__" kindref="compound">EmbVector</ref><sp/>*t0,<sp/><ref refid="struct_emb_vector__" kindref="compound">EmbVector</ref><sp/>*t1)</highlight></codeline>
<codeline lineno="1003"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="main_8c_1a1a622bb87a39f0338527347ee6ba1402" kindref="member">emb_error</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>t0-&gt;<ref refid="struct_emb_vector___1ae1a3958205104364b97172da19628db7" kindref="member">x</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/>t0-&gt;<ref refid="struct_emb_vector___1ac696d7e3434ae029d180ef550e61af2d" kindref="member">y</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/>t1-&gt;<ref refid="struct_emb_vector___1ae1a3958205104364b97172da19628db7" kindref="member">x</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>t1-&gt;<ref refid="struct_emb_vector___1ac696d7e3434ae029d180ef550e61af2d" kindref="member">y</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="embroidery_8h_1a7e454215c86e5f9190247ad029d79c5c" kindref="member">getCircleTangentPoints</ref>(c,<sp/>p,<sp/>t0,<sp/>t1))<sp/>{</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error<sp/>calculating<sp/>tangent<sp/>points.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8c_1a1a622bb87a39f0338527347ee6ba1402" kindref="member">emb_error</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main_8c_1a3e3a5b8efffea93c4268a39ee5690098" kindref="member">emb_verbose</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Circle<sp/>:<sp/>cr=%f,<sp/>cx=%f,<sp/>cy=%f\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Point<sp/><sp/>:<sp/>px=%f,<sp/>py=%f\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Tangent:<sp/>tx0=%f,<sp/>ty0=%f\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Tangent:<sp/>tx1=%f,<sp/>ty1=%f\n\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c.<ref refid="struct_emb_circle___1a1f90f77f18adae49041cb441535414ce" kindref="member">radius</ref>,<sp/>c.<ref refid="struct_emb_circle___1a68e2bdfeb187d1c5a46afffe5129aabf" kindref="member">center</ref>.<ref refid="struct_emb_vector___1ae1a3958205104364b97172da19628db7" kindref="member">x</ref>,<sp/>c.<ref refid="struct_emb_circle___1a68e2bdfeb187d1c5a46afffe5129aabf" kindref="member">center</ref>.<ref refid="struct_emb_vector___1ac696d7e3434ae029d180ef550e61af2d" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p.<ref refid="struct_emb_vector___1ae1a3958205104364b97172da19628db7" kindref="member">x</ref>,<sp/>p.<ref refid="struct_emb_vector___1ac696d7e3434ae029d180ef550e61af2d" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t0-&gt;<ref refid="struct_emb_vector___1ae1a3958205104364b97172da19628db7" kindref="member">x</ref>,<sp/>t0-&gt;<ref refid="struct_emb_vector___1ac696d7e3434ae029d180ef550e61af2d" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t1-&gt;<ref refid="struct_emb_vector___1ae1a3958205104364b97172da19628db7" kindref="member">x</ref>,<sp/>t1-&gt;<ref refid="struct_emb_vector___1ac696d7e3434ae029d180ef550e61af2d" kindref="member">y</ref>);</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1025"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><ref refid="embroidery__internal_8h_1ad26dd27d9308e625d6d88aeb64b27de4" kindref="member">testEmbCircle</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1029"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a2082be9aabfb541dff1825c4ca6a05cd" kindref="member">EmbReal</ref><sp/>error;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a2082be9aabfb541dff1825c4ca6a05cd" kindref="member">EmbReal</ref><sp/>epsilon<sp/>=<sp/>1e-3;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_vector__" kindref="compound">EmbVector</ref><sp/>p0,<sp/>p1;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Problem<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_circle__" kindref="compound">EmbCircle</ref><sp/>c1<sp/>=<sp/>{{0.0,<sp/>0.0},<sp/>3.0};</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Solution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_vector__" kindref="compound">EmbVector</ref><sp/>t0<sp/>=<sp/>{2.2500,<sp/>1.9843};</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_vector__" kindref="compound">EmbVector</ref><sp/>t1<sp/>=<sp/>{2.2500,<sp/>-1.9843};</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_vector__" kindref="compound">EmbVector</ref><sp/>p<sp/>=<sp/>{4.0,<sp/>0.0};</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1ad6ffc62e3f475d1b71758d4f35683b0e" kindref="member">testTangentPoints</ref>(c1,<sp/>p,<sp/>&amp;p0,<sp/>&amp;p1);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="embroidery_8h_1ae6eb6571cc109a253dc4f7d825e56694" kindref="member">embVector_distance</ref>(p0,<sp/>t0)<sp/>+<sp/><ref refid="embroidery_8h_1ae6eb6571cc109a253dc4f7d825e56694" kindref="member">embVector_distance</ref>(p1,<sp/>t1);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>&gt;<sp/>epsilon)<sp/>{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error<sp/>larger<sp/>than<sp/>tolerance,<sp/>circle<sp/>test<sp/>1:<sp/>%f.\n\n&quot;</highlight><highlight class="normal">,<sp/>error);</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>16;</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="embroidery__internal_8h_1a3905bf6d0c31085e00b2c81af38e0df3" kindref="member">testEmbCircle_2</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a2082be9aabfb541dff1825c4ca6a05cd" kindref="member">EmbReal</ref><sp/>error;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a2082be9aabfb541dff1825c4ca6a05cd" kindref="member">EmbReal</ref><sp/>epsilon<sp/>=<sp/>1e-3;</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_vector__" kindref="compound">EmbVector</ref><sp/>p0,<sp/>p1;</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_circle__" kindref="compound">EmbCircle</ref><sp/>c2<sp/>=<sp/>{{20.1762,<sp/>10.7170},<sp/>6.8221};</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Solution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_vector__" kindref="compound">EmbVector</ref><sp/>s0<sp/>=<sp/>{19.0911,<sp/>17.4522};</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_vector__" kindref="compound">EmbVector</ref><sp/>s1<sp/>=<sp/>{26.4428,<sp/>13.4133};</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_vector__" kindref="compound">EmbVector</ref><sp/>p<sp/>=<sp/>{24.3411,<sp/>18.2980};</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Test<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1ad6ffc62e3f475d1b71758d4f35683b0e" kindref="member">testTangentPoints</ref>(c2,<sp/>p,<sp/>&amp;p0,<sp/>&amp;p1);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="embroidery_8h_1ae6eb6571cc109a253dc4f7d825e56694" kindref="member">embVector_distance</ref>(p0,<sp/>s0)<sp/>+<sp/><ref refid="embroidery_8h_1ae6eb6571cc109a253dc4f7d825e56694" kindref="member">embVector_distance</ref>(p1,<sp/>s1);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>&gt;<sp/>epsilon)<sp/>{</highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Error<sp/>larger<sp/>than<sp/>tolerance,<sp/>circle<sp/>test<sp/>2:<sp/>%f.\n\n&quot;</highlight><highlight class="normal">,<sp/>error);</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>17;</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1068"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><ref refid="embroidery__internal_8h_1a7dbe0a9236a451fb553372113d247e97" kindref="member">printArcResults</ref>(<ref refid="embroidery_8h_1a2082be9aabfb541dff1825c4ca6a05cd" kindref="member">EmbReal</ref><sp/>bulge,<sp/><ref refid="struct_emb_arc__" kindref="compound">EmbArc</ref><sp/>arc,</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a2082be9aabfb541dff1825c4ca6a05cd" kindref="member">EmbReal</ref><sp/>centerX,<sp/><sp/><sp/><ref refid="embroidery_8h_1a2082be9aabfb541dff1825c4ca6a05cd" kindref="member">EmbReal</ref><sp/>centerY,</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a2082be9aabfb541dff1825c4ca6a05cd" kindref="member">EmbReal</ref><sp/>radius,<sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a2082be9aabfb541dff1825c4ca6a05cd" kindref="member">EmbReal</ref><sp/>diameter,</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a2082be9aabfb541dff1825c4ca6a05cd" kindref="member">EmbReal</ref><sp/>chord,</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a2082be9aabfb541dff1825c4ca6a05cd" kindref="member">EmbReal</ref><sp/>chordMidX,<sp/><ref refid="embroidery_8h_1a2082be9aabfb541dff1825c4ca6a05cd" kindref="member">EmbReal</ref><sp/>chordMidY,</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a2082be9aabfb541dff1825c4ca6a05cd" kindref="member">EmbReal</ref><sp/>sagitta,<sp/><sp/><sp/><ref refid="embroidery_8h_1a2082be9aabfb541dff1825c4ca6a05cd" kindref="member">EmbReal</ref><sp/>apothem,</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a2082be9aabfb541dff1825c4ca6a05cd" kindref="member">EmbReal</ref><sp/>incAngle,<sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/>clockwise)</highlight></codeline>
<codeline lineno="1078"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/>fprintf(stdout,<sp/></highlight><highlight class="stringliteral">&quot;bulge<sp/><sp/><sp/><sp/><sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;startX<sp/><sp/><sp/><sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;startY<sp/><sp/><sp/><sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;endX<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;endY<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;midX<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;midY<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;centerX<sp/><sp/><sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;centerY<sp/><sp/><sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;radius<sp/><sp/><sp/><sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;diameter<sp/><sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;chord<sp/><sp/><sp/><sp/><sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;chordMidX<sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;chordMidY<sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;sagitta<sp/><sp/><sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;apothem<sp/><sp/><sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;incAngle<sp/><sp/>=<sp/>%f\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;clockwise<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bulge,</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arc.<ref refid="struct_emb_arc___1ad61a9cd980182f7b946d1a38aaee8562" kindref="member">start</ref>.<ref refid="struct_emb_vector___1ae1a3958205104364b97172da19628db7" kindref="member">x</ref>,</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arc.<ref refid="struct_emb_arc___1ad61a9cd980182f7b946d1a38aaee8562" kindref="member">start</ref>.<ref refid="struct_emb_vector___1ac696d7e3434ae029d180ef550e61af2d" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arc.<ref refid="struct_emb_arc___1ac19242fe9e53942be61574685fbd49ed" kindref="member">end</ref>.<ref refid="struct_emb_vector___1ae1a3958205104364b97172da19628db7" kindref="member">x</ref>,</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arc.<ref refid="struct_emb_arc___1ac19242fe9e53942be61574685fbd49ed" kindref="member">end</ref>.<ref refid="struct_emb_vector___1ac696d7e3434ae029d180ef550e61af2d" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arc.<ref refid="struct_emb_arc___1ae22a3dbe0e89a2ee0b0934a8799c8f14" kindref="member">mid</ref>.<ref refid="struct_emb_vector___1ae1a3958205104364b97172da19628db7" kindref="member">x</ref>,</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arc.<ref refid="struct_emb_arc___1ae22a3dbe0e89a2ee0b0934a8799c8f14" kindref="member">mid</ref>.<ref refid="struct_emb_vector___1ac696d7e3434ae029d180ef550e61af2d" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centerX,</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>centerY,</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radius,</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>diameter,</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chord,</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chordMidX,</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chordMidY,</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sagitta,</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>apothem,</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>incAngle,</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>clockwise);</highlight></codeline>
<codeline lineno="1116"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><ref refid="embroidery__internal_8h_1a73fe074cd020376cf3fdaef3da1299ee" kindref="member">testGeomArc</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1120"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_arc__" kindref="compound">EmbArc</ref><sp/>arc;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_vector__" kindref="compound">EmbVector</ref><sp/>center,<sp/>chordMid;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a2082be9aabfb541dff1825c4ca6a05cd" kindref="member">EmbReal</ref><sp/>bulge,<sp/>radius,<sp/>diameter,<sp/>chord,<sp/>sagitta,<sp/>apothem,<sp/>incAngle;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>clockwise;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/>bulge<sp/>=<sp/>-0.414213562373095;</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/>arc.<ref refid="struct_emb_arc___1ad61a9cd980182f7b946d1a38aaee8562" kindref="member">start</ref>.<ref refid="struct_emb_vector___1ae1a3958205104364b97172da19628db7" kindref="member">x</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/>arc.<ref refid="struct_emb_arc___1ad61a9cd980182f7b946d1a38aaee8562" kindref="member">start</ref>.<ref refid="struct_emb_vector___1ac696d7e3434ae029d180ef550e61af2d" kindref="member">y</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/>arc.<ref refid="struct_emb_arc___1ac19242fe9e53942be61574685fbd49ed" kindref="member">end</ref>.<ref refid="struct_emb_vector___1ae1a3958205104364b97172da19628db7" kindref="member">x</ref><sp/><sp/><sp/>=<sp/>2.0;</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/>arc.<ref refid="struct_emb_arc___1ac19242fe9e53942be61574685fbd49ed" kindref="member">end</ref>.<ref refid="struct_emb_vector___1ac696d7e3434ae029d180ef550e61af2d" kindref="member">y</ref><sp/><sp/><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="embroidery_8h_1abccfe683f2d3b1bafb626c3987e3c9ac" kindref="member">getArcDataFromBulge</ref>(bulge,<sp/>&amp;arc,</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(center.<ref refid="struct_emb_vector___1ae1a3958205104364b97172da19628db7" kindref="member">x</ref>),<sp/><sp/><sp/>&amp;(center.<ref refid="struct_emb_vector___1ac696d7e3434ae029d180ef550e61af2d" kindref="member">y</ref>),</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;radius,<sp/><sp/><sp/><sp/>&amp;diameter,</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;chord,</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(chordMid.<ref refid="struct_emb_vector___1ae1a3958205104364b97172da19628db7" kindref="member">x</ref>),<sp/>&amp;(chordMid.<ref refid="struct_emb_vector___1ac696d7e3434ae029d180ef550e61af2d" kindref="member">y</ref>),</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;sagitta,<sp/><sp/><sp/>&amp;apothem,</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;incAngle,<sp/><sp/>&amp;clockwise))<sp/>{</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main_8c_1a3e3a5b8efffea93c4268a39ee5690098" kindref="member">emb_verbose</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stdout,<sp/></highlight><highlight class="stringliteral">&quot;Clockwise<sp/>Test:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1a7dbe0a9236a451fb553372113d247e97" kindref="member">printArcResults</ref>(bulge,<sp/>arc,<sp/>center.<ref refid="struct_emb_vector___1ae1a3958205104364b97172da19628db7" kindref="member">x</ref>,<sp/>center.<ref refid="struct_emb_vector___1ac696d7e3434ae029d180ef550e61af2d" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radius,<sp/>diameter,</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chord,</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chordMid.<ref refid="struct_emb_vector___1ae1a3958205104364b97172da19628db7" kindref="member">x</ref>,<sp/>chordMid.<ref refid="struct_emb_vector___1ac696d7e3434ae029d180ef550e61af2d" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sagitta,<sp/><sp/><sp/>apothem,</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>incAngle,<sp/><sp/>clockwise);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/>bulge<sp/><sp/>=<sp/>2.414213562373095;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/>arc.<ref refid="struct_emb_arc___1ad61a9cd980182f7b946d1a38aaee8562" kindref="member">start</ref>.<ref refid="struct_emb_vector___1ae1a3958205104364b97172da19628db7" kindref="member">x</ref><sp/>=<sp/>4.0;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/>arc.<ref refid="struct_emb_arc___1ad61a9cd980182f7b946d1a38aaee8562" kindref="member">start</ref>.<ref refid="struct_emb_vector___1ac696d7e3434ae029d180ef550e61af2d" kindref="member">y</ref><sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/>arc.<ref refid="struct_emb_arc___1ac19242fe9e53942be61574685fbd49ed" kindref="member">end</ref>.<ref refid="struct_emb_vector___1ae1a3958205104364b97172da19628db7" kindref="member">x</ref><sp/><sp/><sp/>=<sp/>5.0;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/>arc.<ref refid="struct_emb_arc___1ac19242fe9e53942be61574685fbd49ed" kindref="member">end</ref>.<ref refid="struct_emb_vector___1ac696d7e3434ae029d180ef550e61af2d" kindref="member">y</ref><sp/><sp/><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="embroidery_8h_1abccfe683f2d3b1bafb626c3987e3c9ac" kindref="member">getArcDataFromBulge</ref>(bulge,<sp/>&amp;arc,</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(center.<ref refid="struct_emb_vector___1ae1a3958205104364b97172da19628db7" kindref="member">x</ref>),<sp/><sp/><sp/>&amp;(center.<ref refid="struct_emb_vector___1ac696d7e3434ae029d180ef550e61af2d" kindref="member">y</ref>),</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;radius,<sp/><sp/><sp/><sp/>&amp;diameter,</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;chord,</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;(chordMid.<ref refid="struct_emb_vector___1ae1a3958205104364b97172da19628db7" kindref="member">x</ref>),<sp/>&amp;(chordMid.<ref refid="struct_emb_vector___1ac696d7e3434ae029d180ef550e61af2d" kindref="member">y</ref>),</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;sagitta,<sp/><sp/><sp/>&amp;apothem,</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;incAngle,<sp/><sp/>&amp;clockwise))<sp/>{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main_8c_1a3e3a5b8efffea93c4268a39ee5690098" kindref="member">emb_verbose</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stdout,<sp/></highlight><highlight class="stringliteral">&quot;Counter-Clockwise<sp/>Test:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1a7dbe0a9236a451fb553372113d247e97" kindref="member">printArcResults</ref>(bulge,<sp/>arc,<sp/>center.<ref refid="struct_emb_vector___1ae1a3958205104364b97172da19628db7" kindref="member">x</ref>,<sp/>center.<ref refid="struct_emb_vector___1ac696d7e3434ae029d180ef550e61af2d" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>radius,<sp/><sp/><sp/><sp/>diameter,</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chord,</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chordMid.<ref refid="struct_emb_vector___1ae1a3958205104364b97172da19628db7" kindref="member">x</ref>,<sp/>chordMid.<ref refid="struct_emb_vector___1ac696d7e3434ae029d180ef550e61af2d" kindref="member">y</ref>,</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sagitta,<sp/><sp/><sp/>apothem,</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>incAngle,<sp/><sp/>clockwise);</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1173"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><ref refid="embroidery__internal_8h_1a18adf565ffc768e3726b2c223b5950b8" kindref="member">testThreadColor</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tColor<sp/>=<sp/>0xFFD25F00;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tBrand<sp/>=<sp/><ref refid="embroidery_8h_1adabe8c203bc68bd4f61157b1bff8b165" kindref="member">Sulky_Rayon</ref>;</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tNum<sp/><sp/><sp/>=<sp/><ref refid="embroidery_8h_1ae6976ffd0a29cdf4247e8da3aefc8ef0" kindref="member">threadColorNum</ref>(tColor,<sp/>tBrand);</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/>tName<sp/><sp/>=<sp/><ref refid="embroidery_8h_1a2be9bcb326d8bb595079f9129df9e35e" kindref="member">threadColorName</ref>(tColor,<sp/>tBrand);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main_8c_1a3e3a5b8efffea93c4268a39ee5690098" kindref="member">emb_verbose</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Color<sp/>:<sp/>0x%X\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Brand<sp/>:<sp/>%d\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Num<sp/><sp/><sp/>:<sp/>%d\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Name<sp/><sp/>:<sp/>%s\n\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tColor,</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tBrand,</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tNum,<sp/></highlight><highlight class="comment">/*<sp/>Solution:<sp/>1833<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tName);<sp/></highlight><highlight class="comment">/*<sp/>Solution:<sp/>Pumpkin<sp/>Pie<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="embroidery__internal_8h_1a0b9a8fe7ac5355c07e7721f9f05bc007" kindref="member">testEmbFormat</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/>tName<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;example.zsk&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>format<sp/>=<sp/><ref refid="embroidery_8h_1a0f8edee07ad5c7518178006359616aa9" kindref="member">emb_identify_format</ref>(tName);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="main_8c_1a3e3a5b8efffea93c4268a39ee5690098" kindref="member">emb_verbose</ref><sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Filename<sp/><sp/><sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Extension<sp/><sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Description:<sp/>%s\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Reader<sp/><sp/><sp/><sp/><sp/>:<sp/>%c\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Writer<sp/><sp/><sp/><sp/><sp/>:<sp/>%c\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Type<sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>%d\n\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tName,</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a8cb11404ce46501561f956d33f8dcf95" kindref="member">formatTable</ref>[format].extension,</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a8cb11404ce46501561f956d33f8dcf95" kindref="member">formatTable</ref>[format].description,</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a8cb11404ce46501561f956d33f8dcf95" kindref="member">formatTable</ref>[format].reader_state,</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a8cb11404ce46501561f956d33f8dcf95" kindref="member">formatTable</ref>[format].writer_state,</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a8cb11404ce46501561f956d33f8dcf95" kindref="member">formatTable</ref>[format].type);</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(<ref refid="embroidery_8h_1a8cb11404ce46501561f956d33f8dcf95" kindref="member">formatTable</ref>[format].extension,<sp/></highlight><highlight class="stringliteral">&quot;.zsk&quot;</highlight><highlight class="normal">))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>20;</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strcmp(<ref refid="embroidery_8h_1a8cb11404ce46501561f956d33f8dcf95" kindref="member">formatTable</ref>[format].description,<sp/></highlight><highlight class="stringliteral">&quot;ZSK<sp/>USA<sp/>Embroidery<sp/>Format&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>21;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="embroidery_8h_1a8cb11404ce46501561f956d33f8dcf95" kindref="member">formatTable</ref>[format].reader_state<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;U&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>22;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="embroidery_8h_1a8cb11404ce46501561f956d33f8dcf95" kindref="member">formatTable</ref>[format].writer_state<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>23;</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="embroidery_8h_1a8cb11404ce46501561f956d33f8dcf95" kindref="member">formatTable</ref>[format].type<sp/>!=<sp/>1)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>24;</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><ref refid="embroidery__internal_8h_1a2e49bf0deb2392bc15e5545a03b71bd3" kindref="member">create_test_file_1</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>outf)</highlight></codeline>
<codeline lineno="1227"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_pattern__" kindref="compound">EmbPattern</ref>*<sp/>p;</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_stitch__" kindref="compound">EmbStitch</ref><sp/>st;</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="embroidery_8h_1ad1be1abf388d4479ffe2b75f8470273b" kindref="member">embPattern_create</ref>();</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p)<sp/>{</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>convert(),<sp/>cannot<sp/>allocate<sp/>memory<sp/>for<sp/>p\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>10mm<sp/>circle<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>20;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1aa2c02d649c5a2ac8513514da7b0b5fc1" kindref="member">embPattern_addStitchRel</ref>(p,<sp/>0.0,<sp/>1.0,<sp/><ref refid="embroidery_8h_1aee551d17fffb6235cc7123499dbf7d65" kindref="member">JUMP</ref>,<sp/>0);</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>200;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st.<ref refid="struct_emb_stitch___1ae1a3958205104364b97172da19628db7" kindref="member">x</ref><sp/>=<sp/>10<sp/>+<sp/>10<sp/>*<sp/>sin(i<sp/>*<sp/>(0.03141592));</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st.<ref refid="struct_emb_stitch___1ac696d7e3434ae029d180ef550e61af2d" kindref="member">y</ref><sp/>=<sp/>10<sp/>+<sp/>10<sp/>*<sp/>cos(i<sp/>*<sp/>(0.03141592));</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st.<ref refid="struct_emb_stitch___1ac8bf36fe0577cba66bccda3a6f7e80a4" kindref="member">flags</ref><sp/>=<sp/><ref refid="embroidery_8h_1a1291f416b069313021b519eea62d5bf1" kindref="member">NORMAL</ref>;</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st.<ref refid="struct_emb_stitch___1a0fd02fb9277ffcb35a75066ffe95e8c7" kindref="member">color</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1adb38a95b0ac7c7f48aa92bcb156f9413" kindref="member">embPattern_addStitchAbs</ref>(p,<sp/>st.<ref refid="struct_emb_stitch___1ae1a3958205104364b97172da19628db7" kindref="member">x</ref>,<sp/>st.<ref refid="struct_emb_stitch___1ac696d7e3434ae029d180ef550e61af2d" kindref="member">y</ref>,<sp/>st.<ref refid="struct_emb_stitch___1ac8bf36fe0577cba66bccda3a6f7e80a4" kindref="member">flags</ref>,<sp/>st.<ref refid="struct_emb_stitch___1a0fd02fb9277ffcb35a75066ffe95e8c7" kindref="member">color</ref>);</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a1b281916881a27935b9e1f6bcffb2087" kindref="member">embPattern_addThread</ref>(p,<sp/><ref refid="main_8c_1ae6a1199d8c3aad2464c3296ab902b4a9" kindref="member">black_thread</ref>);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a5e60e4e5dfdebd4a6887f299a82adb2c" kindref="member">embPattern_end</ref>(p);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="embroidery_8h_1a533aaf5c2f1775990d297435354288f1" kindref="member">embPattern_writeAuto</ref>(p,<sp/>outf))<sp/>{</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>16;</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a47cefd322c29827f2989630c0aa6cbc5" kindref="member">embPattern_free</ref>(p);</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1259"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1260"><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><ref refid="embroidery__internal_8h_1a5789dd8c299eca5a2263942877fdff50" kindref="member">create_test_file_2</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>outf)</highlight></codeline>
<codeline lineno="1263"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_pattern__" kindref="compound">EmbPattern</ref>*<sp/>p;</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_stitch__" kindref="compound">EmbStitch</ref><sp/>st;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="embroidery_8h_1ad1be1abf388d4479ffe2b75f8470273b" kindref="member">embPattern_create</ref>();</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p)<sp/>{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>convert(),<sp/>cannot<sp/>allocate<sp/>memory<sp/>for<sp/>p\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sin<sp/>wave<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>100;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st.<ref refid="struct_emb_stitch___1ae1a3958205104364b97172da19628db7" kindref="member">x</ref><sp/>=<sp/>10<sp/>+<sp/>10<sp/>*<sp/>sin(i<sp/>*<sp/>(0.5<sp/>/<sp/>3.141592));</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st.<ref refid="struct_emb_stitch___1ac696d7e3434ae029d180ef550e61af2d" kindref="member">y</ref><sp/>=<sp/>10<sp/>+<sp/>i<sp/>*<sp/>0.1;</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st.<ref refid="struct_emb_stitch___1ac8bf36fe0577cba66bccda3a6f7e80a4" kindref="member">flags</ref><sp/>=<sp/><ref refid="embroidery_8h_1a1291f416b069313021b519eea62d5bf1" kindref="member">NORMAL</ref>;</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>st.<ref refid="struct_emb_stitch___1a0fd02fb9277ffcb35a75066ffe95e8c7" kindref="member">color</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1adb38a95b0ac7c7f48aa92bcb156f9413" kindref="member">embPattern_addStitchAbs</ref>(p,<sp/>st.<ref refid="struct_emb_stitch___1ae1a3958205104364b97172da19628db7" kindref="member">x</ref>,<sp/>st.<ref refid="struct_emb_stitch___1ac696d7e3434ae029d180ef550e61af2d" kindref="member">y</ref>,<sp/>st.<ref refid="struct_emb_stitch___1ac8bf36fe0577cba66bccda3a6f7e80a4" kindref="member">flags</ref>,<sp/>st.<ref refid="struct_emb_stitch___1a0fd02fb9277ffcb35a75066ffe95e8c7" kindref="member">color</ref>);</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a1b281916881a27935b9e1f6bcffb2087" kindref="member">embPattern_addThread</ref>(p,<sp/><ref refid="main_8c_1ae6a1199d8c3aad2464c3296ab902b4a9" kindref="member">black_thread</ref>);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a5e60e4e5dfdebd4a6887f299a82adb2c" kindref="member">embPattern_end</ref>(p);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="embroidery_8h_1a533aaf5c2f1775990d297435354288f1" kindref="member">embPattern_writeAuto</ref>(p,<sp/>outf))<sp/>{</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>16;</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a47cefd322c29827f2989630c0aa6cbc5" kindref="member">embPattern_free</ref>(p);</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1292"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><ref refid="embroidery__internal_8h_1a512585ef742078e042ce59dbad0d5df8" kindref="member">create_test_file_3</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>outf)</highlight></codeline>
<codeline lineno="1296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_pattern__" kindref="compound">EmbPattern</ref>*<sp/>p;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_circle__" kindref="compound">EmbCircle</ref><sp/>circle;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/><ref refid="embroidery_8h_1ad1be1abf388d4479ffe2b75f8470273b" kindref="member">embPattern_create</ref>();</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!p)<sp/>{</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>convert(),<sp/>cannot<sp/>allocate<sp/>memory<sp/>for<sp/>p\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/>circle.<ref refid="struct_emb_circle___1a68e2bdfeb187d1c5a46afffe5129aabf" kindref="member">center</ref>.<ref refid="struct_emb_vector___1ae1a3958205104364b97172da19628db7" kindref="member">x</ref><sp/>=<sp/>10.0;</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/>circle.<ref refid="struct_emb_circle___1a68e2bdfeb187d1c5a46afffe5129aabf" kindref="member">center</ref>.<ref refid="struct_emb_vector___1ac696d7e3434ae029d180ef550e61af2d" kindref="member">y</ref><sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/>circle.<ref refid="struct_emb_circle___1a1f90f77f18adae49041cb441535414ce" kindref="member">radius</ref><sp/>=<sp/>5.0;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a324691deebb0e224ce2f406b8cc30e0e" kindref="member">embPattern_addCircleAbs</ref>(p,<sp/>circle);</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a1b281916881a27935b9e1f6bcffb2087" kindref="member">embPattern_addThread</ref>(p,<sp/><ref refid="main_8c_1ae6a1199d8c3aad2464c3296ab902b4a9" kindref="member">black_thread</ref>);</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a65792d1b0c470b33261281062fb92a54" kindref="member">embPattern_convertGeometry</ref>(p);</highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a5e60e4e5dfdebd4a6887f299a82adb2c" kindref="member">embPattern_end</ref>(p);</highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="embroidery_8h_1a533aaf5c2f1775990d297435354288f1" kindref="member">embPattern_writeAuto</ref>(p,<sp/>outf))<sp/>{</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>16;</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a47cefd322c29827f2989630c0aa6cbc5" kindref="member">embPattern_free</ref>(p);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1321"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>TODO:<sp/>Add<sp/>capability<sp/>for<sp/>converting<sp/>multiple<sp/>files<sp/>of<sp/>various<sp/>types<sp/>to<sp/>a<sp/>single<sp/>format.<sp/></highlight></codeline>
<codeline lineno="1325"><highlight class="comment">Currently,<sp/>we<sp/>only<sp/>convert<sp/>a<sp/>single<sp/>file<sp/>to<sp/>multiple<sp/>formats.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="embroidery__internal_8h_1a18adf565ffc768e3726b2c223b5950b8" kindref="member">testThreadColor</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tColor<sp/>=<sp/>0xFFD25F00;</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_color__" kindref="compound">EmbColor</ref><sp/>c;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/><sp/>c.<ref refid="struct_emb_color___1afd7b1ea9ff115205b65e0bffc92946ac" kindref="member">r</ref><sp/>=<sp/>0xD2;</highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/>c.<ref refid="struct_emb_color___1a83576af39a9f289a28c1263d61073508" kindref="member">g</ref><sp/>=<sp/>0x5F;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/>c.<ref refid="struct_emb_color___1a41cede1b4c0d05cff170ad5761f70964" kindref="member">b</ref><sp/>=<sp/>0x00;</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tBrand<sp/>=<sp/><ref refid="embroidery_8h_1adabe8c203bc68bd4f61157b1bff8b165" kindref="member">Sulky_Rayon</ref>;</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tNum<sp/>=<sp/><ref refid="embroidery_8h_1ae6976ffd0a29cdf4247e8da3aefc8ef0" kindref="member">threadColorNum</ref>(c,<sp/>tBrand);</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>tName[50];</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a2be9bcb326d8bb595079f9129df9e35e" kindref="member">threadColorName</ref>(tName,<sp/>c,<sp/>tBrand);</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Color<sp/>:<sp/>0x%X\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Brand<sp/>:<sp/>%d\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Num<sp/><sp/><sp/>:<sp/>%d\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Name<sp/><sp/>:<sp/>%s\n\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tColor,</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tBrand,</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tNum,<sp/></highlight><highlight class="comment">/*<sp/>Solution:<sp/>1833<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tName);<sp/></highlight><highlight class="comment">/*<sp/>Solution:<sp/>Pumpkin<sp/>Pie<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1351"><highlight class="comment"><sp/>*<sp/>Table<sp/>of<sp/>from/to<sp/>for<sp/>formats.<sp/>What<sp/>conversions<sp/>after<sp/>a<sp/>from<sp/>A<sp/>to<sp/>B<sp/>conversion</highlight></codeline>
<codeline lineno="1352"><highlight class="comment"><sp/>*<sp/>leave<sp/>a<sp/>file<sp/>with<sp/>the<sp/>same<sp/>render?</highlight></codeline>
<codeline lineno="1353"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1354"><highlight class="comment"><sp/>*<sp/>Add<sp/>command<sp/>&quot;--full-test-suite&quot;<sp/>for<sp/>this<sp/>full<sp/>matrix.</highlight></codeline>
<codeline lineno="1355"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><ref refid="embroidery_8h_1aa72a9eb0e258efbb67453e5f79af62c8" kindref="member">full_test_matrix</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fname)</highlight></codeline>
<codeline lineno="1359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>success,<sp/>ntests;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE<sp/>*f;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/>f<sp/>=<sp/>fopen(fname,<sp/></highlight><highlight class="stringliteral">&quot;wb&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!f)<sp/>{</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;ERROR:<sp/>full_test_matrix(fname)<sp/>failed<sp/>to<sp/>open<sp/>file.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/>success<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/>ntests<sp/>=<sp/>(<ref refid="embroidery_8h_1afc6032ce2b92a1d32b18b87b1e5ba13e" kindref="member">numberOfFormats</ref><sp/>-<sp/>1)*(<ref refid="embroidery_8h_1afc6032ce2b92a1d32b18b87b1e5ba13e" kindref="member">numberOfFormats</ref><sp/>-<sp/>5);</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="embroidery_8h_1afc6032ce2b92a1d32b18b87b1e5ba13e" kindref="member">numberOfFormats</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fname[100];</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="embroidery_8h_1a8cb11404ce46501561f956d33f8dcf95" kindref="member">formatTable</ref>[i].color_only)<sp/>{</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(fname,<sp/></highlight><highlight class="stringliteral">&quot;test01&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(fname,<sp/><ref refid="embroidery_8h_1a8cb11404ce46501561f956d33f8dcf95" kindref="member">formatTable</ref>[i].extension);</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery__internal_8h_1a2e49bf0deb2392bc15e5545a03b71bd3" kindref="member">create_test_file_1</ref>(fname);</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/><ref refid="embroidery_8h_1afc6032ce2b92a1d32b18b87b1e5ba13e" kindref="member">numberOfFormats</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_emb_pattern__" kindref="compound">EmbPattern</ref><sp/>*pattern<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fname_converted[100];</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fname_image[100];</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(fname_converted,<sp/></highlight><highlight class="stringliteral">&quot;test01_&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(fname_converted,<sp/><ref refid="embroidery_8h_1a8cb11404ce46501561f956d33f8dcf95" kindref="member">formatTable</ref>[i].extension+1);</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(fname_converted,<sp/><ref refid="embroidery_8h_1a8cb11404ce46501561f956d33f8dcf95" kindref="member">formatTable</ref>[j].extension);</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(fname_image,<sp/></highlight><highlight class="stringliteral">&quot;test01_&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(fname_image,<sp/><ref refid="embroidery_8h_1a8cb11404ce46501561f956d33f8dcf95" kindref="member">formatTable</ref>[i].extension+1);</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(fname_image,<sp/></highlight><highlight class="stringliteral">&quot;_&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(fname_image,<sp/><ref refid="embroidery_8h_1a8cb11404ce46501561f956d33f8dcf95" kindref="member">formatTable</ref>[j].extension+1);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(fname_image,<sp/></highlight><highlight class="stringliteral">&quot;.ppm&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Attempting:<sp/>%s<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>fname,<sp/>fname_converted);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="embroidery_8h_1a8e3e719d35e1e8996fa0c791029fcfbd" kindref="member">convert</ref>(fname,<sp/>fname_converted);</highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a6deb066d3415e77f4771b2fc2d6ac3e8" kindref="member">embPattern_readAuto</ref>(pattern,<sp/>fname_converted);</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a4a1b44a1dda28aec2cdab69cbdd226fb" kindref="member">embPattern_render</ref>(pattern,<sp/>fname_image);</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a47cefd322c29827f2989630c0aa6cbc5" kindref="member">embPattern_free</ref>(pattern);</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d<sp/>%f%%<sp/>&quot;</highlight><highlight class="normal">,<sp/>i,<sp/>j,<sp/>100*success/(1.0*ntests));</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!result)<sp/>{</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;PASS\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success++;</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(f,<sp/></highlight><highlight class="stringliteral">&quot;FAIL\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(f);</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal">usage(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1412"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(welcome_message);</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>construct<sp/>from<sp/>tables<sp/>above<sp/>somehow,<sp/>like<sp/>how<sp/>getopt_long<sp/>works,</highlight></codeline>
<codeline lineno="1415"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>but<sp/>we&apos;re<sp/>avoiding<sp/>that<sp/>for<sp/>compatibility</highlight></codeline>
<codeline lineno="1416"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>(C90,<sp/>standard<sp/>libraries<sp/>only)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;Usage:<sp/>embroider<sp/>[OPTIONS]<sp/>fileToRead...<sp/>\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;Conversion:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>-t,<sp/>--to<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Convert<sp/>all<sp/>files<sp/>given<sp/>to<sp/>the<sp/>format<sp/>specified&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>by<sp/>the<sp/>arguments<sp/>to<sp/>the<sp/>flag,<sp/>for<sp/>example:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$<sp/>embroider<sp/>-t<sp/>dst<sp/>input.pes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>would<sp/>convert<sp/>\&quot;input.pes\&quot;<sp/>to<sp/>\&quot;input.dst\&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>the<sp/>same<sp/>directory<sp/>the<sp/>program<sp/>runs<sp/>in.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>accepted<sp/>input<sp/>formats<sp/>are<sp/>(TO<sp/>BE<sp/>DETERMINED).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>accepted<sp/>output<sp/>formats<sp/>are<sp/>(TO<sp/>BE<sp/>DETERMINED).&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;Output:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>-h,<sp/>--help<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Print<sp/>this<sp/>message.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>-F,<sp/>--formats<sp/><sp/><sp/><sp/><sp/>Print<sp/>help<sp/>on<sp/>the<sp/>formats<sp/>that<sp/>embroider<sp/>can<sp/>deal<sp/>with.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>-q,<sp/>--quiet<sp/><sp/><sp/><sp/><sp/><sp/>Only<sp/>print<sp/>fatal<sp/>errors.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>-V,<sp/>--verbose<sp/><sp/><sp/><sp/>Print<sp/>everything<sp/>that<sp/>has<sp/>reporting.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>-v,<sp/>--version<sp/><sp/><sp/><sp/>Print<sp/>the<sp/>version.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;Modify<sp/>patterns:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>--combine<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>takes<sp/>3<sp/>arguments<sp/>and<sp/>combines<sp/>the<sp/>first&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>two<sp/>by<sp/>placing<sp/>them<sp/>atop<sp/>each<sp/>other<sp/>and&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>outputs<sp/>to<sp/>the<sp/>third&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$<sp/>embroider<sp/>--combine<sp/>a.dst<sp/>b.dst<sp/>output.dst&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;Graphics:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>-c,<sp/>--circle<sp/><sp/><sp/><sp/><sp/>Add<sp/>a<sp/>circle<sp/>defined<sp/>by<sp/>the<sp/>arguments<sp/>given<sp/>to<sp/>the<sp/>current<sp/>pattern.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>-e,<sp/>--ellipse<sp/><sp/><sp/><sp/>Add<sp/>a<sp/>circle<sp/>defined<sp/>by<sp/>the<sp/>arguments<sp/>given<sp/>to<sp/>the<sp/>current<sp/>pattern.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>-l,<sp/>--line<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Add<sp/>a<sp/>line<sp/>defined<sp/>by<sp/>the<sp/>arguments<sp/>given<sp/>to<sp/>the<sp/>current<sp/>pattern.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>-P,<sp/>--polyline<sp/><sp/><sp/>Add<sp/>a<sp/>polyline.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>-p,<sp/>--polygon<sp/><sp/><sp/><sp/>Add<sp/>a<sp/>polygon.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>-r,<sp/>--render<sp/><sp/><sp/><sp/><sp/>Create<sp/>an<sp/>image<sp/>in<sp/>PNG<sp/>format<sp/>of<sp/>what<sp/>the<sp/>embroidery<sp/>should<sp/>look<sp/>like.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>-s,<sp/>--satin<sp/><sp/><sp/><sp/><sp/><sp/>Fill<sp/>the<sp/>current<sp/>geometry<sp/>with<sp/>satin<sp/>stitches<sp/>according&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>the<sp/>defined<sp/>algorithm.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>-S,<sp/>--stitch<sp/><sp/><sp/><sp/><sp/>Add<sp/>a<sp/>stitch<sp/>defined<sp/>by<sp/>the<sp/>arguments<sp/>given<sp/>to<sp/>the<sp/>current<sp/>pattern.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;Quality<sp/>Assurance:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--test<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Run<sp/>the<sp/>basic<sp/>test<sp/>suite.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--full-test-suite<sp/><sp/>Run<sp/>all<sp/>tests,<sp/>even<sp/>those<sp/>we<sp/>expect<sp/>to<sp/>fail.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1458"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal">formats(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1460"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>extension<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>description<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>readerState;</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>writerState;</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numReaders<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>numWriters<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;List<sp/>of<sp/>Formats&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;---------------&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>KEY&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&apos;S&apos;<sp/>=<sp/>Yes,<sp/>and<sp/>is<sp/>considered<sp/>stable.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&apos;U&apos;<sp/>=<sp/>Yes,<sp/>but<sp/>may<sp/>be<sp/>unstable.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>&apos;<sp/>&apos;<sp/>=<sp/>No.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>Format<sp/><sp/><sp/>Read<sp/><sp/><sp/><sp/>Write<sp/><sp/><sp/>Description\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;|________|_______|_______|____________________________________________________|\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="embroidery_8h_1afc6032ce2b92a1d32b18b87b1e5ba13e" kindref="member">numberOfFormats</ref>;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extension<sp/>=<sp/><ref refid="embroidery_8h_1a8cb11404ce46501561f956d33f8dcf95" kindref="member">formatTable</ref>[i].<ref refid="struct_emb_format_list___1ad4e3afa5796088c8223396fa0140dde1" kindref="member">extension</ref>;</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>description<sp/>=<sp/><ref refid="embroidery_8h_1a8cb11404ce46501561f956d33f8dcf95" kindref="member">formatTable</ref>[i].<ref refid="struct_emb_format_list___1accdaceb0021572501a2605c112a340af" kindref="member">description</ref>;</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>readerState<sp/>=<sp/><ref refid="embroidery_8h_1a8cb11404ce46501561f956d33f8dcf95" kindref="member">formatTable</ref>[i].<ref refid="struct_emb_format_list___1af2b3e4f133c901169614c8bd1d164a85" kindref="member">reader_state</ref>;</highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>writerState<sp/>=<sp/><ref refid="embroidery_8h_1a8cb11404ce46501561f956d33f8dcf95" kindref="member">formatTable</ref>[i].<ref refid="struct_emb_format_list___1a400f4620551bb3b884a0c57d5966a5df" kindref="member">writer_state</ref>;</highlight></codeline>
<codeline lineno="1485"><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numReaders<sp/>+=<sp/>readerState<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numWriters<sp/>+=<sp/>writerState<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal">?<sp/>1<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;|<sp/><sp/>%-4s<sp/><sp/>|<sp/><sp/><sp/>%c<sp/><sp/><sp/>|<sp/><sp/><sp/>%c<sp/><sp/><sp/>|<sp/><sp/>%-49s<sp/>|\n&quot;</highlight><highlight class="normal">,<sp/>extension,<sp/>readerState,<sp/>writerState,<sp/>description);</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;|________|_______|_______|____________________________________________________|\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;|<sp/>Total:<sp/>|<sp/><sp/>%3d<sp/><sp/>|<sp/><sp/>%3d<sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|\n&quot;</highlight><highlight class="normal">,<sp/>numReaders,<sp/>numWriters);</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;|________|_______|_______|____________________________________________________|\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1496"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal">to_flag(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i)</highlight></codeline>
<codeline lineno="1500"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>+<sp/>2<sp/>&lt;<sp/>argc)<sp/>{</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>output_fname[100];</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>format;</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(output_fname,<sp/></highlight><highlight class="stringliteral">&quot;example.%s&quot;</highlight><highlight class="normal">,<sp/>argv[i+1]);</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>format<sp/>=<sp/><ref refid="embroidery_8h_1a0f8edee07ad5c7518178006359616aa9" kindref="member">emb_identify_format</ref>(output_fname);</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(format<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;Error:<sp/>format<sp/>unrecognised.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=i+2;<sp/>j&lt;argc;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>strlen(argv[j]);</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_fname[0]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcpy(output_fname,<sp/>argv[j]);</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output_fname[length-4]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(output_fname,<sp/><ref refid="embroidery_8h_1a8cb11404ce46501561f956d33f8dcf95" kindref="member">formatTable</ref>[format].extension);</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Converting<sp/>%s<sp/>to<sp/>%s.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argv[j],<sp/>output_fname);</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a8e3e719d35e1e8996fa0c791029fcfbd" kindref="member">convert</ref>(argv[j],<sp/>output_fname);</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;Usage<sp/>of<sp/>the<sp/>to<sp/>flag<sp/>is:&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;<sp/><sp/><sp/><sp/>embroider<sp/>-t<sp/>FORMAT<sp/>FILE(S)&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;but<sp/>it<sp/>appears<sp/>you<sp/>entered<sp/>less<sp/>than<sp/>3<sp/>arguments<sp/>to<sp/>embroider.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1526"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>TODO:<sp/>Add<sp/>capability<sp/>for<sp/>converting<sp/>multiple<sp/>files<sp/>of<sp/>various<sp/>types<sp/>to<sp/>a<sp/>single<sp/>format.<sp/>Currently,<sp/>we<sp/>only<sp/>convert<sp/>a<sp/>single<sp/>file<sp/>to<sp/>multiple<sp/>formats.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal">command_line_interface(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argv[])</highlight></codeline>
<codeline lineno="1531"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_emb_pattern__" kindref="compound">EmbPattern</ref><sp/>*current_pattern<sp/>=<sp/><ref refid="embroidery_8h_1ad1be1abf388d4479ffe2b75f8470273b" kindref="member">embPattern_create</ref>();</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j,<sp/>flags,<sp/>result;</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usage();</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>=<sp/>argc-1;</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i=1;<sp/>i<sp/>&lt;<sp/>argc;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>identify<sp/>what<sp/>flag<sp/>index<sp/>the<sp/>user<sp/>may<sp/>have<sp/>entered<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j=0;<sp/>j<sp/>&lt;<sp/><ref refid="main_8c_1aaea442f582a9863b593b63383773b548" kindref="member">NUM_FLAGS</ref>;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!strcmp(flag_list[j],<sp/>argv[i]))<sp/>{</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>apply<sp/>the<sp/>flag<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(result)<sp/>{</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a37407a0e43269433f885fdf943047fb6" kindref="member">FLAG_TO</ref>:</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1ae802a27a494d1b1a5d5a353fbb78383f" kindref="member">FLAG_TO_SHORT</ref>:</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to_flag(argv,<sp/>argc,<sp/>i);</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1ad571aa9682b7e17f8a5ffb568c386d9a" kindref="member">FLAG_HELP</ref>:</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a88da127a7c10c88c0cf14b3257c846a2" kindref="member">FLAG_HELP_SHORT</ref>:</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usage();</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a543edc262dc89320cb5ae1d7125cab6a" kindref="member">FLAG_FORMATS</ref>:</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a64478dbce225e58239780c80cd4436c5" kindref="member">FLAG_FORMATS_SHORT</ref>:</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>formats();</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a406df6c13be29ebe9b82ef1c0e61d64e" kindref="member">FLAG_QUIET</ref>:</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a7e6b98c4c0b01661909ee6b8383318cc" kindref="member">FLAG_QUIET_SHORT</ref>:</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8c_1a3e3a5b8efffea93c4268a39ee5690098" kindref="member">emb_verbose</ref><sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a8c626d782e7f5efc8f4db596b41b2a59" kindref="member">FLAG_VERBOSE</ref>:</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a30dd1740241f0ac17a62a7a729c10ee9" kindref="member">FLAG_VERBOSE_SHORT</ref>:</highlight></codeline>
<codeline lineno="1569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="main_8c_1a3e3a5b8efffea93c4268a39ee5690098" kindref="member">emb_verbose</ref><sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1afeeb658f38cdbb9e21df3c4878ece92b" kindref="member">FLAG_CIRCLE</ref>:</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a97a16e67c5f13f0bc01f7a78755941fa" kindref="member">FLAG_CIRCLE_SHORT</ref>:</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;This<sp/>flag<sp/>is<sp/>not<sp/>implemented.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1aed141a0ec5ce8aafbbc7fbf04c7b4c78" kindref="member">FLAG_ELLIPSE</ref>:</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1af45a55ab5ac53bc1ae6fd1d0eb5e4a32" kindref="member">FLAG_ELLIPSE_SHORT</ref>:</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;This<sp/>flag<sp/>is<sp/>not<sp/>implemented.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a4bed7d9e28bf0449e970a99a27f4d8b2" kindref="member">FLAG_LINE</ref>:</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1ad39d2a0a05f8a0aa0f188df0a5ae7349" kindref="member">FLAG_LINE_SHORT</ref>:</highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;This<sp/>flag<sp/>is<sp/>not<sp/>implemented.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1af0123998cd5dcf3a3920a34e8e4952d9" kindref="member">FLAG_POLYGON</ref>:</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a6a5e5b08bbc2a728ed34184c33c849dc" kindref="member">FLAG_POLYGON_SHORT</ref>:</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;This<sp/>flag<sp/>is<sp/>not<sp/>implemented.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1aab9b4367da6ddf2b410223f3a36aff98" kindref="member">FLAG_POLYLINE</ref>:</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a6ac413798a1c7f8c6d42eff002341edd" kindref="member">FLAG_POLYLINE_SHORT</ref>:</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;This<sp/>flag<sp/>is<sp/>not<sp/>implemented.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1ac7db01dce16a1c3f7162f04b12a94e6a" kindref="member">FLAG_SATIN</ref>:</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a641c237279594698bdad9f81cb247049" kindref="member">FLAG_SATIN_SHORT</ref>:</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;This<sp/>flag<sp/>is<sp/>not<sp/>implemented.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1af3cdd0c6849b499ebfd062e80b77435d" kindref="member">FLAG_STITCH</ref>:</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1aafa9c92f88b2213f5791c566af9083e3" kindref="member">FLAG_STITCH_SHORT</ref>:</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;This<sp/>flag<sp/>is<sp/>not<sp/>implemented.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a19d145f34926ea9075fdf003be1c6244" kindref="member">FLAG_SIERPINSKI_TRIANGLE</ref>:</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;This<sp/>flag<sp/>is<sp/>not<sp/>implemented.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1aa6cb914042fbf5738294b33392d2e8c1" kindref="member">FLAG_FILL</ref>:</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>+<sp/>3<sp/>&lt;<sp/>argc)<sp/>{</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_emb_image__" kindref="compound">EmbImage</ref><sp/>image;</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>user<sp/>appears<sp/>to<sp/>have<sp/>entered<sp/>the<sp/>needed<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>to<sp/>stb<sp/>command<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image<sp/>=<sp/><ref refid="embroidery_8h_1a910afe5c3ca865bc9afd8a520ae73e37" kindref="member">embImage_create</ref>(2000,<sp/>2000);</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a3de1df7b3d8f70b0b961b3e0bf000cc0" kindref="member">embImage_read</ref>(&amp;image,<sp/>argv[i]);</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1aabc92974158cc1717c9a3a2ade7b04c8" kindref="member">embPattern_horizontal_fill</ref>(current_pattern,<sp/>&amp;image,<sp/>atoi(argv[i]));</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1acb2e2b58edf88941e0afa44fe8e2ea6f" kindref="member">embImage_free</ref>(&amp;image);</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a533aaf5c2f1775990d297435354288f1" kindref="member">embPattern_writeAuto</ref>(current_pattern,<sp/>argv[i]);</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a249f7e1db7ac11497fa91d738fa68ca4" kindref="member">FLAG_RENDER</ref>:</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1adc337aaa7056646fab6ef21119aaa39b" kindref="member">FLAG_RENDER_SHORT</ref>:</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>+<sp/>2<sp/>&lt;<sp/>argc)<sp/>{</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>user<sp/>appears<sp/>to<sp/>have<sp/>entered<sp/>filenames<sp/>after<sp/>render<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a6deb066d3415e77f4771b2fc2d6ac3e8" kindref="member">embPattern_readAuto</ref>(current_pattern,<sp/>argv[i+1]);</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%d\n&quot;</highlight><highlight class="normal">,<sp/>current_pattern-&gt;<ref refid="struct_emb_pattern___1a4838c6d36990e7fcf958d1029f4a98aa" kindref="member">stitch_list</ref>-&gt;<ref refid="struct_emb_array___1ad43c3812e6d13e0518d9f8b8f463ffcf" kindref="member">count</ref>);</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a4a1b44a1dda28aec2cdab69cbdd226fb" kindref="member">embPattern_render</ref>(current_pattern,<sp/>argv[i+2]);</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argv[i][0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>they<sp/>haven&apos;t,<sp/>use<sp/>the<sp/>default<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;Defaulting<sp/>to<sp/>the<sp/>output<sp/>name<sp/>&apos;output.png&apos;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a4a1b44a1dda28aec2cdab69cbdd226fb" kindref="member">embPattern_render</ref>(current_pattern,<sp/></highlight><highlight class="stringliteral">&quot;output.png&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i--;</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>they<sp/>have,<sp/>use<sp/>the<sp/>user-supplied<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a4a1b44a1dda28aec2cdab69cbdd226fb" kindref="member">embPattern_render</ref>(current_pattern,<sp/>argv[i]);</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;Defaulting<sp/>to<sp/>the<sp/>output<sp/>name<sp/>&apos;output.png&apos;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a4a1b44a1dda28aec2cdab69cbdd226fb" kindref="member">embPattern_render</ref>(current_pattern,<sp/></highlight><highlight class="stringliteral">&quot;output.png&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a5522924b4aeacd58916a720c8f626cf7" kindref="member">FLAG_SIMULATE</ref>:</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>+<sp/>1<sp/>&lt;<sp/>argc)<sp/>{</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>user<sp/>appears<sp/>to<sp/>have<sp/>entered<sp/>a<sp/>filename<sp/>after<sp/>render<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argv[i][0]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;-&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>they<sp/>haven&apos;t,<sp/>use<sp/>the<sp/>default<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;Defaulting<sp/>to<sp/>the<sp/>output<sp/>name<sp/>&apos;output.avi&apos;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a76cca8e66e7c5efcf965f5c708fc7b8b" kindref="member">embPattern_simulate</ref>(current_pattern,<sp/></highlight><highlight class="stringliteral">&quot;output.avi&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i--;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>they<sp/>have,<sp/>use<sp/>the<sp/>user-supplied<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a76cca8e66e7c5efcf965f5c708fc7b8b" kindref="member">embPattern_simulate</ref>(current_pattern,<sp/>argv[i]);</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;Defaulting<sp/>to<sp/>the<sp/>output<sp/>name<sp/>&apos;output.avi&apos;.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a76cca8e66e7c5efcf965f5c708fc7b8b" kindref="member">embPattern_simulate</ref>(current_pattern,<sp/></highlight><highlight class="stringliteral">&quot;output.avi&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1aad0493d79106b9b9d6506fa7eb931b48" kindref="member">FLAG_COMBINE</ref>:</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>+<sp/>3<sp/>&lt;<sp/>argc)<sp/>{</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_emb_pattern__" kindref="compound">EmbPattern</ref><sp/>*out;</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_emb_pattern__" kindref="compound">EmbPattern</ref><sp/>*p1<sp/>=<sp/><ref refid="embroidery_8h_1ad1be1abf388d4479ffe2b75f8470273b" kindref="member">embPattern_create</ref>();</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_emb_pattern__" kindref="compound">EmbPattern</ref><sp/>*p2<sp/>=<sp/><ref refid="embroidery_8h_1ad1be1abf388d4479ffe2b75f8470273b" kindref="member">embPattern_create</ref>();</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a6deb066d3415e77f4771b2fc2d6ac3e8" kindref="member">embPattern_readAuto</ref>(p1,<sp/>argv[i+1]);</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a6deb066d3415e77f4771b2fc2d6ac3e8" kindref="member">embPattern_readAuto</ref>(p2,<sp/>argv[i+2]);</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out<sp/>=<sp/><ref refid="embroidery_8h_1a00deebb53dcaab1a1669e4549f97de62" kindref="member">embPattern_combine</ref>(p1,<sp/>p2);</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a533aaf5c2f1775990d297435354288f1" kindref="member">embPattern_writeAuto</ref>(out,<sp/>argv[i+3]);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a47cefd322c29827f2989630c0aa6cbc5" kindref="member">embPattern_free</ref>(p1);</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a47cefd322c29827f2989630c0aa6cbc5" kindref="member">embPattern_free</ref>(p2);</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a47cefd322c29827f2989630c0aa6cbc5" kindref="member">embPattern_free</ref>(out);</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;--combine<sp/>takes<sp/>3<sp/>arguments<sp/>and<sp/>you<sp/>have<sp/>supplied<sp/>&lt;3.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a55b6c5dccc05b18aefb94fb686617308" kindref="member">FLAG_VERSION</ref>:</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a1be58456ea7e5b7a38ebc02cdc183782" kindref="member">FLAG_VERSION_SHORT</ref>:</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(version_string);</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a1ebfcac640d04fce645045405468e183" kindref="member">FLAG_HILBERT_CURVE</ref>:</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>current_pattern<sp/>=<sp/><ref refid="embroidery_8h_1ad1be1abf388d4479ffe2b75f8470273b" kindref="member">embPattern_create</ref>();</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1abc0ebbb6da27faacd87e8abaf57733c8" kindref="member">hilbert_curve</ref>(current_pattern,<sp/>3);</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a73adba977c278377b55c434b49e191f0" kindref="member">FLAG_TEST</ref>:</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1aa95d3b9c2310c592992aafea1bb441e0" kindref="member">testMain</ref>(0);</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a678935889663a0b2379045d4d87b9102" kindref="member">FLAG_FULL_TEST_SUITE</ref>:</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1aa95d3b9c2310c592992aafea1bb441e0" kindref="member">testMain</ref>(1);</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="main_8c_1a97ba97bc8789baadc6b8e8a3a3c7b6f2" kindref="member">FLAG_CROSS_STITCH</ref>:</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>+<sp/>3<sp/>&lt;<sp/>argc)<sp/>{</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_emb_image__" kindref="compound">EmbImage</ref><sp/>image;</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>the<sp/>user<sp/>appears<sp/>to<sp/>have<sp/>entered<sp/>the<sp/>needed<sp/>arguments<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image<sp/>=<sp/><ref refid="embroidery_8h_1a910afe5c3ca865bc9afd8a520ae73e37" kindref="member">embImage_create</ref>(2000,<sp/>2000);</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>to<sp/>stb<sp/>command<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a3de1df7b3d8f70b0b961b3e0bf000cc0" kindref="member">embImage_read</ref>(&amp;image,<sp/>argv[i]);</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a2a11e2787f04c55c5fd09cba349b6037" kindref="member">embPattern_crossstitch</ref>(current_pattern,<sp/>&amp;image,<sp/>atoi(argv[i]));</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1acb2e2b58edf88941e0afa44fe8e2ea6f" kindref="member">embImage_free</ref>(&amp;image);</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i++;</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a533aaf5c2f1775990d297435354288f1" kindref="member">embPattern_writeAuto</ref>(current_pattern,<sp/>argv[i]);</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>flags--;</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>No<sp/>flags<sp/>set:<sp/>default<sp/>to<sp/>simple<sp/>from-to<sp/>conversion.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!flags<sp/>&amp;&amp;<sp/>argc<sp/>==<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a8e3e719d35e1e8996fa0c791029fcfbd" kindref="member">convert</ref>(argv[1],<sp/>argv[2]);</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!flags)<sp/>{</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>puts(</highlight><highlight class="stringliteral">&quot;Please<sp/>enter<sp/>an<sp/>output<sp/>format<sp/>for<sp/>your<sp/>file,<sp/>see<sp/>--help.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="embroidery_8h_1a47cefd322c29827f2989630c0aa6cbc5" kindref="member">embPattern_free</ref>(current_pattern);</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1726"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"></highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>argv[])</highlight></codeline>
<codeline lineno="1729"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>command_line_interface(argc,<sp/>argv);</highlight></codeline>
<codeline lineno="1731"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/main.c"/>
  </compounddef>
</doxygen>
