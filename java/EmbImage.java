/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


public class EmbImage {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected EmbImage(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(EmbImage obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        libembroideryJNI.delete_EmbImage(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setPixel_width(int value) {
    libembroideryJNI.EmbImage_pixel_width_set(swigCPtr, this, value);
  }

  public int getPixel_width() {
    return libembroideryJNI.EmbImage_pixel_width_get(swigCPtr, this);
  }

  public void setPixel_height(int value) {
    libembroideryJNI.EmbImage_pixel_height_set(swigCPtr, this, value);
  }

  public int getPixel_height() {
    return libembroideryJNI.EmbImage_pixel_height_get(swigCPtr, this);
  }

  public void setWidth(float value) {
    libembroideryJNI.EmbImage_width_set(swigCPtr, this, value);
  }

  public float getWidth() {
    return libembroideryJNI.EmbImage_width_get(swigCPtr, this);
  }

  public void setHeight(float value) {
    libembroideryJNI.EmbImage_height_set(swigCPtr, this, value);
  }

  public float getHeight() {
    return libembroideryJNI.EmbImage_height_get(swigCPtr, this);
  }

  public void setColor(EmbColor value) {
    libembroideryJNI.EmbImage_color_set(swigCPtr, this, EmbColor.getCPtr(value), value);
  }

  public EmbColor getColor() {
    long cPtr = libembroideryJNI.EmbImage_color_get(swigCPtr, this);
    return (cPtr == 0) ? null : new EmbColor(cPtr, false);
  }

  public void setOffset(EmbVector value) {
    libembroideryJNI.EmbImage_offset_set(swigCPtr, this, EmbVector.getCPtr(value), value);
  }

  public EmbVector getOffset() {
    long cPtr = libembroideryJNI.EmbImage_offset_get(swigCPtr, this);
    return (cPtr == 0) ? null : new EmbVector(cPtr, false);
  }

  public EmbImage() {
    this(libembroideryJNI.new_EmbImage(), true);
  }

}
